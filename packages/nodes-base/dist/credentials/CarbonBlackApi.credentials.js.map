{"version":3,"sources":["../../credentials/CarbonBlackApi.credentials.ts"],"sourcesContent":["import type { IAuthenticateGeneric, ICredentialType, INodeProperties } from 'n8n-workflow';\n\nexport class CarbonBlackApi implements ICredentialType {\n\tname = 'carbonBlackApi';\n\n\tdisplayName = 'Carbon Black API';\n\n\ticon = { light: 'file:icons/vmware.svg', dark: 'file:icons/vmware.dark.svg' } as const;\n\n\tdocumentationUrl = 'carbonblack';\n\n\thttpRequestNode = {\n\t\tname: 'Carbon Black',\n\t\tdocsUrl: 'https://developer.carbonblack.com/reference',\n\t\tapiBaseUrl: '',\n\t};\n\n\tproperties: INodeProperties[] = [\n\t\t{\n\t\t\tdisplayName: 'URL',\n\t\t\tname: 'apiUrl',\n\t\t\ttype: 'string',\n\t\t\tplaceholder: 'https://defense.conferdeploy.net/',\n\t\t\tdefault: '',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Access Token',\n\t\t\tname: 'accessToken',\n\t\t\ttype: 'string',\n\t\t\ttypeOptions: { password: true },\n\t\t\trequired: true,\n\t\t\tdefault: '',\n\t\t},\n\t];\n\n\tauthenticate: IAuthenticateGeneric = {\n\t\ttype: 'generic',\n\t\tproperties: {\n\t\t\theaders: {\n\t\t\t\t'X-Auth-Token': '={{$credentials.accessToken}}',\n\t\t\t},\n\t\t},\n\t};\n\n\t// test: ICredentialTestRequest = {\n\t// \trequest: {\n\t// \t\tbaseURL: '={{$credentials.apiUrl}}',\n\t// \t\turl: 'integrationServices/v3/auditlogs',\n\t// \t},\n\t// };\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEO,MAAM,eAA0C;AAAA,EAAhD;AACN,gBAAO;AAEP,uBAAc;AAEd,gBAAO,EAAE,OAAO,yBAAyB,MAAM,6BAA6B;AAE5E,4BAAmB;AAEnB,2BAAkB;AAAA,MACjB,MAAM;AAAA,MACN,SAAS;AAAA,MACT,YAAY;AAAA,IACb;AAEA,sBAAgC;AAAA,MAC/B;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,aAAa;AAAA,QACb,SAAS;AAAA,MACV;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,aAAa,EAAE,UAAU,KAAK;AAAA,QAC9B,UAAU;AAAA,QACV,SAAS;AAAA,MACV;AAAA,IACD;AAEA,wBAAqC;AAAA,MACpC,MAAM;AAAA,MACN,YAAY;AAAA,QACX,SAAS;AAAA,UACR,gBAAgB;AAAA,QACjB;AAAA,MACD;AAAA,IACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQD;","names":[]}