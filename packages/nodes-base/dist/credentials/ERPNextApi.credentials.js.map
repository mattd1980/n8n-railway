{"version":3,"sources":["../../credentials/ERPNextApi.credentials.ts"],"sourcesContent":["import type {\n\tIAuthenticateGeneric,\n\tICredentialTestRequest,\n\tICredentialType,\n\tINodeProperties,\n} from 'n8n-workflow';\n\nexport class ERPNextApi implements ICredentialType {\n\tname = 'erpNextApi';\n\n\tdisplayName = 'ERPNext API';\n\n\tdocumentationUrl = 'erpnext';\n\n\tproperties: INodeProperties[] = [\n\t\t{\n\t\t\tdisplayName: 'API Key',\n\t\t\tname: 'apiKey',\n\t\t\ttype: 'string',\n\t\t\ttypeOptions: { password: true },\n\t\t\tdefault: '',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'API Secret',\n\t\t\tname: 'apiSecret',\n\t\t\ttype: 'string',\n\t\t\ttypeOptions: { password: true },\n\t\t\tdefault: '',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Environment',\n\t\t\tname: 'environment',\n\t\t\ttype: 'options',\n\t\t\tdefault: 'cloudHosted',\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\tname: 'Cloud-Hosted',\n\t\t\t\t\tvalue: 'cloudHosted',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Self-Hosted',\n\t\t\t\t\tvalue: 'selfHosted',\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Subdomain',\n\t\t\tname: 'subdomain',\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t\tplaceholder: 'n8n',\n\t\t\tdescription:\n\t\t\t\t'Subdomain of cloud-hosted ERPNext instance. For example, \"n8n\" is the subdomain in: <code>https://n8n.erpnext.com</code>',\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: {\n\t\t\t\t\tenvironment: ['cloudHosted'],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Domain',\n\t\t\tname: 'domain',\n\t\t\ttype: 'options',\n\t\t\tdefault: 'erpnext.com',\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\tname: 'erpnext.com',\n\t\t\t\t\tvalue: 'erpnext.com',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'frappe.cloud',\n\t\t\t\t\tvalue: 'frappe.cloud',\n\t\t\t\t},\n\t\t\t],\n\t\t\tdescription: 'Domain for your cloud hosted ERPNext instance.',\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: {\n\t\t\t\t\tenvironment: ['cloudHosted'],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Domain',\n\t\t\tname: 'domain',\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t\tplaceholder: 'https://www.mydomain.com',\n\t\t\tdescription: 'Fully qualified domain name of self-hosted ERPNext instance',\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: {\n\t\t\t\t\tenvironment: ['selfHosted'],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Ignore SSL Issues (Insecure)',\n\t\t\tname: 'allowUnauthorizedCerts',\n\t\t\ttype: 'boolean',\n\t\t\tdescription: 'Whether to connect even if SSL certificate validation is not possible',\n\t\t\tdefault: false,\n\t\t},\n\t];\n\n\tauthenticate: IAuthenticateGeneric = {\n\t\ttype: 'generic',\n\t\tproperties: {\n\t\t\theaders: {\n\t\t\t\tAuthorization: '=token {{$credentials.apiKey}}:{{$credentials.apiSecret}}',\n\t\t\t},\n\t\t},\n\t};\n\n\ttest: ICredentialTestRequest = {\n\t\trequest: {\n\t\t\tbaseURL:\n\t\t\t\t'={{$credentials.environment === \"cloudHosted\" ? \"https://\" + $credentials.subdomain + \".\" + $credentials.domain : $credentials.domain}}',\n\t\t\turl: '/api/method/frappe.auth.get_logged_user',\n\t\t\tskipSslCertificateValidation: '={{ $credentials.allowUnauthorizedCerts }}',\n\t\t},\n\t\trules: [\n\t\t\t{\n\t\t\t\ttype: 'responseSuccessBody',\n\t\t\t\tproperties: {\n\t\t\t\t\tkey: 'message',\n\t\t\t\t\tvalue: undefined,\n\t\t\t\t\tmessage: 'Unable to authenticate, Check the credentials and the url',\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t};\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAOO,MAAM,WAAsC;AAAA,EAA5C;AACN,gBAAO;AAEP,uBAAc;AAEd,4BAAmB;AAEnB,sBAAgC;AAAA,MAC/B;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,aAAa,EAAE,UAAU,KAAK;AAAA,QAC9B,SAAS;AAAA,MACV;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,aAAa,EAAE,UAAU,KAAK;AAAA,QAC9B,SAAS;AAAA,MACV;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,SAAS;AAAA,UACR;AAAA,YACC,MAAM;AAAA,YACN,OAAO;AAAA,UACR;AAAA,UACA;AAAA,YACC,MAAM;AAAA,YACN,OAAO;AAAA,UACR;AAAA,QACD;AAAA,MACD;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aAAa;AAAA,QACb,aACC;AAAA,QACD,gBAAgB;AAAA,UACf,MAAM;AAAA,YACL,aAAa,CAAC,aAAa;AAAA,UAC5B;AAAA,QACD;AAAA,MACD;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,SAAS;AAAA,UACR;AAAA,YACC,MAAM;AAAA,YACN,OAAO;AAAA,UACR;AAAA,UACA;AAAA,YACC,MAAM;AAAA,YACN,OAAO;AAAA,UACR;AAAA,QACD;AAAA,QACA,aAAa;AAAA,QACb,gBAAgB;AAAA,UACf,MAAM;AAAA,YACL,aAAa,CAAC,aAAa;AAAA,UAC5B;AAAA,QACD;AAAA,MACD;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aAAa;AAAA,QACb,aAAa;AAAA,QACb,gBAAgB;AAAA,UACf,MAAM;AAAA,YACL,aAAa,CAAC,YAAY;AAAA,UAC3B;AAAA,QACD;AAAA,MACD;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,aAAa;AAAA,QACb,SAAS;AAAA,MACV;AAAA,IACD;AAEA,wBAAqC;AAAA,MACpC,MAAM;AAAA,MACN,YAAY;AAAA,QACX,SAAS;AAAA,UACR,eAAe;AAAA,QAChB;AAAA,MACD;AAAA,IACD;AAEA,gBAA+B;AAAA,MAC9B,SAAS;AAAA,QACR,SACC;AAAA,QACD,KAAK;AAAA,QACL,8BAA8B;AAAA,MAC/B;AAAA,MACA,OAAO;AAAA,QACN;AAAA,UACC,MAAM;AAAA,UACN,YAAY;AAAA,YACX,KAAK;AAAA,YACL,OAAO;AAAA,YACP,SAAS;AAAA,UACV;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA;AACD;","names":[]}