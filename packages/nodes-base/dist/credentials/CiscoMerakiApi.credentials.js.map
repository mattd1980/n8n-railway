{"version":3,"sources":["../../credentials/CiscoMerakiApi.credentials.ts"],"sourcesContent":["import type { IAuthenticateGeneric, ICredentialType, INodeProperties } from 'n8n-workflow';\n\nexport class CiscoMerakiApi implements ICredentialType {\n\tname = 'ciscoMerakiApi';\n\n\tdisplayName = 'Cisco Meraki API';\n\n\tdocumentationUrl = 'ciscomeraki';\n\n\ticon = { light: 'file:icons/Cisco.svg', dark: 'file:icons/Cisco.dark.svg' } as const;\n\n\thttpRequestNode = {\n\t\tname: 'Cisco Meraki',\n\t\tdocsUrl: 'https://developer.cisco.com/meraki/api/',\n\t\tapiBaseUrl: 'https://api.meraki.com/api/v1/',\n\t};\n\n\tproperties: INodeProperties[] = [\n\t\t{\n\t\t\tdisplayName: 'API Key',\n\t\t\tname: 'apiKey',\n\t\t\ttype: 'string',\n\t\t\ttypeOptions: { password: true },\n\t\t\trequired: true,\n\t\t\tdefault: '',\n\t\t},\n\t];\n\n\tauthenticate: IAuthenticateGeneric = {\n\t\ttype: 'generic',\n\t\tproperties: {\n\t\t\theaders: {\n\t\t\t\t'X-Cisco-Meraki-API-Key': '={{$credentials.apiKey}}',\n\t\t\t},\n\t\t},\n\t};\n\n\t// test: ICredentialTestRequest = {\n\t// \trequest: {\n\t// \t\tbaseURL: 'https://api.meraki.com/api/v1',\n\t// \t\turl: '/organizations',\n\t// \t},\n\t// };\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEO,MAAM,eAA0C;AAAA,EAAhD;AACN,gBAAO;AAEP,uBAAc;AAEd,4BAAmB;AAEnB,gBAAO,EAAE,OAAO,wBAAwB,MAAM,4BAA4B;AAE1E,2BAAkB;AAAA,MACjB,MAAM;AAAA,MACN,SAAS;AAAA,MACT,YAAY;AAAA,IACb;AAEA,sBAAgC;AAAA,MAC/B;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,aAAa,EAAE,UAAU,KAAK;AAAA,QAC9B,UAAU;AAAA,QACV,SAAS;AAAA,MACV;AAAA,IACD;AAEA,wBAAqC;AAAA,MACpC,MAAM;AAAA,MACN,YAAY;AAAA,QACX,SAAS;AAAA,UACR,0BAA0B;AAAA,QAC3B;AAAA,MACD;AAAA,IACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQD;","names":[]}