{"version":3,"sources":["../../credentials/RabbitMQ.credentials.ts"],"sourcesContent":["import type { ICredentialType, INodeProperties } from 'n8n-workflow';\n\nexport class RabbitMQ implements ICredentialType {\n\tname = 'rabbitmq';\n\n\tdisplayName = 'RabbitMQ';\n\n\tdocumentationUrl = 'rabbitmq';\n\n\tproperties: INodeProperties[] = [\n\t\t{\n\t\t\tdisplayName: 'Hostname',\n\t\t\tname: 'hostname',\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t\tplaceholder: 'localhost',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Port',\n\t\t\tname: 'port',\n\t\t\ttype: 'number',\n\t\t\tdefault: 5672,\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'User',\n\t\t\tname: 'username',\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t\tplaceholder: 'guest',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Password',\n\t\t\tname: 'password',\n\t\t\ttype: 'string',\n\t\t\ttypeOptions: {\n\t\t\t\tpassword: true,\n\t\t\t},\n\t\t\tdefault: '',\n\t\t\tplaceholder: 'guest',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Vhost',\n\t\t\tname: 'vhost',\n\t\t\ttype: 'string',\n\t\t\tdefault: '/',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'SSL',\n\t\t\tname: 'ssl',\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Passwordless',\n\t\t\tname: 'passwordless',\n\t\t\ttype: 'boolean',\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: {\n\t\t\t\t\tssl: [true],\n\t\t\t\t},\n\t\t\t},\n\t\t\tdefault: true,\n\t\t\tdescription:\n\t\t\t\t'Whether to use passwordless connection with certificates (SASL mechanism EXTERNAL)',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'CA Certificates',\n\t\t\tname: 'ca',\n\t\t\ttype: 'string',\n\t\t\ttypeOptions: {\n\t\t\t\tpassword: true,\n\t\t\t},\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: {\n\t\t\t\t\tssl: [true],\n\t\t\t\t},\n\t\t\t},\n\t\t\tdefault: '',\n\t\t\tdescription: 'SSL CA Certificates to use',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Client Certificate',\n\t\t\tname: 'cert',\n\t\t\ttype: 'string',\n\t\t\ttypeOptions: {\n\t\t\t\tpassword: true,\n\t\t\t},\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: {\n\t\t\t\t\tssl: [true],\n\t\t\t\t\tpasswordless: [true],\n\t\t\t\t},\n\t\t\t},\n\t\t\tdefault: '',\n\t\t\tdescription: 'SSL Client Certificate to use',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Client Key',\n\t\t\tname: 'key',\n\t\t\ttype: 'string',\n\t\t\ttypeOptions: {\n\t\t\t\tpassword: true,\n\t\t\t},\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: {\n\t\t\t\t\tssl: [true],\n\t\t\t\t\tpasswordless: [true],\n\t\t\t\t},\n\t\t\t},\n\t\t\tdefault: '',\n\t\t\tdescription: 'SSL Client Key to use',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Passphrase',\n\t\t\tname: 'passphrase',\n\t\t\ttype: 'string',\n\t\t\ttypeOptions: {\n\t\t\t\tpassword: true,\n\t\t\t},\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: {\n\t\t\t\t\tssl: [true],\n\t\t\t\t\tpasswordless: [true],\n\t\t\t\t},\n\t\t\t},\n\t\t\tdefault: '',\n\t\t\tdescription: 'SSL passphrase to use',\n\t\t},\n\t\t// {\n\t\t// \tdisplayName: 'Client ID',\n\t\t// \tname: 'clientId',\n\t\t// \ttype: 'string',\n\t\t// \tdefault: '',\n\t\t// \tplaceholder: 'my-app',\n\t\t// },\n\t\t// {\n\t\t// \tdisplayName: 'Brokers',\n\t\t// \tname: 'brokers',\n\t\t// \ttype: 'string',\n\t\t// \tdefault: '',\n\t\t// \tplaceholder: 'kafka1:9092,kafka2:9092',\n\t\t// },\n\t\t// {\n\t\t// \tdisplayName: 'Username',\n\t\t// \tname: 'username',\n\t\t// \ttype: 'string',\n\t\t// \tdefault: '',\n\t\t// \tdescription: 'Optional username if authenticated is required.',\n\t\t// },\n\t\t// {\n\t\t// \tdisplayName: 'Password',\n\t\t// \tname: 'password',\n\t\t// \ttype: 'string',\n\t\t// \ttypeOptions: {\n\t\t// \t\tpassword: true,\n\t\t// \t},\n\t\t// \tdefault: '',\n\t\t// \tdescription: 'Optional password if authenticated is required.',\n\t\t// },\n\t];\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEO,MAAM,SAAoC;AAAA,EAA1C;AACN,gBAAO;AAEP,uBAAc;AAEd,4BAAmB;AAEnB,sBAAgC;AAAA,MAC/B;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aAAa;AAAA,MACd;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,MACV;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aAAa;AAAA,MACd;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,aAAa;AAAA,UACZ,UAAU;AAAA,QACX;AAAA,QACA,SAAS;AAAA,QACT,aAAa;AAAA,MACd;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,MACV;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,MACV;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,gBAAgB;AAAA,UACf,MAAM;AAAA,YACL,KAAK,CAAC,IAAI;AAAA,UACX;AAAA,QACD;AAAA,QACA,SAAS;AAAA,QACT,aACC;AAAA,MACF;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,aAAa;AAAA,UACZ,UAAU;AAAA,QACX;AAAA,QACA,gBAAgB;AAAA,UACf,MAAM;AAAA,YACL,KAAK,CAAC,IAAI;AAAA,UACX;AAAA,QACD;AAAA,QACA,SAAS;AAAA,QACT,aAAa;AAAA,MACd;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,aAAa;AAAA,UACZ,UAAU;AAAA,QACX;AAAA,QACA,gBAAgB;AAAA,UACf,MAAM;AAAA,YACL,KAAK,CAAC,IAAI;AAAA,YACV,cAAc,CAAC,IAAI;AAAA,UACpB;AAAA,QACD;AAAA,QACA,SAAS;AAAA,QACT,aAAa;AAAA,MACd;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,aAAa;AAAA,UACZ,UAAU;AAAA,QACX;AAAA,QACA,gBAAgB;AAAA,UACf,MAAM;AAAA,YACL,KAAK,CAAC,IAAI;AAAA,YACV,cAAc,CAAC,IAAI;AAAA,UACpB;AAAA,QACD;AAAA,QACA,SAAS;AAAA,QACT,aAAa;AAAA,MACd;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,aAAa;AAAA,UACZ,UAAU;AAAA,QACX;AAAA,QACA,gBAAgB;AAAA,UACf,MAAM;AAAA,YACL,KAAK,CAAC,IAAI;AAAA,YACV,cAAc,CAAC,IAAI;AAAA,UACpB;AAAA,QACD;AAAA,QACA,SAAS;AAAA,QACT,aAAa;AAAA,MACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAgCD;AAAA;AACD;","names":[]}