{"version":3,"sources":["../../credentials/NotionApi.credentials.ts"],"sourcesContent":["import type {\n\tICredentialDataDecryptedObject,\n\tICredentialTestRequest,\n\tICredentialType,\n\tIHttpRequestOptions,\n\tINodeProperties,\n} from 'n8n-workflow';\n\nexport class NotionApi implements ICredentialType {\n\tname = 'notionApi';\n\n\tdisplayName = 'Notion API';\n\n\tdocumentationUrl = 'notion';\n\n\tproperties: INodeProperties[] = [\n\t\t{\n\t\t\tdisplayName: 'Internal Integration Secret',\n\t\t\tname: 'apiKey',\n\t\t\ttype: 'string',\n\t\t\ttypeOptions: { password: true },\n\t\t\tdefault: '',\n\t\t},\n\t];\n\n\ttest: ICredentialTestRequest = {\n\t\trequest: {\n\t\t\tbaseURL: 'https://api.notion.com/v1',\n\t\t\turl: '/users/me',\n\t\t},\n\t};\n\n\tasync authenticate(\n\t\tcredentials: ICredentialDataDecryptedObject,\n\t\trequestOptions: IHttpRequestOptions,\n\t): Promise<IHttpRequestOptions> {\n\t\trequestOptions.headers = {\n\t\t\t...requestOptions.headers,\n\t\t\tAuthorization: `Bearer ${credentials.apiKey} `,\n\t\t};\n\n\t\t// if version it's not set, set it to last one\n\t\t// version is only set when the request is made from\n\t\t// the notion node, or was set explicitly in the http node\n\t\tif (!requestOptions.headers['Notion-Version']) {\n\t\t\trequestOptions.headers = {\n\t\t\t\t...requestOptions.headers,\n\t\t\t\t'Notion-Version': '2022-02-22',\n\t\t\t};\n\t\t}\n\n\t\treturn requestOptions;\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAQO,MAAM,UAAqC;AAAA,EAA3C;AACN,gBAAO;AAEP,uBAAc;AAEd,4BAAmB;AAEnB,sBAAgC;AAAA,MAC/B;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,aAAa,EAAE,UAAU,KAAK;AAAA,QAC9B,SAAS;AAAA,MACV;AAAA,IACD;AAEA,gBAA+B;AAAA,MAC9B,SAAS;AAAA,QACR,SAAS;AAAA,QACT,KAAK;AAAA,MACN;AAAA,IACD;AAAA;AAAA,EAEA,MAAM,aACL,aACA,gBAC+B;AAC/B,mBAAe,UAAU;AAAA,MACxB,GAAG,eAAe;AAAA,MAClB,eAAe,UAAU,YAAY,MAAM;AAAA,IAC5C;AAKA,QAAI,CAAC,eAAe,QAAQ,gBAAgB,GAAG;AAC9C,qBAAe,UAAU;AAAA,QACxB,GAAG,eAAe;AAAA,QAClB,kBAAkB;AAAA,MACnB;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AACD;","names":[]}