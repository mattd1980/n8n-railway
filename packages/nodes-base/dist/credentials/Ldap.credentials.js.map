{"version":3,"sources":["../../credentials/Ldap.credentials.ts"],"sourcesContent":["import type { ICredentialType, INodeProperties } from 'n8n-workflow';\n\n// eslint-disable-next-line n8n-nodes-base/cred-class-name-unsuffixed\nexport class Ldap implements ICredentialType {\n\t// eslint-disable-next-line n8n-nodes-base/cred-class-field-name-unsuffixed\n\tname = 'ldap';\n\n\tdisplayName = 'LDAP';\n\n\tdocumentationUrl = 'ldap';\n\n\tproperties: INodeProperties[] = [\n\t\t{\n\t\t\tdisplayName: 'LDAP Server Address',\n\t\t\tname: 'hostname',\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t\trequired: true,\n\t\t\tdescription: 'IP or domain of the LDAP server',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'LDAP Server Port',\n\t\t\tname: 'port',\n\t\t\ttype: 'string',\n\t\t\tdefault: '389',\n\t\t\tdescription: 'Port used to connect to the LDAP server',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Binding DN',\n\t\t\tname: 'bindDN',\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t\tdescription: 'Distinguished Name of the user to connect as',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Binding Password',\n\t\t\tname: 'bindPassword',\n\t\t\ttype: 'string',\n\t\t\ttypeOptions: {\n\t\t\t\tpassword: true,\n\t\t\t},\n\t\t\tdefault: '',\n\t\t\tdescription: 'Password of the user provided in the Binding DN field above',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Connection Security',\n\t\t\tname: 'connectionSecurity',\n\t\t\ttype: 'options',\n\t\t\tdefault: 'none',\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\tname: 'None',\n\t\t\t\t\tvalue: 'none',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'TLS',\n\t\t\t\t\tvalue: 'tls',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'STARTTLS',\n\t\t\t\t\tvalue: 'startTls',\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Ignore SSL/TLS Issues',\n\t\t\tname: 'allowUnauthorizedCerts',\n\t\t\ttype: 'boolean',\n\t\t\tdescription: 'Whether to connect even if SSL/TLS certificate validation is not possible',\n\t\t\tdefault: false,\n\t\t\tdisplayOptions: {\n\t\t\t\thide: {\n\t\t\t\t\tconnectionSecurity: ['none'],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'CA Certificate',\n\t\t\tname: 'caCertificate',\n\t\t\ttypeOptions: {\n\t\t\t\talwaysOpenEditWindow: true,\n\t\t\t},\n\t\t\tdisplayOptions: {\n\t\t\t\thide: {\n\t\t\t\t\tconnectionSecurity: ['none'],\n\t\t\t\t},\n\t\t\t},\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Timeout',\n\t\t\tdescription: 'Optional connection timeout in seconds',\n\t\t\tname: 'timeout',\n\t\t\ttype: 'number',\n\t\t\tdefault: 300,\n\t\t},\n\t];\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGO,MAAM,KAAgC;AAAA,EAAtC;AAEN;AAAA,gBAAO;AAEP,uBAAc;AAEd,4BAAmB;AAEnB,sBAAgC;AAAA,MAC/B;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,UAAU;AAAA,QACV,aAAa;AAAA,MACd;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aAAa;AAAA,MACd;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aAAa;AAAA,MACd;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,aAAa;AAAA,UACZ,UAAU;AAAA,QACX;AAAA,QACA,SAAS;AAAA,QACT,aAAa;AAAA,MACd;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,SAAS;AAAA,UACR;AAAA,YACC,MAAM;AAAA,YACN,OAAO;AAAA,UACR;AAAA,UACA;AAAA,YACC,MAAM;AAAA,YACN,OAAO;AAAA,UACR;AAAA,UACA;AAAA,YACC,MAAM;AAAA,YACN,OAAO;AAAA,UACR;AAAA,QACD;AAAA,MACD;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,aAAa;AAAA,QACb,SAAS;AAAA,QACT,gBAAgB;AAAA,UACf,MAAM;AAAA,YACL,oBAAoB,CAAC,MAAM;AAAA,UAC5B;AAAA,QACD;AAAA,MACD;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,aAAa;AAAA,UACZ,sBAAsB;AAAA,QACvB;AAAA,QACA,gBAAgB;AAAA,UACf,MAAM;AAAA,YACL,oBAAoB,CAAC,MAAM;AAAA,UAC5B;AAAA,QACD;AAAA,QACA,MAAM;AAAA,QACN,SAAS;AAAA,MACV;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,MACV;AAAA,IACD;AAAA;AACD;","names":[]}