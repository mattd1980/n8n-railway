{"version":3,"sources":["../../credentials/GoogleApi.credentials.ts"],"sourcesContent":["import type { AxiosRequestConfig } from 'axios';\nimport axios from 'axios';\nimport jwt from 'jsonwebtoken';\nimport moment from 'moment-timezone';\nimport type {\n\tICredentialDataDecryptedObject,\n\tICredentialType,\n\tIHttpRequestOptions,\n\tINodeProperties,\n\tIcon,\n} from 'n8n-workflow';\n\nconst regions = [\n\t{\n\t\tname: 'africa-south1',\n\t\tdisplayName: 'Africa',\n\t\tlocation: 'Johannesburg',\n\t},\n\t{\n\t\tname: 'asia-east1',\n\t\tdisplayName: 'Asia Pacific',\n\t\tlocation: 'Changhua County',\n\t},\n\t{\n\t\tname: 'asia-east2',\n\t\tdisplayName: 'Asia Pacific',\n\t\tlocation: 'Hong Kong',\n\t},\n\t{\n\t\tname: 'asia-northeast1',\n\t\tdisplayName: 'Asia Pacific',\n\t\tlocation: 'Tokyo',\n\t},\n\t{\n\t\tname: 'asia-northeast2',\n\t\tdisplayName: 'Asia Pacific',\n\t\tlocation: 'Osaka',\n\t},\n\t{\n\t\tname: 'asia-northeast3',\n\t\tdisplayName: 'Asia Pacific',\n\t\tlocation: 'Seoul',\n\t},\n\t{\n\t\tname: 'asia-south1',\n\t\tdisplayName: 'Asia Pacific',\n\t\tlocation: 'Mumbai',\n\t},\n\t{\n\t\tname: 'asia-south2',\n\t\tdisplayName: 'Asia Pacific',\n\t\tlocation: 'Delhi',\n\t},\n\t{\n\t\tname: 'asia-southeast1',\n\t\tdisplayName: 'Asia Pacific',\n\t\tlocation: 'Jurong West',\n\t},\n\t{\n\t\tname: 'asia-southeast2',\n\t\tdisplayName: 'Asia Pacific',\n\t\tlocation: 'Jakarta',\n\t},\n\t{\n\t\tname: 'australia-southeast1',\n\t\tdisplayName: 'Asia Pacific',\n\t\tlocation: 'Sydney',\n\t},\n\t{\n\t\tname: 'australia-southeast2',\n\t\tdisplayName: 'Asia Pacific',\n\t\tlocation: 'Melbourne',\n\t},\n\t{\n\t\tname: 'europe-central2',\n\t\tdisplayName: 'Europe',\n\t\tlocation: 'Warsaw',\n\t},\n\t{\n\t\tname: 'europe-north1',\n\t\tdisplayName: 'Europe',\n\t\tlocation: 'Hamina',\n\t},\n\t{\n\t\tname: 'europe-southwest1',\n\t\tdisplayName: 'Europe',\n\t\tlocation: 'Madrid',\n\t},\n\t{\n\t\tname: 'europe-west1',\n\t\tdisplayName: 'Europe',\n\t\tlocation: 'St. Ghislain',\n\t},\n\t{\n\t\tname: 'europe-west10',\n\t\tdisplayName: 'Europe',\n\t\tlocation: 'Berlin',\n\t},\n\t{\n\t\tname: 'europe-west12',\n\t\tdisplayName: 'Europe',\n\t\tlocation: 'Turin',\n\t},\n\t{\n\t\tname: 'europe-west2',\n\t\tdisplayName: 'Europe',\n\t\tlocation: 'London',\n\t},\n\t{\n\t\tname: 'europe-west3',\n\t\tdisplayName: 'Europe',\n\t\tlocation: 'Frankfurt',\n\t},\n\t{\n\t\tname: 'europe-west4',\n\t\tdisplayName: 'Europe',\n\t\tlocation: 'Eemshaven',\n\t},\n\t{\n\t\tname: 'europe-west6',\n\t\tdisplayName: 'Europe',\n\t\tlocation: 'Zurich',\n\t},\n\t{\n\t\tname: 'europe-west8',\n\t\tdisplayName: 'Europe',\n\t\tlocation: 'Milan',\n\t},\n\t{\n\t\tname: 'europe-west9',\n\t\tdisplayName: 'Europe',\n\t\tlocation: 'Paris',\n\t},\n\t{\n\t\tname: 'me-central1',\n\t\tdisplayName: 'Middle East',\n\t\tlocation: 'Doha',\n\t},\n\t{\n\t\tname: 'me-central2',\n\t\tdisplayName: 'Middle East',\n\t\tlocation: 'Dammam',\n\t},\n\t{\n\t\tname: 'me-west1',\n\t\tdisplayName: 'Middle East',\n\t\tlocation: 'Tel Aviv',\n\t},\n\t{\n\t\tname: 'northamerica-northeast1',\n\t\tdisplayName: 'Americas',\n\t\tlocation: 'MontrÃ©al',\n\t},\n\t{\n\t\tname: 'northamerica-northeast2',\n\t\tdisplayName: 'Americas',\n\t\tlocation: 'Toronto',\n\t},\n\t{\n\t\tname: 'northamerica-south1',\n\t\tdisplayName: 'Americas',\n\t\tlocation: 'Queretaro',\n\t},\n\t{\n\t\tname: 'southamerica-east1',\n\t\tdisplayName: 'Americas',\n\t\tlocation: 'Osasco',\n\t},\n\t{\n\t\tname: 'southamerica-west1',\n\t\tdisplayName: 'Americas',\n\t\tlocation: 'Santiago',\n\t},\n\t{\n\t\tname: 'us-central1',\n\t\tdisplayName: 'Americas',\n\t\tlocation: 'Council Bluffs',\n\t},\n\t{\n\t\tname: 'us-east1',\n\t\tdisplayName: 'Americas',\n\t\tlocation: 'Moncks Corner',\n\t},\n\t{\n\t\tname: 'us-east4',\n\t\tdisplayName: 'Americas',\n\t\tlocation: 'Ashburn',\n\t},\n\t{\n\t\tname: 'us-east5',\n\t\tdisplayName: 'Americas',\n\t\tlocation: 'Columbus',\n\t},\n\t{\n\t\tname: 'us-south1',\n\t\tdisplayName: 'Americas',\n\t\tlocation: 'Dallas',\n\t},\n\t{\n\t\tname: 'us-west1',\n\t\tdisplayName: 'Americas',\n\t\tlocation: 'The Dalles',\n\t},\n\t{\n\t\tname: 'us-west2',\n\t\tdisplayName: 'Americas',\n\t\tlocation: 'Los Angeles',\n\t},\n\t{\n\t\tname: 'us-west3',\n\t\tdisplayName: 'Americas',\n\t\tlocation: 'Salt Lake City',\n\t},\n\t{\n\t\tname: 'us-west4',\n\t\tdisplayName: 'Americas',\n\t\tlocation: 'Las Vegas',\n\t},\n] as const;\n\nexport class GoogleApi implements ICredentialType {\n\tname = 'googleApi';\n\n\tdisplayName = 'Google Service Account API';\n\n\tdocumentationUrl = 'google/service-account';\n\n\ticon: Icon = 'file:icons/Google.svg';\n\n\tproperties: INodeProperties[] = [\n\t\t{\n\t\t\tdisplayName: 'Region',\n\t\t\tname: 'region',\n\t\t\ttype: 'options',\n\t\t\toptions: regions.map((r) => ({\n\t\t\t\tname: `${r.displayName} (${r.location}) - ${r.name}`,\n\t\t\t\tvalue: r.name,\n\t\t\t})),\n\t\t\tdefault: 'us-central1',\n\t\t\tdescription:\n\t\t\t\t'The region where the Google Cloud service is located. This applies only to specific nodes, like the Google Vertex Chat Model',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Service Account Email',\n\t\t\tname: 'email',\n\t\t\ttype: 'string',\n\t\t\tplaceholder: 'name@email.com',\n\t\t\tdefault: '',\n\t\t\tdescription: 'The Google Service account similar to user-808@project.iam.gserviceaccount.com',\n\t\t\trequired: true,\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Private Key',\n\t\t\tname: 'privateKey',\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t\tplaceholder:\n\t\t\t\t'-----BEGIN PRIVATE KEY-----\\nXIYEvQIBADANBg<...>0IhA7TMoGYPQc=\\n-----END PRIVATE KEY-----\\n',\n\t\t\tdescription:\n\t\t\t\t'Enter the private key located in the JSON file downloaded from Google Cloud Console',\n\t\t\trequired: true,\n\t\t\ttypeOptions: {\n\t\t\t\tpassword: true,\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Impersonate a User',\n\t\t\tname: 'inpersonate',\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Email',\n\t\t\tname: 'delegatedEmail',\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: {\n\t\t\t\t\tinpersonate: [true],\n\t\t\t\t},\n\t\t\t},\n\t\t\tdescription:\n\t\t\t\t'The email address of the user for which the application is requesting delegated access',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Set up for use in HTTP Request node',\n\t\t\tname: 'httpNode',\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t},\n\t\t{\n\t\t\tdisplayName:\n\t\t\t\t\"When using the HTTP Request node, you must specify the scopes you want to send. In other nodes, they're added automatically\",\n\t\t\tname: 'httpWarning',\n\t\t\ttype: 'notice',\n\t\t\tdefault: '',\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: {\n\t\t\t\t\thttpNode: [true],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Scope(s)',\n\t\t\tname: 'scopes',\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t\tdescription:\n\t\t\t\t'You can find the scopes for services <a href=\"https://developers.google.com/identity/protocols/oauth2/scopes\" target=\"_blank\">here</a>',\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: {\n\t\t\t\t\thttpNode: [true],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t];\n\n\tasync authenticate(\n\t\tcredentials: ICredentialDataDecryptedObject,\n\t\trequestOptions: IHttpRequestOptions,\n\t): Promise<IHttpRequestOptions> {\n\t\tif (!credentials.httpNode) return requestOptions;\n\n\t\tconst privateKey = (credentials.privateKey as string).replace(/\\\\n/g, '\\n').trim();\n\t\tconst credentialsScopes = (credentials.scopes as string).replace(/\\\\n/g, '\\n').trim();\n\t\tcredentials.email = (credentials.email as string).trim();\n\n\t\tconst regex = /[,\\s\\n]+/;\n\t\tconst scopes = credentialsScopes\n\t\t\t.split(regex)\n\t\t\t.filter((scope) => scope)\n\t\t\t.join(' ');\n\n\t\tconst now = moment().unix();\n\n\t\tconst signature = jwt.sign(\n\t\t\t{\n\t\t\t\tiss: credentials.email,\n\t\t\t\tsub: credentials.delegatedEmail || credentials.email,\n\t\t\t\tscope: scopes,\n\t\t\t\taud: 'https://oauth2.googleapis.com/token',\n\t\t\t\tiat: now,\n\t\t\t\texp: now + 3600,\n\t\t\t},\n\t\t\tprivateKey,\n\t\t\t{\n\t\t\t\talgorithm: 'RS256',\n\t\t\t\theader: {\n\t\t\t\t\tkid: privateKey,\n\t\t\t\t\ttyp: 'JWT',\n\t\t\t\t\talg: 'RS256',\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tconst axiosRequestConfig: AxiosRequestConfig = {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t\t},\n\t\t\tmethod: 'POST',\n\t\t\tdata: new URLSearchParams({\n\t\t\t\tgrant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n\t\t\t\tassertion: signature,\n\t\t\t}).toString(),\n\t\t\turl: 'https://oauth2.googleapis.com/token',\n\t\t};\n\n\t\tconst result = await axios(axiosRequestConfig);\n\n\t\tconst { access_token } = result.data;\n\n\t\tconst requestOptionsWithAuth: IHttpRequestOptions = {\n\t\t\t...requestOptions,\n\t\t\theaders: {\n\t\t\t\t...requestOptions.headers,\n\t\t\t\tAuthorization: `Bearer ${access_token}`,\n\t\t\t},\n\t\t};\n\n\t\treturn requestOptionsWithAuth;\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,mBAAkB;AAClB,0BAAgB;AAChB,6BAAmB;AASnB,MAAM,UAAU;AAAA,EACf;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,EACX;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,EACX;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,EACX;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,EACX;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,EACX;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,EACX;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,EACX;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,EACX;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,EACX;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,EACX;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,EACX;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,EACX;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,EACX;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,EACX;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,EACX;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,EACX;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,EACX;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,EACX;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,EACX;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,EACX;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,EACX;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,EACX;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,EACX;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,EACX;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,EACX;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,EACX;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,EACX;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,EACX;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,EACX;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,EACX;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,EACX;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,EACX;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,EACX;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,EACX;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,EACX;AAAA,EACA;AAAA,IAC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","names":["moment","jwt","axios"]}