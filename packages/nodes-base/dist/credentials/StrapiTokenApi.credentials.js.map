{"version":3,"sources":["../../credentials/StrapiTokenApi.credentials.ts"],"sourcesContent":["import type {\n\tIAuthenticateGeneric,\n\tICredentialTestRequest,\n\tICredentialType,\n\tINodeProperties,\n} from 'n8n-workflow';\n\nexport class StrapiTokenApi implements ICredentialType {\n\tname = 'strapiTokenApi';\n\n\tdisplayName = 'Strapi API Token';\n\n\tdocumentationUrl = 'strapi';\n\n\tproperties: INodeProperties[] = [\n\t\t{\n\t\t\tdisplayName: 'API Token',\n\t\t\tname: 'apiToken',\n\t\t\ttype: 'string',\n\t\t\ttypeOptions: { password: true },\n\t\t\tdefault: '',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'URL',\n\t\t\tname: 'url',\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t\tplaceholder: 'https://api.example.com',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'API Version',\n\t\t\tname: 'apiVersion',\n\t\t\tdefault: 'v3',\n\t\t\ttype: 'options',\n\t\t\tdescription: 'The version of api to be used',\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\tname: 'Version 4',\n\t\t\t\t\tvalue: 'v4',\n\t\t\t\t\tdescription: 'API version supported by Strapi 4',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Version 3',\n\t\t\t\t\tvalue: 'v3',\n\t\t\t\t\tdescription: 'API version supported by Strapi 3',\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t];\n\n\tauthenticate: IAuthenticateGeneric = {\n\t\ttype: 'generic',\n\t\tproperties: {\n\t\t\theaders: {\n\t\t\t\tAuthorization: '=Bearer {{$credentials.apiToken}}',\n\t\t\t},\n\t\t},\n\t};\n\n\ttest: ICredentialTestRequest = {\n\t\trequest: {\n\t\t\tbaseURL: '={{$credentials.url}}',\n\t\t\turl: '={{$credentials.apiVersion === \"v3\" ? \"/users/count\" : \"/api/users/count\"}}',\n\t\t\tignoreHttpStatusErrors: true,\n\t\t},\n\t\trules: [\n\t\t\t{\n\t\t\t\ttype: 'responseSuccessBody',\n\t\t\t\tproperties: {\n\t\t\t\t\tkey: 'error.name',\n\t\t\t\t\tvalue: 'UnauthorizedError',\n\t\t\t\t\tmessage: 'Invalid API token',\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t};\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAOO,MAAM,eAA0C;AAAA,EAAhD;AACN,gBAAO;AAEP,uBAAc;AAEd,4BAAmB;AAEnB,sBAAgC;AAAA,MAC/B;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,aAAa,EAAE,UAAU,KAAK;AAAA,QAC9B,SAAS;AAAA,MACV;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aAAa;AAAA,MACd;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,QACN,aAAa;AAAA,QACb,SAAS;AAAA,UACR;AAAA,YACC,MAAM;AAAA,YACN,OAAO;AAAA,YACP,aAAa;AAAA,UACd;AAAA,UACA;AAAA,YACC,MAAM;AAAA,YACN,OAAO;AAAA,YACP,aAAa;AAAA,UACd;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAEA,wBAAqC;AAAA,MACpC,MAAM;AAAA,MACN,YAAY;AAAA,QACX,SAAS;AAAA,UACR,eAAe;AAAA,QAChB;AAAA,MACD;AAAA,IACD;AAEA,gBAA+B;AAAA,MAC9B,SAAS;AAAA,QACR,SAAS;AAAA,QACT,KAAK;AAAA,QACL,wBAAwB;AAAA,MACzB;AAAA,MACA,OAAO;AAAA,QACN;AAAA,UACC,MAAM;AAAA,UACN,YAAY;AAAA,YACX,KAAK;AAAA,YACL,OAAO;AAAA,YACP,SAAS;AAAA,UACV;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA;AACD;","names":[]}