{"version":3,"sources":["../../credentials/CiscoSecureEndpointApi.credentials.ts"],"sourcesContent":["import axios from 'axios';\nimport type {\n\tICredentialDataDecryptedObject,\n\tICredentialTestRequest,\n\tICredentialType,\n\tIHttpRequestOptions,\n\tINodeProperties,\n} from 'n8n-workflow';\n\nexport class CiscoSecureEndpointApi implements ICredentialType {\n\tname = 'ciscoSecureEndpointApi';\n\n\tdisplayName = 'Cisco Secure Endpoint (AMP) API';\n\n\tdocumentationUrl = 'ciscosecureendpoint';\n\n\ticon = { light: 'file:icons/Cisco.svg', dark: 'file:icons/Cisco.dark.svg' } as const;\n\n\thttpRequestNode = {\n\t\tname: 'Cisco Secure Endpoint',\n\t\tdocsUrl: 'https://developer.cisco.com/docs/secure-endpoint/',\n\t\tapiBaseUrl: '',\n\t};\n\n\tproperties: INodeProperties[] = [\n\t\t{\n\t\t\tdisplayName: 'Region',\n\t\t\tname: 'region',\n\t\t\ttype: 'options',\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\tname: 'Asia Pacific, Japan, and China',\n\t\t\t\t\tvalue: 'apjc.amp',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Europe',\n\t\t\t\t\tvalue: 'eu.amp',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'North America',\n\t\t\t\t\tvalue: 'amp',\n\t\t\t\t},\n\t\t\t],\n\t\t\tdefault: 'amp',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Client ID',\n\t\t\tname: 'clientId',\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t\trequired: true,\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Client Secret',\n\t\t\tname: 'clientSecret',\n\t\t\ttype: 'string',\n\t\t\ttypeOptions: {\n\t\t\t\tpassword: true,\n\t\t\t},\n\t\t\tdefault: '',\n\t\t\trequired: true,\n\t\t},\n\t];\n\n\tasync authenticate(\n\t\tcredentials: ICredentialDataDecryptedObject,\n\t\trequestOptions: IHttpRequestOptions,\n\t): Promise<IHttpRequestOptions> {\n\t\tconst clientId = credentials.clientId as string;\n\t\tconst clientSecret = credentials.clientSecret as string;\n\t\tconst region = credentials.region as string;\n\n\t\tconst secureXToken = await axios({\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t\t\tAccept: 'application/json',\n\t\t\t},\n\t\t\tauth: {\n\t\t\t\tusername: clientId,\n\t\t\t\tpassword: clientSecret,\n\t\t\t},\n\t\t\tmethod: 'POST',\n\t\t\tdata: new URLSearchParams({\n\t\t\t\tgrant_type: 'client_credentials',\n\t\t\t}).toString(),\n\t\t\turl: `https://visibility.${region}.cisco.com/iroh/oauth2/token`,\n\t\t});\n\n\t\tconst secureEndpointToken = await axios({\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t\t\tAccept: 'application/json',\n\t\t\t\tAuthorization: `Bearer ${secureXToken.data.access_token}`,\n\t\t\t},\n\t\t\tmethod: 'POST',\n\t\t\tdata: new URLSearchParams({\n\t\t\t\tgrant_type: 'client_credentials',\n\t\t\t}).toString(),\n\t\t\turl: `https://api.${region}.cisco.com/v3/access_tokens`,\n\t\t});\n\n\t\tconst requestOptionsWithAuth: IHttpRequestOptions = {\n\t\t\t...requestOptions,\n\t\t\theaders: {\n\t\t\t\t...requestOptions.headers,\n\t\t\t\tAuthorization: `Bearer ${secureEndpointToken.data.access_token}`,\n\t\t\t},\n\t\t};\n\n\t\treturn requestOptionsWithAuth;\n\t}\n\n\ttest: ICredentialTestRequest = {\n\t\trequest: {\n\t\t\tbaseURL: '=https://api.{{$credentials.region}}.cisco.com',\n\t\t\turl: '/v3/organizations',\n\t\t\tqs: {\n\t\t\t\tsize: 10,\n\t\t\t},\n\t\t},\n\t};\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkB;AASX,MAAM,uBAAkD;AAAA,EAAxD;AACN,gBAAO;AAEP,uBAAc;AAEd,4BAAmB;AAEnB,gBAAO,EAAE,OAAO,wBAAwB,MAAM,4BAA4B;AAE1E,2BAAkB;AAAA,MACjB,MAAM;AAAA,MACN,SAAS;AAAA,MACT,YAAY;AAAA,IACb;AAEA,sBAAgC;AAAA,MAC/B;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,UACR;AAAA,YACC,MAAM;AAAA,YACN,OAAO;AAAA,UACR;AAAA,UACA;AAAA,YACC,MAAM;AAAA,YACN,OAAO;AAAA,UACR;AAAA,UACA;AAAA,YACC,MAAM;AAAA,YACN,OAAO;AAAA,UACR;AAAA,QACD;AAAA,QACA,SAAS;AAAA,MACV;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,UAAU;AAAA,MACX;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,aAAa;AAAA,UACZ,UAAU;AAAA,QACX;AAAA,QACA,SAAS;AAAA,QACT,UAAU;AAAA,MACX;AAAA,IACD;AAkDA,gBAA+B;AAAA,MAC9B,SAAS;AAAA,QACR,SAAS;AAAA,QACT,KAAK;AAAA,QACL,IAAI;AAAA,UACH,MAAM;AAAA,QACP;AAAA,MACD;AAAA,IACD;AAAA;AAAA,EAxDA,MAAM,aACL,aACA,gBAC+B;AAC/B,UAAM,WAAW,YAAY;AAC7B,UAAM,eAAe,YAAY;AACjC,UAAM,SAAS,YAAY;AAE3B,UAAM,eAAe,UAAM,aAAAA,SAAM;AAAA,MAChC,SAAS;AAAA,QACR,gBAAgB;AAAA,QAChB,QAAQ;AAAA,MACT;AAAA,MACA,MAAM;AAAA,QACL,UAAU;AAAA,QACV,UAAU;AAAA,MACX;AAAA,MACA,QAAQ;AAAA,MACR,MAAM,IAAI,gBAAgB;AAAA,QACzB,YAAY;AAAA,MACb,CAAC,EAAE,SAAS;AAAA,MACZ,KAAK,sBAAsB,MAAM;AAAA,IAClC,CAAC;AAED,UAAM,sBAAsB,UAAM,aAAAA,SAAM;AAAA,MACvC,SAAS;AAAA,QACR,gBAAgB;AAAA,QAChB,QAAQ;AAAA,QACR,eAAe,UAAU,aAAa,KAAK,YAAY;AAAA,MACxD;AAAA,MACA,QAAQ;AAAA,MACR,MAAM,IAAI,gBAAgB;AAAA,QACzB,YAAY;AAAA,MACb,CAAC,EAAE,SAAS;AAAA,MACZ,KAAK,eAAe,MAAM;AAAA,IAC3B,CAAC;AAED,UAAM,yBAA8C;AAAA,MACnD,GAAG;AAAA,MACH,SAAS;AAAA,QACR,GAAG,eAAe;AAAA,QAClB,eAAe,UAAU,oBAAoB,KAAK,YAAY;AAAA,MAC/D;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AAWD;","names":["axios"]}