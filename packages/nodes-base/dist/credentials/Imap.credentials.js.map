{"version":3,"sources":["../../credentials/Imap.credentials.ts"],"sourcesContent":["import type { ICredentialType, INodeProperties } from 'n8n-workflow';\n\nexport class Imap implements ICredentialType {\n\tname = 'imap';\n\n\tdisplayName = 'IMAP';\n\n\tdocumentationUrl = 'imap';\n\n\tproperties: INodeProperties[] = [\n\t\t{\n\t\t\tdisplayName: 'User',\n\t\t\tname: 'user',\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Password',\n\t\t\tname: 'password',\n\t\t\ttype: 'string',\n\t\t\ttypeOptions: {\n\t\t\t\tpassword: true,\n\t\t\t},\n\t\t\tdefault: '',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Host',\n\t\t\tname: 'host',\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Port',\n\t\t\tname: 'port',\n\t\t\ttype: 'number',\n\t\t\tdefault: 993,\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'SSL/TLS',\n\t\t\tname: 'secure',\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Allow Self-Signed Certificates',\n\t\t\tname: 'allowUnauthorizedCerts',\n\t\t\ttype: 'boolean',\n\t\t\tdescription: 'Whether to connect even if SSL certificate validation is not possible',\n\t\t\tdefault: false,\n\t\t},\n\t];\n}\n\nexport interface ICredentialsDataImap {\n\thost: string;\n\tport: number;\n\tuser: string;\n\tpassword: string;\n\tsecure: boolean;\n\tallowUnauthorizedCerts: boolean;\n}\n\nexport function isCredentialsDataImap(candidate: unknown): candidate is ICredentialsDataImap {\n\tconst o = candidate as ICredentialsDataImap;\n\treturn (\n\t\to.host !== undefined &&\n\t\to.password !== undefined &&\n\t\to.port !== undefined &&\n\t\to.secure !== undefined &&\n\t\to.user !== undefined\n\t);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEO,MAAM,KAAgC;AAAA,EAAtC;AACN,gBAAO;AAEP,uBAAc;AAEd,4BAAmB;AAEnB,sBAAgC;AAAA,MAC/B;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,MACV;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,aAAa;AAAA,UACZ,UAAU;AAAA,QACX;AAAA,QACA,SAAS;AAAA,MACV;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,MACV;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,MACV;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,MACV;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,aAAa;AAAA,QACb,SAAS;AAAA,MACV;AAAA,IACD;AAAA;AACD;AAWO,SAAS,sBAAsB,WAAuD;AAC5F,QAAM,IAAI;AACV,SACC,EAAE,SAAS,UACX,EAAE,aAAa,UACf,EAAE,SAAS,UACX,EAAE,WAAW,UACb,EAAE,SAAS;AAEb;","names":[]}