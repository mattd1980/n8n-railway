{"version":3,"sources":["../../credentials/DatadogApi.credentials.ts"],"sourcesContent":["import type {\n\tICredentialDataDecryptedObject,\n\tICredentialTestRequest,\n\tICredentialType,\n\tIHttpRequestOptions,\n\tINodeProperties,\n} from 'n8n-workflow';\n\nexport class DatadogApi implements ICredentialType {\n\tname = 'datadogApi';\n\n\tdisplayName = 'Datadog API';\n\n\tdocumentationUrl = 'datadog';\n\n\ticon = { light: 'file:icons/Datadog.svg', dark: 'file:icons/Datadog.svg' } as const;\n\n\thttpRequestNode = {\n\t\tname: 'Datadog',\n\t\tdocsUrl: 'https://docs.datadoghq.com/api/latest/',\n\t\tapiBaseUrlPlaceholder: 'https://api.datadoghq.com/api/v1/metrics',\n\t};\n\n\tproperties: INodeProperties[] = [\n\t\t{\n\t\t\tdisplayName: 'URL',\n\t\t\tname: 'url',\n\t\t\trequired: true,\n\t\t\ttype: 'string',\n\t\t\tdefault: 'https://api.datadoghq.com',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'API Key',\n\t\t\tname: 'apiKey',\n\t\t\trequired: true,\n\t\t\ttype: 'string',\n\t\t\ttypeOptions: { password: true },\n\t\t\tdefault: '',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'APP Key',\n\t\t\tname: 'appKey',\n\t\t\trequired: false,\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t\ttypeOptions: { password: true },\n\t\t\tdescription: 'For some endpoints, you also need an Application key.',\n\t\t},\n\t];\n\n\tasync authenticate(\n\t\tcredentials: ICredentialDataDecryptedObject,\n\t\trequestOptions: IHttpRequestOptions,\n\t): Promise<IHttpRequestOptions> {\n\t\trequestOptions.headers = {\n\t\t\t'DD-API-KEY': credentials.apiKey,\n\t\t\t'DD-APPLICATION-KEY': credentials.appKey,\n\t\t};\n\t\tif (!requestOptions.headers['DD-APPLICATION-KEY']) {\n\t\t\tdelete requestOptions.headers['DD-APPLICATION-KEY'];\n\t\t}\n\n\t\treturn requestOptions;\n\t}\n\n\ttest: ICredentialTestRequest = {\n\t\trequest: {\n\t\t\tbaseURL: '={{$credentials.url}}',\n\t\t\turl: '/api/v1/validate',\n\t\t\tmethod: 'GET',\n\t\t},\n\t};\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAQO,MAAM,WAAsC;AAAA,EAA5C;AACN,gBAAO;AAEP,uBAAc;AAEd,4BAAmB;AAEnB,gBAAO,EAAE,OAAO,0BAA0B,MAAM,yBAAyB;AAEzE,2BAAkB;AAAA,MACjB,MAAM;AAAA,MACN,SAAS;AAAA,MACT,uBAAuB;AAAA,IACxB;AAEA,sBAAgC;AAAA,MAC/B;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,QACV,MAAM;AAAA,QACN,SAAS;AAAA,MACV;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,QACV,MAAM;AAAA,QACN,aAAa,EAAE,UAAU,KAAK;AAAA,QAC9B,SAAS;AAAA,MACV;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,QACV,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aAAa,EAAE,UAAU,KAAK;AAAA,QAC9B,aAAa;AAAA,MACd;AAAA,IACD;AAiBA,gBAA+B;AAAA,MAC9B,SAAS;AAAA,QACR,SAAS;AAAA,QACT,KAAK;AAAA,QACL,QAAQ;AAAA,MACT;AAAA,IACD;AAAA;AAAA,EArBA,MAAM,aACL,aACA,gBAC+B;AAC/B,mBAAe,UAAU;AAAA,MACxB,cAAc,YAAY;AAAA,MAC1B,sBAAsB,YAAY;AAAA,IACnC;AACA,QAAI,CAAC,eAAe,QAAQ,oBAAoB,GAAG;AAClD,aAAO,eAAe,QAAQ,oBAAoB;AAAA,IACnD;AAEA,WAAO;AAAA,EACR;AASD;","names":[]}