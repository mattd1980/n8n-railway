{"version":3,"sources":["../../../nodes/Contentful/Contentful.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes } from 'n8n-workflow';\n\nimport * as AssetDescription from './AssetDescription';\nimport * as ContentTypeDescription from './ContentTypeDescription';\nimport * as EntryDescription from './EntryDescription';\nimport { contentfulApiRequestAllItems, contentfulApiRequest } from './GenericFunctions';\nimport * as LocaleDescription from './LocaleDescription';\nimport * as SpaceDescription from './SpaceDescription';\n\nexport class Contentful implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Contentful',\n\t\tname: 'contentful',\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\t// eslint-disable-next-line n8n-nodes-base/node-class-description-icon-not-svg\n\t\ticon: 'file:contentful.png',\n\t\tgroup: ['input'],\n\t\tversion: 1,\n\t\tdescription: 'Consume Contentful API',\n\t\tdefaults: {\n\t\t\tname: 'Contentful',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'contentfulApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Source',\n\t\t\t\tname: 'source',\n\t\t\t\ttype: 'options',\n\t\t\t\tdefault: 'deliveryApi',\n\t\t\t\tdescription: 'Pick where your data comes from, delivery or preview API',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Delivery API',\n\t\t\t\t\t\tvalue: 'deliveryApi',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Preview API',\n\t\t\t\t\t\tvalue: 'previewApi',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t// Resources:\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\tAssetDescription.resource,\n\t\t\t\t\tContentTypeDescription.resource,\n\t\t\t\t\tEntryDescription.resource,\n\t\t\t\t\tLocaleDescription.resource,\n\t\t\t\t\tSpaceDescription.resource,\n\t\t\t\t],\n\t\t\t\tdefault: 'entry',\n\t\t\t},\n\n\t\t\t// Operations:\n\t\t\t...SpaceDescription.operations,\n\t\t\t...ContentTypeDescription.operations,\n\t\t\t...EntryDescription.operations,\n\t\t\t...AssetDescription.operations,\n\t\t\t...LocaleDescription.operations,\n\n\t\t\t// Resource specific fields:\n\t\t\t...SpaceDescription.fields,\n\t\t\t...ContentTypeDescription.fields,\n\t\t\t...EntryDescription.fields,\n\t\t\t...AssetDescription.fields,\n\t\t\t...LocaleDescription.fields,\n\t\t],\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\t\tlet responseData;\n\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst qs: Record<string, string | number> = {};\n\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'space') {\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst credentials = await this.getCredentials('contentfulApi');\n\n\t\t\t\t\t\tresponseData = await contentfulApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/spaces/${credentials?.spaceId}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'contentType') {\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst credentials = await this.getCredentials('contentfulApi');\n\n\t\t\t\t\t\tconst env = this.getNodeParameter('environmentId', 0) as string;\n\n\t\t\t\t\t\tconst id = this.getNodeParameter('contentTypeId', 0) as string;\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tresponseData = await contentfulApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/spaces/${credentials?.spaceId}/environments/${env}/content_types/${id}`,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (!additionalFields.rawData) {\n\t\t\t\t\t\t\tresponseData = responseData.fields;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'entry') {\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst credentials = await this.getCredentials('contentfulApi');\n\n\t\t\t\t\t\tconst env = this.getNodeParameter('environmentId', 0) as string;\n\n\t\t\t\t\t\tconst id = this.getNodeParameter('entryId', 0) as string;\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tresponseData = await contentfulApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/spaces/${credentials?.spaceId}/environments/${env}/entries/${id}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (!additionalFields.rawData) {\n\t\t\t\t\t\t\tresponseData = responseData.fields;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\tconst credentials = await this.getCredentials('contentfulApi');\n\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', 0);\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst rawData = additionalFields.rawData;\n\t\t\t\t\t\tadditionalFields.rawData = undefined;\n\n\t\t\t\t\t\tconst env = this.getNodeParameter('environmentId', i) as string;\n\n\t\t\t\t\t\tObject.assign(qs, additionalFields);\n\n\t\t\t\t\t\tif (qs.equal) {\n\t\t\t\t\t\t\tconst [atribute, value] = (qs.equal as string).split('=');\n\t\t\t\t\t\t\tqs[atribute] = value;\n\t\t\t\t\t\t\tdelete qs.equal;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (qs.notEqual) {\n\t\t\t\t\t\t\tconst [atribute, value] = (qs.notEqual as string).split('=');\n\t\t\t\t\t\t\tqs[atribute] = value;\n\t\t\t\t\t\t\tdelete qs.notEqual;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (qs.include) {\n\t\t\t\t\t\t\tconst [atribute, value] = (qs.include as string).split('=');\n\t\t\t\t\t\t\tqs[atribute] = value;\n\t\t\t\t\t\t\tdelete qs.include;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (qs.exclude) {\n\t\t\t\t\t\t\tconst [atribute, value] = (qs.exclude as string).split('=');\n\t\t\t\t\t\t\tqs[atribute] = value;\n\t\t\t\t\t\t\tdelete qs.exclude;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await contentfulApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'items',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/spaces/${credentials?.spaceId}/environments/${env}/entries`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif (!rawData) {\n\t\t\t\t\t\t\t\tconst assets: IDataObject[] = [];\n\n\t\t\t\t\t\t\t\tresponseData.map((asset: any) => {\n\t\t\t\t\t\t\t\t\tassets.push(asset.fields as IDataObject);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tresponseData = assets;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', 0);\n\t\t\t\t\t\t\tqs.limit = limit;\n\t\t\t\t\t\t\tresponseData = await contentfulApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/spaces/${credentials?.spaceId}/environments/${env}/entries`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.items;\n\n\t\t\t\t\t\t\tif (!rawData) {\n\t\t\t\t\t\t\t\tconst assets: IDataObject[] = [];\n\n\t\t\t\t\t\t\t\tresponseData.map((asset: any) => {\n\t\t\t\t\t\t\t\t\tassets.push(asset.fields as IDataObject);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tresponseData = assets;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'asset') {\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst credentials = await this.getCredentials('contentfulApi');\n\n\t\t\t\t\t\tconst env = this.getNodeParameter('environmentId', 0) as string;\n\n\t\t\t\t\t\tconst id = this.getNodeParameter('assetId', 0) as string;\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tresponseData = await contentfulApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/spaces/${credentials?.spaceId}/environments/${env}/assets/${id}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (!additionalFields.rawData) {\n\t\t\t\t\t\t\tresponseData = responseData.fields;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\tconst credentials = await this.getCredentials('contentfulApi');\n\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', 0);\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst rawData = additionalFields.rawData;\n\t\t\t\t\t\tadditionalFields.rawData = undefined;\n\n\t\t\t\t\t\tconst env = this.getNodeParameter('environmentId', i) as string;\n\n\t\t\t\t\t\tObject.assign(qs, additionalFields);\n\n\t\t\t\t\t\tif (qs.equal) {\n\t\t\t\t\t\t\tconst [atribute, value] = (qs.equal as string).split('=');\n\t\t\t\t\t\t\tqs[atribute] = value;\n\t\t\t\t\t\t\tdelete qs.equal;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (qs.notEqual) {\n\t\t\t\t\t\t\tconst [atribute, value] = (qs.notEqual as string).split('=');\n\t\t\t\t\t\t\tqs[atribute] = value;\n\t\t\t\t\t\t\tdelete qs.notEqual;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (qs.include) {\n\t\t\t\t\t\t\tconst [atribute, value] = (qs.include as string).split('=');\n\t\t\t\t\t\t\tqs[atribute] = value;\n\t\t\t\t\t\t\tdelete qs.include;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (qs.exclude) {\n\t\t\t\t\t\t\tconst [atribute, value] = (qs.exclude as string).split('=');\n\t\t\t\t\t\t\tqs[atribute] = value;\n\t\t\t\t\t\t\tdelete qs.exclude;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await contentfulApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'items',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/spaces/${credentials?.spaceId}/environments/${env}/assets`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif (!rawData) {\n\t\t\t\t\t\t\t\tconst assets: IDataObject[] = [];\n\n\t\t\t\t\t\t\t\tresponseData.map((asset: any) => {\n\t\t\t\t\t\t\t\t\tassets.push(asset.fields as IDataObject);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tresponseData = assets;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tqs.limit = limit;\n\t\t\t\t\t\t\tresponseData = await contentfulApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/spaces/${credentials?.spaceId}/environments/${env}/assets`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.items;\n\n\t\t\t\t\t\t\tif (!rawData) {\n\t\t\t\t\t\t\t\tconst assets: IDataObject[] = [];\n\n\t\t\t\t\t\t\t\tresponseData.map((asset: any) => {\n\t\t\t\t\t\t\t\t\tassets.push(asset.fields as IDataObject);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tresponseData = assets;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'locale') {\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst credentials = await this.getCredentials('contentfulApi');\n\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', 0);\n\n\t\t\t\t\t\tconst env = this.getNodeParameter('environmentId', i) as string;\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await contentfulApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'items',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/spaces/${credentials?.spaceId}/environments/${env}/locales`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', 0);\n\t\t\t\t\t\t\tqs.limit = limit;\n\t\t\t\t\t\t\tresponseData = await contentfulApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/spaces/${credentials?.spaceId}/environments/${env}/locales`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.items;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t);\n\t\t\t\treturnData.push(...executionData);\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\treturnData.push({ error: error.message, json: {} });\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":[]}