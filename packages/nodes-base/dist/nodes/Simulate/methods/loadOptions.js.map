{"version":3,"sources":["../../../../nodes/Simulate/methods/loadOptions.ts"],"sourcesContent":["import type { ILoadOptionsFunctions, INodePropertyOptions } from 'n8n-workflow';\n\nexport async function getNodeTypes(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\tconst types = this.getKnownNodeTypes() as {\n\t\t[key: string]: {\n\t\t\tclassName: string;\n\t\t};\n\t};\n\n\tconst returnData: INodePropertyOptions[] = [];\n\n\tlet typeNames = Object.keys(types);\n\n\tif (this.getNode().type === 'n8n-nodes-base.simulateTrigger') {\n\t\ttypeNames = typeNames.filter((type) => type.toLowerCase().includes('trigger'));\n\t}\n\n\tfor (const type of typeNames) {\n\t\treturnData.push({\n\t\t\tname: types[type].className,\n\t\t\tvalue: type,\n\t\t});\n\t}\n\n\treturn returnData;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,eAAsB,eAA2E;AAChG,QAAM,QAAQ,KAAK,kBAAkB;AAMrC,QAAM,aAAqC,CAAC;AAE5C,MAAI,YAAY,OAAO,KAAK,KAAK;AAEjC,MAAI,KAAK,QAAQ,EAAE,SAAS,kCAAkC;AAC7D,gBAAY,UAAU,OAAO,CAAC,SAAS,KAAK,YAAY,EAAE,SAAS,SAAS,CAAC;AAAA,EAC9E;AAEA,aAAW,QAAQ,WAAW;AAC7B,eAAW,KAAK;AAAA,MACf,MAAM,MAAM,IAAI,EAAE;AAAA,MAClB,OAAO;AAAA,IACR,CAAC;AAAA,EACF;AAEA,SAAO;AACR;","names":[]}