{"version":3,"sources":["../../../nodes/Simulate/SimulateTrigger.node.ts"],"sourcesContent":["import { sleep, NodeOperationError, jsonParse, NodeConnectionTypes } from 'n8n-workflow';\nimport type {\n\tIDataObject,\n\tITriggerFunctions,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n\tITriggerResponse,\n} from 'n8n-workflow';\n\nimport {\n\texecutionDurationProperty,\n\ticonSelector,\n\tjsonOutputProperty,\n\tsubtitleProperty,\n} from './descriptions';\nimport { loadOptions } from './methods';\n\nexport class SimulateTrigger implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\thidden: true,\n\t\tdisplayName: 'Simulate Trigger',\n\t\tname: 'simulateTrigger',\n\t\tsubtitle: '={{$parameter.subtitle || undefined}}',\n\t\ticon: 'fa:arrow-right',\n\t\tgroup: ['trigger'],\n\t\tversion: 1,\n\t\tdescription: 'Simulate a trigger node',\n\t\tdefaults: {\n\t\t\tname: 'Simulate Trigger',\n\t\t\tcolor: '#b0b0b0',\n\t\t},\n\t\tinputs: [],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tproperties: [\n\t\t\t{ ...iconSelector, default: 'n8n-nodes-base.manualTrigger' },\n\t\t\tsubtitleProperty,\n\t\t\t{ ...jsonOutputProperty, displayName: 'Output (JSON)' },\n\t\t\texecutionDurationProperty,\n\t\t],\n\t};\n\n\tmethods = { loadOptions };\n\n\tasync trigger(this: ITriggerFunctions): Promise<ITriggerResponse> {\n\t\tconst returnItems: INodeExecutionData[] = [];\n\n\t\tlet jsonOutput = this.getNodeParameter('jsonOutput', 0);\n\n\t\tif (typeof jsonOutput === 'string') {\n\t\t\ttry {\n\t\t\t\tjsonOutput = jsonParse<IDataObject>(jsonOutput);\n\t\t\t} catch (error) {\n\t\t\t\tthrow new NodeOperationError(this.getNode(), 'Invalid JSON');\n\t\t\t}\n\t\t}\n\n\t\tif (!Array.isArray(jsonOutput)) {\n\t\t\tjsonOutput = [jsonOutput];\n\t\t}\n\n\t\tfor (const item of jsonOutput as IDataObject[]) {\n\t\t\treturnItems.push({ json: item });\n\t\t}\n\n\t\tconst executionDuration = this.getNodeParameter('executionDuration', 0) as number;\n\n\t\tif (executionDuration > 0) {\n\t\t\tawait sleep(executionDuration);\n\t\t}\n\n\t\tconst manualTriggerFunction = async () => {\n\t\t\tthis.emit([returnItems]);\n\t\t};\n\n\t\treturn {\n\t\t\tmanualTriggerFunction,\n\t\t};\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA0E;AAU1E,0BAKO;AACP,qBAA4B;AAErB,MAAM,gBAAqC;AAAA,EAA3C;AACN,uBAAoC;AAAA,MACnC,QAAQ;AAAA,MACR,aAAa;AAAA,MACb,MAAM;AAAA,MACN,UAAU;AAAA,MACV,MAAM;AAAA,MACN,OAAO,CAAC,SAAS;AAAA,MACjB,SAAS;AAAA,MACT,aAAa;AAAA,MACb,UAAU;AAAA,QACT,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,MACA,QAAQ,CAAC;AAAA,MACT,SAAS,CAAC,wCAAoB,IAAI;AAAA,MAClC,YAAY;AAAA,QACX,EAAE,GAAG,kCAAc,SAAS,+BAA+B;AAAA,QAC3D;AAAA,QACA,EAAE,GAAG,wCAAoB,aAAa,gBAAgB;AAAA,QACtD;AAAA,MACD;AAAA,IACD;AAEA,mBAAU,EAAE,wCAAY;AAAA;AAAA,EAExB,MAAM,UAA4D;AACjE,UAAM,cAAoC,CAAC;AAE3C,QAAI,aAAa,KAAK,iBAAiB,cAAc,CAAC;AAEtD,QAAI,OAAO,eAAe,UAAU;AACnC,UAAI;AACH,yBAAa,+BAAuB,UAAU;AAAA,MAC/C,SAAS,OAAO;AACf,cAAM,IAAI,uCAAmB,KAAK,QAAQ,GAAG,cAAc;AAAA,MAC5D;AAAA,IACD;AAEA,QAAI,CAAC,MAAM,QAAQ,UAAU,GAAG;AAC/B,mBAAa,CAAC,UAAU;AAAA,IACzB;AAEA,eAAW,QAAQ,YAA6B;AAC/C,kBAAY,KAAK,EAAE,MAAM,KAAK,CAAC;AAAA,IAChC;AAEA,UAAM,oBAAoB,KAAK,iBAAiB,qBAAqB,CAAC;AAEtE,QAAI,oBAAoB,GAAG;AAC1B,gBAAM,2BAAM,iBAAiB;AAAA,IAC9B;AAEA,UAAM,wBAAwB,YAAY;AACzC,WAAK,KAAK,CAAC,WAAW,CAAC;AAAA,IACxB;AAEA,WAAO;AAAA,MACN;AAAA,IACD;AAAA,EACD;AACD;","names":[]}