{"version":3,"sources":["../../../../../../nodes/Airtable/v2/actions/base/getSchema.operation.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tINodeProperties,\n\tNodeApiError,\n} from 'n8n-workflow';\n\nimport { updateDisplayOptions, wrapData } from '../../../../../utils/utilities';\nimport { processAirtableError } from '../../helpers/utils';\nimport { apiRequest } from '../../transport';\nimport { baseRLC } from '../common.descriptions';\nimport type { TablesResponse } from '../types';\n\nconst properties: INodeProperties[] = [\n\t{\n\t\t...baseRLC,\n\t\tdescription: 'The Airtable Base to retrieve the schema from',\n\t},\n];\n\nconst displayOptions = {\n\tshow: {\n\t\tresource: ['base'],\n\t\toperation: ['getSchema'],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n\nexport async function execute(\n\tthis: IExecuteFunctions,\n\titems: INodeExecutionData[],\n): Promise<INodeExecutionData[]> {\n\tlet returnData: INodeExecutionData[] = [];\n\n\tfor (let i = 0; i < items.length; i++) {\n\t\ttry {\n\t\t\tconst baseId = this.getNodeParameter('base', i, undefined, {\n\t\t\t\textractValue: true,\n\t\t\t}) as string;\n\n\t\t\tconst responseData: TablesResponse = await apiRequest.call(\n\t\t\t\tthis,\n\t\t\t\t'GET',\n\t\t\t\t`meta/bases/${baseId}/tables`,\n\t\t\t);\n\n\t\t\tconst executionData = this.helpers.constructExecutionMetaData(wrapData(responseData.tables), {\n\t\t\t\titemData: { item: i },\n\t\t\t});\n\n\t\t\treturnData = returnData.concat(executionData);\n\t\t} catch (error) {\n\t\t\terror = processAirtableError(error as NodeApiError, undefined, i);\n\t\t\tif (this.continueOnFail()) {\n\t\t\t\treturnData.push({ json: { error: error.message } });\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\treturn returnData;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,uBAA+C;AAC/C,mBAAqC;AACrC,uBAA2B;AAC3B,oBAAwB;AAGxB,MAAM,aAAgC;AAAA,EACrC;AAAA,IACC,GAAG;AAAA,IACH,aAAa;AAAA,EACd;AACD;AAEA,MAAM,iBAAiB;AAAA,EACtB,MAAM;AAAA,IACL,UAAU,CAAC,MAAM;AAAA,IACjB,WAAW,CAAC,WAAW;AAAA,EACxB;AACD;AAEO,MAAM,kBAAc,uCAAqB,gBAAgB,UAAU;AAE1E,eAAsB,QAErB,OACgC;AAChC,MAAI,aAAmC,CAAC;AAExC,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACtC,QAAI;AACH,YAAM,SAAS,KAAK,iBAAiB,QAAQ,GAAG,QAAW;AAAA,QAC1D,cAAc;AAAA,MACf,CAAC;AAED,YAAM,eAA+B,MAAM,4BAAW;AAAA,QACrD;AAAA,QACA;AAAA,QACA,cAAc,MAAM;AAAA,MACrB;AAEA,YAAM,gBAAgB,KAAK,QAAQ,+BAA2B,2BAAS,aAAa,MAAM,GAAG;AAAA,QAC5F,UAAU,EAAE,MAAM,EAAE;AAAA,MACrB,CAAC;AAED,mBAAa,WAAW,OAAO,aAAa;AAAA,IAC7C,SAAS,OAAO;AACf,kBAAQ,mCAAqB,OAAuB,QAAW,CAAC;AAChE,UAAI,KAAK,eAAe,GAAG;AAC1B,mBAAW,KAAK,EAAE,MAAM,EAAE,OAAO,MAAM,QAAQ,EAAE,CAAC;AAClD;AAAA,MACD;AACA,YAAM;AAAA,IACP;AAAA,EACD;AAEA,SAAO;AACR;","names":[]}