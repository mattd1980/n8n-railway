{"version":3,"sources":["../../../../../nodes/Airtable/v2/actions/router.ts"],"sourcesContent":["import type { IExecuteFunctions, INodeExecutionData } from 'n8n-workflow';\nimport { NodeOperationError } from 'n8n-workflow';\n\nimport * as base from './base/Base.resource';\nimport type { AirtableType } from './node.type';\nimport * as record from './record/Record.resource';\n\nexport async function router(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\tlet returnData: INodeExecutionData[] = [];\n\n\tconst items = this.getInputData();\n\tconst resource = this.getNodeParameter<AirtableType>('resource', 0);\n\tconst operation = this.getNodeParameter('operation', 0);\n\n\tconst airtableNodeData = {\n\t\tresource,\n\t\toperation,\n\t} as AirtableType;\n\n\ttry {\n\t\tswitch (airtableNodeData.resource) {\n\t\t\tcase 'record':\n\t\t\t\tconst baseId = this.getNodeParameter('base', 0, undefined, {\n\t\t\t\t\textractValue: true,\n\t\t\t\t}) as string;\n\n\t\t\t\tconst table = encodeURI(\n\t\t\t\t\tthis.getNodeParameter('table', 0, undefined, {\n\t\t\t\t\t\textractValue: true,\n\t\t\t\t\t}) as string,\n\t\t\t\t);\n\t\t\t\treturnData = await record[airtableNodeData.operation].execute.call(\n\t\t\t\t\tthis,\n\t\t\t\t\titems,\n\t\t\t\t\tbaseId,\n\t\t\t\t\ttable,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'base':\n\t\t\t\treturnData = await base[airtableNodeData.operation].execute.call(this, items);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t`The operation \"${operation}\" is not supported!`,\n\t\t\t\t);\n\t\t}\n\t} catch (error) {\n\t\tif (\n\t\t\terror.description &&\n\t\t\t(error.description as string).includes('cannot accept the provided value')\n\t\t) {\n\t\t\terror.description = `${error.description}. Consider using 'Typecast' option`;\n\t\t}\n\t\tthrow error;\n\t}\n\n\treturn [returnData];\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,0BAAmC;AAEnC,WAAsB;AAEtB,aAAwB;AAExB,eAAsB,SAAiE;AACtF,MAAI,aAAmC,CAAC;AAExC,QAAM,QAAQ,KAAK,aAAa;AAChC,QAAM,WAAW,KAAK,iBAA+B,YAAY,CAAC;AAClE,QAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AAEtD,QAAM,mBAAmB;AAAA,IACxB;AAAA,IACA;AAAA,EACD;AAEA,MAAI;AACH,YAAQ,iBAAiB,UAAU;AAAA,MAClC,KAAK;AACJ,cAAM,SAAS,KAAK,iBAAiB,QAAQ,GAAG,QAAW;AAAA,UAC1D,cAAc;AAAA,QACf,CAAC;AAED,cAAM,QAAQ;AAAA,UACb,KAAK,iBAAiB,SAAS,GAAG,QAAW;AAAA,YAC5C,cAAc;AAAA,UACf,CAAC;AAAA,QACF;AACA,qBAAa,MAAM,OAAO,iBAAiB,SAAS,EAAE,QAAQ;AAAA,UAC7D;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACD;AACA;AAAA,MACD,KAAK;AACJ,qBAAa,MAAM,KAAK,iBAAiB,SAAS,EAAE,QAAQ,KAAK,MAAM,KAAK;AAC5E;AAAA,MACD;AACC,cAAM,IAAI;AAAA,UACT,KAAK,QAAQ;AAAA,UACb,kBAAkB,SAAS;AAAA,QAC5B;AAAA,IACF;AAAA,EACD,SAAS,OAAO;AACf,QACC,MAAM,eACL,MAAM,YAAuB,SAAS,kCAAkC,GACxE;AACD,YAAM,cAAc,GAAG,MAAM,WAAW;AAAA,IACzC;AACA,UAAM;AAAA,EACP;AAEA,SAAO,CAAC,UAAU;AACnB;","names":[]}