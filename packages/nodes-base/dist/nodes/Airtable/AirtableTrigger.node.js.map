{"version":3,"sources":["../../../nodes/Airtable/AirtableTrigger.node.ts"],"sourcesContent":["import moment from 'moment-timezone';\nimport type {\n\tIPollFunctions,\n\tIDataObject,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport type { IRecord } from './v1/GenericFunctions';\nimport { apiRequestAllItems, downloadRecordAttachments } from './v1/GenericFunctions';\n\nexport class AirtableTrigger implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Airtable Trigger',\n\t\tname: 'airtableTrigger',\n\t\ticon: 'file:airtable.svg',\n\t\tgroup: ['trigger'],\n\t\tversion: 1,\n\t\tdescription: 'Starts the workflow when Airtable events occur',\n\t\tsubtitle: '={{$parameter[\"event\"]}}',\n\t\tdefaults: {\n\t\t\tname: 'Airtable Trigger',\n\t\t},\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'airtableApi',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['airtableApi'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'airtableTokenApi',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['airtableTokenApi'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'airtableOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['airtableOAuth2Api'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tpolling: true,\n\t\tinputs: [],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Authentication',\n\t\t\t\tname: 'authentication',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'API Key',\n\t\t\t\t\t\tvalue: 'airtableApi',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Access Token',\n\t\t\t\t\t\tvalue: 'airtableTokenApi',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'OAuth2',\n\t\t\t\t\t\tvalue: 'airtableOAuth2Api',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'airtableApi',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Base',\n\t\t\t\tname: 'baseId',\n\t\t\t\ttype: 'resourceLocator',\n\t\t\t\tdefault: { mode: 'url', value: '' },\n\t\t\t\trequired: true,\n\t\t\t\tdescription: 'The Airtable Base in which to operate on',\n\t\t\t\tmodes: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'By URL',\n\t\t\t\t\t\tname: 'url',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tplaceholder: 'https://airtable.com/app12DiScdfes/tblAAAAAAAAAAAAA/viwHdfasdfeieg5p',\n\t\t\t\t\t\tvalidation: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'regex',\n\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\tregex: 'https://airtable.com/([a-zA-Z0-9]{2,})/.*',\n\t\t\t\t\t\t\t\t\terrorMessage: 'Not a valid Airtable Base URL',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\textractValue: {\n\t\t\t\t\t\t\ttype: 'regex',\n\t\t\t\t\t\t\tregex: 'https://airtable.com/([a-zA-Z0-9]{2,})',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'ID',\n\t\t\t\t\t\tname: 'id',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tvalidation: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'regex',\n\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\tregex: '[a-zA-Z0-9]{2,}',\n\t\t\t\t\t\t\t\t\terrorMessage: 'Not a valid Airtable Base ID',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tplaceholder: 'appD3dfaeidke',\n\t\t\t\t\t\turl: '=https://airtable.com/{{$value}}',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Table',\n\t\t\t\tname: 'tableId',\n\t\t\t\ttype: 'resourceLocator',\n\t\t\t\tdefault: { mode: 'url', value: '' },\n\t\t\t\trequired: true,\n\t\t\t\tmodes: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'By URL',\n\t\t\t\t\t\tname: 'url',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tplaceholder: 'https://airtable.com/app12DiScdfes/tblAAAAAAAAAAAAA/viwHdfasdfeieg5p',\n\t\t\t\t\t\tvalidation: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'regex',\n\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\tregex: 'https://airtable.com/[a-zA-Z0-9]{2,}/([a-zA-Z0-9]{2,})/.*',\n\t\t\t\t\t\t\t\t\terrorMessage: 'Not a valid Airtable Table URL',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\textractValue: {\n\t\t\t\t\t\t\ttype: 'regex',\n\t\t\t\t\t\t\tregex: 'https://airtable.com/[a-zA-Z0-9]{2,}/([a-zA-Z0-9]{2,})',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'ID',\n\t\t\t\t\t\tname: 'id',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tvalidation: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'regex',\n\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\tregex: '[a-zA-Z0-9]{2,}',\n\t\t\t\t\t\t\t\t\terrorMessage: 'Not a valid Airtable Table ID',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tplaceholder: 'tbl3dirwqeidke',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Trigger Field',\n\t\t\t\tname: 'triggerField',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tdescription:\n\t\t\t\t\t'A Created Time or Last Modified Time field that will be used to sort records. If you do not have a Created Time or Last Modified Time field in your schema, please create one, because without this field trigger will not work correctly.',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Download Attachments',\n\t\t\t\tname: 'downloadAttachments',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: \"Whether the attachment fields define in 'Download Fields' will be downloaded\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Download Fields',\n\t\t\t\tname: 'downloadFieldNames',\n\t\t\t\ttype: 'string',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tdownloadAttachments: [true],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\tdescription:\n\t\t\t\t\t\"Name of the fields of type 'attachment' that should be downloaded. Multiple ones can be defined separated by comma. Case sensitive.\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Additional Fields',\n\t\t\t\tname: 'additionalFields',\n\t\t\t\ttype: 'collection',\n\t\t\t\tplaceholder: 'Add Field',\n\t\t\t\tdefault: {},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Fields',\n\t\t\t\t\t\tname: 'fields',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\trequiresDataPath: 'multiple',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-description-miscased-id\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Fields to be included in the response. Multiple ones can be set separated by comma. Example: <code>name, id</code>. By default just the trigger field will be included.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Formula',\n\t\t\t\t\t\tname: 'formula',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Formulas may involve functions, numeric operations, logical operations, and text operations that operate on fields. More info <a href=\"https://support.airtable.com/hc/en-us/articles/203255215-Formula-Field-Reference\">here</a>.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'View ID',\n\t\t\t\t\t\tname: 'viewId',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'The name or ID of a view in the table. If set, only the records in that view will be returned.',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t};\n\n\tasync poll(this: IPollFunctions): Promise<INodeExecutionData[][] | null> {\n\t\tconst downloadAttachments = this.getNodeParameter('downloadAttachments', 0) as boolean;\n\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\tconst additionalFields = this.getNodeParameter('additionalFields') as IDataObject;\n\t\tconst base = this.getNodeParameter('baseId', '', { extractValue: true }) as string;\n\t\tconst table = this.getNodeParameter('tableId', '', { extractValue: true }) as string;\n\t\tconst triggerField = this.getNodeParameter('triggerField') as string;\n\n\t\tconst qs: IDataObject = {};\n\n\t\tconst endpoint = `${base}/${table}`;\n\n\t\tconst now = moment().utc().format();\n\n\t\tconst startDate = (webhookData.lastTimeChecked as string) || now;\n\n\t\tconst endDate = now;\n\n\t\tif (additionalFields.viewId) {\n\t\t\tqs.view = additionalFields.viewId;\n\t\t}\n\n\t\tif (additionalFields.fields) {\n\t\t\tqs['fields[]'] = (additionalFields.fields as string).split(',');\n\t\t}\n\n\t\tqs.filterByFormula = `IS_AFTER({${triggerField}}, DATETIME_PARSE(\"${startDate}\", \"YYYY-MM-DD HH:mm:ss\"))`;\n\n\t\tif (additionalFields.formula) {\n\t\t\tqs.filterByFormula = `AND(${qs.filterByFormula}, ${additionalFields.formula})`;\n\t\t}\n\n\t\tif (this.getMode() === 'manual') {\n\t\t\tdelete qs.filterByFormula;\n\t\t\tqs.maxRecords = 1;\n\t\t}\n\n\t\tconst { records } = await apiRequestAllItems.call(this, 'GET', endpoint, {}, qs);\n\n\t\twebhookData.lastTimeChecked = endDate;\n\n\t\tif (Array.isArray(records) && records.length) {\n\t\t\tif (this.getMode() === 'manual' && records[0].fields[triggerField] === undefined) {\n\t\t\t\tthrow new NodeOperationError(this.getNode(), `The Field \"${triggerField}\" does not exist.`);\n\t\t\t}\n\n\t\t\tif (downloadAttachments) {\n\t\t\t\tconst downloadFieldNames = (this.getNodeParameter('downloadFieldNames', 0) as string).split(\n\t\t\t\t\t',',\n\t\t\t\t);\n\t\t\t\tconst data = await downloadRecordAttachments.call(\n\t\t\t\t\tthis,\n\t\t\t\t\trecords as IRecord[],\n\t\t\t\t\tdownloadFieldNames,\n\t\t\t\t);\n\t\t\t\treturn [data];\n\t\t\t}\n\n\t\t\treturn [this.helpers.returnJsonArray(records)];\n\t\t}\n\n\t\treturn null;\n\t}\n}\n"],"mappings":"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","names":["moment"]}