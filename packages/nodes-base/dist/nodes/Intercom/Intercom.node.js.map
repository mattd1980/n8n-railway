{"version":3,"sources":["../../../nodes/Intercom/Intercom.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n\tJsonObject,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeApiError, NodeOperationError } from 'n8n-workflow';\n\nimport { companyFields, companyOperations } from './CompanyDescription';\nimport type { ICompany } from './CompanyInteface';\nimport { intercomApiRequest, intercomApiRequestAllItems, validateJSON } from './GenericFunctions';\nimport { leadFields, leadOperations } from './LeadDescription';\nimport type { IAvatar, ILead, ILeadCompany } from './LeadInterface';\nimport { userFields, userOperations } from './UserDescription';\nimport type { IUser, IUserCompany } from './UserInterface';\n\nexport class Intercom implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Intercom',\n\t\tname: 'intercom',\n\n\t\ticon: 'file:intercom.svg',\n\t\tgroup: ['output'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume Intercom API',\n\t\tdefaults: {\n\t\t\tname: 'Intercom',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'intercomApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Company',\n\t\t\t\t\t\tvalue: 'company',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Companies allow you to represent commercial organizations using your product',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Lead',\n\t\t\t\t\t\tvalue: 'lead',\n\t\t\t\t\t\tdescription: 'Leads are useful for representing logged-out users of your application',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'User',\n\t\t\t\t\t\tvalue: 'user',\n\t\t\t\t\t\tdescription: 'The Users resource is the primary way of interacting with Intercom',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'user',\n\t\t\t},\n\t\t\t...leadOperations,\n\t\t\t...userOperations,\n\t\t\t...companyOperations,\n\t\t\t...userFields,\n\t\t\t...leadFields,\n\t\t\t...companyFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get all the available companies to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getCompanies(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tlet response;\n\t\t\t\ttry {\n\t\t\t\t\tresponse = await intercomApiRequest.call(this, '/companies', 'GET');\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t\t\t\t}\n\t\t\t\tconst companies = response.companies;\n\t\t\t\tfor (const company of companies) {\n\t\t\t\t\tconst companyName = company.name;\n\t\t\t\t\tconst companyId = company.company_id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: companyName,\n\t\t\t\t\t\tvalue: companyId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst length = items.length;\n\t\tlet qs: IDataObject;\n\t\tlet responseData;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\ttry {\n\t\t\t\tqs = {};\n\t\t\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\t\t\tconst operation = this.getNodeParameter('operation', 0);\n\t\t\t\t//https://developers.intercom.com/intercom-api-reference/reference#leads\n\t\t\t\tif (resource === 'lead') {\n\t\t\t\t\tif (operation === 'create' || operation === 'update') {\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst jsonActive = this.getNodeParameter('jsonParameters', i);\n\t\t\t\t\t\tconst body: ILead = {};\n\t\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t\tbody.email = this.getNodeParameter('email', i) as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.email) {\n\t\t\t\t\t\t\tbody.email = additionalFields.email as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.phone) {\n\t\t\t\t\t\t\tbody.phone = additionalFields.phone as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.name) {\n\t\t\t\t\t\t\tbody.name = additionalFields.name as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.unsubscribedFromEmails) {\n\t\t\t\t\t\t\tbody.unsubscribed_from_emails = additionalFields.unsubscribedFromEmails as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.updateLastRequestAt) {\n\t\t\t\t\t\t\tbody.update_last_request_at = additionalFields.updateLastRequestAt as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.utmSource) {\n\t\t\t\t\t\t\tbody.utm_source = additionalFields.utmSource as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.utmMedium) {\n\t\t\t\t\t\t\tbody.utm_medium = additionalFields.utmMedium as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.utmCampaign) {\n\t\t\t\t\t\t\tbody.utm_campaign = additionalFields.utmCampaign as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.utmTerm) {\n\t\t\t\t\t\t\tbody.utm_term = additionalFields.utmTerm as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.utmContent) {\n\t\t\t\t\t\t\tbody.utm_content = additionalFields.utmContent as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.avatar) {\n\t\t\t\t\t\t\tconst avatar: IAvatar = {\n\t\t\t\t\t\t\t\ttype: 'avatar',\n\t\t\t\t\t\t\t\timage_url: additionalFields.avatar as string,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tbody.avatar = avatar;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.companies) {\n\t\t\t\t\t\t\tconst companies: ILeadCompany[] = [];\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tadditionalFields.companies.forEach((o) => {\n\t\t\t\t\t\t\t\tconst company: ILeadCompany = {};\n\t\t\t\t\t\t\t\tcompany.company_id = o;\n\t\t\t\t\t\t\t\tcompanies.push(company);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbody.companies = companies;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!jsonActive) {\n\t\t\t\t\t\t\tconst customAttributesValues = (\n\t\t\t\t\t\t\t\tthis.getNodeParameter('customAttributesUi', i) as IDataObject\n\t\t\t\t\t\t\t).customAttributesValues as IDataObject[];\n\t\t\t\t\t\t\tif (customAttributesValues) {\n\t\t\t\t\t\t\t\tconst customAttributes = {};\n\t\t\t\t\t\t\t\tfor (let index = 0; index < customAttributesValues.length; index++) {\n\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\tcustomAttributes[customAttributesValues[index].name] =\n\t\t\t\t\t\t\t\t\t\tcustomAttributesValues[index].value;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbody.custom_attributes = customAttributes;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst customAttributesJson = validateJSON(\n\t\t\t\t\t\t\t\tthis.getNodeParameter('customAttributesJson', i) as string,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (customAttributesJson) {\n\t\t\t\t\t\t\t\tbody.custom_attributes = customAttributesJson;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\t\tconst updateBy = this.getNodeParameter('updateBy', 0) as string;\n\t\t\t\t\t\t\tconst value = this.getNodeParameter('value', i) as string;\n\t\t\t\t\t\t\tif (updateBy === 'userId') {\n\t\t\t\t\t\t\t\tbody.user_id = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (updateBy === 'id') {\n\t\t\t\t\t\t\t\tbody.id = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponseData = await intercomApiRequest.call(this, '/contacts', 'POST', body);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst selectBy = this.getNodeParameter('selectBy', 0) as string;\n\t\t\t\t\t\tconst value = this.getNodeParameter('value', i) as string;\n\t\t\t\t\t\tif (selectBy === 'email') {\n\t\t\t\t\t\t\tqs.email = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (selectBy === 'userId') {\n\t\t\t\t\t\t\tqs.user_id = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (selectBy === 'phone') {\n\t\t\t\t\t\t\tqs.phone = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (selectBy === 'id') {\n\t\t\t\t\t\t\t\tresponseData = await intercomApiRequest.call(this, `/contacts/${value}`, 'GET');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresponseData = await intercomApiRequest.call(this, '/contacts', 'GET', {}, qs);\n\t\t\t\t\t\t\t\tresponseData = responseData.contacts;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\t\t\t\t\t\tObject.assign(qs, filters);\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\t\tresponseData = await intercomApiRequestAllItems.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'contacts',\n\t\t\t\t\t\t\t\t\t'/contacts',\n\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tqs.per_page = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\t\tresponseData = await intercomApiRequest.call(this, '/contacts', 'GET', {}, qs);\n\t\t\t\t\t\t\t\tresponseData = responseData.contacts;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst deleteBy = this.getNodeParameter('deleteBy', 0) as string;\n\t\t\t\t\t\tconst value = this.getNodeParameter('value', i) as string;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (deleteBy === 'id') {\n\t\t\t\t\t\t\t\tresponseData = await intercomApiRequest.call(this, `/contacts/${value}`, 'DELETE');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tqs.user_id = value;\n\t\t\t\t\t\t\t\tresponseData = await intercomApiRequest.call(this, '/contacts', 'DELETE', {}, qs);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//https://developers.intercom.com/intercom-api-reference/reference#users\n\t\t\t\tif (resource === 'user') {\n\t\t\t\t\tif (operation === 'create' || operation === 'update') {\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst jsonActive = this.getNodeParameter('jsonParameters', i);\n\t\t\t\t\t\tconst body: IUser = {};\n\n\t\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t\tconst identifierType = this.getNodeParameter('identifierType', i) as string;\n\t\t\t\t\t\t\tif (identifierType === 'email') {\n\t\t\t\t\t\t\t\tbody.email = this.getNodeParameter('idValue', i) as string;\n\t\t\t\t\t\t\t} else if (identifierType === 'userId') {\n\t\t\t\t\t\t\t\tbody.user_id = this.getNodeParameter('idValue', i) as string;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.email) {\n\t\t\t\t\t\t\tbody.email = additionalFields.email as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.userId) {\n\t\t\t\t\t\t\tbody.user_id = additionalFields.userId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.phone) {\n\t\t\t\t\t\t\tbody.phone = additionalFields.phone as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.name) {\n\t\t\t\t\t\t\tbody.name = additionalFields.name as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.unsubscribedFromEmails) {\n\t\t\t\t\t\t\tbody.unsubscribed_from_emails = additionalFields.unsubscribedFromEmails as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.updateLastRequestAt) {\n\t\t\t\t\t\t\tbody.update_last_request_at = additionalFields.updateLastRequestAt as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.sessionCount) {\n\t\t\t\t\t\t\tbody.session_count = additionalFields.sessionCount as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.avatar) {\n\t\t\t\t\t\t\tconst avatar: IAvatar = {\n\t\t\t\t\t\t\t\ttype: 'avatar',\n\t\t\t\t\t\t\t\timage_url: additionalFields.avatar as string,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tbody.avatar = avatar;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.utmSource) {\n\t\t\t\t\t\t\tbody.utm_source = additionalFields.utmSource as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.utmMedium) {\n\t\t\t\t\t\t\tbody.utm_medium = additionalFields.utmMedium as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.utmCampaign) {\n\t\t\t\t\t\t\tbody.utm_campaign = additionalFields.utmCampaign as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.utmTerm) {\n\t\t\t\t\t\t\tbody.utm_term = additionalFields.utmTerm as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.utmContent) {\n\t\t\t\t\t\t\tbody.utm_content = additionalFields.utmContent as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.companies) {\n\t\t\t\t\t\t\tconst companies: IUserCompany[] = [];\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tadditionalFields.companies.forEach((o) => {\n\t\t\t\t\t\t\t\tconst company: IUserCompany = {};\n\t\t\t\t\t\t\t\tcompany.company_id = o;\n\t\t\t\t\t\t\t\tcompanies.push(company);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbody.companies = companies;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.sessionCount) {\n\t\t\t\t\t\t\tbody.session_count = additionalFields.sessionCount as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!jsonActive) {\n\t\t\t\t\t\t\tconst customAttributesValues = (\n\t\t\t\t\t\t\t\tthis.getNodeParameter('customAttributesUi', i) as IDataObject\n\t\t\t\t\t\t\t).customAttributesValues as IDataObject[];\n\t\t\t\t\t\t\tif (customAttributesValues) {\n\t\t\t\t\t\t\t\tconst customAttributes = {};\n\t\t\t\t\t\t\t\tfor (let index = 0; index < customAttributesValues.length; index++) {\n\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\tcustomAttributes[customAttributesValues[index].name] =\n\t\t\t\t\t\t\t\t\t\tcustomAttributesValues[index].value;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbody.custom_attributes = customAttributes;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst customAttributesJson = validateJSON(\n\t\t\t\t\t\t\t\tthis.getNodeParameter('customAttributesJson', i) as string,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (customAttributesJson) {\n\t\t\t\t\t\t\t\tbody.custom_attributes = customAttributesJson;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\t\tconst updateBy = this.getNodeParameter('updateBy', 0) as string;\n\t\t\t\t\t\t\tconst value = this.getNodeParameter('value', i) as string;\n\t\t\t\t\t\t\tif (updateBy === 'userId') {\n\t\t\t\t\t\t\t\tbody.user_id = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (updateBy === 'id') {\n\t\t\t\t\t\t\t\tbody.id = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (updateBy === 'email') {\n\t\t\t\t\t\t\t\tbody.email = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponseData = await intercomApiRequest.call(this, '/users', 'POST', body, qs);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst selectBy = this.getNodeParameter('selectBy', 0) as string;\n\t\t\t\t\t\tconst value = this.getNodeParameter('value', i) as string;\n\t\t\t\t\t\tif (selectBy === 'userId') {\n\t\t\t\t\t\t\tqs.user_id = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (selectBy === 'id') {\n\t\t\t\t\t\t\t\tresponseData = await intercomApiRequest.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t`/users/${value}`,\n\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresponseData = await intercomApiRequest.call(this, '/users', 'GET', {}, qs);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\t\t\t\t\t\tObject.assign(qs, filters);\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\t\tresponseData = await intercomApiRequestAllItems.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'users',\n\t\t\t\t\t\t\t\t\t'/users',\n\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tqs.per_page = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\t\tresponseData = await intercomApiRequest.call(this, '/users', 'GET', {}, qs);\n\t\t\t\t\t\t\t\tresponseData = responseData.users;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst id = this.getNodeParameter('id', i) as string;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponseData = await intercomApiRequest.call(this, `/users/${id}`, 'DELETE');\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t`Intercom Error: ${JSON.stringify(error)}`,\n\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//https://developers.intercom.com/intercom-api-reference/reference#companies\n\t\t\t\tif (resource === 'company') {\n\t\t\t\t\tif (operation === 'create' || operation === 'update') {\n\t\t\t\t\t\tconst id = this.getNodeParameter('companyId', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst jsonActive = this.getNodeParameter('jsonParameters', i);\n\t\t\t\t\t\tconst body: ICompany = {\n\t\t\t\t\t\t\tcompany_id: id,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (additionalFields.monthlySpend) {\n\t\t\t\t\t\t\tbody.monthly_spend = additionalFields.monthlySpend as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.name) {\n\t\t\t\t\t\t\tbody.name = additionalFields.name as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.plan) {\n\t\t\t\t\t\t\tbody.plan = additionalFields.plan as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.size) {\n\t\t\t\t\t\t\tbody.size = additionalFields.size as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.website) {\n\t\t\t\t\t\t\tbody.website = additionalFields.website as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.industry) {\n\t\t\t\t\t\t\tbody.industry = additionalFields.industry as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!jsonActive) {\n\t\t\t\t\t\t\tconst customAttributesValues = (\n\t\t\t\t\t\t\t\tthis.getNodeParameter('customAttributesUi', i) as IDataObject\n\t\t\t\t\t\t\t).customAttributesValues as IDataObject[];\n\t\t\t\t\t\t\tif (customAttributesValues) {\n\t\t\t\t\t\t\t\tconst customAttributes = {};\n\t\t\t\t\t\t\t\tfor (let index = 0; index < customAttributesValues.length; index++) {\n\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\tcustomAttributes[customAttributesValues[index].name] =\n\t\t\t\t\t\t\t\t\t\tcustomAttributesValues[index].value;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbody.custom_attributes = customAttributes;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst customAttributesJson = validateJSON(\n\t\t\t\t\t\t\t\tthis.getNodeParameter('customAttributesJson', i) as string,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (customAttributesJson) {\n\t\t\t\t\t\t\t\tbody.custom_attributes = customAttributesJson;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponseData = await intercomApiRequest.call(this, '/companies', 'POST', body, qs);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t`Intercom Error: ${JSON.stringify(error)}`,\n\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst selectBy = this.getNodeParameter('selectBy', 0) as string;\n\t\t\t\t\t\tconst value = this.getNodeParameter('value', i) as string;\n\t\t\t\t\t\tif (selectBy === 'companyId') {\n\t\t\t\t\t\t\tqs.company_id = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (selectBy === 'name') {\n\t\t\t\t\t\t\tqs.name = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (selectBy === 'id') {\n\t\t\t\t\t\t\t\tresponseData = await intercomApiRequest.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t`/companies/${value}`,\n\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresponseData = await intercomApiRequest.call(this, '/companies', 'GET', {}, qs);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t`Intercom Error: ${JSON.stringify(error)}`,\n\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\t\t\t\t\t\tObject.assign(qs, filters);\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\t\tresponseData = await intercomApiRequestAllItems.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'companies',\n\t\t\t\t\t\t\t\t\t'/companies',\n\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tqs.per_page = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\t\tresponseData = await intercomApiRequest.call(this, '/companies', 'GET', {}, qs);\n\t\t\t\t\t\t\t\tresponseData = responseData.companies;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t`Intercom Error: ${JSON.stringify(error)}`,\n\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'users') {\n\t\t\t\t\t\tconst listBy = this.getNodeParameter('listBy', 0) as string;\n\t\t\t\t\t\tconst value = this.getNodeParameter('value', i) as string;\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\n\t\t\t\t\t\tif (listBy === 'companyId') {\n\t\t\t\t\t\t\tqs.company_id = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (listBy === 'id') {\n\t\t\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\t\t\tresponseData = await intercomApiRequestAllItems.call(\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\t'users',\n\t\t\t\t\t\t\t\t\t\t`/companies/${value}/users`,\n\t\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tqs.per_page = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\t\t\tresponseData = await intercomApiRequest.call(\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\t`/companies/${value}/users`,\n\t\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tresponseData = responseData.users;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tqs.type = 'users';\n\n\t\t\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\t\t\tresponseData = await intercomApiRequestAllItems.call(\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\t'users',\n\t\t\t\t\t\t\t\t\t\t'/companies',\n\t\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tqs.per_page = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\t\t\tresponseData = await intercomApiRequest.call(this, '/companies', 'GET', {}, qs);\n\t\t\t\t\t\t\t\t\tresponseData = responseData.users;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t`Intercom Error: ${JSON.stringify(error)}`,\n\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject),\n\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t);\n\n\t\t\t\treturnData.push(...executionData);\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":[]}