{"version":3,"sources":["../../../nodes/Clockify/Clockify.node.ts"],"sourcesContent":["import moment from 'moment-timezone';\nimport { NodeConnectionTypes } from 'n8n-workflow';\nimport type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\n\nimport { clientFields, clientOperations } from './ClientDescription';\nimport { clockifyApiRequest, clockifyApiRequestAllItems } from './GenericFunctions';\nimport { projectFields, projectOperations } from './ProjectDescription';\nimport type { IProjectDto } from './ProjectInterfaces';\nimport { tagFields, tagOperations } from './TagDescription';\nimport { taskFields, taskOperations } from './TaskDescription';\nimport { timeEntryFields, timeEntryOperations } from './TimeEntryDescription';\nimport { userFields, userOperations } from './UserDescription';\nimport type { IUserDto } from './UserDtos';\nimport type { IClientDto, IWorkspaceDto } from './WorkpaceInterfaces';\nimport { workspaceFields, workspaceOperations } from './WorkspaceDescription';\n\nexport class Clockify implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Clockify',\n\t\tname: 'clockify',\n\t\ticon: { light: 'file:clockify.svg', dark: 'file:clockify.dark.svg' },\n\t\tgroup: ['transform'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume Clockify REST API',\n\t\tdefaults: {\n\t\t\tname: 'Clockify',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'clockifyApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Client',\n\t\t\t\t\t\tvalue: 'client',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Project',\n\t\t\t\t\t\tvalue: 'project',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Tag',\n\t\t\t\t\t\tvalue: 'tag',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Task',\n\t\t\t\t\t\tvalue: 'task',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Time Entry',\n\t\t\t\t\t\tvalue: 'timeEntry',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'User',\n\t\t\t\t\t\tvalue: 'user',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Workspace',\n\t\t\t\t\t\tvalue: 'workspace',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'project',\n\t\t\t},\n\t\t\t...clientOperations,\n\t\t\t...projectOperations,\n\t\t\t...tagOperations,\n\t\t\t...taskOperations,\n\t\t\t...timeEntryOperations,\n\t\t\t...userOperations,\n\t\t\t...workspaceOperations,\n\t\t\t...workspaceFields,\n\t\t\t{\n\t\t\t\tdisplayName: 'Workspace Name or ID',\n\t\t\t\tname: 'workspaceId',\n\t\t\t\ttype: 'options',\n\t\t\t\tdescription:\n\t\t\t\t\t'Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'listWorkspaces',\n\t\t\t\t},\n\t\t\t\trequired: true,\n\t\t\t\tdefault: [],\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\thide: {\n\t\t\t\t\t\tresource: ['workspace'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t...clientFields,\n\t\t\t...projectFields,\n\t\t\t...tagFields,\n\t\t\t...taskFields,\n\t\t\t...userFields,\n\t\t\t...timeEntryFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\tasync listWorkspaces(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst rtv: INodePropertyOptions[] = [];\n\t\t\t\tconst workspaces: IWorkspaceDto[] = await clockifyApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t'workspaces',\n\t\t\t\t);\n\t\t\t\tif (undefined !== workspaces) {\n\t\t\t\t\tworkspaces.forEach((value) => {\n\t\t\t\t\t\trtv.push({\n\t\t\t\t\t\t\tname: value.name,\n\t\t\t\t\t\t\tvalue: value.id,\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn rtv;\n\t\t\t},\n\t\t\tasync loadUsersForWorkspace(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst rtv: INodePropertyOptions[] = [];\n\t\t\t\tconst workspaceId = this.getCurrentNodeParameter('workspaceId');\n\t\t\t\tif (undefined !== workspaceId) {\n\t\t\t\t\tconst resource = `workspaces/${workspaceId}/users`;\n\t\t\t\t\tconst users: IUserDto[] = await clockifyApiRequest.call(this, 'GET', resource);\n\t\t\t\t\tif (undefined !== users) {\n\t\t\t\t\t\tusers.forEach((value) => {\n\t\t\t\t\t\t\trtv.push({\n\t\t\t\t\t\t\t\tname: value.name,\n\t\t\t\t\t\t\t\tvalue: value.id,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn rtv;\n\t\t\t},\n\t\t\tasync loadClientsForWorkspace(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst rtv: INodePropertyOptions[] = [];\n\t\t\t\tconst workspaceId = this.getCurrentNodeParameter('workspaceId');\n\t\t\t\tif (undefined !== workspaceId) {\n\t\t\t\t\tconst resource = `workspaces/${workspaceId}/clients`;\n\t\t\t\t\tconst clients: IClientDto[] = await clockifyApiRequest.call(this, 'GET', resource);\n\t\t\t\t\tif (undefined !== clients) {\n\t\t\t\t\t\tclients.forEach((value) => {\n\t\t\t\t\t\t\trtv.push({\n\t\t\t\t\t\t\t\tname: value.name,\n\t\t\t\t\t\t\t\tvalue: value.id,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn rtv;\n\t\t\t},\n\t\t\tasync loadProjectsForWorkspace(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst rtv: INodePropertyOptions[] = [];\n\t\t\t\tconst workspaceId = this.getCurrentNodeParameter('workspaceId');\n\t\t\t\tif (undefined !== workspaceId) {\n\t\t\t\t\tconst resource = `workspaces/${workspaceId}/projects`;\n\t\t\t\t\tconst users: IProjectDto[] = await clockifyApiRequest.call(this, 'GET', resource);\n\t\t\t\t\tif (undefined !== users) {\n\t\t\t\t\t\tusers.forEach((value) => {\n\t\t\t\t\t\t\trtv.push({\n\t\t\t\t\t\t\t\tname: value.name,\n\t\t\t\t\t\t\t\tvalue: value.id,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn rtv;\n\t\t\t},\n\t\t\tasync loadTagsForWorkspace(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst rtv: INodePropertyOptions[] = [];\n\t\t\t\tconst workspaceId = this.getCurrentNodeParameter('workspaceId');\n\t\t\t\tif (undefined !== workspaceId) {\n\t\t\t\t\tconst resource = `workspaces/${workspaceId}/tags`;\n\t\t\t\t\tconst users: IProjectDto[] = await clockifyApiRequest.call(this, 'GET', resource);\n\t\t\t\t\tif (undefined !== users) {\n\t\t\t\t\t\tusers.forEach((value) => {\n\t\t\t\t\t\t\trtv.push({\n\t\t\t\t\t\t\t\tname: value.name,\n\t\t\t\t\t\t\t\tvalue: value.id,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn rtv;\n\t\t\t},\n\t\t\tasync loadCustomFieldsForWorkspace(\n\t\t\t\tthis: ILoadOptionsFunctions,\n\t\t\t): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst rtv: INodePropertyOptions[] = [];\n\t\t\t\tconst workspaceId = this.getCurrentNodeParameter('workspaceId');\n\t\t\t\tif (undefined !== workspaceId) {\n\t\t\t\t\tconst resource = `workspaces/${workspaceId}/custom-fields`;\n\t\t\t\t\tconst customFields = await clockifyApiRequest.call(this, 'GET', resource);\n\t\t\t\t\tfor (const customField of customFields) {\n\t\t\t\t\t\trtv.push({\n\t\t\t\t\t\t\tname: customField.name,\n\t\t\t\t\t\t\tvalue: customField.id,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn rtv;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\n\t\tconst returnData: INodeExecutionData[] = [];\n\n\t\tconst length = items.length;\n\n\t\tconst qs: IDataObject = {};\n\n\t\tlet responseData;\n\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'client') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst workspaceId = this.getNodeParameter('workspaceId', i) as string;\n\n\t\t\t\t\t\tconst name = this.getNodeParameter('name', i) as string;\n\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tresponseData = await clockifyApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/workspaces/${workspaceId}/clients`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst workspaceId = this.getNodeParameter('workspaceId', i) as string;\n\n\t\t\t\t\t\tconst clientId = this.getNodeParameter('clientId', i) as string;\n\n\t\t\t\t\t\tresponseData = await clockifyApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/workspaces/${workspaceId}/clients/${clientId}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst workspaceId = this.getNodeParameter('workspaceId', i) as string;\n\n\t\t\t\t\t\tconst clientId = this.getNodeParameter('clientId', i) as string;\n\t\t\t\t\t\tconst name = this.getNodeParameter('name', i) as string;\n\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tObject.assign(body, updateFields);\n\n\t\t\t\t\t\tresponseData = await clockifyApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t\t`/workspaces/${workspaceId}/clients/${clientId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst workspaceId = this.getNodeParameter('workspaceId', i) as string;\n\n\t\t\t\t\t\tconst clientId = this.getNodeParameter('clientId', i) as string;\n\n\t\t\t\t\t\tresponseData = await clockifyApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/workspaces/${workspaceId}/clients/${clientId}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\n\t\t\t\t\t\tconst workspaceId = this.getNodeParameter('workspaceId', i) as string;\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tObject.assign(qs, additionalFields);\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await clockifyApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/workspaces/${workspaceId}/clients`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\n\t\t\t\t\t\t\tresponseData = await clockifyApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/workspaces/${workspaceId}/clients`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tresponseData = responseData.splice(0, qs.limit);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (resource === 'project') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst workspaceId = this.getNodeParameter('workspaceId', i) as string;\n\n\t\t\t\t\t\tconst name = this.getNodeParameter('name', i) as string;\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tObject.assign(body, additionalFields);\n\n\t\t\t\t\t\tif (body.estimateUi) {\n\t\t\t\t\t\t\tbody.estimate = (body.estimateUi as IDataObject).estimateValues;\n\n\t\t\t\t\t\t\tdelete body.estimateUi;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await clockifyApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/workspaces/${workspaceId}/projects`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst workspaceId = this.getNodeParameter('workspaceId', i) as string;\n\n\t\t\t\t\t\tconst projectId = this.getNodeParameter('projectId', i) as string;\n\n\t\t\t\t\t\tresponseData = await clockifyApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/workspaces/${workspaceId}/projects/${projectId}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst workspaceId = this.getNodeParameter('workspaceId', i) as string;\n\n\t\t\t\t\t\tconst projectId = this.getNodeParameter('projectId', i) as string;\n\n\t\t\t\t\t\tresponseData = await clockifyApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/workspaces/${workspaceId}/projects/${projectId}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\n\t\t\t\t\t\tconst workspaceId = this.getNodeParameter('workspaceId', i) as string;\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tObject.assign(qs, additionalFields);\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await clockifyApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/workspaces/${workspaceId}/projects`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\n\t\t\t\t\t\t\tresponseData = await clockifyApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/workspaces/${workspaceId}/projects`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tresponseData = responseData.splice(0, qs.limit);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst workspaceId = this.getNodeParameter('workspaceId', i) as string;\n\n\t\t\t\t\t\tconst projectId = this.getNodeParameter('projectId', i) as string;\n\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\n\t\t\t\t\t\tconst body: IDataObject = {};\n\n\t\t\t\t\t\tObject.assign(body, updateFields);\n\n\t\t\t\t\t\tif (body.estimateUi) {\n\t\t\t\t\t\t\tbody.estimate = (body.estimateUi as IDataObject).estimateValues;\n\n\t\t\t\t\t\t\tdelete body.estimateUi;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await clockifyApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t\t`/workspaces/${workspaceId}/projects/${projectId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (resource === 'tag') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst workspaceId = this.getNodeParameter('workspaceId', i) as string;\n\n\t\t\t\t\t\tconst name = this.getNodeParameter('name', i) as string;\n\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tresponseData = await clockifyApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/workspaces/${workspaceId}/tags`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst workspaceId = this.getNodeParameter('workspaceId', i) as string;\n\n\t\t\t\t\t\tconst tagId = this.getNodeParameter('tagId', i) as string;\n\n\t\t\t\t\t\tresponseData = await clockifyApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/workspaces/${workspaceId}/tags/${tagId}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\n\t\t\t\t\t\tconst workspaceId = this.getNodeParameter('workspaceId', i) as string;\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tObject.assign(qs, additionalFields);\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await clockifyApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/workspaces/${workspaceId}/tags`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\n\t\t\t\t\t\t\tresponseData = await clockifyApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/workspaces/${workspaceId}/tags`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tresponseData = responseData.splice(0, qs.limit);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst workspaceId = this.getNodeParameter('workspaceId', i) as string;\n\n\t\t\t\t\t\tconst tagId = this.getNodeParameter('tagId', i) as string;\n\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\n\t\t\t\t\t\tconst body: IDataObject = {};\n\n\t\t\t\t\t\tObject.assign(body, updateFields);\n\n\t\t\t\t\t\tresponseData = await clockifyApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t\t`/workspaces/${workspaceId}/tags/${tagId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (resource === 'task') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst workspaceId = this.getNodeParameter('workspaceId', i) as string;\n\n\t\t\t\t\t\tconst projectId = this.getNodeParameter('projectId', i) as string;\n\n\t\t\t\t\t\tconst name = this.getNodeParameter('name', i) as string;\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tObject.assign(body, additionalFields);\n\n\t\t\t\t\t\tif (body.estimate) {\n\t\t\t\t\t\t\tconst [hour, minute] = (body.estimate as string).split(':');\n\t\t\t\t\t\t\tbody.estimate = `PT${hour}H${minute}M`;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await clockifyApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/workspaces/${workspaceId}/projects/${projectId}/tasks`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst workspaceId = this.getNodeParameter('workspaceId', i) as string;\n\n\t\t\t\t\t\tconst projectId = this.getNodeParameter('projectId', i) as string;\n\n\t\t\t\t\t\tconst taskId = this.getNodeParameter('taskId', i) as string;\n\n\t\t\t\t\t\tresponseData = await clockifyApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/workspaces/${workspaceId}/projects/${projectId}/tasks/${taskId}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst workspaceId = this.getNodeParameter('workspaceId', i) as string;\n\n\t\t\t\t\t\tconst projectId = this.getNodeParameter('projectId', i) as string;\n\n\t\t\t\t\t\tconst taskId = this.getNodeParameter('taskId', i) as string;\n\n\t\t\t\t\t\tresponseData = await clockifyApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/workspaces/${workspaceId}/projects/${projectId}/tasks/${taskId}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\n\t\t\t\t\t\tconst workspaceId = this.getNodeParameter('workspaceId', i) as string;\n\n\t\t\t\t\t\tconst projectId = this.getNodeParameter('projectId', i) as string;\n\n\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\n\t\t\t\t\t\tObject.assign(qs, filters);\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await clockifyApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/workspaces/${workspaceId}/projects/${projectId}/tasks`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs['page-size'] = this.getNodeParameter('limit', i);\n\n\t\t\t\t\t\t\tresponseData = await clockifyApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/workspaces/${workspaceId}/projects/${projectId}/tasks`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst workspaceId = this.getNodeParameter('workspaceId', i) as string;\n\n\t\t\t\t\t\tconst projectId = this.getNodeParameter('projectId', i) as string;\n\n\t\t\t\t\t\tconst taskId = this.getNodeParameter('taskId', i) as string;\n\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\n\t\t\t\t\t\tconst body: IDataObject = {};\n\n\t\t\t\t\t\tObject.assign(body, updateFields);\n\n\t\t\t\t\t\tif (body.estimate) {\n\t\t\t\t\t\t\tconst [hour, minute] = (body.estimate as string).split(':');\n\t\t\t\t\t\t\tbody.estimate = `PT${hour}H${minute}M`;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await clockifyApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t\t`/workspaces/${workspaceId}/projects/${projectId}/tasks/${taskId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (resource === 'timeEntry') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst timezone = this.getTimezone();\n\n\t\t\t\t\t\tconst workspaceId = this.getNodeParameter('workspaceId', i) as string;\n\n\t\t\t\t\t\tconst start = this.getNodeParameter('start', i) as string;\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tstart: moment.tz(start, timezone).utc().format(),\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tObject.assign(body, additionalFields);\n\n\t\t\t\t\t\tif (body.end) {\n\t\t\t\t\t\t\tbody.end = moment.tz(body.end, timezone).utc().format();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (body.customFieldsUi) {\n\t\t\t\t\t\t\tconst customFields = (body.customFieldsUi as IDataObject)\n\t\t\t\t\t\t\t\t.customFieldsValues as IDataObject[];\n\n\t\t\t\t\t\t\tbody.customFields = customFields;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await clockifyApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/workspaces/${workspaceId}/time-entries`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst workspaceId = this.getNodeParameter('workspaceId', i) as string;\n\n\t\t\t\t\t\tconst timeEntryId = this.getNodeParameter('timeEntryId', i) as string;\n\n\t\t\t\t\t\tresponseData = await clockifyApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/workspaces/${workspaceId}/time-entries/${timeEntryId}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst workspaceId = this.getNodeParameter('workspaceId', i) as string;\n\n\t\t\t\t\t\tconst timeEntryId = this.getNodeParameter('timeEntryId', i) as string;\n\n\t\t\t\t\t\tresponseData = await clockifyApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/workspaces/${workspaceId}/time-entries/${timeEntryId}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst timezone = this.getTimezone();\n\n\t\t\t\t\t\tconst workspaceId = this.getNodeParameter('workspaceId', i) as string;\n\n\t\t\t\t\t\tconst timeEntryId = this.getNodeParameter('timeEntryId', i) as string;\n\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\n\t\t\t\t\t\tconst body: IDataObject = {};\n\n\t\t\t\t\t\tObject.assign(body, updateFields);\n\n\t\t\t\t\t\tif (body.end) {\n\t\t\t\t\t\t\tbody.end = moment.tz(body.end, timezone).utc().format();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (body.start) {\n\t\t\t\t\t\t\tbody.start = moment.tz(body.start, timezone).utc().format();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// even if you do not want to update the start time, it always has to be set\n\t\t\t\t\t\t\t// to make it more simple to the user, if they did not set a start time look for the current start time\n\t\t\t\t\t\t\t// and set it\n\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\ttimeInterval: { start },\n\t\t\t\t\t\t\t} = await clockifyApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/workspaces/${workspaceId}/time-entries/${timeEntryId}`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbody.start = start;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await clockifyApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t\t`/workspaces/${workspaceId}/time-entries/${timeEntryId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (resource === 'user') {\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\n\t\t\t\t\t\tconst workspaceId = this.getNodeParameter('workspaceId', i) as string;\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tObject.assign(qs, additionalFields);\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await clockifyApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/workspaces/${workspaceId}/users`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\n\t\t\t\t\t\t\tresponseData = await clockifyApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/workspaces/${workspaceId}/users`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tresponseData = responseData.splice(0, qs.limit);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (resource === 'workspace') {\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tresponseData = await clockifyApiRequest.call(this, 'GET', '/workspaces', {}, qs);\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = responseData.splice(0, qs.limit);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t);\n\t\t\t\treturnData.push(...executionData);\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\treturnData.push({ error: error.message, json: {} });\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":["moment"]}