{"version":3,"sources":["../../../nodes/HttpRequest/GenericFunctions.ts"],"sourcesContent":["import FormData from 'form-data';\nimport get from 'lodash/get';\nimport isPlainObject from 'lodash/isPlainObject';\nimport set from 'lodash/set';\nimport {\n\tdeepCopy,\n\ttype ICredentialDataDecryptedObject,\n\ttype IDataObject,\n\ttype INodeExecutionData,\n\ttype INodeProperties,\n\ttype IOAuth2Options,\n\ttype IRequestOptions,\n} from 'n8n-workflow';\nimport type { SecureContextOptions } from 'tls';\n\nimport type { HttpSslAuthCredentials } from './interfaces';\nimport { formatPrivateKey } from '../../utils/utilities';\n\nexport type BodyParameter = {\n\tname: string;\n\tvalue: string;\n\tparameterType?: 'formBinaryData' | 'formData';\n};\n\nexport type IAuthDataSanitizeKeys = {\n\t[key: string]: string[];\n};\n\nexport const replaceNullValues = (item: INodeExecutionData) => {\n\tif (item.json === null) {\n\t\titem.json = {};\n\t}\n\treturn item;\n};\n\nexport const REDACTED = '**hidden**';\n\nfunction isObject(obj: unknown): obj is IDataObject {\n\treturn isPlainObject(obj);\n}\n\nfunction redact<T = unknown>(obj: T, secrets: string[]): T {\n\tif (typeof obj === 'string') {\n\t\treturn secrets.reduce((safe, secret) => safe.replace(secret, REDACTED), obj) as T;\n\t}\n\n\tif (Array.isArray(obj)) {\n\t\treturn obj.map((item) => redact(item, secrets)) as T;\n\t} else if (isObject(obj)) {\n\t\tfor (const [key, value] of Object.entries(obj)) {\n\t\t\t(obj as IDataObject)[key] = redact(value, secrets);\n\t\t}\n\t}\n\n\treturn obj;\n}\n\nexport function sanitizeUiMessage(\n\trequest: IRequestOptions,\n\tauthDataKeys: IAuthDataSanitizeKeys,\n\tsecrets?: string[],\n) {\n\tconst { body, ...rest } = request as IDataObject;\n\n\tlet sendRequest: IDataObject = { body };\n\tfor (const [key, value] of Object.entries(rest)) {\n\t\tsendRequest[key] = deepCopy(value);\n\t}\n\n\t// Protect browser from sending large binary data\n\tif (Buffer.isBuffer(sendRequest.body) && sendRequest.body.length > 250000) {\n\t\tsendRequest = {\n\t\t\t...request,\n\t\t\tbody: `Binary data got replaced with this text. Original was a Buffer with a size of ${\n\t\t\t\t(request.body as string).length\n\t\t\t} bytes.`,\n\t\t};\n\t}\n\n\t// Remove credential information\n\tfor (const requestProperty of Object.keys(authDataKeys)) {\n\t\tsendRequest = {\n\t\t\t...sendRequest,\n\t\t\t[requestProperty]: Object.keys(sendRequest[requestProperty] as object).reduce(\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-loop-func\n\t\t\t\t(acc: IDataObject, curr) => {\n\t\t\t\t\tacc[curr] = authDataKeys[requestProperty].includes(curr)\n\t\t\t\t\t\t? REDACTED\n\t\t\t\t\t\t: (sendRequest[requestProperty] as IDataObject)[curr];\n\t\t\t\t\treturn acc;\n\t\t\t\t},\n\t\t\t\t{},\n\t\t\t),\n\t\t};\n\t}\n\tconst HEADER_BLOCKLIST = new Set([\n\t\t'authorization',\n\t\t'x-api-key',\n\t\t'x-auth-token',\n\t\t'cookie',\n\t\t'proxy-authorization',\n\t\t'sslclientcert',\n\t]);\n\n\tconst headers = sendRequest.headers as IDataObject;\n\n\tif (headers) {\n\t\tfor (const headerName of Object.keys(headers)) {\n\t\t\tif (HEADER_BLOCKLIST.has(headerName.toLowerCase())) {\n\t\t\t\theaders[headerName] = REDACTED;\n\t\t\t}\n\t\t}\n\t}\n\tif (secrets && secrets.length > 0) {\n\t\treturn redact(sendRequest, secrets);\n\t}\n\n\treturn sendRequest;\n}\n\nexport function getSecrets(\n\tproperties: INodeProperties[],\n\tcredentials: ICredentialDataDecryptedObject,\n): string[] {\n\tconst sensitivePropNames = new Set(\n\t\tproperties.filter((prop) => prop.typeOptions?.password).map((prop) => prop.name),\n\t);\n\n\tconst secrets = Object.entries(credentials)\n\t\t.filter(([propName]) => sensitivePropNames.has(propName))\n\t\t.map(([_, value]) => value)\n\t\t.filter((value): value is string => typeof value === 'string');\n\tconst oauthAccessToken = get(credentials, 'oauthTokenData.access_token');\n\tif (typeof oauthAccessToken === 'string') {\n\t\tsecrets.push(oauthAccessToken);\n\t}\n\n\treturn secrets;\n}\n\nexport const getOAuth2AdditionalParameters = (nodeCredentialType: string) => {\n\tconst oAuth2Options: { [credentialType: string]: IOAuth2Options } = {\n\t\tbitlyOAuth2Api: {\n\t\t\ttokenType: 'Bearer',\n\t\t},\n\t\tboxOAuth2Api: {\n\t\t\tincludeCredentialsOnRefreshOnBody: true,\n\t\t},\n\t\tciscoWebexOAuth2Api: {\n\t\t\ttokenType: 'Bearer',\n\t\t},\n\t\tclickUpOAuth2Api: {\n\t\t\tkeepBearer: false,\n\t\t\ttokenType: 'Bearer',\n\t\t},\n\t\tgoToWebinarOAuth2Api: {\n\t\t\ttokenExpiredStatusCode: 403,\n\t\t},\n\t\thubspotDeveloperApi: {\n\t\t\ttokenType: 'Bearer',\n\t\t\tincludeCredentialsOnRefreshOnBody: true,\n\t\t},\n\t\thubspotOAuth2Api: {\n\t\t\ttokenType: 'Bearer',\n\t\t\tincludeCredentialsOnRefreshOnBody: true,\n\t\t},\n\t\tlineNotifyOAuth2Api: {\n\t\t\ttokenType: 'Bearer',\n\t\t},\n\t\tlinkedInOAuth2Api: {\n\t\t\ttokenType: 'Bearer',\n\t\t},\n\t\tmailchimpOAuth2Api: {\n\t\t\ttokenType: 'Bearer',\n\t\t},\n\t\tmauticOAuth2Api: {\n\t\t\tincludeCredentialsOnRefreshOnBody: true,\n\t\t},\n\t\tmicrosoftAzureMonitorOAuth2Api: {\n\t\t\ttokenExpiredStatusCode: 403,\n\t\t},\n\t\tmicrosoftDynamicsOAuth2Api: {\n\t\t\tproperty: 'id_token',\n\t\t},\n\t\tphilipsHueOAuth2Api: {\n\t\t\ttokenType: 'Bearer',\n\t\t},\n\t\traindropOAuth2Api: {\n\t\t\tincludeCredentialsOnRefreshOnBody: true,\n\t\t},\n\t\tshopifyOAuth2Api: {\n\t\t\ttokenType: 'Bearer',\n\t\t\tkeyToIncludeInAccessTokenHeader: 'X-Shopify-Access-Token',\n\t\t},\n\t\tslackOAuth2Api: {\n\t\t\ttokenType: 'Bearer',\n\t\t\tproperty: 'authed_user.access_token',\n\t\t},\n\t\tstravaOAuth2Api: {\n\t\t\tincludeCredentialsOnRefreshOnBody: true,\n\t\t},\n\t};\n\treturn oAuth2Options[nodeCredentialType];\n};\n\n//https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\nexport const binaryContentTypes = [\n\t'image/',\n\t'audio/',\n\t'video/',\n\t'application/octet-stream',\n\t'application/gzip',\n\t'application/zip',\n\t'application/vnd.rar',\n\t'application/epub+zip',\n\t'application/x-bzip',\n\t'application/x-bzip2',\n\t'application/x-cdf',\n\t'application/vnd.amazon.ebook',\n\t'application/msword',\n\t'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n\t'application/vnd.ms-fontobject',\n\t'application/vnd.oasis.opendocument.presentation',\n\t'application/pdf',\n\t'application/x-tar',\n\t'application/vnd.visio',\n\t'application/vnd.ms-excel',\n\t'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n\t'application/x-7z-compressed',\n];\n\nexport type BodyParametersReducer = (\n\tacc: IDataObject,\n\tcur: { name: string; value: string },\n) => Promise<IDataObject>;\n\nexport async function reduceAsync<T, R>(\n\tarr: T[],\n\treducer: (acc: Awaited<Promise<R>>, cur: T) => Promise<R>,\n\tinit: Promise<R> = Promise.resolve({} as R),\n): Promise<R> {\n\treturn await arr.reduce(async (promiseAcc, item) => {\n\t\treturn await reducer(await promiseAcc, item);\n\t}, init);\n}\n\nexport const prepareRequestBody = async (\n\tparameters: BodyParameter[],\n\tbodyType: string,\n\tversion: number,\n\tdefaultReducer: BodyParametersReducer,\n) => {\n\tif (bodyType === 'json' && version >= 4) {\n\t\treturn await parameters.reduce(async (acc, entry) => {\n\t\t\tconst result = await acc;\n\t\t\tset(result, entry.name, entry.value);\n\t\t\treturn result;\n\t\t}, Promise.resolve({}));\n\t} else if (bodyType === 'multipart-form-data' && version >= 4.2) {\n\t\tconst formData = new FormData();\n\n\t\tfor (const parameter of parameters) {\n\t\t\tif (parameter.parameterType === 'formBinaryData') {\n\t\t\t\tconst entry = await defaultReducer({}, parameter);\n\t\t\t\tconst key = Object.keys(entry)[0];\n\t\t\t\tconst data = entry[key] as { value: Buffer; options: FormData.AppendOptions };\n\t\t\t\tformData.append(key, data.value, data.options);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tformData.append(parameter.name, parameter.value);\n\t\t}\n\n\t\treturn formData;\n\t} else {\n\t\treturn await reduceAsync(parameters, defaultReducer);\n\t}\n};\n\nexport const setAgentOptions = (\n\trequestOptions: IRequestOptions,\n\tsslCertificates: HttpSslAuthCredentials | undefined,\n) => {\n\tif (sslCertificates) {\n\t\tconst agentOptions: SecureContextOptions = {};\n\t\tif (sslCertificates.ca) agentOptions.ca = formatPrivateKey(sslCertificates.ca);\n\t\tif (sslCertificates.cert) agentOptions.cert = formatPrivateKey(sslCertificates.cert);\n\t\tif (sslCertificates.key) agentOptions.key = formatPrivateKey(sslCertificates.key);\n\t\tif (sslCertificates.passphrase)\n\t\t\tagentOptions.passphrase = formatPrivateKey(sslCertificates.passphrase);\n\t\trequestOptions.agentOptions = agentOptions;\n\t}\n};\n"],"mappings":"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","names":["isPlainObject","get","set","FormData"]}