{"version":3,"sources":["../../../nodes/Salesmate/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHookFunctions,\n\tILoadOptionsFunctions,\n\tIWebhookFunctions,\n\tJsonObject,\n\tIRequestOptions,\n\tIHttpRequestMethods,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\nexport async function salesmateApiRequest(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions | IWebhookFunctions,\n\tmethod: IHttpRequestMethods,\n\tresource: string,\n\n\tbody: any = {},\n\tqs: IDataObject = {},\n\turi?: string,\n\t_option: IDataObject = {},\n): Promise<any> {\n\tconst credentials = await this.getCredentials('salesmateApi');\n\n\tconst options: IRequestOptions = {\n\t\theaders: {\n\t\t\tsessionToken: credentials.sessionToken,\n\t\t\t'x-linkname': credentials.url,\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tmethod,\n\t\tqs,\n\t\tbody,\n\t\turi: uri || `https://apis.salesmate.io${resource}`,\n\t\tjson: true,\n\t};\n\tif (!Object.keys(body as IDataObject).length) {\n\t\tdelete options.body;\n\t}\n\ttry {\n\t\treturn await this.helpers.request(options);\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\nexport async function salesmateApiRequestAllItems(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tpropertyName: string,\n\tmethod: IHttpRequestMethods,\n\tresource: string,\n\n\tbody: any = {},\n\tquery: IDataObject = {},\n): Promise<any> {\n\tconst returnData: IDataObject[] = [];\n\n\tlet responseData;\n\tquery.pageNo = 1;\n\tquery.rows = 25;\n\tdo {\n\t\tresponseData = await salesmateApiRequest.call(this, method, resource, body, query);\n\t\treturnData.push.apply(returnData, responseData[propertyName].data as IDataObject[]);\n\t\tquery.pageNo++;\n\t} while (\n\t\tresponseData[propertyName].totalPages !== undefined &&\n\t\tquery.pageNo <= responseData[propertyName].totalPages\n\t);\n\n\treturn returnData;\n}\n\nexport function validateJSON(json: string | undefined): any {\n\tlet result;\n\ttry {\n\t\tresult = JSON.parse(json!);\n\t} catch (exception) {\n\t\tresult = undefined;\n\t}\n\treturn result;\n}\n\n/**\n * Converts data from the Salesmate format into a simple object\n *\n */\nexport function simplifySalesmateData(data: IDataObject[]): IDataObject {\n\tconst returnData: IDataObject = {};\n\n\tfor (const item of data) {\n\t\treturnData[item.fieldName as string] = item.value;\n\t}\n\n\treturn returnData;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA,0BAA6B;AAE7B,eAAsB,oBAErB,QACA,UAEA,OAAY,CAAC,GACb,KAAkB,CAAC,GACnB,KACA,UAAuB,CAAC,GACT;AACf,QAAM,cAAc,MAAM,KAAK,eAAe,cAAc;AAE5D,QAAM,UAA2B;AAAA,IAChC,SAAS;AAAA,MACR,cAAc,YAAY;AAAA,MAC1B,cAAc,YAAY;AAAA,MAC1B,gBAAgB;AAAA,IACjB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,KAAK,OAAO,4BAA4B,QAAQ;AAAA,IAChD,MAAM;AAAA,EACP;AACA,MAAI,CAAC,OAAO,KAAK,IAAmB,EAAE,QAAQ;AAC7C,WAAO,QAAQ;AAAA,EAChB;AACA,MAAI;AACH,WAAO,MAAM,KAAK,QAAQ,QAAQ,OAAO;AAAA,EAC1C,SAAS,OAAO;AACf,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,KAAmB;AAAA,EAC3D;AACD;AAEA,eAAsB,4BAErB,cACA,QACA,UAEA,OAAY,CAAC,GACb,QAAqB,CAAC,GACP;AACf,QAAM,aAA4B,CAAC;AAEnC,MAAI;AACJ,QAAM,SAAS;AACf,QAAM,OAAO;AACb,KAAG;AACF,mBAAe,MAAM,oBAAoB,KAAK,MAAM,QAAQ,UAAU,MAAM,KAAK;AACjF,eAAW,KAAK,MAAM,YAAY,aAAa,YAAY,EAAE,IAAqB;AAClF,UAAM;AAAA,EACP,SACC,aAAa,YAAY,EAAE,eAAe,UAC1C,MAAM,UAAU,aAAa,YAAY,EAAE;AAG5C,SAAO;AACR;AAEO,SAAS,aAAa,MAA+B;AAC3D,MAAI;AACJ,MAAI;AACH,aAAS,KAAK,MAAM,IAAK;AAAA,EAC1B,SAAS,WAAW;AACnB,aAAS;AAAA,EACV;AACA,SAAO;AACR;AAMO,SAAS,sBAAsB,MAAkC;AACvE,QAAM,aAA0B,CAAC;AAEjC,aAAW,QAAQ,MAAM;AACxB,eAAW,KAAK,SAAmB,IAAI,KAAK;AAAA,EAC7C;AAEA,SAAO;AACR;","names":[]}