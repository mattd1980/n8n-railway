{"version":3,"sources":["../../../nodes/MongoDb/mongoDb.types.ts"],"sourcesContent":["/**\n * Credentials object for Mongo, if using individual parameters\n */\nexport interface IMongoParametricCredentials {\n\t/**\n\t * Whether to allow overriding the parametric credentials with a connection string\n\t */\n\tconfigurationType: 'values';\n\n\thost: string;\n\tdatabase: string;\n\tuser: string;\n\tpassword: string;\n\tport?: number;\n}\n\n/**\n * Credentials object for Mongo, if using override connection string\n */\nexport interface IMongoOverrideCredentials {\n\t/**\n\t * Whether to allow overriding the parametric credentials with a connection string\n\t */\n\tconfigurationType: 'connectionString';\n\t/**\n\t * If using an override connection string, this is where it will be.\n\t */\n\tconnectionString: string;\n\tdatabase: string;\n}\n\n/**\n * Unified credential object type (whether params are overridden with a connection string or not)\n */\nexport type IMongoCredentialsType = IMongoParametricCredentials | IMongoOverrideCredentials;\n\n/**\n * Resolve the database and connection string from input credentials\n */\nexport type IMongoCredentials = {\n\t/**\n\t * Database name (used to create the Mongo client)\n\t */\n\tdatabase: string;\n\t/**\n\t * Generated connection string (after validating and figuring out overrides)\n\t */\n\tconnectionString: string;\n};\n"],"mappings":";;;;;;;;;;;;;;AAAA;AAAA;","names":[]}