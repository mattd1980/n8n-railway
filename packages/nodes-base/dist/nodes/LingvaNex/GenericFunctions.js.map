{"version":3,"sources":["../../../nodes/LingvaNex/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHookFunctions,\n\tILoadOptionsFunctions,\n\tJsonObject,\n\tIRequestOptions,\n\tIHttpRequestMethods,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\nexport async function lingvaNexApiRequest(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tresource: string,\n\n\tbody: any = {},\n\tqs: IDataObject = {},\n\turi?: string,\n\toption: IDataObject = {},\n): Promise<any> {\n\ttry {\n\t\tconst credentials = await this.getCredentials('lingvaNexApi');\n\t\tlet options: IRequestOptions = {\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${credentials.apiKey}`,\n\t\t\t},\n\t\t\tmethod,\n\t\t\tqs,\n\t\t\tbody,\n\t\t\turi: uri || `https://api-b2b.backenster.com/b1/api/v3${resource}`,\n\t\t\tjson: true,\n\t\t};\n\n\t\toptions = Object.assign({}, options, option);\n\n\t\tconst response = await this.helpers.request(options);\n\n\t\tif (response.err !== null) {\n\t\t\tthrow new NodeApiError(this.getNode(), response as JsonObject);\n\t\t}\n\n\t\treturn response;\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,0BAA6B;AAE7B,eAAsB,oBAErB,QACA,UAEA,OAAY,CAAC,GACb,KAAkB,CAAC,GACnB,KACA,SAAsB,CAAC,GACR;AACf,MAAI;AACH,UAAM,cAAc,MAAM,KAAK,eAAe,cAAc;AAC5D,QAAI,UAA2B;AAAA,MAC9B,SAAS;AAAA,QACR,eAAe,UAAU,YAAY,MAAM;AAAA,MAC5C;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,KAAK,OAAO,2CAA2C,QAAQ;AAAA,MAC/D,MAAM;AAAA,IACP;AAEA,cAAU,OAAO,OAAO,CAAC,GAAG,SAAS,MAAM;AAE3C,UAAM,WAAW,MAAM,KAAK,QAAQ,QAAQ,OAAO;AAEnD,QAAI,SAAS,QAAQ,MAAM;AAC1B,YAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,QAAsB;AAAA,IAC9D;AAEA,WAAO;AAAA,EACR,SAAS,OAAO;AACf,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,KAAmB;AAAA,EAC3D;AACD;","names":[]}