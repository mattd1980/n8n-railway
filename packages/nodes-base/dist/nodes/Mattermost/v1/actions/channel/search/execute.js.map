{"version":3,"sources":["../../../../../../../nodes/Mattermost/v1/actions/channel/search/execute.ts"],"sourcesContent":["import type { IExecuteFunctions, IDataObject, INodeExecutionData } from 'n8n-workflow';\n\nimport { apiRequest } from '../../../transport';\n\nexport async function search(\n\tthis: IExecuteFunctions,\n\tindex: number,\n): Promise<INodeExecutionData[]> {\n\tconst body = {} as IDataObject;\n\tconst qs = {} as IDataObject;\n\tconst requestMethod = 'POST';\n\tconst teamId = this.getNodeParameter('teamId', index);\n\tconst returnAll = this.getNodeParameter('returnAll', 0);\n\tconst endpoint = `teams/${teamId}/channels/search`;\n\n\tbody.term = this.getNodeParameter('term', index) as string;\n\n\tlet responseData = await apiRequest.call(this, requestMethod, endpoint, body, qs);\n\n\tif (!returnAll) {\n\t\tconst limit = this.getNodeParameter('limit', 0);\n\t\tresponseData = responseData.slice(0, limit);\n\t}\n\n\treturn this.helpers.returnJsonArray(responseData as IDataObject[]);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,uBAA2B;AAE3B,eAAsB,OAErB,OACgC;AAChC,QAAM,OAAO,CAAC;AACd,QAAM,KAAK,CAAC;AACZ,QAAM,gBAAgB;AACtB,QAAM,SAAS,KAAK,iBAAiB,UAAU,KAAK;AACpD,QAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,QAAM,WAAW,SAAS,MAAM;AAEhC,OAAK,OAAO,KAAK,iBAAiB,QAAQ,KAAK;AAE/C,MAAI,eAAe,MAAM,4BAAW,KAAK,MAAM,eAAe,UAAU,MAAM,EAAE;AAEhF,MAAI,CAAC,WAAW;AACf,UAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC9C,mBAAe,aAAa,MAAM,GAAG,KAAK;AAAA,EAC3C;AAEA,SAAO,KAAK,QAAQ,gBAAgB,YAA6B;AAClE;","names":[]}