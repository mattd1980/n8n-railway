{"version":3,"sources":["../../../nodes/Vero/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHttpRequestMethods,\n\tILoadOptionsFunctions,\n\tIRequestOptions,\n\tJsonObject,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\nexport async function veroApiRequest(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tresource: string,\n\n\tbody: any = {},\n\tqs: IDataObject = {},\n\turi?: string,\n\toption: IDataObject = {},\n): Promise<any> {\n\tconst credentials = await this.getCredentials('veroApi');\n\n\tlet options: IRequestOptions = {\n\t\tmethod,\n\t\tqs,\n\t\tbody,\n\t\tform: {\n\t\t\tauth_token: credentials.authToken,\n\t\t\t...body,\n\t\t},\n\t\turi: uri || `https://api.getvero.com/api/v2${resource}`,\n\t\tjson: true,\n\t};\n\toptions = Object.assign({}, options, option);\n\tif (Object.keys(options.body as IDataObject).length === 0) {\n\t\tdelete options.body;\n\t}\n\ttry {\n\t\treturn await this.helpers.request(options);\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\nexport function validateJSON(json: string | undefined): any {\n\tlet result;\n\ttry {\n\t\tresult = JSON.parse(json!);\n\t} catch (exception) {\n\t\tresult = undefined;\n\t}\n\treturn result;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,0BAA6B;AAE7B,eAAsB,eAErB,QACA,UAEA,OAAY,CAAC,GACb,KAAkB,CAAC,GACnB,KACA,SAAsB,CAAC,GACR;AACf,QAAM,cAAc,MAAM,KAAK,eAAe,SAAS;AAEvD,MAAI,UAA2B;AAAA,IAC9B;AAAA,IACA;AAAA,IACA;AAAA,IACA,MAAM;AAAA,MACL,YAAY,YAAY;AAAA,MACxB,GAAG;AAAA,IACJ;AAAA,IACA,KAAK,OAAO,iCAAiC,QAAQ;AAAA,IACrD,MAAM;AAAA,EACP;AACA,YAAU,OAAO,OAAO,CAAC,GAAG,SAAS,MAAM;AAC3C,MAAI,OAAO,KAAK,QAAQ,IAAmB,EAAE,WAAW,GAAG;AAC1D,WAAO,QAAQ;AAAA,EAChB;AACA,MAAI;AACH,WAAO,MAAM,KAAK,QAAQ,QAAQ,OAAO;AAAA,EAC1C,SAAS,OAAO;AACf,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,KAAmB;AAAA,EAC3D;AACD;AAEO,SAAS,aAAa,MAA+B;AAC3D,MAAI;AACJ,MAAI;AACH,aAAS,KAAK,MAAM,IAAK;AAAA,EAC1B,SAAS,WAAW;AACnB,aAAS;AAAA,EACV;AACA,SAAO;AACR;","names":[]}