{"version":3,"sources":["../../../nodes/Mailjet/Mailjet.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport { emailFields, emailOperations } from './EmailDescription';\nimport type { IMessage } from './GenericFunctions';\nimport { mailjetApiRequest, validateJSON } from './GenericFunctions';\nimport { smsFields, smsOperations } from './SmsDescription';\nexport class Mailjet implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Mailjet',\n\t\tname: 'mailjet',\n\t\ticon: 'file:mailjet.svg',\n\t\tgroup: ['output'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume Mailjet API',\n\t\tdefaults: {\n\t\t\tname: 'Mailjet',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'mailjetEmailApi',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['email'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'mailjetSmsApi',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['sms'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Email',\n\t\t\t\t\t\tvalue: 'email',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'SMS',\n\t\t\t\t\t\tvalue: 'sms',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'email',\n\t\t\t},\n\t\t\t...emailOperations,\n\t\t\t...emailFields,\n\t\t\t...smsOperations,\n\t\t\t...smsFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get all the available custom fields to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getTemplates(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst { Data: templates } = await mailjetApiRequest.call(this, 'GET', '/v3/REST/template');\n\t\t\t\tfor (const template of templates) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: template.Name,\n\t\t\t\t\t\tvalue: template.ID,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst length = items.length;\n\t\tlet responseData;\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'email') {\n\t\t\t\t\t//https://dev.mailjet.com/email/guides/send-api-v31/#send-a-basic-email\n\t\t\t\t\tif (operation === 'send') {\n\t\t\t\t\t\tconst fromEmail = this.getNodeParameter('fromEmail', i) as string;\n\t\t\t\t\t\tconst htmlBody = this.getNodeParameter('html', i) as string;\n\t\t\t\t\t\tconst textBody = this.getNodeParameter('text', i) as string;\n\t\t\t\t\t\tconst subject = this.getNodeParameter('subject', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst toEmail = (this.getNodeParameter('toEmail', i) as string).split(',');\n\t\t\t\t\t\tconst jsonParameters = this.getNodeParameter('jsonParameters', i);\n\n\t\t\t\t\t\tconst body: IMessage = {\n\t\t\t\t\t\t\tFrom: {\n\t\t\t\t\t\t\t\tEmail: fromEmail,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tSubject: subject,\n\t\t\t\t\t\t\tTo: [],\n\t\t\t\t\t\t\tCc: [],\n\t\t\t\t\t\t\tBcc: [],\n\t\t\t\t\t\t\tVariables: {},\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tfor (const email of toEmail) {\n\t\t\t\t\t\t\tbody.To?.push({\n\t\t\t\t\t\t\t\tEmail: email,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (jsonParameters) {\n\t\t\t\t\t\t\tconst variablesJson = this.getNodeParameter('variablesJson', i) as string;\n\t\t\t\t\t\t\tconst parsedJson = validateJSON(variablesJson);\n\t\t\t\t\t\t\tif (parsedJson === undefined) {\n\t\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t\t\"Parameter 'Variables (JSON)' has a invalid JSON\",\n\t\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbody.Variables = parsedJson;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst variables =\n\t\t\t\t\t\t\t\t((this.getNodeParameter('variablesUi', i) as IDataObject)\n\t\t\t\t\t\t\t\t\t.variablesValues as IDataObject[]) || [];\n\t\t\t\t\t\t\tfor (const variable of variables) {\n\t\t\t\t\t\t\t\tbody.Variables![variable.name as string] = variable.value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (htmlBody) {\n\t\t\t\t\t\t\tbody.HTMLPart = htmlBody;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (textBody) {\n\t\t\t\t\t\t\tbody.TextPart = textBody;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.bccEmail) {\n\t\t\t\t\t\t\tconst bccEmail = (additionalFields.bccEmail as string).split(',');\n\t\t\t\t\t\t\tfor (const email of bccEmail) {\n\t\t\t\t\t\t\t\tbody.Bcc!.push({\n\t\t\t\t\t\t\t\t\tEmail: email,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.ccAddresses) {\n\t\t\t\t\t\t\tconst ccEmail = (additionalFields.ccAddresses as string).split(',');\n\t\t\t\t\t\t\tfor (const email of ccEmail) {\n\t\t\t\t\t\t\t\tbody.Cc!.push({\n\t\t\t\t\t\t\t\t\tEmail: email,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.trackOpens) {\n\t\t\t\t\t\t\tbody.TrackOpens = additionalFields.trackOpens as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.replyTo) {\n\t\t\t\t\t\t\tconst replyTo = additionalFields.replyTo as string;\n\t\t\t\t\t\t\tbody.ReplyTo = {\n\t\t\t\t\t\t\t\tEmail: replyTo,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.trackClicks) {\n\t\t\t\t\t\t\tbody.TrackClicks = additionalFields.trackClicks as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.fromName) {\n\t\t\t\t\t\t\tbody.From!.Name = additionalFields.fromName as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.templateLanguage) {\n\t\t\t\t\t\t\tbody.TemplateLanguage = additionalFields.templateLanguage as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.priority) {\n\t\t\t\t\t\t\tbody.Priority = additionalFields.priority as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await mailjetApiRequest.call(this, 'POST', '/v3.1/send', {\n\t\t\t\t\t\t\tMessages: [body],\n\t\t\t\t\t\t});\n\t\t\t\t\t\tresponseData = responseData.Messages;\n\t\t\t\t\t}\n\t\t\t\t\t//https://dev.mailjet.com/email/guides/send-api-v31/#use-a-template\n\t\t\t\t\tif (operation === 'sendTemplate') {\n\t\t\t\t\t\tconst fromEmail = this.getNodeParameter('fromEmail', i) as string;\n\t\t\t\t\t\tconst templateId = parseInt(this.getNodeParameter('templateId', i) as string, 10);\n\t\t\t\t\t\tconst subject = this.getNodeParameter('subject', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst toEmail = (this.getNodeParameter('toEmail', i) as string).split(',');\n\t\t\t\t\t\tconst jsonParameters = this.getNodeParameter('jsonParameters', i);\n\n\t\t\t\t\t\tconst body: IMessage = {\n\t\t\t\t\t\t\tFrom: {\n\t\t\t\t\t\t\t\tEmail: fromEmail,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tSubject: subject,\n\t\t\t\t\t\t\tTo: [],\n\t\t\t\t\t\t\tCc: [],\n\t\t\t\t\t\t\tBcc: [],\n\t\t\t\t\t\t\tVariables: {},\n\t\t\t\t\t\t\tTemplateID: templateId,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tfor (const email of toEmail) {\n\t\t\t\t\t\t\tbody.To!.push({\n\t\t\t\t\t\t\t\tEmail: email,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (jsonParameters) {\n\t\t\t\t\t\t\tconst variablesJson = this.getNodeParameter('variablesJson', i) as string;\n\t\t\t\t\t\t\tconst parsedJson = validateJSON(variablesJson);\n\t\t\t\t\t\t\tif (parsedJson === undefined) {\n\t\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t\t\"Parameter 'Variables (JSON)' has a invalid JSON\",\n\t\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbody.Variables = parsedJson;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst variables =\n\t\t\t\t\t\t\t\t((this.getNodeParameter('variablesUi', i) as IDataObject)\n\t\t\t\t\t\t\t\t\t.variablesValues as IDataObject[]) || [];\n\t\t\t\t\t\t\tfor (const variable of variables) {\n\t\t\t\t\t\t\t\tbody.Variables![variable.name as string] = variable.value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.bccEmail) {\n\t\t\t\t\t\t\tconst bccEmail = (additionalFields.bccEmail as string).split(',');\n\t\t\t\t\t\t\tfor (const email of bccEmail) {\n\t\t\t\t\t\t\t\tbody.Bcc!.push({\n\t\t\t\t\t\t\t\t\tEmail: email,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.ccEmail) {\n\t\t\t\t\t\t\tconst ccEmail = (additionalFields.ccEmail as string).split(',');\n\t\t\t\t\t\t\tfor (const email of ccEmail) {\n\t\t\t\t\t\t\t\tbody.Cc!.push({\n\t\t\t\t\t\t\t\t\tEmail: email,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.replyTo) {\n\t\t\t\t\t\t\tconst replyTo = additionalFields.replyTo as string;\n\t\t\t\t\t\t\tbody.ReplyTo = {\n\t\t\t\t\t\t\t\tEmail: replyTo,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.trackOpens) {\n\t\t\t\t\t\t\tbody.TrackOpens = additionalFields.trackOpens as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.trackClicks) {\n\t\t\t\t\t\t\tbody.TrackClicks = additionalFields.trackClicks as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.fromName) {\n\t\t\t\t\t\t\tbody.From!.Name = additionalFields.fromName as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.templateLanguage) {\n\t\t\t\t\t\t\tbody.TemplateLanguage = additionalFields.templateLanguage as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.priority) {\n\t\t\t\t\t\t\tbody.Priority = additionalFields.priority as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await mailjetApiRequest.call(this, 'POST', '/v3.1/send', {\n\t\t\t\t\t\t\tMessages: [body],\n\t\t\t\t\t\t});\n\t\t\t\t\t\tresponseData = responseData.Messages;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'sms') {\n\t\t\t\t\t//https://dev.mailjet.com/sms/reference/send-message#v4_post_sms-send\n\t\t\t\t\tif (operation === 'send') {\n\t\t\t\t\t\tconst from = this.getNodeParameter('from', i) as string;\n\t\t\t\t\t\tconst to = this.getNodeParameter('to', i) as boolean;\n\t\t\t\t\t\tconst text = this.getNodeParameter('text', i) as string;\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tFrom: from,\n\t\t\t\t\t\t\tTo: to,\n\t\t\t\t\t\t\tText: text,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tresponseData = await mailjetApiRequest.call(this, 'POST', '/v4/sms-send', body);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t);\n\n\t\t\t\treturnData.push(...executionData);\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":[]}