{"version":3,"sources":["../../../../nodes/Cisco/Webex/CiscoWebex.node.ts"],"sourcesContent":["import moment from 'moment-timezone';\nimport type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes } from 'n8n-workflow';\n\nimport {\n\tmeetingFields,\n\tmeetingOperations,\n\t// meetingTranscriptFields,\n\t// meetingTranscriptOperations,\n\tmessageFields,\n\tmessageOperations,\n} from './descriptions';\nimport { getAttachments, webexApiRequest, webexApiRequestAllItems } from './GenericFunctions';\n\nexport class CiscoWebex implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Webex by Cisco',\n\t\tname: 'ciscoWebex',\n\t\t// eslint-disable-next-line n8n-nodes-base/node-class-description-icon-not-svg\n\t\ticon: 'file:ciscoWebex.png',\n\t\tgroup: ['transform'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume the Cisco Webex API',\n\t\tdefaults: {\n\t\t\tname: 'Webex by Cisco',\n\t\t},\n\t\tusableAsTool: true,\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'ciscoWebexOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Meeting',\n\t\t\t\t\t\tvalue: 'meeting',\n\t\t\t\t\t},\n\t\t\t\t\t// {\n\t\t\t\t\t// \tname: 'Meeeting Transcript',\n\t\t\t\t\t// \tvalue: 'meetingTranscript',\n\t\t\t\t\t// },\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Message',\n\t\t\t\t\t\tvalue: 'message',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'message',\n\t\t\t},\n\t\t\t...meetingOperations,\n\t\t\t...meetingFields,\n\t\t\t// ...meetingTranscriptOperations,\n\t\t\t// ...meetingTranscriptFields,\n\t\t\t...messageOperations,\n\t\t\t...messageFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\tasync getRooms(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst rooms = await webexApiRequestAllItems.call(this, 'items', 'GET', '/rooms');\n\t\t\t\tfor (const room of rooms) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: room.title,\n\t\t\t\t\t\tvalue: room.id,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\tasync getSites(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst sites = await webexApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'sites',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/meetingPreferences/sites',\n\t\t\t\t);\n\t\t\t\tfor (const site of sites) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: site.siteUrl,\n\t\t\t\t\t\tvalue: site.siteUrl,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst timezone = this.getTimezone();\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\tlet responseData;\n\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'message') {\n\t\t\t\t\t// **********************************************************************\n\t\t\t\t\t//                                message\n\t\t\t\t\t// **********************************************************************\n\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//             message: create\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://developer.webex.com/docs/api/v1/messages/create-a-message\n\t\t\t\t\t\tconst destination = this.getNodeParameter('destination', i);\n\t\t\t\t\t\tconst file = this.getNodeParameter(\n\t\t\t\t\t\t\t'additionalFields.fileUi.fileValue',\n\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t) as IDataObject;\n\t\t\t\t\t\tconst markdown = this.getNodeParameter('additionalFields.markdown', i, '') as boolean;\n\t\t\t\t\t\tconst body = {} as IDataObject;\n\t\t\t\t\t\tif (destination === 'room') {\n\t\t\t\t\t\t\tbody.roomId = this.getNodeParameter('roomId', i);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (destination === 'person') {\n\t\t\t\t\t\t\tconst specifyPersonBy = this.getNodeParameter('specifyPersonBy', 0) as string;\n\t\t\t\t\t\t\tif (specifyPersonBy === 'id') {\n\t\t\t\t\t\t\t\tbody.toPersonId = this.getNodeParameter('toPersonId', i);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbody.toPersonEmail = this.getNodeParameter('toPersonEmail', i);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (markdown) {\n\t\t\t\t\t\t\tbody.markdown = markdown;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbody.text = this.getNodeParameter('text', i);\n\n\t\t\t\t\t\tbody.attachments = getAttachments(\n\t\t\t\t\t\t\tthis.getNodeParameter(\n\t\t\t\t\t\t\t\t'additionalFields.attachmentsUi.attachmentValues',\n\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t\t[],\n\t\t\t\t\t\t\t) as IDataObject[],\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (Object.keys(file).length) {\n\t\t\t\t\t\t\tconst isBinaryData = file.fileLocation === 'binaryData' ? true : false;\n\n\t\t\t\t\t\t\tif (isBinaryData) {\n\t\t\t\t\t\t\t\tconst binaryPropertyName = file.binaryPropertyName as string;\n\t\t\t\t\t\t\t\tconst binaryData = this.helpers.assertBinaryData(i, binaryPropertyName);\n\t\t\t\t\t\t\t\tconst binaryDataBuffer = await this.helpers.getBinaryDataBuffer(\n\t\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t\t\tbinaryPropertyName,\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tconst formData = {\n\t\t\t\t\t\t\t\t\tfiles: {\n\t\t\t\t\t\t\t\t\t\tvalue: binaryDataBuffer,\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\tfilename: binaryData.fileName,\n\t\t\t\t\t\t\t\t\t\t\tcontentType: binaryData.mimeType,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tObject.assign(body, formData);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst url = file.url as string;\n\t\t\t\t\t\t\t\tObject.assign(body, { files: url });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (file.fileLocation === 'binaryData') {\n\t\t\t\t\t\t\tresponseData = await webexApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t\t'/messages',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t{ formData: body },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresponseData = await webexApiRequest.call(this, 'POST', '/messages', body);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//             message: delete\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://developer.webex.com/docs/api/v1/messages/delete-a-message\n\t\t\t\t\t\tconst messageId = this.getNodeParameter('messageId', i);\n\n\t\t\t\t\t\tconst endpoint = `/messages/${messageId}`;\n\t\t\t\t\t\tresponseData = await webexApiRequest.call(this, 'DELETE', endpoint);\n\t\t\t\t\t\tresponseData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\tthis.helpers.returnJsonArray({ success: true }),\n\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//               message: get\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://developer.webex.com/docs/api/v1/messages/get-message-details\n\t\t\t\t\t\tconst messageId = this.getNodeParameter('messageId', i);\n\n\t\t\t\t\t\tconst endpoint = `/messages/${messageId}`;\n\t\t\t\t\t\tresponseData = await webexApiRequest.call(this, 'GET', endpoint);\n\t\t\t\t\t\tresponseData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//             message: getAll\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://developer.webex.com/docs/api/v1/messages/list-messages\n\t\t\t\t\t\tconst qs: IDataObject = {\n\t\t\t\t\t\t\troomId: this.getNodeParameter('roomId', i),\n\t\t\t\t\t\t};\n\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\n\t\t\t\t\t\tif (Object.keys(filters).length) {\n\t\t\t\t\t\t\tObject.assign(qs, filters);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await webexApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'items',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/messages',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.max = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await webexApiRequest.call(this, 'GET', '/messages', {}, qs);\n\t\t\t\t\t\t\tresponseData = responseData.items;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\tthis.helpers.returnJsonArray(responseData.items as IDataObject[]),\n\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (operation === 'update') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//             message: update\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://developer.webex.com/docs/api/v1/messages/edit-a-message\n\t\t\t\t\t\tconst messageId = this.getNodeParameter('messageId', i) as string;\n\t\t\t\t\t\tconst markdown = this.getNodeParameter('markdown', i) as boolean;\n\n\t\t\t\t\t\tconst endpoint = `/messages/${messageId}`;\n\n\t\t\t\t\t\tresponseData = await webexApiRequest.call(this, 'GET', endpoint);\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\troomId: responseData.roomId,\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tif (markdown) {\n\t\t\t\t\t\t\tbody.markdown = this.getNodeParameter('markdownText', i);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbody.text = this.getNodeParameter('text', i);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await webexApiRequest.call(this, 'PUT', endpoint, body);\n\t\t\t\t\t\tresponseData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (resource === 'meeting') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst title = this.getNodeParameter('title', i) as string;\n\t\t\t\t\t\tconst start = this.getNodeParameter('start', i) as string;\n\t\t\t\t\t\tconst end = this.getNodeParameter('end', i) as string;\n\t\t\t\t\t\tconst invitees = this.getNodeParameter(\n\t\t\t\t\t\t\t'additionalFields.inviteesUi.inviteeValues',\n\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t[],\n\t\t\t\t\t\t) as IDataObject[];\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\ttitle,\n\t\t\t\t\t\t\tstart: moment.tz(start, timezone).format(),\n\t\t\t\t\t\t\tend: moment.tz(end, timezone).format(),\n\t\t\t\t\t\t\t...additionalFields,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (body.requireRegistrationInfo) {\n\t\t\t\t\t\t\tbody.registration = (body.requireRegistrationInfo as string[]).reduce(\n\t\t\t\t\t\t\t\t(obj, value) => Object.assign(obj, { [`${value}`]: true }),\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdelete body.requireRegistrationInfo;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (invitees) {\n\t\t\t\t\t\t\tbody.invitees = invitees;\n\t\t\t\t\t\t\tdelete body.inviteesUi;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await webexApiRequest.call(this, 'POST', '/meetings', body);\n\t\t\t\t\t\tresponseData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst meetingId = this.getNodeParameter('meetingId', i) as string;\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\n\t\t\t\t\t\tconst qs: IDataObject = {\n\t\t\t\t\t\t\t...options,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tresponseData = await webexApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/meetings/${meetingId}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\tthis.helpers.returnJsonArray({ success: true }),\n\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst meetingId = this.getNodeParameter('meetingId', i) as string;\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tlet headers = {};\n\n\t\t\t\t\t\tconst qs: IDataObject = {\n\t\t\t\t\t\t\t...options,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (options.passsword) {\n\t\t\t\t\t\t\theaders = {\n\t\t\t\t\t\t\t\tpasssword: options.passsword,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await webexApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/meetings/${meetingId}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t{ headers },\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\n\t\t\t\t\t\tconst qs: IDataObject = {\n\t\t\t\t\t\t\t...filters,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (qs.from) {\n\t\t\t\t\t\t\tqs.from = moment(qs.from as string)\n\t\t\t\t\t\t\t\t.utc(true)\n\t\t\t\t\t\t\t\t.format();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (qs.to) {\n\t\t\t\t\t\t\tqs.to = moment(qs.to as string)\n\t\t\t\t\t\t\t\t.utc(true)\n\t\t\t\t\t\t\t\t.format();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await webexApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'items',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/meetings',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.max = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await webexApiRequest.call(this, 'GET', '/meetings', {}, qs);\n\t\t\t\t\t\t\tresponseData = responseData.items;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst meetingId = this.getNodeParameter('meetingId', i) as string;\n\t\t\t\t\t\tconst invitees = this.getNodeParameter(\n\t\t\t\t\t\t\t'updateFields.inviteesUi.inviteeValues',\n\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t[],\n\t\t\t\t\t\t) as IDataObject[];\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\n\t\t\t\t\t\tconst { title, password, start, end } = await webexApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/meetings/${meetingId}`,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\t...updateFields,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (body.requireRegistrationInfo) {\n\t\t\t\t\t\t\tbody.registration = (body.requireRegistrationInfo as string[]).reduce(\n\t\t\t\t\t\t\t\t(obj, value) => Object.assign(obj, { [`${value}`]: true }),\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdelete body.requireRegistrationInfo;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (invitees.length) {\n\t\t\t\t\t\t\tbody.invitees = invitees;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (body.start) {\n\t\t\t\t\t\t\tbody.start = moment.tz(updateFields.start, timezone).format();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbody.start = start;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (body.end) {\n\t\t\t\t\t\t\tbody.end = moment.tz(updateFields.end, timezone).format();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbody.end = end;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!body.title) {\n\t\t\t\t\t\t\tbody.title = title;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!body.password) {\n\t\t\t\t\t\t\tbody.password = password;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await webexApiRequest.call(this, 'PUT', `/meetings/${meetingId}`, body);\n\t\t\t\t\t\tresponseData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturnData.push(...(responseData as INodeExecutionData[]));\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\treturnData.push({ error: error.toString(), json: {}, itemIndex: i });\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\t// if (resource === 'meetingTranscript') {\n\n\t\t// \tif (operation === 'download') {\n\t\t// \t\tfor (let i = 0; i < items.length; i++) {\n\t\t// \t\t\tconst transcriptId = this.getNodeParameter('transcriptId', i) as string;\n\t\t// \t\t\tconst binaryPropertyName = this.getNodeParameter('binaryPropertyName', i);\n\t\t// \t\t\tconst meetingId = this.getNodeParameter('meetingId', i) as string;\n\t\t// \t\t\tconst options = this.getNodeParameter('options', i);\n\n\t\t// \t\t\tconst qs: IDataObject = {\n\t\t// \t\t\t\tmeetingId,\n\t\t// \t\t\t\t...options,\n\t\t// \t\t\t};\n\t\t// \t\t\tconst transcription = await webexApiRequest.call(this, 'GET', `/meetingTranscripts/${transcriptId}/download`, {}, qs);\n\n\t\t// \t\t\tresponseData = {\n\t\t// \t\t\t\tjson: {},\n\t\t// \t\t\t\tbinary: {\n\t\t// \t\t\t\t\t[binaryPropertyName]: {\n\t\t// \t\t\t\t\t\tdata: Buffer.from(transcription, BINARY_ENCODING),\n\t\t// \t\t\t\t\t\t//contentType:\n\t\t// \t\t\t\t\t\t//FILE\n\t\t// \t\t\t\t\t}\n\t\t// \t\t\t\t}\n\t\t// \t\t\t}\n\n\t\t// \t\t}\n\t\t// \t}\n\n\t\t// \tif (operation === 'getAll') {\n\t\t// \t\tfor (let i = 0; i < items.length; i++) {\n\t\t// \t\t\ttry {\n\t\t// \t\t\t\tconst meetingId = this.getNodeParameter('meetingId', i) as string;\n\t\t// \t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\t\t// \t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\n\t\t// \t\t\t\tconst qs: IDataObject = {\n\t\t// \t\t\t\t\tmeetingId,\n\t\t// \t\t\t\t\t...filters,\n\t\t// \t\t\t\t};\n\n\t\t// \t\t\t\tif (returnAll === true) {\n\t\t// \t\t\t\t\tresponseData = await webexApiRequestAllItems.call(this, 'items', 'GET', '/meetingTranscripts', {}, qs);\n\t\t// \t\t\t\t\treturnData.push(...responseData);\n\t\t// \t\t\t\t} else {\n\t\t// \t\t\t\t\tqs.max = this.getNodeParameter('limit', i);\n\t\t// \t\t\t\t\tresponseData = await webexApiRequest.call(this, 'GET', '/meetingTranscripts', {}, qs);\n\t\t// \t\t\t\t\treturnData.push(...responseData.items);\n\t\t// \t\t\t\t}\n\t\t// \t\t\t} catch (error) {\n\t\t// \t\t\t\tif (this.continueOnFail()) {\n\t\t// \t\t\t\t\treturnData.push({\n\t\t// \t\t\t\t\t\terror: error.message,\n\t\t// \t\t\t\t\t});\n\t\t// \t\t\t\t}\n\t\t// \t\t\t}\n\t\t// \t\t}\n\t\t// \t}\n\t\t// }\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":["moment"]}