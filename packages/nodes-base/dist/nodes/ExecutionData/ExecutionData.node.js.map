{"version":3,"sources":["../../../nodes/ExecutionData/ExecutionData.node.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes } from 'n8n-workflow';\n\nexport class ExecutionData implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Execution Data',\n\t\tname: 'executionData',\n\t\ticon: 'fa:tasks',\n\t\tgroup: ['input'],\n\t\ticonColor: 'light-green',\n\t\tversion: 1,\n\t\tdescription: 'Add execution data for search',\n\t\tdefaults: {\n\t\t\tname: 'Execution Data',\n\t\t\tcolor: '#29A568',\n\t\t},\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName:\n\t\t\t\t\t\"Save important data using this node. It will be displayed on each execution for easy reference and you can filter by it.<br />Filtering is available on Pro and Enterprise plans. <a href='https://n8n.io/pricing/' target='_blank'>More Info</a>\",\n\t\t\t\tname: 'notice',\n\t\t\t\ttype: 'notice',\n\t\t\t\tdefault: '',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tdefault: 'save',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Save Highlight Data (for Search/review)',\n\t\t\t\t\t\tvalue: 'save',\n\t\t\t\t\t\taction: 'Save Highlight Data (for search/review)',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Data to Save',\n\t\t\t\tname: 'dataToSave',\n\t\t\t\tplaceholder: 'Add Saved Field',\n\t\t\t\ttype: 'fixedCollection',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tmultipleValueButtonText: 'Add Saved Field',\n\t\t\t\t\tmultipleValues: true,\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['save'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: {},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Values',\n\t\t\t\t\t\tname: 'values',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Key',\n\t\t\t\t\t\t\t\tname: 'key',\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\tplaceholder: 'e.g. myKey',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Value',\n\t\t\t\t\t\t\t\tname: 'value',\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\tplaceholder: 'e.g. myValue',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t\thints: [\n\t\t\t{\n\t\t\t\ttype: 'warning',\n\t\t\t\tmessage: 'Some keys are longer than 50 characters. They will be truncated.',\n\t\t\t\tdisplayCondition: '={{ $parameter.dataToSave.values.some((x) => x.key.length > 50) }}',\n\t\t\t\twhenToDisplay: 'beforeExecution',\n\t\t\t\tlocation: 'outputPane',\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'warning',\n\t\t\t\tmessage: 'Some values are longer than 512 characters. They will be truncated.',\n\t\t\t\tdisplayCondition: '={{ $parameter.dataToSave.values.some((x) => x.value.length > 512) }}',\n\t\t\t\twhenToDisplay: 'beforeExecution',\n\t\t\t\tlocation: 'outputPane',\n\t\t\t},\n\t\t],\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst context = this.getWorkflowDataProxy(0);\n\n\t\tconst items = this.getInputData();\n\t\tconst operations = this.getNodeParameter('operation', 0);\n\n\t\tif (operations === 'save') {\n\t\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\t\tconst dataToSave =\n\t\t\t\t\t((this.getNodeParameter('dataToSave', i, {}) as IDataObject).values as IDataObject[]) ||\n\t\t\t\t\t[];\n\n\t\t\t\tconst values = dataToSave.reduce((acc, { key, value }) => {\n\t\t\t\t\tacc[key as string] = value;\n\t\t\t\t\treturn acc;\n\t\t\t\t}, {} as IDataObject);\n\n\t\t\t\tcontext.$execution.customData.setAll(values);\n\t\t\t}\n\t\t}\n\n\t\treturn [items];\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,0BAAoC;AAE7B,MAAM,cAAmC;AAAA,EAAzC;AACN,uBAAoC;AAAA,MACnC,aAAa;AAAA,MACb,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO,CAAC,OAAO;AAAA,MACf,WAAW;AAAA,MACX,SAAS;AAAA,MACT,aAAa;AAAA,MACb,UAAU;AAAA,QACT,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,MACA,QAAQ,CAAC,wCAAoB,IAAI;AAAA,MACjC,SAAS,CAAC,wCAAoB,IAAI;AAAA,MAClC,YAAY;AAAA,QACX;AAAA,UACC,aACC;AAAA,UACD,MAAM;AAAA,UACN,MAAM;AAAA,UACN,SAAS;AAAA,QACV;AAAA,QACA;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,SAAS;AAAA,UACT,kBAAkB;AAAA,UAClB,SAAS;AAAA,YACR;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,QAAQ;AAAA,YACT;AAAA,UACD;AAAA,QACD;AAAA,QACA;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,aAAa;AAAA,UACb,MAAM;AAAA,UACN,aAAa;AAAA,YACZ,yBAAyB;AAAA,YACzB,gBAAgB;AAAA,UACjB;AAAA,UACA,gBAAgB;AAAA,YACf,MAAM;AAAA,cACL,WAAW,CAAC,MAAM;AAAA,YACnB;AAAA,UACD;AAAA,UACA,SAAS,CAAC;AAAA,UACV,SAAS;AAAA,YACR;AAAA,cACC,aAAa;AAAA,cACb,MAAM;AAAA,cACN,QAAQ;AAAA,gBACP;AAAA,kBACC,aAAa;AAAA,kBACb,MAAM;AAAA,kBACN,MAAM;AAAA,kBACN,SAAS;AAAA,kBACT,aAAa;AAAA,gBACd;AAAA,gBACA;AAAA,kBACC,aAAa;AAAA,kBACb,MAAM;AAAA,kBACN,MAAM;AAAA,kBACN,SAAS;AAAA,kBACT,aAAa;AAAA,gBACd;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,MACA,OAAO;AAAA,QACN;AAAA,UACC,MAAM;AAAA,UACN,SAAS;AAAA,UACT,kBAAkB;AAAA,UAClB,eAAe;AAAA,UACf,UAAU;AAAA,QACX;AAAA,QACA;AAAA,UACC,MAAM;AAAA,UACN,SAAS;AAAA,UACT,kBAAkB;AAAA,UAClB,eAAe;AAAA,UACf,UAAU;AAAA,QACX;AAAA,MACD;AAAA,IACD;AAAA;AAAA,EAEA,MAAM,UAAkE;AACvE,UAAM,UAAU,KAAK,qBAAqB,CAAC;AAE3C,UAAM,QAAQ,KAAK,aAAa;AAChC,UAAM,aAAa,KAAK,iBAAiB,aAAa,CAAC;AAEvD,QAAI,eAAe,QAAQ;AAC1B,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACtC,cAAM,aACH,KAAK,iBAAiB,cAAc,GAAG,CAAC,CAAC,EAAkB,UAC7D,CAAC;AAEF,cAAM,SAAS,WAAW,OAAO,CAAC,KAAK,EAAE,KAAK,MAAM,MAAM;AACzD,cAAI,GAAa,IAAI;AACrB,iBAAO;AAAA,QACR,GAAG,CAAC,CAAgB;AAEpB,gBAAQ,WAAW,WAAW,OAAO,MAAM;AAAA,MAC5C;AAAA,IACD;AAEA,WAAO,CAAC,KAAK;AAAA,EACd;AACD;","names":[]}