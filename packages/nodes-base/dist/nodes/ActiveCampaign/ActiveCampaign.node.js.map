{"version":3,"sources":["../../../nodes/ActiveCampaign/ActiveCampaign.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n\tIHttpRequestMethods,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport { accountContactFields, accountContactOperations } from './AccountContactDescription';\nimport { accountFields, accountOperations } from './AccountDescription';\nimport { connectionFields, connectionOperations } from './ConnectionDescription';\nimport { contactFields, contactOperations } from './ContactDescription';\nimport { contactListFields, contactListOperations } from './ContactListDescription';\nimport { contactTagFields, contactTagOperations } from './ContactTagDescription';\nimport { dealFields, dealOperations } from './DealDescription';\nimport { ecomCustomerFields, ecomCustomerOperations } from './EcomCustomerDescription';\nimport { ecomOrderFields, ecomOrderOperations } from './EcomOrderDescription';\nimport {\n\tecomOrderProductsFields,\n\tecomOrderProductsOperations,\n} from './EcomOrderProductsDescription';\nimport { activeCampaignApiRequest, activeCampaignApiRequestAllItems } from './GenericFunctions';\nimport type { IProduct } from './GenericFunctions';\nimport { listFields, listOperations } from './ListDescription';\nimport { tagFields, tagOperations } from './TagDescription';\n\ninterface CustomProperty {\n\tname: string;\n\tvalue: string;\n}\n\n/**\n * Add the additional fields to the body\n *\n * @param {IDataObject} body The body object to add fields to\n * @param {IDataObject} additionalFields The fields to add\n */\nfunction addAdditionalFields(body: IDataObject, additionalFields: IDataObject) {\n\tfor (const key of Object.keys(additionalFields)) {\n\t\tif (\n\t\t\tkey === 'customProperties' &&\n\t\t\t(additionalFields.customProperties as IDataObject).property !== undefined\n\t\t) {\n\t\t\tfor (const customProperty of (additionalFields.customProperties as IDataObject)\n\t\t\t\t.property! as CustomProperty[]) {\n\t\t\t\tbody[customProperty.name] = customProperty.value;\n\t\t\t}\n\t\t} else if (\n\t\t\tkey === 'fieldValues' &&\n\t\t\t(additionalFields.fieldValues as IDataObject).property !== undefined\n\t\t) {\n\t\t\tbody.fieldValues = (additionalFields.fieldValues as IDataObject).property;\n\t\t} else if (\n\t\t\tkey === 'fields' &&\n\t\t\t(additionalFields.fields as IDataObject).property !== undefined\n\t\t) {\n\t\t\tbody.fields = (additionalFields.fields as IDataObject).property;\n\t\t} else {\n\t\t\tbody[key] = additionalFields[key];\n\t\t}\n\t}\n}\n\nexport class ActiveCampaign implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'ActiveCampaign',\n\t\tname: 'activeCampaign',\n\t\ticon: { light: 'file:activeCampaign.svg', dark: 'file:activeCampaign.dark.svg' },\n\t\tgroup: ['transform'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Create and edit data in ActiveCampaign',\n\t\tdefaults: {\n\t\t\tname: 'ActiveCampaign',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'activeCampaignApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t// ----------------------------------\n\t\t\t//         resources\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Account',\n\t\t\t\t\t\tvalue: 'account',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Account Contact',\n\t\t\t\t\t\tvalue: 'accountContact',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Connection',\n\t\t\t\t\t\tvalue: 'connection',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Contact',\n\t\t\t\t\t\tvalue: 'contact',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Contact List',\n\t\t\t\t\t\tvalue: 'contactList',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Contact Tag',\n\t\t\t\t\t\tvalue: 'contactTag',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Deal',\n\t\t\t\t\t\tvalue: 'deal',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'E-Commerce Customer',\n\t\t\t\t\t\tvalue: 'ecommerceCustomer',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'E-Commerce Order',\n\t\t\t\t\t\tvalue: 'ecommerceOrder',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'E-Commerce Order Product',\n\t\t\t\t\t\tvalue: 'ecommerceOrderProducts',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'List',\n\t\t\t\t\t\tvalue: 'list',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Tag',\n\t\t\t\t\t\tvalue: 'tag',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'contact',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         operations\n\t\t\t// ----------------------------------\n\t\t\t...accountOperations,\n\t\t\t...contactOperations,\n\t\t\t...accountContactOperations,\n\t\t\t...contactListOperations,\n\t\t\t...contactTagOperations,\n\t\t\t...listOperations,\n\t\t\t...tagOperations,\n\t\t\t...dealOperations,\n\t\t\t...connectionOperations,\n\t\t\t...ecomOrderOperations,\n\t\t\t...ecomCustomerOperations,\n\t\t\t...ecomOrderProductsOperations,\n\n\t\t\t// ----------------------------------\n\t\t\t//         fields\n\t\t\t// ----------------------------------\n\t\t\t// ----------------------------------\n\t\t\t//         tag\n\t\t\t// ----------------------------------\n\t\t\t...tagFields,\n\t\t\t// ----------------------------------\n\t\t\t//         list\n\t\t\t// ----------------------------------\n\t\t\t...listFields,\n\t\t\t// ----------------------------------\n\t\t\t// ----------------------------------\n\t\t\t//         tag\n\t\t\t// ----------------------------------\n\t\t\t...contactTagFields,\n\t\t\t// ----------------------------------\n\t\t\t//         Contact List\n\t\t\t// ----------------------------------\n\t\t\t...contactListFields,\n\t\t\t// ----------------------------------\n\t\t\t//         account\n\t\t\t// ----------------------------------\n\t\t\t...accountFields,\n\n\t\t\t// ----------------------------------\n\t\t\t//         account\n\t\t\t// ----------------------------------\n\t\t\t...accountContactFields,\n\n\t\t\t// ----------------------------------\n\t\t\t//         contact\n\t\t\t// ----------------------------------\n\t\t\t...contactFields,\n\n\t\t\t// ----------------------------------\n\t\t\t//         deal\n\t\t\t// ----------------------------------\n\t\t\t...dealFields,\n\n\t\t\t// ----------------------------------\n\t\t\t//         connection\n\t\t\t// ----------------------------------\n\t\t\t...connectionFields,\n\n\t\t\t// ----------------------------------\n\t\t\t//         ecommerceOrder\n\t\t\t// ----------------------------------\n\t\t\t...ecomOrderFields,\n\n\t\t\t// ----------------------------------\n\t\t\t//         ecommerceCustomer\n\t\t\t// ----------------------------------\n\t\t\t...ecomCustomerFields,\n\n\t\t\t// ----------------------------------\n\t\t\t//         ecommerceOrderProducts\n\t\t\t// ----------------------------------\n\t\t\t...ecomOrderProductsFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get all the available custom fields to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getContactCustomFields(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst { fields } = await activeCampaignApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/api/3/fields',\n\t\t\t\t\t{},\n\t\t\t\t\t{ limit: 100 },\n\t\t\t\t);\n\t\t\t\tfor (const field of fields) {\n\t\t\t\t\tconst fieldName = field.title;\n\t\t\t\t\tconst fieldId = field.id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: fieldName,\n\t\t\t\t\t\tvalue: fieldId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the available custom fields to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getAccountCustomFields(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst { accountCustomFieldMeta: fields } = await activeCampaignApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/api/3/accountCustomFieldMeta',\n\t\t\t\t\t{},\n\t\t\t\t\t{ limit: 100 },\n\t\t\t\t);\n\t\t\t\tfor (const field of fields) {\n\t\t\t\t\tconst fieldName = field.fieldLabel;\n\t\t\t\t\tconst fieldId = field.id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: fieldName,\n\t\t\t\t\t\tvalue: fieldId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the available tags to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getTags(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst tags = await activeCampaignApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/api/3/tags',\n\t\t\t\t\t{},\n\t\t\t\t\t{ limit: 100 },\n\t\t\t\t\t'tags',\n\t\t\t\t);\n\n\t\t\t\tfor (const tag of tags) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: tag.tag,\n\t\t\t\t\t\tvalue: tag.id,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\n\t\tlet resource: string;\n\t\tlet operation: string;\n\n\t\t// For Post\n\t\tlet body: IDataObject;\n\t\t// For Query string\n\t\tlet qs: IDataObject;\n\n\t\tlet requestMethod: IHttpRequestMethods;\n\t\tlet endpoint: string;\n\t\tlet returnAll = false;\n\t\tlet dataKey: string | undefined;\n\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\ttry {\n\t\t\t\tdataKey = undefined;\n\t\t\t\tresource = this.getNodeParameter('resource', 0);\n\t\t\t\toperation = this.getNodeParameter('operation', 0);\n\n\t\t\t\trequestMethod = 'GET';\n\t\t\t\tendpoint = '';\n\t\t\t\tbody = {} as IDataObject;\n\t\t\t\tqs = {} as IDataObject;\n\n\t\t\t\tif (resource === 'contact') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         contact:create\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'POST';\n\n\t\t\t\t\t\tconst updateIfExists = this.getNodeParameter('updateIfExists', i) as boolean;\n\t\t\t\t\t\tif (updateIfExists) {\n\t\t\t\t\t\t\tendpoint = '/api/3/contact/sync';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tendpoint = '/api/3/contacts';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdataKey = 'contact';\n\n\t\t\t\t\t\tbody.contact = {\n\t\t\t\t\t\t\temail: this.getNodeParameter('email', i) as string,\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\taddAdditionalFields(body.contact as IDataObject, additionalFields);\n\t\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         contact:delete\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'DELETE';\n\n\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i) as number;\n\t\t\t\t\t\tendpoint = `/api/3/contacts/${contactId}`;\n\t\t\t\t\t} else if (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         contact:get\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i) as number;\n\t\t\t\t\t\tendpoint = `/api/3/contacts/${contactId}`;\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         contacts:getAll\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\treturnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst simple = this.getNodeParameter('simple', i, true) as boolean;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tObject.assign(qs, additionalFields);\n\n\t\t\t\t\t\tif (qs.orderBy) {\n\t\t\t\t\t\t\tqs[qs.orderBy as string] = true;\n\t\t\t\t\t\t\tdelete qs.orderBy;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (simple) {\n\t\t\t\t\t\t\tdataKey = 'contacts';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tendpoint = '/api/3/contacts';\n\t\t\t\t\t} else if (operation === 'update') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         contact:update\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'PUT';\n\n\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i) as number;\n\t\t\t\t\t\tendpoint = `/api/3/contacts/${contactId}`;\n\n\t\t\t\t\t\tdataKey = 'contact';\n\n\t\t\t\t\t\tbody.contact = {} as IDataObject;\n\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\taddAdditionalFields(body.contact as IDataObject, updateFields);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t`The operation \"${operation}\" is not known`,\n\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'account') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         account:create\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'POST';\n\n\t\t\t\t\t\tendpoint = '/api/3/accounts';\n\n\t\t\t\t\t\tdataKey = 'account';\n\n\t\t\t\t\t\tbody.account = {\n\t\t\t\t\t\t\tname: this.getNodeParameter('name', i) as string,\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\taddAdditionalFields(body.account as IDataObject, additionalFields);\n\t\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         account:delete\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'DELETE';\n\n\t\t\t\t\t\tconst accountId = this.getNodeParameter('accountId', i) as number;\n\t\t\t\t\t\tendpoint = `/api/3/accounts/${accountId}`;\n\t\t\t\t\t} else if (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         account:get\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tconst accountId = this.getNodeParameter('accountId', i) as number;\n\t\t\t\t\t\tendpoint = `/api/3/accounts/${accountId}`;\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         account:getAll\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tconst simple = this.getNodeParameter('simple', i, true) as boolean;\n\t\t\t\t\t\treturnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (simple) {\n\t\t\t\t\t\t\tdataKey = 'accounts';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tendpoint = '/api/3/accounts';\n\n\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\t\t\t\t\t\tObject.assign(qs, filters);\n\t\t\t\t\t} else if (operation === 'update') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         account:update\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'PUT';\n\n\t\t\t\t\t\tconst accountId = this.getNodeParameter('accountId', i) as number;\n\t\t\t\t\t\tendpoint = `/api/3/accounts/${accountId}`;\n\n\t\t\t\t\t\tdataKey = 'account';\n\n\t\t\t\t\t\tbody.account = {} as IDataObject;\n\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\taddAdditionalFields(body.account as IDataObject, updateFields);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t`The operation \"${operation}\" is not known`,\n\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'accountContact') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         accountContact:create\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'POST';\n\n\t\t\t\t\t\tendpoint = '/api/3/accountContacts';\n\n\t\t\t\t\t\tdataKey = 'accountContact';\n\n\t\t\t\t\t\tbody.accountContact = {\n\t\t\t\t\t\t\tcontact: this.getNodeParameter('contact', i) as string,\n\t\t\t\t\t\t\taccount: this.getNodeParameter('account', i) as string,\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\taddAdditionalFields(body.accountContact as IDataObject, additionalFields);\n\t\t\t\t\t} else if (operation === 'update') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         accountContact:update\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'PUT';\n\n\t\t\t\t\t\tconst accountContactId = this.getNodeParameter('accountContactId', i) as number;\n\t\t\t\t\t\tendpoint = `/api/3/accountContacts/${accountContactId}`;\n\n\t\t\t\t\t\tdataKey = 'accountContact';\n\n\t\t\t\t\t\tbody.accountContact = {} as IDataObject;\n\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\taddAdditionalFields(body.accountContact as IDataObject, updateFields);\n\t\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         accountContact:delete\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'DELETE';\n\n\t\t\t\t\t\tconst accountContactId = this.getNodeParameter('accountContactId', i) as number;\n\t\t\t\t\t\tendpoint = `/api/3/accountContacts/${accountContactId}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t`The operation \"${operation}\" is not known`,\n\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'contactTag') {\n\t\t\t\t\tif (operation === 'add') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         contactTag:add\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'POST';\n\n\t\t\t\t\t\tendpoint = '/api/3/contactTags';\n\n\t\t\t\t\t\tdataKey = 'contactTag';\n\n\t\t\t\t\t\tbody.contactTag = {\n\t\t\t\t\t\t\tcontact: this.getNodeParameter('contactId', i) as string,\n\t\t\t\t\t\t\ttag: this.getNodeParameter('tagId', i) as string,\n\t\t\t\t\t\t} as IDataObject;\n\t\t\t\t\t} else if (operation === 'remove') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         contactTag:remove\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'DELETE';\n\n\t\t\t\t\t\tconst contactTagId = this.getNodeParameter('contactTagId', i) as number;\n\t\t\t\t\t\tendpoint = `/api/3/contactTags/${contactTagId}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t`The operation \"${operation}\" is not known`,\n\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'contactList') {\n\t\t\t\t\tif (operation === 'add') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         contactList:add\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'POST';\n\n\t\t\t\t\t\tendpoint = '/api/3/contactLists';\n\n\t\t\t\t\t\tdataKey = 'contactTag';\n\n\t\t\t\t\t\tbody.contactList = {\n\t\t\t\t\t\t\tlist: this.getNodeParameter('listId', i) as string,\n\t\t\t\t\t\t\tcontact: this.getNodeParameter('contactId', i) as string,\n\t\t\t\t\t\t\tstatus: 1,\n\t\t\t\t\t\t} as IDataObject;\n\t\t\t\t\t} else if (operation === 'remove') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         contactList:remove\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'POST';\n\n\t\t\t\t\t\tendpoint = '/api/3/contactLists';\n\n\t\t\t\t\t\tbody.contactList = {\n\t\t\t\t\t\t\tlist: this.getNodeParameter('listId', i) as string,\n\t\t\t\t\t\t\tcontact: this.getNodeParameter('contactId', i) as string,\n\t\t\t\t\t\t\tstatus: 2,\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tdataKey = 'contacts';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t`The operation \"${operation}\" is not known`,\n\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'list') {\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         list:getAll\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\treturnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst simple = this.getNodeParameter('simple', i, true) as boolean;\n\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (simple) {\n\t\t\t\t\t\t\tdataKey = 'lists';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tendpoint = '/api/3/lists';\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'tag') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         tag:create\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'POST';\n\n\t\t\t\t\t\tendpoint = '/api/3/tags';\n\n\t\t\t\t\t\tdataKey = 'tag';\n\n\t\t\t\t\t\tbody.tag = {\n\t\t\t\t\t\t\ttag: this.getNodeParameter('name', i) as string,\n\t\t\t\t\t\t\ttagType: this.getNodeParameter('tagType', i) as string,\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\taddAdditionalFields(body.tag as IDataObject, additionalFields);\n\t\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         tag:delete\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'DELETE';\n\n\t\t\t\t\t\tconst tagId = this.getNodeParameter('tagId', i) as number;\n\t\t\t\t\t\tendpoint = `/api/3/tags/${tagId}`;\n\t\t\t\t\t} else if (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         tag:get\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tconst tagId = this.getNodeParameter('tagId', i) as number;\n\t\t\t\t\t\tendpoint = `/api/3/tags/${tagId}`;\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         tags:getAll\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tconst simple = this.getNodeParameter('simple', i, true) as boolean;\n\t\t\t\t\t\treturnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (simple) {\n\t\t\t\t\t\t\tdataKey = 'tags';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tendpoint = '/api/3/tags';\n\t\t\t\t\t} else if (operation === 'update') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         tags:update\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'PUT';\n\n\t\t\t\t\t\tconst tagId = this.getNodeParameter('tagId', i) as number;\n\t\t\t\t\t\tendpoint = `/api/3/tags/${tagId}`;\n\n\t\t\t\t\t\tdataKey = 'tag';\n\n\t\t\t\t\t\tbody.tag = {} as IDataObject;\n\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\taddAdditionalFields(body.tag as IDataObject, updateFields);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t`The operation \"${operation}\" is not known`,\n\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'deal') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         deal:create\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'POST';\n\n\t\t\t\t\t\tendpoint = '/api/3/deals';\n\n\t\t\t\t\t\tbody.deal = {\n\t\t\t\t\t\t\ttitle: this.getNodeParameter('title', i) as string,\n\t\t\t\t\t\t\tcontact: this.getNodeParameter('contact', i) as string,\n\t\t\t\t\t\t\tvalue: this.getNodeParameter('value', i) as number,\n\t\t\t\t\t\t\tcurrency: this.getNodeParameter('currency', i) as string,\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tconst group = this.getNodeParameter('group', i) as string;\n\t\t\t\t\t\tif (group !== '') {\n\t\t\t\t\t\t\taddAdditionalFields(body.deal as IDataObject, { group });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst owner = this.getNodeParameter('owner', i) as string;\n\t\t\t\t\t\tif (owner !== '') {\n\t\t\t\t\t\t\taddAdditionalFields(body.deal as IDataObject, { owner });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst stage = this.getNodeParameter('stage', i) as string;\n\t\t\t\t\t\tif (stage !== '') {\n\t\t\t\t\t\t\taddAdditionalFields(body.deal as IDataObject, { stage });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\taddAdditionalFields(body.deal as IDataObject, additionalFields);\n\t\t\t\t\t} else if (operation === 'update') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         deal:update\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'PUT';\n\n\t\t\t\t\t\tconst dealId = this.getNodeParameter('dealId', i) as number;\n\t\t\t\t\t\tendpoint = `/api/3/deals/${dealId}`;\n\n\t\t\t\t\t\tbody.deal = {} as IDataObject;\n\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\taddAdditionalFields(body.deal as IDataObject, updateFields);\n\t\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         deal:delete\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'DELETE';\n\n\t\t\t\t\t\tconst dealId = this.getNodeParameter('dealId', i) as number;\n\t\t\t\t\t\tendpoint = `/api/3/deals/${dealId}`;\n\t\t\t\t\t} else if (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         deal:get\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tconst dealId = this.getNodeParameter('dealId', i) as number;\n\t\t\t\t\t\tendpoint = `/api/3/deals/${dealId}`;\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         deals:getAll\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tconst simple = this.getNodeParameter('simple', i, true) as boolean;\n\t\t\t\t\t\treturnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (simple) {\n\t\t\t\t\t\t\tdataKey = 'deals';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tendpoint = '/api/3/deals';\n\t\t\t\t\t} else if (operation === 'createNote') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         deal:createNote\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\trequestMethod = 'POST';\n\n\t\t\t\t\t\tbody.note = {\n\t\t\t\t\t\t\tnote: this.getNodeParameter('dealNote', i) as string,\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tconst dealId = this.getNodeParameter('dealId', i) as number;\n\t\t\t\t\t\tendpoint = `/api/3/deals/${dealId}/notes`;\n\t\t\t\t\t} else if (operation === 'updateNote') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         deal:updateNote\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\trequestMethod = 'PUT';\n\n\t\t\t\t\t\tbody.note = {\n\t\t\t\t\t\t\tnote: this.getNodeParameter('dealNote', i) as string,\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tconst dealId = this.getNodeParameter('dealId', i) as number;\n\t\t\t\t\t\tconst dealNoteId = this.getNodeParameter('dealNoteId', i) as number;\n\t\t\t\t\t\tendpoint = `/api/3/deals/${dealId}/notes/${dealNoteId}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t`The operation \"${operation}\" is not known`,\n\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'connection') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         connection:create\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'POST';\n\n\t\t\t\t\t\tendpoint = '/api/3/connections';\n\n\t\t\t\t\t\tbody.connection = {\n\t\t\t\t\t\t\tservice: this.getNodeParameter('service', i) as string,\n\t\t\t\t\t\t\texternalid: this.getNodeParameter('externalid', i) as string,\n\t\t\t\t\t\t\tname: this.getNodeParameter('name', i) as string,\n\t\t\t\t\t\t\tlogoUrl: this.getNodeParameter('logoUrl', i) as string,\n\t\t\t\t\t\t\tlinkUrl: this.getNodeParameter('linkUrl', i) as string,\n\t\t\t\t\t\t} as IDataObject;\n\t\t\t\t\t} else if (operation === 'update') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         connection:update\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'PUT';\n\n\t\t\t\t\t\tconst connectionId = this.getNodeParameter('connectionId', i) as number;\n\t\t\t\t\t\tendpoint = `/api/3/connections/${connectionId}`;\n\n\t\t\t\t\t\tbody.connection = {} as IDataObject;\n\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\taddAdditionalFields(body.connection as IDataObject, updateFields);\n\t\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         connection:delete\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'DELETE';\n\n\t\t\t\t\t\tconst connectionId = this.getNodeParameter('connectionId', i) as number;\n\t\t\t\t\t\tendpoint = `/api/3/connections/${connectionId}`;\n\t\t\t\t\t} else if (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         connection:get\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tconst connectionId = this.getNodeParameter('connectionId', i) as number;\n\t\t\t\t\t\tendpoint = `/api/3/connections/${connectionId}`;\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         connections:getAll\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tconst simple = this.getNodeParameter('simple', i, true) as boolean;\n\t\t\t\t\t\treturnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (simple) {\n\t\t\t\t\t\t\tdataKey = 'connections';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tendpoint = '/api/3/connections';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t`The operation \"${operation}\" is not known`,\n\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'ecommerceOrder') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         ecommerceOrder:create\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'POST';\n\n\t\t\t\t\t\tendpoint = '/api/3/ecomOrders';\n\n\t\t\t\t\t\tbody.ecomOrder = {\n\t\t\t\t\t\t\tsource: this.getNodeParameter('source', i) as string,\n\t\t\t\t\t\t\temail: this.getNodeParameter('email', i) as string,\n\t\t\t\t\t\t\ttotalPrice: this.getNodeParameter('totalPrice', i) as number,\n\t\t\t\t\t\t\tcurrency: this.getNodeParameter('currency', i)!.toString().toUpperCase(),\n\t\t\t\t\t\t\texternalCreatedDate: this.getNodeParameter('externalCreatedDate', i) as string,\n\t\t\t\t\t\t\tconnectionid: this.getNodeParameter('connectionid', i) as number,\n\t\t\t\t\t\t\tcustomerid: this.getNodeParameter('customerid', i) as number,\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tconst externalid = this.getNodeParameter('externalid', i) as string;\n\t\t\t\t\t\tif (externalid !== '') {\n\t\t\t\t\t\t\taddAdditionalFields(body.ecomOrder as IDataObject, { externalid });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst externalcheckoutid = this.getNodeParameter('externalcheckoutid', i) as string;\n\t\t\t\t\t\tif (externalcheckoutid !== '') {\n\t\t\t\t\t\t\taddAdditionalFields(body.ecomOrder as IDataObject, { externalcheckoutid });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst abandonedDate = this.getNodeParameter('abandonedDate', i) as string;\n\t\t\t\t\t\tif (abandonedDate !== '') {\n\t\t\t\t\t\t\taddAdditionalFields(body.ecomOrder as IDataObject, { abandonedDate });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst orderProducts = this.getNodeParameter(\n\t\t\t\t\t\t\t'orderProducts',\n\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t) as unknown as IProduct[];\n\t\t\t\t\t\taddAdditionalFields(body.ecomOrder as IDataObject, { orderProducts });\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\taddAdditionalFields(body.ecomOrder as IDataObject, additionalFields);\n\t\t\t\t\t} else if (operation === 'update') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         ecommerceOrder:update\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'PUT';\n\n\t\t\t\t\t\tconst orderId = this.getNodeParameter('orderId', i) as number;\n\t\t\t\t\t\tendpoint = `/api/3/ecomOrders/${orderId}`;\n\n\t\t\t\t\t\tbody.ecomOrder = {} as IDataObject;\n\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\taddAdditionalFields(body.ecomOrder as IDataObject, updateFields);\n\t\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         ecommerceOrder:delete\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'DELETE';\n\n\t\t\t\t\t\tconst orderId = this.getNodeParameter('orderId', i) as number;\n\t\t\t\t\t\tendpoint = `/api/3/ecomOrders/${orderId}`;\n\t\t\t\t\t} else if (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         ecommerceOrder:get\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tconst orderId = this.getNodeParameter('orderId', i) as number;\n\t\t\t\t\t\tendpoint = `/api/3/ecomOrders/${orderId}`;\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         ecommerceOrders:getAll\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tconst simple = this.getNodeParameter('simple', i, true) as boolean;\n\t\t\t\t\t\treturnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (simple) {\n\t\t\t\t\t\t\tdataKey = 'ecomOrders';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tendpoint = '/api/3/ecomOrders';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t`The operation \"${operation}\" is not known`,\n\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'ecommerceCustomer') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         ecommerceCustomer:create\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'POST';\n\n\t\t\t\t\t\tendpoint = '/api/3/ecomCustomers';\n\n\t\t\t\t\t\tbody.ecomCustomer = {\n\t\t\t\t\t\t\tconnectionid: this.getNodeParameter('connectionid', i) as string,\n\t\t\t\t\t\t\texternalid: this.getNodeParameter('externalid', i) as string,\n\t\t\t\t\t\t\temail: this.getNodeParameter('email', i) as string,\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tif (additionalFields.acceptsMarketing !== undefined) {\n\t\t\t\t\t\t\tif (additionalFields.acceptsMarketing === true) {\n\t\t\t\t\t\t\t\tadditionalFields.acceptsMarketing = '1';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tadditionalFields.acceptsMarketing = '0';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\taddAdditionalFields(body.ecomCustomer as IDataObject, additionalFields);\n\t\t\t\t\t} else if (operation === 'update') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         ecommerceCustomer:update\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'PUT';\n\n\t\t\t\t\t\tconst ecommerceCustomerId = this.getNodeParameter('ecommerceCustomerId', i) as number;\n\t\t\t\t\t\tendpoint = `/api/3/ecomCustomers/${ecommerceCustomerId}`;\n\n\t\t\t\t\t\tbody.ecomCustomer = {} as IDataObject;\n\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\tif (updateFields.acceptsMarketing !== undefined) {\n\t\t\t\t\t\t\tif (updateFields.acceptsMarketing === true) {\n\t\t\t\t\t\t\t\tupdateFields.acceptsMarketing = '1';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tupdateFields.acceptsMarketing = '0';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\taddAdditionalFields(body.ecomCustomer as IDataObject, updateFields);\n\t\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         ecommerceCustomer:delete\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'DELETE';\n\n\t\t\t\t\t\tconst ecommerceCustomerId = this.getNodeParameter('ecommerceCustomerId', i) as number;\n\t\t\t\t\t\tendpoint = `/api/3/ecomCustomers/${ecommerceCustomerId}`;\n\t\t\t\t\t} else if (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         ecommerceCustomer:get\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tconst ecommerceCustomerId = this.getNodeParameter('ecommerceCustomerId', i) as number;\n\t\t\t\t\t\tendpoint = `/api/3/ecomCustomers/${ecommerceCustomerId}`;\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         ecommerceCustomers:getAll\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tconst simple = this.getNodeParameter('simple', i, true) as boolean;\n\t\t\t\t\t\treturnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (simple) {\n\t\t\t\t\t\t\tdataKey = 'ecomCustomers';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tendpoint = '/api/3/ecomCustomers';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t`The operation \"${operation}\" is not known`,\n\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'ecommerceOrderProducts') {\n\t\t\t\t\tif (operation === 'getByProductId') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         ecommerceOrderProducts:getByProductId\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tconst procuctId = this.getNodeParameter('procuctId', i) as number;\n\t\t\t\t\t\tendpoint = `/api/3/ecomOrderProducts/${procuctId}`;\n\t\t\t\t\t} else if (operation === 'getByOrderId') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         ecommerceOrderProducts:getByOrderId\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\t//dataKey = 'ecomOrderProducts';\n\n\t\t\t\t\t\tconst orderId = this.getNodeParameter('orderId', i) as number;\n\t\t\t\t\t\tendpoint = `/api/3/ecomOrders/${orderId}/orderProducts`;\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         ecommerceOrderProductss:getAll\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tconst simple = this.getNodeParameter('simple', i, true) as boolean;\n\t\t\t\t\t\treturnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (simple) {\n\t\t\t\t\t\t\tdataKey = 'ecomOrderProducts';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tendpoint = '/api/3/ecomOrderProducts';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t`The operation \"${operation}\" is not known`,\n\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new NodeOperationError(this.getNode(), `The resource \"${resource}\" is not known!`, {\n\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tlet responseData;\n\t\t\t\tif (returnAll) {\n\t\t\t\t\tresponseData = await activeCampaignApiRequestAllItems.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\trequestMethod,\n\t\t\t\t\t\tendpoint,\n\t\t\t\t\t\tbody,\n\t\t\t\t\t\tqs,\n\t\t\t\t\t\tdataKey,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tresponseData = await activeCampaignApiRequest.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\trequestMethod,\n\t\t\t\t\t\tendpoint,\n\t\t\t\t\t\tbody,\n\t\t\t\t\t\tqs,\n\t\t\t\t\t\tdataKey,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (resource === 'contactList' && operation === 'add' && responseData === undefined) {\n\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t}\n\n\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t);\n\n\t\t\t\treturnData.push(...executionData);\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":[]}