{"version":3,"sources":["../../../nodes/Mautic/Mautic.node.ts"],"sourcesContent":["import { snakeCase } from 'change-case';\nimport type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n\tJsonObject,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeApiError, NodeOperationError } from 'n8n-workflow';\n\nimport { campaignContactFields, campaignContactOperations } from './CampaignContactDescription';\nimport { companyContactFields, companyContactOperations } from './CompanyContactDescription';\nimport { companyFields, companyOperations } from './CompanyDescription';\nimport { contactFields, contactOperations } from './ContactDescription';\nimport { contactSegmentFields, contactSegmentOperations } from './ContactSegmentDescription';\nimport { mauticApiRequest, mauticApiRequestAllItems, validateJSON } from './GenericFunctions';\nimport { segmentEmailFields, segmentEmailOperations } from './SegmentEmailDescription';\n\nexport class Mautic implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Mautic',\n\t\tname: 'mautic',\n\t\ticon: 'file:mautic.svg',\n\t\tgroup: ['output'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume Mautic API',\n\t\tdefaults: {\n\t\t\tname: 'Mautic',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'mauticApi',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['credentials'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'mauticOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['oAuth2'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Authentication',\n\t\t\t\tname: 'authentication',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Credentials',\n\t\t\t\t\t\tvalue: 'credentials',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'OAuth2',\n\t\t\t\t\t\tvalue: 'oAuth2',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'credentials',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Campaign Contact',\n\t\t\t\t\t\tvalue: 'campaignContact',\n\t\t\t\t\t\tdescription: 'Add/remove contacts to/from a campaign',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Company',\n\t\t\t\t\t\tvalue: 'company',\n\t\t\t\t\t\tdescription: 'Create or modify a company',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Company Contact',\n\t\t\t\t\t\tvalue: 'companyContact',\n\t\t\t\t\t\tdescription: 'Add/remove contacts to/from a company',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Contact',\n\t\t\t\t\t\tvalue: 'contact',\n\t\t\t\t\t\tdescription: 'Create & modify contacts',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Contact Segment',\n\t\t\t\t\t\tvalue: 'contactSegment',\n\t\t\t\t\t\tdescription: 'Add/remove contacts to/from a segment',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Segment Email',\n\t\t\t\t\t\tvalue: 'segmentEmail',\n\t\t\t\t\t\tdescription: 'Send an email',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'contact',\n\t\t\t},\n\t\t\t...companyOperations,\n\t\t\t...companyFields,\n\t\t\t...contactOperations,\n\t\t\t...contactFields,\n\t\t\t...contactSegmentOperations,\n\t\t\t...contactSegmentFields,\n\t\t\t...campaignContactOperations,\n\t\t\t...campaignContactFields,\n\t\t\t...companyContactOperations,\n\t\t\t...companyContactFields,\n\t\t\t...segmentEmailOperations,\n\t\t\t...segmentEmailFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get all the available companies to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getCompanies(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst companies = await mauticApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'companies',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/companies',\n\t\t\t\t);\n\t\t\t\tfor (const company of companies) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: company.fields.all.companyname,\n\t\t\t\t\t\tvalue: company.fields.all.companyname,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the available tags to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getTags(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst tags = await mauticApiRequestAllItems.call(this, 'tags', 'GET', '/tags');\n\t\t\t\tfor (const tag of tags) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: tag.tag,\n\t\t\t\t\t\tvalue: tag.tag,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the available stages to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getStages(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst stages = await mauticApiRequestAllItems.call(this, 'stages', 'GET', '/stages');\n\t\t\t\tfor (const stage of stages) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: stage.name,\n\t\t\t\t\t\tvalue: stage.id,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the available company fields to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getCompanyFields(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst fields = await mauticApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'fields',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/fields/company',\n\t\t\t\t);\n\t\t\t\tfor (const field of fields) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: field.label,\n\t\t\t\t\t\tvalue: field.alias,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\tasync getIndustries(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst fields = await mauticApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'fields',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/fields/company',\n\t\t\t\t);\n\t\t\t\tfor (const field of fields) {\n\t\t\t\t\tif (field.alias === 'companyindustry') {\n\t\t\t\t\t\tfor (const { label, value } of field.properties.list) {\n\t\t\t\t\t\t\treturnData.push({\n\t\t\t\t\t\t\t\tname: label,\n\t\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the available contact fields to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getContactFields(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst fields = await mauticApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'fields',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/fields/contact',\n\t\t\t\t);\n\t\t\t\tfor (const field of fields) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: field.label,\n\t\t\t\t\t\tvalue: field.alias,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the available segments to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getSegments(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst segments = await mauticApiRequestAllItems.call(this, 'lists', 'GET', '/segments');\n\t\t\t\tfor (const segment of segments) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: segment.name,\n\t\t\t\t\t\tvalue: segment.id,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the available campaings to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getCampaigns(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst campaings = await mauticApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'campaigns',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/campaigns',\n\t\t\t\t);\n\t\t\t\tfor (const campaign of campaings) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: campaign.name,\n\t\t\t\t\t\tvalue: campaign.id,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the available emails to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getEmails(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst emails = await mauticApiRequestAllItems.call(this, 'emails', 'GET', '/emails');\n\t\t\t\tfor (const email of emails) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: email.name,\n\t\t\t\t\t\tvalue: email.id,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the available list / segment emails to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getSegmentEmails(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst emails = await mauticApiRequestAllItems.call(this, 'emails', 'GET', '/emails');\n\t\t\t\tfor (const email of emails) {\n\t\t\t\t\tif (email.emailType === 'list') {\n\t\t\t\t\t\treturnData.push({\n\t\t\t\t\t\t\tname: email.name,\n\t\t\t\t\t\t\tvalue: email.id,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the available campaign / template emails to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getCampaignEmails(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst emails = await mauticApiRequestAllItems.call(this, 'emails', 'GET', '/emails');\n\t\t\t\tfor (const email of emails) {\n\t\t\t\t\tif (email.emailType === 'template') {\n\t\t\t\t\t\treturnData.push({\n\t\t\t\t\t\t\tname: email.name,\n\t\t\t\t\t\t\tvalue: email.id,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst length = items.length;\n\t\tlet qs: IDataObject;\n\t\tlet responseData;\n\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tqs = {};\n\t\t\ttry {\n\t\t\t\tif (resource === 'company') {\n\t\t\t\t\t//https://developer.mautic.org/#create-company\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst simple = this.getNodeParameter('simple', i) as boolean;\n\t\t\t\t\t\tconst name = this.getNodeParameter('name', i) as string;\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tcompanyname: name,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\taddressUi,\n\t\t\t\t\t\t\tcustomFieldsUi,\n\t\t\t\t\t\t\tcompanyEmail,\n\t\t\t\t\t\t\tfax,\n\t\t\t\t\t\t\tindustry,\n\t\t\t\t\t\t\tnumberOfEmpoyees,\n\t\t\t\t\t\t\tphone,\n\t\t\t\t\t\t\twebsite,\n\t\t\t\t\t\t\tannualRevenue,\n\t\t\t\t\t\t\tdescription,\n\t\t\t\t\t\t\t...rest\n\t\t\t\t\t\t} = this.getNodeParameter('additionalFields', i) as {\n\t\t\t\t\t\t\taddressUi: {\n\t\t\t\t\t\t\t\taddressValues: IDataObject;\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcustomFieldsUi: {\n\t\t\t\t\t\t\t\tcustomFieldValues: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tfieldId: string;\n\t\t\t\t\t\t\t\t\t\tfieldValue: string;\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcompanyEmail: string;\n\t\t\t\t\t\t\tfax: string;\n\t\t\t\t\t\t\tindustry: string;\n\t\t\t\t\t\t\tnumberOfEmpoyees: number;\n\t\t\t\t\t\t\tphone: string;\n\t\t\t\t\t\t\twebsite: string;\n\t\t\t\t\t\t\tannualRevenue: number;\n\t\t\t\t\t\t\tdescription: string;\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (addressUi?.addressValues) {\n\t\t\t\t\t\t\tconst { addressValues } = addressUi;\n\t\t\t\t\t\t\tbody.companyaddress1 = addressValues.address1 as string;\n\t\t\t\t\t\t\tbody.companyaddress2 = addressValues.address2 as string;\n\t\t\t\t\t\t\tbody.companycity = addressValues.city as string;\n\t\t\t\t\t\t\tbody.companystate = addressValues.state as string;\n\t\t\t\t\t\t\tbody.companycountry = addressValues.country as string;\n\t\t\t\t\t\t\tbody.companyzipcode = addressValues.zipCode as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (companyEmail) {\n\t\t\t\t\t\t\tbody.companyemail = companyEmail;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (fax) {\n\t\t\t\t\t\t\tbody.companyfax = fax;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (industry) {\n\t\t\t\t\t\t\tbody.companyindustry = industry;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (industry) {\n\t\t\t\t\t\t\tbody.companyindustry = industry;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (numberOfEmpoyees) {\n\t\t\t\t\t\t\tbody.companynumber_of_employees = numberOfEmpoyees;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (phone) {\n\t\t\t\t\t\t\tbody.companyphone = phone;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (website) {\n\t\t\t\t\t\t\tbody.companywebsite = website;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (annualRevenue) {\n\t\t\t\t\t\t\tbody.companyannual_revenue = annualRevenue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (description) {\n\t\t\t\t\t\t\tbody.companydescription = description;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (customFieldsUi?.customFieldValues) {\n\t\t\t\t\t\t\tconst { customFieldValues } = customFieldsUi;\n\t\t\t\t\t\t\tconst data = customFieldValues.reduce(\n\t\t\t\t\t\t\t\t(obj, value) => Object.assign(obj, { [`${value.fieldId}`]: value.fieldValue }),\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tObject.assign(body, data);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tObject.assign(body, rest);\n\t\t\t\t\t\tresponseData = await mauticApiRequest.call(this, 'POST', '/companies/new', body);\n\t\t\t\t\t\tresponseData = responseData.company;\n\t\t\t\t\t\tif (simple) {\n\t\t\t\t\t\t\tresponseData = responseData.fields.all;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.mautic.org/#edit-company\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst companyId = this.getNodeParameter('companyId', i) as string;\n\t\t\t\t\t\tconst simple = this.getNodeParameter('simple', i) as boolean;\n\t\t\t\t\t\tconst body: IDataObject = {};\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\taddressUi,\n\t\t\t\t\t\t\tcustomFieldsUi,\n\t\t\t\t\t\t\tcompanyEmail,\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tfax,\n\t\t\t\t\t\t\tindustry,\n\t\t\t\t\t\t\tnumberOfEmpoyees,\n\t\t\t\t\t\t\tphone,\n\t\t\t\t\t\t\twebsite,\n\t\t\t\t\t\t\tannualRevenue,\n\t\t\t\t\t\t\tdescription,\n\t\t\t\t\t\t\t...rest\n\t\t\t\t\t\t} = this.getNodeParameter('updateFields', i) as {\n\t\t\t\t\t\t\taddressUi: {\n\t\t\t\t\t\t\t\taddressValues: IDataObject;\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcustomFieldsUi: {\n\t\t\t\t\t\t\t\tcustomFieldValues: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tfieldId: string;\n\t\t\t\t\t\t\t\t\t\tfieldValue: string;\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcompanyEmail: string;\n\t\t\t\t\t\t\tname: string;\n\t\t\t\t\t\t\tfax: string;\n\t\t\t\t\t\t\tindustry: string;\n\t\t\t\t\t\t\tnumberOfEmpoyees: number;\n\t\t\t\t\t\t\tphone: string;\n\t\t\t\t\t\t\twebsite: string;\n\t\t\t\t\t\t\tannualRevenue: number;\n\t\t\t\t\t\t\tdescription: string;\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (addressUi?.addressValues) {\n\t\t\t\t\t\t\tconst { addressValues } = addressUi;\n\t\t\t\t\t\t\tbody.companyaddress1 = addressValues.address1 as string;\n\t\t\t\t\t\t\tbody.companyaddress2 = addressValues.address2 as string;\n\t\t\t\t\t\t\tbody.companycity = addressValues.city as string;\n\t\t\t\t\t\t\tbody.companystate = addressValues.state as string;\n\t\t\t\t\t\t\tbody.companycountry = addressValues.country as string;\n\t\t\t\t\t\t\tbody.companyzipcode = addressValues.zipCode as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (companyEmail) {\n\t\t\t\t\t\t\tbody.companyemail = companyEmail;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (name) {\n\t\t\t\t\t\t\tbody.companyname = name;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (fax) {\n\t\t\t\t\t\t\tbody.companyfax = fax;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (industry) {\n\t\t\t\t\t\t\tbody.companyindustry = industry;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (industry) {\n\t\t\t\t\t\t\tbody.companyindustry = industry;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (numberOfEmpoyees) {\n\t\t\t\t\t\t\tbody.companynumber_of_employees = numberOfEmpoyees;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (phone) {\n\t\t\t\t\t\t\tbody.companyphone = phone;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (website) {\n\t\t\t\t\t\t\tbody.companywebsite = website;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (annualRevenue) {\n\t\t\t\t\t\t\tbody.companyannual_revenue = annualRevenue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (description) {\n\t\t\t\t\t\t\tbody.companydescription = description;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (customFieldsUi?.customFieldValues) {\n\t\t\t\t\t\t\tconst { customFieldValues } = customFieldsUi;\n\t\t\t\t\t\t\tconst data = customFieldValues.reduce(\n\t\t\t\t\t\t\t\t(obj, value) => Object.assign(obj, { [`${value.fieldId}`]: value.fieldValue }),\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tObject.assign(body, data);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tObject.assign(body, rest);\n\n\t\t\t\t\t\tresponseData = await mauticApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PATCH',\n\t\t\t\t\t\t\t`/companies/${companyId}/edit`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.company;\n\t\t\t\t\t\tif (simple) {\n\t\t\t\t\t\t\tresponseData = responseData.fields.all;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.mautic.org/#get-company\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst companyId = this.getNodeParameter('companyId', i) as string;\n\t\t\t\t\t\tconst simple = this.getNodeParameter('simple', i) as boolean;\n\t\t\t\t\t\tresponseData = await mauticApiRequest.call(this, 'GET', `/companies/${companyId}`);\n\t\t\t\t\t\tresponseData = responseData.company;\n\t\t\t\t\t\tif (simple) {\n\t\t\t\t\t\t\tresponseData = responseData.fields.all;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.mautic.org/#list-contact-companies\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst simple = this.getNodeParameter('simple', i) as boolean;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tqs = Object.assign(qs, additionalFields);\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await mauticApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'companies',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/companies',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tqs.start = 0;\n\t\t\t\t\t\t\tresponseData = await mauticApiRequest.call(this, 'GET', '/companies', {}, qs);\n\t\t\t\t\t\t\tif (responseData.errors) {\n\t\t\t\t\t\t\t\tthrow new NodeApiError(this.getNode(), responseData as JsonObject);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tresponseData = responseData.companies;\n\t\t\t\t\t\t\tresponseData = Object.values(responseData as IDataObject[]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (simple) {\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tresponseData = responseData.map((item) => item.fields.all);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.mautic.org/#delete-company\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst simple = this.getNodeParameter('simple', i) as boolean;\n\t\t\t\t\t\tconst companyId = this.getNodeParameter('companyId', i) as string;\n\t\t\t\t\t\tresponseData = await mauticApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/companies/${companyId}/delete`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.company;\n\t\t\t\t\t\tif (simple) {\n\t\t\t\t\t\t\tresponseData = responseData.fields.all;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (resource === 'contact') {\n\t\t\t\t\t//https://developer.mautic.org/?php#create-contact\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst jsonActive = this.getNodeParameter('jsonParameters', i);\n\t\t\t\t\t\tlet body: IDataObject = {};\n\t\t\t\t\t\tif (!jsonActive) {\n\t\t\t\t\t\t\tbody.email = this.getNodeParameter('email', i) as string;\n\t\t\t\t\t\t\tbody.firstname = this.getNodeParameter('firstName', i) as string;\n\t\t\t\t\t\t\tbody.lastname = this.getNodeParameter('lastName', i) as string;\n\t\t\t\t\t\t\tbody.company = this.getNodeParameter('company', i) as string;\n\t\t\t\t\t\t\tbody.position = this.getNodeParameter('position', i) as string;\n\t\t\t\t\t\t\tbody.title = this.getNodeParameter('title', i) as string;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst json = validateJSON(this.getNodeParameter('bodyJson', i) as string);\n\t\t\t\t\t\t\tif (json !== undefined) {\n\t\t\t\t\t\t\t\tbody = { ...json };\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'Invalid JSON', { itemIndex: i });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.ipAddress) {\n\t\t\t\t\t\t\tbody.ipAddress = additionalFields.ipAddress as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.lastActive) {\n\t\t\t\t\t\t\tbody.lastActive = additionalFields.lastActive as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.ownerId) {\n\t\t\t\t\t\t\tbody.owner = additionalFields.ownerId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.addressUi) {\n\t\t\t\t\t\t\tconst addressValues = (additionalFields.addressUi as IDataObject)\n\t\t\t\t\t\t\t\t.addressValues as IDataObject;\n\t\t\t\t\t\t\tif (addressValues) {\n\t\t\t\t\t\t\t\tbody.address1 = addressValues.address1 as string;\n\t\t\t\t\t\t\t\tbody.address2 = addressValues.address2 as string;\n\t\t\t\t\t\t\t\tbody.city = addressValues.city as string;\n\t\t\t\t\t\t\t\tbody.state = addressValues.state as string;\n\t\t\t\t\t\t\t\tbody.country = addressValues.country as string;\n\t\t\t\t\t\t\t\tbody.zipcode = addressValues.zipCode as string;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.socialMediaUi) {\n\t\t\t\t\t\t\tconst socialMediaValues = (additionalFields.socialMediaUi as IDataObject)\n\t\t\t\t\t\t\t\t.socialMediaValues as IDataObject;\n\t\t\t\t\t\t\tif (socialMediaValues) {\n\t\t\t\t\t\t\t\tbody.facebook = socialMediaValues.facebook as string;\n\t\t\t\t\t\t\t\tbody.foursquare = socialMediaValues.foursquare as string;\n\t\t\t\t\t\t\t\tbody.instagram = socialMediaValues.instagram as string;\n\t\t\t\t\t\t\t\tbody.linkedin = socialMediaValues.linkedIn as string;\n\t\t\t\t\t\t\t\tbody.skype = socialMediaValues.skype as string;\n\t\t\t\t\t\t\t\tbody.twitter = socialMediaValues.twitter as string;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.customFieldsUi) {\n\t\t\t\t\t\t\tconst customFields = (additionalFields.customFieldsUi as IDataObject)\n\t\t\t\t\t\t\t\t.customFieldValues as IDataObject[];\n\t\t\t\t\t\t\tif (customFields) {\n\t\t\t\t\t\t\t\tconst data = customFields.reduce(\n\t\t\t\t\t\t\t\t\t(obj, value) => Object.assign(obj, { [`${value.fieldId}`]: value.fieldValue }),\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tObject.assign(body, data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.b2bOrb2c) {\n\t\t\t\t\t\t\tbody.b2b_or_b2c = additionalFields.b2bOrb2c as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.crmId) {\n\t\t\t\t\t\t\tbody.crm_id = additionalFields.crmId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.fax) {\n\t\t\t\t\t\t\tbody.fax = additionalFields.fax as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.hasPurchased) {\n\t\t\t\t\t\t\tbody.haspurchased = additionalFields.hasPurchased as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.mobile) {\n\t\t\t\t\t\t\tbody.mobile = additionalFields.mobile as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.phone) {\n\t\t\t\t\t\t\tbody.phone = additionalFields.phone as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.prospectOrCustomer) {\n\t\t\t\t\t\t\tbody.prospect_or_customer = additionalFields.prospectOrCustomer as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.sandbox) {\n\t\t\t\t\t\t\tbody.sandbox = additionalFields.sandbox as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.stage) {\n\t\t\t\t\t\t\tbody.stage = additionalFields.stage as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.tags) {\n\t\t\t\t\t\t\tbody.tags = additionalFields.tags as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.website) {\n\t\t\t\t\t\t\tbody.website = additionalFields.website as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await mauticApiRequest.call(this, 'POST', '/contacts/new', body);\n\t\t\t\t\t\tresponseData = [responseData.contact];\n\t\t\t\t\t\tif (options.rawData === false) {\n\t\t\t\t\t\t\tresponseData = responseData.map((item) => item.fields.all);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.mautic.org/?php#edit-contact\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i) as string;\n\t\t\t\t\t\tlet body: IDataObject = {};\n\t\t\t\t\t\tif (updateFields.email) {\n\t\t\t\t\t\t\tbody.email = updateFields.email as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.firstName) {\n\t\t\t\t\t\t\tbody.firstname = updateFields.firstName as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.lastName) {\n\t\t\t\t\t\t\tbody.lastname = updateFields.lastName as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.company) {\n\t\t\t\t\t\t\tbody.company = updateFields.company as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.position) {\n\t\t\t\t\t\t\tbody.position = updateFields.position as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.title) {\n\t\t\t\t\t\t\tbody.title = updateFields.title as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.bodyJson) {\n\t\t\t\t\t\t\tconst json = validateJSON(updateFields.bodyJson as string);\n\t\t\t\t\t\t\tif (json !== undefined) {\n\t\t\t\t\t\t\t\tbody = { ...json };\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'Invalid JSON', { itemIndex: i });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.ipAddress) {\n\t\t\t\t\t\t\tbody.ipAddress = updateFields.ipAddress as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.lastActive) {\n\t\t\t\t\t\t\tbody.lastActive = updateFields.lastActive as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.ownerId) {\n\t\t\t\t\t\t\tbody.owner = updateFields.ownerId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.addressUi) {\n\t\t\t\t\t\t\tconst addressValues = (updateFields.addressUi as IDataObject)\n\t\t\t\t\t\t\t\t.addressValues as IDataObject;\n\t\t\t\t\t\t\tif (addressValues) {\n\t\t\t\t\t\t\t\tbody.address1 = addressValues.address1 as string;\n\t\t\t\t\t\t\t\tbody.address2 = addressValues.address2 as string;\n\t\t\t\t\t\t\t\tbody.city = addressValues.city as string;\n\t\t\t\t\t\t\t\tbody.state = addressValues.state as string;\n\t\t\t\t\t\t\t\tbody.country = addressValues.country as string;\n\t\t\t\t\t\t\t\tbody.zipcode = addressValues.zipCode as string;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.socialMediaUi) {\n\t\t\t\t\t\t\tconst socialMediaValues = (updateFields.socialMediaUi as IDataObject)\n\t\t\t\t\t\t\t\t.socialMediaValues as IDataObject;\n\t\t\t\t\t\t\tif (socialMediaValues) {\n\t\t\t\t\t\t\t\tbody.facebook = socialMediaValues.facebook as string;\n\t\t\t\t\t\t\t\tbody.foursquare = socialMediaValues.foursquare as string;\n\t\t\t\t\t\t\t\tbody.instagram = socialMediaValues.instagram as string;\n\t\t\t\t\t\t\t\tbody.linkedin = socialMediaValues.linkedIn as string;\n\t\t\t\t\t\t\t\tbody.skype = socialMediaValues.skype as string;\n\t\t\t\t\t\t\t\tbody.twitter = socialMediaValues.twitter as string;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.customFieldsUi) {\n\t\t\t\t\t\t\tconst customFields = (updateFields.customFieldsUi as IDataObject)\n\t\t\t\t\t\t\t\t.customFieldValues as IDataObject[];\n\t\t\t\t\t\t\tif (customFields) {\n\t\t\t\t\t\t\t\tconst data = customFields.reduce(\n\t\t\t\t\t\t\t\t\t(obj, value) => Object.assign(obj, { [`${value.fieldId}`]: value.fieldValue }),\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tObject.assign(body, data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.b2bOrb2c) {\n\t\t\t\t\t\t\tbody.b2b_or_b2c = updateFields.b2bOrb2c as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.crmId) {\n\t\t\t\t\t\t\tbody.crm_id = updateFields.crmId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.fax) {\n\t\t\t\t\t\t\tbody.fax = updateFields.fax as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.hasPurchased) {\n\t\t\t\t\t\t\tbody.haspurchased = updateFields.hasPurchased as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.mobile) {\n\t\t\t\t\t\t\tbody.mobile = updateFields.mobile as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.phone) {\n\t\t\t\t\t\t\tbody.phone = updateFields.phone as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.prospectOrCustomer) {\n\t\t\t\t\t\t\tbody.prospect_or_customer = updateFields.prospectOrCustomer as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.sandbox) {\n\t\t\t\t\t\t\tbody.sandbox = updateFields.sandbox as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.stage) {\n\t\t\t\t\t\t\tbody.stage = updateFields.stage as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.tags) {\n\t\t\t\t\t\t\tbody.tags = updateFields.tags as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.website) {\n\t\t\t\t\t\t\tbody.website = updateFields.website as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await mauticApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PATCH',\n\t\t\t\t\t\t\t`/contacts/${contactId}/edit`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = [responseData.contact];\n\t\t\t\t\t\tif (options.rawData === false) {\n\t\t\t\t\t\t\tresponseData = responseData.map((item) => item.fields.all);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.mautic.org/?php#get-contact\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i) as string;\n\t\t\t\t\t\tresponseData = await mauticApiRequest.call(this, 'GET', `/contacts/${contactId}`);\n\t\t\t\t\t\tresponseData = [responseData.contact];\n\t\t\t\t\t\tif (options.rawData === false) {\n\t\t\t\t\t\t\tresponseData = responseData.map((item) => item.fields.all);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.mautic.org/?php#list-contacts\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tqs = Object.assign(qs, options);\n\t\t\t\t\t\tif (qs.orderBy) {\n\t\t\t\t\t\t\t// For some reason does camelCase get used in the returned data\n\t\t\t\t\t\t\t// but snake_case here. So convert it automatically to not confuse\n\t\t\t\t\t\t\t// the users.\n\t\t\t\t\t\t\tqs.orderBy = snakeCase(qs.orderBy as string);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await mauticApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'contacts',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/contacts',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tqs.start = 0;\n\t\t\t\t\t\t\tresponseData = await mauticApiRequest.call(this, 'GET', '/contacts', {}, qs);\n\t\t\t\t\t\t\tif (responseData.errors) {\n\t\t\t\t\t\t\t\tthrow new NodeApiError(this.getNode(), responseData as JsonObject);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tresponseData = responseData.contacts;\n\t\t\t\t\t\t\tresponseData = Object.values(responseData as IDataObject[]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.rawData === false) {\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tresponseData = responseData.map((item) => item.fields.all);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.mautic.org/?php#delete-contact\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i) as string;\n\t\t\t\t\t\tresponseData = await mauticApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/contacts/${contactId}/delete`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = [responseData.contact];\n\t\t\t\t\t\tif (options.rawData === false) {\n\t\t\t\t\t\t\tresponseData = responseData.map((item) => item.fields.all);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.mautic.org/#send-email-to-contact\n\t\t\t\t\tif (operation === 'sendEmail') {\n\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i) as string;\n\t\t\t\t\t\tconst campaignEmailId = this.getNodeParameter('campaignEmailId', i) as string;\n\t\t\t\t\t\tresponseData = await mauticApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/emails/${campaignEmailId}/contact/${contactId}/send`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.mautic.org/#add-do-not-contact\n\t\t\t\t\t//https://developer.mautic.org/#remove-from-do-not-contact\n\t\t\t\t\tif (operation === 'editDoNotContactList') {\n\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i) as string;\n\t\t\t\t\t\tconst action = this.getNodeParameter('action', i) as string;\n\t\t\t\t\t\tconst channel = this.getNodeParameter('channel', i) as string;\n\t\t\t\t\t\tconst body: IDataObject = {};\n\t\t\t\t\t\tif (action === 'add') {\n\t\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\t\tObject.assign(body, additionalFields);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await mauticApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/contacts/${contactId}/dnc/${channel}/${action}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.contact;\n\t\t\t\t\t}\n\n\t\t\t\t\t//https://developer.mautic.org/#add-points\n\t\t\t\t\t//https://developer.mautic.org/#subtract-points\n\t\t\t\t\tif (operation === 'editContactPoint') {\n\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i) as string;\n\t\t\t\t\t\tconst action = this.getNodeParameter('action', i) as string;\n\t\t\t\t\t\tconst points = this.getNodeParameter('points', i) as string;\n\t\t\t\t\t\tconst path = action === 'add' ? 'plus' : 'minus';\n\t\t\t\t\t\tresponseData = await mauticApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/contacts/${contactId}/points/${path}/${points}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (resource === 'contactSegment') {\n\t\t\t\t\t//https://developer.mautic.org/?php#add-contact-to-a-segment\n\t\t\t\t\tif (operation === 'add') {\n\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i) as string;\n\t\t\t\t\t\tconst segmentId = this.getNodeParameter('segmentId', i) as string;\n\t\t\t\t\t\tresponseData = await mauticApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/segments/${segmentId}/contact/${contactId}/add`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.mautic.org/#remove-contact-from-a-segment\n\t\t\t\t\tif (operation === 'remove') {\n\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i) as string;\n\t\t\t\t\t\tconst segmentId = this.getNodeParameter('segmentId', i) as string;\n\t\t\t\t\t\tresponseData = await mauticApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/segments/${segmentId}/contact/${contactId}/remove`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (resource === 'campaignContact') {\n\t\t\t\t\t//https://developer.mautic.org/#add-contact-to-a-campaign\n\t\t\t\t\tif (operation === 'add') {\n\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i) as string;\n\t\t\t\t\t\tconst campaignId = this.getNodeParameter('campaignId', i) as string;\n\t\t\t\t\t\tresponseData = await mauticApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/campaigns/${campaignId}/contact/${contactId}/add`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.mautic.org/#remove-contact-from-a-campaign\n\t\t\t\t\tif (operation === 'remove') {\n\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i) as string;\n\t\t\t\t\t\tconst campaignId = this.getNodeParameter('campaignId', i) as string;\n\t\t\t\t\t\tresponseData = await mauticApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/campaigns/${campaignId}/contact/${contactId}/remove`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (resource === 'segmentEmail') {\n\t\t\t\t\t//https://developer.mautic.org/#send-email-to-segment\n\t\t\t\t\tif (operation === 'send') {\n\t\t\t\t\t\tconst segmentEmailId = this.getNodeParameter('segmentEmailId', i) as string;\n\t\t\t\t\t\tresponseData = await mauticApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/emails/${segmentEmailId}/send`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (resource === 'companyContact') {\n\t\t\t\t\t//https://developer.mautic.org/#add-contact-to-a-company\n\t\t\t\t\tif (operation === 'add') {\n\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i) as string;\n\t\t\t\t\t\tconst companyId = this.getNodeParameter('companyId', i) as string;\n\t\t\t\t\t\tresponseData = await mauticApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/companies/${companyId}/contact/${contactId}/add`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t);\n\t\t\t\t\t\t// responseData = responseData.company;\n\t\t\t\t\t\t// if (simple === true) {\n\t\t\t\t\t\t// \tresponseData = responseData.fields.all;\n\t\t\t\t\t\t// }\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.mautic.org/#remove-contact-from-a-company\n\t\t\t\t\tif (operation === 'remove') {\n\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i) as string;\n\t\t\t\t\t\tconst companyId = this.getNodeParameter('companyId', i) as string;\n\t\t\t\t\t\tresponseData = await mauticApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/companies/${companyId}/contact/${contactId}/remove`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t);\n\t\t\t\t\t\t// responseData = responseData.company;\n\t\t\t\t\t\t// if (simple === true) {\n\t\t\t\t\t\t// \tresponseData = responseData.fields.all;\n\t\t\t\t\t\t// }\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t);\n\t\t\t\treturnData.push(...executionData);\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\treturnData.push({ json: { error: (error as JsonObject).message } });\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":[]}