{"version":3,"sources":["../../../nodes/Odoo/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHookFunctions,\n\tILoadOptionsFunctions,\n\tJsonObject,\n\tIRequestOptions,\n} from 'n8n-workflow';\nimport { NodeApiError, randomInt } from 'n8n-workflow';\n\nconst serviceJSONRPC = 'object';\nconst methodJSONRPC = 'execute';\n\nexport const mapOperationToJSONRPC = {\n\tcreate: 'create',\n\tget: 'read',\n\tgetAll: 'search_read',\n\tupdate: 'write',\n\tdelete: 'unlink',\n};\n\nexport const mapOdooResources: { [key: string]: string } = {\n\tcontact: 'res.partner',\n\topportunity: 'crm.lead',\n\tnote: 'note.note',\n};\n\nexport const mapFilterOperationToJSONRPC = {\n\tequal: '=',\n\tnotEqual: '!=',\n\tgreaterThen: '>',\n\tlesserThen: '<',\n\tgreaterOrEqual: '>=',\n\tlesserOrEqual: '<=',\n\tlike: 'like',\n\tin: 'in',\n\tnotIn: 'not in',\n\tchildOf: 'child_of',\n};\n\ntype FilterOperation =\n\t| 'equal'\n\t| 'notEqual'\n\t| 'greaterThen'\n\t| 'lesserThen'\n\t| 'greaterOrEqual'\n\t| 'lesserOrEqual'\n\t| 'like'\n\t| 'in'\n\t| 'notIn'\n\t| 'childOf';\n\nexport interface IOdooFilterOperations {\n\tfilter: Array<{\n\t\tfieldName: string;\n\t\toperator: string;\n\t\tvalue: string;\n\t}>;\n}\n\nexport interface IOdooNameValueFields {\n\tfields: Array<{\n\t\tfieldName: string;\n\t\tfieldValue: string;\n\t}>;\n}\n\nexport interface IOdooResponseFields {\n\tfields: Array<{\n\t\tfield: string;\n\t\tfromList?: boolean;\n\t}>;\n}\n\ntype OdooCRUD = 'create' | 'update' | 'delete' | 'get' | 'getAll';\n\nexport function odooGetDBName(databaseName: string | undefined, url: string) {\n\tif (databaseName) return databaseName;\n\tconst odooURL = new URL(url);\n\tconst hostname = odooURL.hostname;\n\tif (!hostname) return '';\n\treturn odooURL.hostname.split('.')[0];\n}\n\nfunction processFilters(value: IOdooFilterOperations) {\n\treturn value.filter?.map((item) => {\n\t\tconst operator = item.operator as FilterOperation;\n\t\titem.operator = mapFilterOperationToJSONRPC[operator];\n\t\treturn Object.values(item);\n\t});\n}\n\nexport function processNameValueFields(value: IDataObject) {\n\tconst data = value as unknown as IOdooNameValueFields;\n\treturn data?.fields?.reduce((acc, record) => {\n\t\treturn Object.assign(acc, { [record.fieldName]: record.fieldValue });\n\t}, {});\n}\n\n// function processResponseFields(value: IDataObject) {\n// \tconst data = value as unknown as IOdooResponseFields;\n// \treturn data?.fields?.map((entry) => entry.field);\n// }\n\nexport async function odooJSONRPCRequest(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tbody: IDataObject,\n\turl: string,\n): Promise<IDataObject | IDataObject[]> {\n\ttry {\n\t\tconst options: IRequestOptions = {\n\t\t\theaders: {\n\t\t\t\t'User-Agent': 'n8n',\n\t\t\t\tConnection: 'keep-alive',\n\t\t\t\tAccept: '*/*',\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tmethod: 'POST',\n\t\t\tbody,\n\t\t\turi: `${url}/jsonrpc`,\n\t\t\tjson: true,\n\t\t};\n\n\t\tconst response = await this.helpers.request(options);\n\t\tif (response.error) {\n\t\t\tthrow new NodeApiError(this.getNode(), response.error.data as JsonObject, {\n\t\t\t\tmessage: response.error.data.message,\n\t\t\t});\n\t\t}\n\t\treturn response.result;\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\nexport async function odooGetModelFields(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tdb: string,\n\tuserID: number,\n\tpassword: string,\n\tresource: string,\n\turl: string,\n) {\n\ttry {\n\t\tconst body = {\n\t\t\tjsonrpc: '2.0',\n\t\t\tmethod: 'call',\n\t\t\tparams: {\n\t\t\t\tservice: serviceJSONRPC,\n\t\t\t\tmethod: methodJSONRPC,\n\t\t\t\targs: [\n\t\t\t\t\tdb,\n\t\t\t\t\tuserID,\n\t\t\t\t\tpassword,\n\t\t\t\t\tmapOdooResources[resource] || resource,\n\t\t\t\t\t'fields_get',\n\t\t\t\t\t[],\n\t\t\t\t\t['string', 'type', 'help', 'required', 'name'],\n\t\t\t\t],\n\t\t\t},\n\t\t\tid: randomInt(100),\n\t\t};\n\n\t\tconst result = await odooJSONRPCRequest.call(this, body, url);\n\t\treturn result;\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\nexport async function odooCreate(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tdb: string,\n\tuserID: number,\n\tpassword: string,\n\tresource: string,\n\toperation: OdooCRUD,\n\turl: string,\n\tnewItem: IDataObject,\n) {\n\ttry {\n\t\tconst body = {\n\t\t\tjsonrpc: '2.0',\n\t\t\tmethod: 'call',\n\t\t\tparams: {\n\t\t\t\tservice: serviceJSONRPC,\n\t\t\t\tmethod: methodJSONRPC,\n\t\t\t\targs: [\n\t\t\t\t\tdb,\n\t\t\t\t\tuserID,\n\t\t\t\t\tpassword,\n\t\t\t\t\tmapOdooResources[resource] || resource,\n\t\t\t\t\tmapOperationToJSONRPC[operation],\n\t\t\t\t\tnewItem || {},\n\t\t\t\t],\n\t\t\t},\n\t\t\tid: randomInt(100),\n\t\t};\n\n\t\tconst result = await odooJSONRPCRequest.call(this, body, url);\n\t\treturn { id: result };\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\nexport async function odooGet(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tdb: string,\n\tuserID: number,\n\tpassword: string,\n\tresource: string,\n\toperation: OdooCRUD,\n\turl: string,\n\titemsID: string,\n\tfieldsToReturn?: IDataObject[],\n) {\n\ttry {\n\t\tif (!/^\\d+$/.test(itemsID) || !parseInt(itemsID, 10)) {\n\t\t\tthrow new NodeApiError(this.getNode(), {\n\t\t\t\tstatus: 'Error',\n\t\t\t\tmessage: `Please specify a valid ID: ${itemsID}`,\n\t\t\t});\n\t\t}\n\t\tconst body = {\n\t\t\tjsonrpc: '2.0',\n\t\t\tmethod: 'call',\n\t\t\tparams: {\n\t\t\t\tservice: serviceJSONRPC,\n\t\t\t\tmethod: methodJSONRPC,\n\t\t\t\targs: [\n\t\t\t\t\tdb,\n\t\t\t\t\tuserID,\n\t\t\t\t\tpassword,\n\t\t\t\t\tmapOdooResources[resource] || resource,\n\t\t\t\t\tmapOperationToJSONRPC[operation],\n\t\t\t\t\titemsID ? [+itemsID] : [],\n\t\t\t\t\tfieldsToReturn || [],\n\t\t\t\t],\n\t\t\t},\n\t\t\tid: randomInt(100),\n\t\t};\n\n\t\tconst result = await odooJSONRPCRequest.call(this, body, url);\n\t\treturn result;\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\nexport async function odooGetAll(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tdb: string,\n\tuserID: number,\n\tpassword: string,\n\tresource: string,\n\toperation: OdooCRUD,\n\turl: string,\n\tfilters?: IOdooFilterOperations,\n\tfieldsToReturn?: IDataObject[],\n\tlimit = 0,\n) {\n\ttry {\n\t\tconst body = {\n\t\t\tjsonrpc: '2.0',\n\t\t\tmethod: 'call',\n\t\t\tparams: {\n\t\t\t\tservice: serviceJSONRPC,\n\t\t\t\tmethod: methodJSONRPC,\n\t\t\t\targs: [\n\t\t\t\t\tdb,\n\t\t\t\t\tuserID,\n\t\t\t\t\tpassword,\n\t\t\t\t\tmapOdooResources[resource] || resource,\n\t\t\t\t\tmapOperationToJSONRPC[operation],\n\t\t\t\t\t(filters && processFilters(filters)) || [],\n\t\t\t\t\tfieldsToReturn || [],\n\t\t\t\t\t0, // offset\n\t\t\t\t\tlimit,\n\t\t\t\t],\n\t\t\t},\n\t\t\tid: randomInt(100),\n\t\t};\n\n\t\tconst result = await odooJSONRPCRequest.call(this, body, url);\n\t\treturn result;\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\nexport async function odooUpdate(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tdb: string,\n\tuserID: number,\n\tpassword: string,\n\tresource: string,\n\toperation: OdooCRUD,\n\turl: string,\n\titemsID: string,\n\tfieldsToUpdate: IDataObject,\n) {\n\ttry {\n\t\tif (!Object.keys(fieldsToUpdate).length) {\n\t\t\tthrow new NodeApiError(this.getNode(), {\n\t\t\t\tstatus: 'Error',\n\t\t\t\tmessage: 'Please specify at least one field to update',\n\t\t\t});\n\t\t}\n\t\tif (!/^\\d+$/.test(itemsID) || !parseInt(itemsID, 10)) {\n\t\t\tthrow new NodeApiError(this.getNode(), {\n\t\t\t\tstatus: 'Error',\n\t\t\t\tmessage: `Please specify a valid ID: ${itemsID}`,\n\t\t\t});\n\t\t}\n\t\tconst body = {\n\t\t\tjsonrpc: '2.0',\n\t\t\tmethod: 'call',\n\t\t\tparams: {\n\t\t\t\tservice: serviceJSONRPC,\n\t\t\t\tmethod: methodJSONRPC,\n\t\t\t\targs: [\n\t\t\t\t\tdb,\n\t\t\t\t\tuserID,\n\t\t\t\t\tpassword,\n\t\t\t\t\tmapOdooResources[resource] || resource,\n\t\t\t\t\tmapOperationToJSONRPC[operation],\n\t\t\t\t\titemsID ? [+itemsID] : [],\n\t\t\t\t\tfieldsToUpdate,\n\t\t\t\t],\n\t\t\t},\n\t\t\tid: randomInt(100),\n\t\t};\n\n\t\tawait odooJSONRPCRequest.call(this, body, url);\n\t\treturn { id: itemsID };\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\nexport async function odooDelete(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tdb: string,\n\tuserID: number,\n\tpassword: string,\n\tresource: string,\n\toperation: OdooCRUD,\n\turl: string,\n\titemsID: string,\n) {\n\tif (!/^\\d+$/.test(itemsID) || !parseInt(itemsID, 10)) {\n\t\tthrow new NodeApiError(this.getNode(), {\n\t\t\tstatus: 'Error',\n\t\t\tmessage: `Please specify a valid ID: ${itemsID}`,\n\t\t});\n\t}\n\ttry {\n\t\tconst body = {\n\t\t\tjsonrpc: '2.0',\n\t\t\tmethod: 'call',\n\t\t\tparams: {\n\t\t\t\tservice: serviceJSONRPC,\n\t\t\t\tmethod: methodJSONRPC,\n\t\t\t\targs: [\n\t\t\t\t\tdb,\n\t\t\t\t\tuserID,\n\t\t\t\t\tpassword,\n\t\t\t\t\tmapOdooResources[resource] || resource,\n\t\t\t\t\tmapOperationToJSONRPC[operation],\n\t\t\t\t\titemsID ? [+itemsID] : [],\n\t\t\t\t],\n\t\t\t},\n\t\t\tid: randomInt(100),\n\t\t};\n\n\t\tawait odooJSONRPCRequest.call(this, body, url);\n\t\treturn { success: true };\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\nexport async function odooGetUserID(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tdb: string,\n\tusername: string,\n\tpassword: string,\n\turl: string,\n): Promise<number> {\n\ttry {\n\t\tconst body = {\n\t\t\tjsonrpc: '2.0',\n\t\t\tmethod: 'call',\n\t\t\tparams: {\n\t\t\t\tservice: 'common',\n\t\t\t\tmethod: 'login',\n\t\t\t\targs: [db, username, password],\n\t\t\t},\n\t\t\tid: randomInt(100),\n\t\t};\n\t\tconst loginResult = await odooJSONRPCRequest.call(this, body, url);\n\t\treturn loginResult as unknown as number;\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\nexport async function odooGetServerVersion(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\turl: string,\n) {\n\ttry {\n\t\tconst body = {\n\t\t\tjsonrpc: '2.0',\n\t\t\tmethod: 'call',\n\t\t\tparams: {\n\t\t\t\tservice: 'common',\n\t\t\t\tmethod: 'version',\n\t\t\t\targs: [],\n\t\t\t},\n\t\t\tid: randomInt(100),\n\t\t};\n\t\tconst result = await odooJSONRPCRequest.call(this, body, url);\n\t\treturn result;\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n"],"mappings":"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","names":[]}