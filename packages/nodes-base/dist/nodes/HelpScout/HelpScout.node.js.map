{"version":3,"sources":["../../../nodes/HelpScout/HelpScout.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIBinaryKeyData,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport { isoCountryCodes } from '@utils/ISOCountryCodes';\n\nimport { conversationFields, conversationOperations } from './ConversationDescription';\nimport type { IConversation } from './ConversationInterface';\nimport { customerFields, customerOperations } from './CustomerDescription';\nimport type { ICustomer } from './CustomerInterface';\nimport { helpscoutApiRequest, helpscoutApiRequestAllItems } from './GenericFunctions';\nimport { mailboxFields, mailboxOperations } from './MailboxDescription';\nimport { threadFields, threadOperations } from './ThreadDescription';\nimport type { IAttachment, IThread } from './ThreadInterface';\n\nexport class HelpScout implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Help Scout',\n\t\tname: 'helpScout',\n\t\ticon: 'file:helpScout.svg',\n\t\tgroup: ['input'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume Help Scout API',\n\t\tdefaults: {\n\t\t\tname: 'Help Scout',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'helpScoutOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Conversation',\n\t\t\t\t\t\tvalue: 'conversation',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Customer',\n\t\t\t\t\t\tvalue: 'customer',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Mailbox',\n\t\t\t\t\t\tvalue: 'mailbox',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Thread',\n\t\t\t\t\t\tvalue: 'thread',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'conversation',\n\t\t\t},\n\t\t\t...conversationOperations,\n\t\t\t...conversationFields,\n\t\t\t...customerOperations,\n\t\t\t...customerFields,\n\t\t\t...mailboxOperations,\n\t\t\t...mailboxFields,\n\t\t\t...threadOperations,\n\t\t\t...threadFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get all the countries codes to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getCountriesCodes(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tfor (const countryCode of isoCountryCodes) {\n\t\t\t\t\tconst countryCodeName = `${countryCode.name} - ${countryCode.alpha2}`;\n\t\t\t\t\tconst countryCodeId = countryCode.alpha2;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: countryCodeName,\n\t\t\t\t\t\tvalue: countryCodeId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the tags to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getTags(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst tags = await helpscoutApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'_embedded.tags',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/v2/tags',\n\t\t\t\t);\n\t\t\t\tfor (const tag of tags) {\n\t\t\t\t\tconst tagName = tag.name;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: tagName,\n\t\t\t\t\t\tvalue: tagName,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the mailboxes to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getMailboxes(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst mailboxes = await helpscoutApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'_embedded.mailboxes',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/v2/mailboxes',\n\t\t\t\t);\n\t\t\t\tfor (const mailbox of mailboxes) {\n\t\t\t\t\tconst mailboxName = mailbox.name;\n\t\t\t\t\tconst mailboxId = mailbox.id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: mailboxName,\n\t\t\t\t\t\tvalue: mailboxId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst length = items.length;\n\t\tconst qs: IDataObject = {};\n\t\tlet responseData;\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'conversation') {\n\t\t\t\t\t//https://developer.helpscout.com/mailbox-api/endpoints/conversations/create\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst mailboxId = this.getNodeParameter('mailboxId', i) as number;\n\t\t\t\t\t\tconst status = this.getNodeParameter('status', i) as string;\n\t\t\t\t\t\tconst subject = this.getNodeParameter('subject', i) as string;\n\t\t\t\t\t\tconst type = this.getNodeParameter('type', i) as string;\n\t\t\t\t\t\tconst resolveData = this.getNodeParameter('resolveData', i);\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst threads = (this.getNodeParameter('threadsUi', i) as IDataObject)\n\t\t\t\t\t\t\t.threadsValues as IDataObject[];\n\t\t\t\t\t\tconst body: IConversation = {\n\t\t\t\t\t\t\tmailboxId,\n\t\t\t\t\t\t\tstatus,\n\t\t\t\t\t\t\tsubject,\n\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tObject.assign(body, additionalFields);\n\t\t\t\t\t\tif (additionalFields.customerId) {\n\t\t\t\t\t\t\tbody.customer = {\n\t\t\t\t\t\t\t\tid: additionalFields.customerId,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tdelete body.customerId;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.customerEmail) {\n\t\t\t\t\t\t\tbody.customer = {\n\t\t\t\t\t\t\t\temail: additionalFields.customerEmail,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tdelete body.customerEmail;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (body.customer === undefined) {\n\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t'Either customer email or customer ID must be set',\n\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (threads) {\n\t\t\t\t\t\t\tfor (let index = 0; index < threads.length; index++) {\n\t\t\t\t\t\t\t\tif (threads[index].type === '' || threads[index].text === '') {\n\t\t\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'Chat Threads cannot be empty');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (threads[index].type !== 'note') {\n\t\t\t\t\t\t\t\t\tthreads[index].customer = body.customer;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbody.threads = threads;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await helpscoutApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/v2/conversations',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t{ resolveWithFullResponse: true },\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst id = responseData.headers['resource-id'];\n\t\t\t\t\t\tconst uri = responseData.headers.location;\n\t\t\t\t\t\tif (resolveData) {\n\t\t\t\t\t\t\tresponseData = await helpscoutApiRequest.call(this, 'GET', '', {}, {}, uri as string);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresponseData = {\n\t\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\t\turi,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.helpscout.com/mailbox-api/endpoints/conversations/delete\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst conversationId = this.getNodeParameter('conversationId', i) as string;\n\t\t\t\t\t\tresponseData = await helpscoutApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/v2/conversations/${conversationId}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.helpscout.com/mailbox-api/endpoints/conversations/get\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst conversationId = this.getNodeParameter('conversationId', i) as string;\n\t\t\t\t\t\tresponseData = await helpscoutApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/v2/conversations/${conversationId}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.helpscout.com/mailbox-api/endpoints/conversations/list\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tif (options.tags) {\n\t\t\t\t\t\t\tqs.tag = options.tags.toString();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tObject.assign(qs, options);\n\t\t\t\t\t\tdelete qs.tags;\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await helpscoutApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'_embedded.conversations',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/v2/conversations',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await helpscoutApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'_embedded.conversations',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/v2/conversations',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.splice(0, qs.limit);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'customer') {\n\t\t\t\t\t//https://developer.helpscout.com/mailbox-api/endpoints/customers/create\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst resolveData = this.getNodeParameter('resolveData', i);\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst chats = (this.getNodeParameter('chatsUi', i) as IDataObject)\n\t\t\t\t\t\t\t.chatsValues as IDataObject[];\n\t\t\t\t\t\tconst address = (this.getNodeParameter('addressUi', i) as IDataObject)\n\t\t\t\t\t\t\t.addressValue as IDataObject;\n\t\t\t\t\t\tconst emails = (this.getNodeParameter('emailsUi', i) as IDataObject)\n\t\t\t\t\t\t\t.emailsValues as IDataObject[];\n\t\t\t\t\t\tconst phones = (this.getNodeParameter('phonesUi', i) as IDataObject)\n\t\t\t\t\t\t\t.phonesValues as IDataObject[];\n\t\t\t\t\t\tconst socialProfiles = (this.getNodeParameter('socialProfilesUi', i) as IDataObject)\n\t\t\t\t\t\t\t.socialProfilesValues as IDataObject[];\n\t\t\t\t\t\tconst websites = (this.getNodeParameter('websitesUi', i) as IDataObject)\n\t\t\t\t\t\t\t.websitesValues as IDataObject[];\n\t\t\t\t\t\tlet body: ICustomer = {};\n\t\t\t\t\t\tbody = Object.assign({}, additionalFields);\n\t\t\t\t\t\tif (body.age) {\n\t\t\t\t\t\t\tbody.age = body.age.toString();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (chats) {\n\t\t\t\t\t\t\tbody.chats = chats;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (address) {\n\t\t\t\t\t\t\tbody.address = address;\n\t\t\t\t\t\t\tbody.address.lines = [address.line1, address.line2];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (emails) {\n\t\t\t\t\t\t\tbody.emails = emails;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (phones) {\n\t\t\t\t\t\t\tbody.phones = phones;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (socialProfiles) {\n\t\t\t\t\t\t\tbody.socialProfiles = socialProfiles;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (websites) {\n\t\t\t\t\t\t\tbody.websites = websites;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (Object.keys(body).length === 0) {\n\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'You have to set at least one field', {\n\t\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await helpscoutApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/v2/customers',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t{ resolveWithFullResponse: true },\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst id = responseData.headers['resource-id'];\n\t\t\t\t\t\tconst uri = responseData.headers.location;\n\t\t\t\t\t\tif (resolveData) {\n\t\t\t\t\t\t\tresponseData = await helpscoutApiRequest.call(this, 'GET', '', {}, {}, uri as string);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresponseData = {\n\t\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\t\turi,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.helpscout.com/mailbox-api/endpoints/customer_properties/list\n\t\t\t\t\tif (operation === 'properties') {\n\t\t\t\t\t\tresponseData = await helpscoutApiRequestAllItems.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'_embedded.customer-properties',\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t'/v2/customer-properties',\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.helpscout.com/mailbox-api/endpoints/customers/get\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst customerId = this.getNodeParameter('customerId', i) as string;\n\t\t\t\t\t\tresponseData = await helpscoutApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/v2/customers/${customerId}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.helpscout.com/mailbox-api/endpoints/customers/list\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tObject.assign(qs, options);\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await helpscoutApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'_embedded.customers',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/v2/customers',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await helpscoutApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'_embedded.customers',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/v2/customers',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.splice(0, qs.limit);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.helpscout.com/mailbox-api/endpoints/customers/overwrite/\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst customerId = this.getNodeParameter('customerId', i) as string;\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\tlet body: ICustomer = {};\n\t\t\t\t\t\tbody = Object.assign({}, updateFields);\n\t\t\t\t\t\tif (body.age) {\n\t\t\t\t\t\t\tbody.age = body.age.toString();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (Object.keys(body).length === 0) {\n\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'You have to set at least one field', {\n\t\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await helpscoutApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t\t`/v2/customers/${customerId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t{ resolveWithFullResponse: true },\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'mailbox') {\n\t\t\t\t\t//https://developer.helpscout.com/mailbox-api/endpoints/mailboxes/get\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst mailboxId = this.getNodeParameter('mailboxId', i) as string;\n\t\t\t\t\t\tresponseData = await helpscoutApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/v2/mailboxes/${mailboxId}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.helpscout.com/mailbox-api/endpoints/mailboxes/list\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await helpscoutApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'_embedded.mailboxes',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/v2/mailboxes',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await helpscoutApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'_embedded.mailboxes',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/v2/mailboxes',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.splice(0, qs.limit);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'thread') {\n\t\t\t\t\t//https://developer.helpscout.com/mailbox-api/endpoints/conversations/threads/chat\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst conversationId = this.getNodeParameter('conversationId', i) as string;\n\t\t\t\t\t\tconst text = this.getNodeParameter('text', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst attachments = this.getNodeParameter('attachmentsUi', i) as IDataObject;\n\t\t\t\t\t\tlet threadType = this.getNodeParameter('type', i) as string;\n\n\t\t\t\t\t\t// We need to update the types to match the API - Avoids a breaking change\n\t\t\t\t\t\tconst singular = ['reply', 'customer'];\n\t\t\t\t\t\tif (!singular.includes(threadType)) {\n\t\t\t\t\t\t\tthreadType = `${threadType}s`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst body: IThread = {\n\t\t\t\t\t\t\ttext,\n\t\t\t\t\t\t\tattachments: [],\n\t\t\t\t\t\t};\n\t\t\t\t\t\tObject.assign(body, additionalFields);\n\t\t\t\t\t\tif (additionalFields.customerId) {\n\t\t\t\t\t\t\tbody.customer = {\n\t\t\t\t\t\t\t\tid: additionalFields.customerId,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tdelete body.customerId;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.customerEmail) {\n\t\t\t\t\t\t\tbody.customer = {\n\t\t\t\t\t\t\t\temail: additionalFields.customerEmail,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tdelete body.customerEmail;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (body.customer === undefined) {\n\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t'Either customer email or customer ID must be set',\n\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (attachments) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tattachments.attachmentsValues &&\n\t\t\t\t\t\t\t\t(attachments.attachmentsValues as IDataObject[]).length !== 0\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tbody.attachments?.push.apply(\n\t\t\t\t\t\t\t\t\tbody.attachments,\n\t\t\t\t\t\t\t\t\tattachments.attachmentsValues as IAttachment[],\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tattachments.attachmentsBinary &&\n\t\t\t\t\t\t\t\t(attachments.attachmentsBinary as IDataObject[]).length !== 0 &&\n\t\t\t\t\t\t\t\titems[i].binary\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tconst mapFunction = (value: IDataObject): IAttachment => {\n\t\t\t\t\t\t\t\t\tconst binaryProperty = (items[i].binary as IBinaryKeyData)[\n\t\t\t\t\t\t\t\t\t\tvalue.property as string\n\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t\tif (binaryProperty) {\n\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\tfileName: binaryProperty.fileName || 'unknown',\n\t\t\t\t\t\t\t\t\t\t\tdata: binaryProperty.data,\n\t\t\t\t\t\t\t\t\t\t\tmimeType: binaryProperty.mimeType,\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t\t\t\t`Binary property ${value.property} does not exist on input`,\n\t\t\t\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tbody.attachments?.push.apply(\n\t\t\t\t\t\t\t\t\tbody.attachments,\n\t\t\t\t\t\t\t\t\t(attachments.attachmentsBinary as IDataObject[]).map(mapFunction),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await helpscoutApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/v2/conversations/${conversationId}/${threadType}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.helpscout.com/mailbox-api/endpoints/conversations/threads/list\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst conversationId = this.getNodeParameter('conversationId', i) as string;\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await helpscoutApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'_embedded.threads',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/v2/conversations/${conversationId}/threads`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await helpscoutApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'_embedded.threads',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/v2/conversations/${conversationId}/threads`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.splice(0, qs.limit);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t{ itemData: { item: i } },\n\t\t\t);\n\n\t\t\treturnData.push(...executionData);\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA,0BAAwD;AAExD,6BAAgC;AAEhC,qCAA2D;AAE3D,iCAAmD;AAEnD,8BAAiE;AACjE,gCAAiD;AACjD,+BAA+C;AAGxC,MAAM,UAA+B;AAAA,EAArC;AACN,uBAAoC;AAAA,MACnC,aAAa;AAAA,MACb,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO,CAAC,OAAO;AAAA,MACf,SAAS;AAAA,MACT,UAAU;AAAA,MACV,aAAa;AAAA,MACb,UAAU;AAAA,QACT,MAAM;AAAA,MACP;AAAA,MACA,cAAc;AAAA,MACd,QAAQ,CAAC,wCAAoB,IAAI;AAAA,MACjC,SAAS,CAAC,wCAAoB,IAAI;AAAA,MAClC,aAAa;AAAA,QACZ;AAAA,UACC,MAAM;AAAA,UACN,UAAU;AAAA,QACX;AAAA,MACD;AAAA,MACA,YAAY;AAAA,QACX;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,kBAAkB;AAAA,UAClB,SAAS;AAAA,YACR;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,UACD;AAAA,UACA,SAAS;AAAA,QACV;AAAA,QACA,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,MACJ;AAAA,IACD;AAEA,mBAAU;AAAA,MACT,aAAa;AAAA;AAAA;AAAA,QAGZ,MAAM,oBAAgF;AACrF,gBAAM,aAAqC,CAAC;AAC5C,qBAAW,eAAe,wCAAiB;AAC1C,kBAAM,kBAAkB,GAAG,YAAY,IAAI,MAAM,YAAY,MAAM;AACnE,kBAAM,gBAAgB,YAAY;AAClC,uBAAW,KAAK;AAAA,cACf,MAAM;AAAA,cACN,OAAO;AAAA,YACR,CAAC;AAAA,UACF;AACA,iBAAO;AAAA,QACR;AAAA;AAAA;AAAA,QAGA,MAAM,UAAsE;AAC3E,gBAAM,aAAqC,CAAC;AAC5C,gBAAM,OAAO,MAAM,oDAA4B;AAAA,YAC9C;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACD;AACA,qBAAW,OAAO,MAAM;AACvB,kBAAM,UAAU,IAAI;AACpB,uBAAW,KAAK;AAAA,cACf,MAAM;AAAA,cACN,OAAO;AAAA,YACR,CAAC;AAAA,UACF;AACA,iBAAO;AAAA,QACR;AAAA;AAAA;AAAA,QAGA,MAAM,eAA2E;AAChF,gBAAM,aAAqC,CAAC;AAC5C,gBAAM,YAAY,MAAM,oDAA4B;AAAA,YACnD;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACD;AACA,qBAAW,WAAW,WAAW;AAChC,kBAAM,cAAc,QAAQ;AAC5B,kBAAM,YAAY,QAAQ;AAC1B,uBAAW,KAAK;AAAA,cACf,MAAM;AAAA,cACN,OAAO;AAAA,YACR,CAAC;AAAA,UACF;AACA,iBAAO;AAAA,QACR;AAAA,MACD;AAAA,IACD;AAAA;AAAA,EAEA,MAAM,UAAkE;AACvE,UAAM,QAAQ,KAAK,aAAa;AAChC,UAAM,aAAmC,CAAC;AAC1C,UAAM,SAAS,MAAM;AACrB,UAAM,KAAkB,CAAC;AACzB,QAAI;AACJ,UAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AACpD,UAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,aAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAChC,UAAI;AACH,YAAI,aAAa,gBAAgB;AAEhC,cAAI,cAAc,UAAU;AAC3B,kBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,kBAAM,SAAS,KAAK,iBAAiB,UAAU,CAAC;AAChD,kBAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAClD,kBAAM,OAAO,KAAK,iBAAiB,QAAQ,CAAC;AAC5C,kBAAM,cAAc,KAAK,iBAAiB,eAAe,CAAC;AAC1D,kBAAM,mBAAmB,KAAK,iBAAiB,oBAAoB,CAAC;AACpE,kBAAM,UAAW,KAAK,iBAAiB,aAAa,CAAC,EACnD;AACF,kBAAM,OAAsB;AAAA,cAC3B;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YACD;AACA,mBAAO,OAAO,MAAM,gBAAgB;AACpC,gBAAI,iBAAiB,YAAY;AAChC,mBAAK,WAAW;AAAA,gBACf,IAAI,iBAAiB;AAAA,cACtB;AAEA,qBAAO,KAAK;AAAA,YACb;AACA,gBAAI,iBAAiB,eAAe;AACnC,mBAAK,WAAW;AAAA,gBACf,OAAO,iBAAiB;AAAA,cACzB;AAEA,qBAAO,KAAK;AAAA,YACb;AACA,gBAAI,KAAK,aAAa,QAAW;AAChC,oBAAM,IAAI;AAAA,gBACT,KAAK,QAAQ;AAAA,gBACb;AAAA,gBACA,EAAE,WAAW,EAAE;AAAA,cAChB;AAAA,YACD;AACA,gBAAI,SAAS;AACZ,uBAAS,QAAQ,GAAG,QAAQ,QAAQ,QAAQ,SAAS;AACpD,oBAAI,QAAQ,KAAK,EAAE,SAAS,MAAM,QAAQ,KAAK,EAAE,SAAS,IAAI;AAC7D,wBAAM,IAAI,uCAAmB,KAAK,QAAQ,GAAG,8BAA8B;AAAA,gBAC5E;AACA,oBAAI,QAAQ,KAAK,EAAE,SAAS,QAAQ;AACnC,0BAAQ,KAAK,EAAE,WAAW,KAAK;AAAA,gBAChC;AAAA,cACD;AACA,mBAAK,UAAU;AAAA,YAChB;AACA,2BAAe,MAAM,4CAAoB;AAAA,cACxC;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA,EAAE,yBAAyB,KAAK;AAAA,YACjC;AACA,kBAAM,KAAK,aAAa,QAAQ,aAAa;AAC7C,kBAAM,MAAM,aAAa,QAAQ;AACjC,gBAAI,aAAa;AAChB,6BAAe,MAAM,4CAAoB,KAAK,MAAM,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,GAAa;AAAA,YACrF,OAAO;AACN,6BAAe;AAAA,gBACd;AAAA,gBACA;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAEA,cAAI,cAAc,UAAU;AAC3B,kBAAM,iBAAiB,KAAK,iBAAiB,kBAAkB,CAAC;AAChE,2BAAe,MAAM,4CAAoB;AAAA,cACxC;AAAA,cACA;AAAA,cACA,qBAAqB,cAAc;AAAA,YACpC;AACA,2BAAe,EAAE,SAAS,KAAK;AAAA,UAChC;AAEA,cAAI,cAAc,OAAO;AACxB,kBAAM,iBAAiB,KAAK,iBAAiB,kBAAkB,CAAC;AAChE,2BAAe,MAAM,4CAAoB;AAAA,cACxC;AAAA,cACA;AAAA,cACA,qBAAqB,cAAc;AAAA,YACpC;AAAA,UACD;AAEA,cAAI,cAAc,UAAU;AAC3B,kBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,kBAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAClD,gBAAI,QAAQ,MAAM;AACjB,iBAAG,MAAM,QAAQ,KAAK,SAAS;AAAA,YAChC;AACA,mBAAO,OAAO,IAAI,OAAO;AACzB,mBAAO,GAAG;AAEV,gBAAI,WAAW;AACd,6BAAe,MAAM,oDAA4B;AAAA,gBAChD;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,CAAC;AAAA,gBACD;AAAA,cACD;AAAA,YACD,OAAO;AACN,iBAAG,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC3C,6BAAe,MAAM,oDAA4B;AAAA,gBAChD;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,CAAC;AAAA,gBACD;AAAA,cACD;AACA,6BAAe,aAAa,OAAO,GAAG,GAAG,KAAK;AAAA,YAC/C;AAAA,UACD;AAAA,QACD;AACA,YAAI,aAAa,YAAY;AAE5B,cAAI,cAAc,UAAU;AAC3B,kBAAM,cAAc,KAAK,iBAAiB,eAAe,CAAC;AAC1D,kBAAM,mBAAmB,KAAK,iBAAiB,oBAAoB,CAAC;AACpE,kBAAM,QAAS,KAAK,iBAAiB,WAAW,CAAC,EAC/C;AACF,kBAAM,UAAW,KAAK,iBAAiB,aAAa,CAAC,EACnD;AACF,kBAAM,SAAU,KAAK,iBAAiB,YAAY,CAAC,EACjD;AACF,kBAAM,SAAU,KAAK,iBAAiB,YAAY,CAAC,EACjD;AACF,kBAAM,iBAAkB,KAAK,iBAAiB,oBAAoB,CAAC,EACjE;AACF,kBAAM,WAAY,KAAK,iBAAiB,cAAc,CAAC,EACrD;AACF,gBAAI,OAAkB,CAAC;AACvB,mBAAO,OAAO,OAAO,CAAC,GAAG,gBAAgB;AACzC,gBAAI,KAAK,KAAK;AACb,mBAAK,MAAM,KAAK,IAAI,SAAS;AAAA,YAC9B;AACA,gBAAI,OAAO;AACV,mBAAK,QAAQ;AAAA,YACd;AACA,gBAAI,SAAS;AACZ,mBAAK,UAAU;AACf,mBAAK,QAAQ,QAAQ,CAAC,QAAQ,OAAO,QAAQ,KAAK;AAAA,YACnD;AACA,gBAAI,QAAQ;AACX,mBAAK,SAAS;AAAA,YACf;AACA,gBAAI,QAAQ;AACX,mBAAK,SAAS;AAAA,YACf;AACA,gBAAI,gBAAgB;AACnB,mBAAK,iBAAiB;AAAA,YACvB;AACA,gBAAI,UAAU;AACb,mBAAK,WAAW;AAAA,YACjB;AACA,gBAAI,OAAO,KAAK,IAAI,EAAE,WAAW,GAAG;AACnC,oBAAM,IAAI,uCAAmB,KAAK,QAAQ,GAAG,sCAAsC;AAAA,gBAClF,WAAW;AAAA,cACZ,CAAC;AAAA,YACF;AACA,2BAAe,MAAM,4CAAoB;AAAA,cACxC;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA,EAAE,yBAAyB,KAAK;AAAA,YACjC;AACA,kBAAM,KAAK,aAAa,QAAQ,aAAa;AAC7C,kBAAM,MAAM,aAAa,QAAQ;AACjC,gBAAI,aAAa;AAChB,6BAAe,MAAM,4CAAoB,KAAK,MAAM,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,GAAa;AAAA,YACrF,OAAO;AACN,6BAAe;AAAA,gBACd;AAAA,gBACA;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAEA,cAAI,cAAc,cAAc;AAC/B,2BAAe,MAAM,oDAA4B;AAAA,cAChD;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA,CAAC;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAEA,cAAI,cAAc,OAAO;AACxB,kBAAM,aAAa,KAAK,iBAAiB,cAAc,CAAC;AACxD,2BAAe,MAAM,4CAAoB;AAAA,cACxC;AAAA,cACA;AAAA,cACA,iBAAiB,UAAU;AAAA,YAC5B;AAAA,UACD;AAEA,cAAI,cAAc,UAAU;AAC3B,kBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,kBAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAClD,mBAAO,OAAO,IAAI,OAAO;AACzB,gBAAI,WAAW;AACd,6BAAe,MAAM,oDAA4B;AAAA,gBAChD;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,CAAC;AAAA,gBACD;AAAA,cACD;AAAA,YACD,OAAO;AACN,iBAAG,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC3C,6BAAe,MAAM,oDAA4B;AAAA,gBAChD;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,CAAC;AAAA,gBACD;AAAA,cACD;AACA,6BAAe,aAAa,OAAO,GAAG,GAAG,KAAK;AAAA,YAC/C;AAAA,UACD;AAEA,cAAI,cAAc,UAAU;AAC3B,kBAAM,aAAa,KAAK,iBAAiB,cAAc,CAAC;AACxD,kBAAM,eAAe,KAAK,iBAAiB,gBAAgB,CAAC;AAC5D,gBAAI,OAAkB,CAAC;AACvB,mBAAO,OAAO,OAAO,CAAC,GAAG,YAAY;AACrC,gBAAI,KAAK,KAAK;AACb,mBAAK,MAAM,KAAK,IAAI,SAAS;AAAA,YAC9B;AACA,gBAAI,OAAO,KAAK,IAAI,EAAE,WAAW,GAAG;AACnC,oBAAM,IAAI,uCAAmB,KAAK,QAAQ,GAAG,sCAAsC;AAAA,gBAClF,WAAW;AAAA,cACZ,CAAC;AAAA,YACF;AACA,2BAAe,MAAM,4CAAoB;AAAA,cACxC;AAAA,cACA;AAAA,cACA,iBAAiB,UAAU;AAAA,cAC3B;AAAA,cACA;AAAA,cACA;AAAA,cACA,EAAE,yBAAyB,KAAK;AAAA,YACjC;AACA,2BAAe,EAAE,SAAS,KAAK;AAAA,UAChC;AAAA,QACD;AACA,YAAI,aAAa,WAAW;AAE3B,cAAI,cAAc,OAAO;AACxB,kBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,2BAAe,MAAM,4CAAoB;AAAA,cACxC;AAAA,cACA;AAAA,cACA,iBAAiB,SAAS;AAAA,cAC1B,CAAC;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAEA,cAAI,cAAc,UAAU;AAC3B,kBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,gBAAI,WAAW;AACd,6BAAe,MAAM,oDAA4B;AAAA,gBAChD;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,CAAC;AAAA,gBACD;AAAA,cACD;AAAA,YACD,OAAO;AACN,iBAAG,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC3C,6BAAe,MAAM,oDAA4B;AAAA,gBAChD;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,CAAC;AAAA,gBACD;AAAA,cACD;AACA,6BAAe,aAAa,OAAO,GAAG,GAAG,KAAK;AAAA,YAC/C;AAAA,UACD;AAAA,QACD;AACA,YAAI,aAAa,UAAU;AAE1B,cAAI,cAAc,UAAU;AAC3B,kBAAM,iBAAiB,KAAK,iBAAiB,kBAAkB,CAAC;AAChE,kBAAM,OAAO,KAAK,iBAAiB,QAAQ,CAAC;AAC5C,kBAAM,mBAAmB,KAAK,iBAAiB,oBAAoB,CAAC;AACpE,kBAAM,cAAc,KAAK,iBAAiB,iBAAiB,CAAC;AAC5D,gBAAI,aAAa,KAAK,iBAAiB,QAAQ,CAAC;AAGhD,kBAAM,WAAW,CAAC,SAAS,UAAU;AACrC,gBAAI,CAAC,SAAS,SAAS,UAAU,GAAG;AACnC,2BAAa,GAAG,UAAU;AAAA,YAC3B;AACA,kBAAM,OAAgB;AAAA,cACrB;AAAA,cACA,aAAa,CAAC;AAAA,YACf;AACA,mBAAO,OAAO,MAAM,gBAAgB;AACpC,gBAAI,iBAAiB,YAAY;AAChC,mBAAK,WAAW;AAAA,gBACf,IAAI,iBAAiB;AAAA,cACtB;AAEA,qBAAO,KAAK;AAAA,YACb;AACA,gBAAI,iBAAiB,eAAe;AACnC,mBAAK,WAAW;AAAA,gBACf,OAAO,iBAAiB;AAAA,cACzB;AAEA,qBAAO,KAAK;AAAA,YACb;AACA,gBAAI,KAAK,aAAa,QAAW;AAChC,oBAAM,IAAI;AAAA,gBACT,KAAK,QAAQ;AAAA,gBACb;AAAA,gBACA,EAAE,WAAW,EAAE;AAAA,cAChB;AAAA,YACD;AACA,gBAAI,aAAa;AAChB,kBACC,YAAY,qBACX,YAAY,kBAAoC,WAAW,GAC3D;AACD,qBAAK,aAAa,KAAK;AAAA,kBACtB,KAAK;AAAA,kBACL,YAAY;AAAA,gBACb;AAAA,cACD;AACA,kBACC,YAAY,qBACX,YAAY,kBAAoC,WAAW,KAC5D,MAAM,CAAC,EAAE,QACR;AACD,sBAAM,cAAc,CAAC,UAAoC;AACxD,wBAAM,iBAAkB,MAAM,CAAC,EAAE,OAChC,MAAM,QACP;AACA,sBAAI,gBAAgB;AACnB,2BAAO;AAAA,sBACN,UAAU,eAAe,YAAY;AAAA,sBACrC,MAAM,eAAe;AAAA,sBACrB,UAAU,eAAe;AAAA,oBAC1B;AAAA,kBACD,OAAO;AACN,0BAAM,IAAI;AAAA,sBACT,KAAK,QAAQ;AAAA,sBACb,mBAAmB,MAAM,QAAQ;AAAA,sBACjC,EAAE,WAAW,EAAE;AAAA,oBAChB;AAAA,kBACD;AAAA,gBACD;AACA,qBAAK,aAAa,KAAK;AAAA,kBACtB,KAAK;AAAA,kBACJ,YAAY,kBAAoC,IAAI,WAAW;AAAA,gBACjE;AAAA,cACD;AAAA,YACD;AACA,2BAAe,MAAM,4CAAoB;AAAA,cACxC;AAAA,cACA;AAAA,cACA,qBAAqB,cAAc,IAAI,UAAU;AAAA,cACjD;AAAA,YACD;AACA,2BAAe,EAAE,SAAS,KAAK;AAAA,UAChC;AAEA,cAAI,cAAc,UAAU;AAC3B,kBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,kBAAM,iBAAiB,KAAK,iBAAiB,kBAAkB,CAAC;AAChE,gBAAI,WAAW;AACd,6BAAe,MAAM,oDAA4B;AAAA,gBAChD;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,qBAAqB,cAAc;AAAA,cACpC;AAAA,YACD,OAAO;AACN,iBAAG,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC3C,6BAAe,MAAM,oDAA4B;AAAA,gBAChD;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,qBAAqB,cAAc;AAAA,gBACnC,CAAC;AAAA,gBACD;AAAA,cACD;AACA,6BAAe,aAAa,OAAO,GAAG,GAAG,KAAK;AAAA,YAC/C;AAAA,UACD;AAAA,QACD;AAAA,MACD,SAAS,OAAO;AACf,YAAI,KAAK,eAAe,GAAG;AAC1B,gBAAM,qBAAqB,KAAK,QAAQ;AAAA,YACvC,KAAK,QAAQ,gBAAgB,EAAE,OAAO,MAAM,QAAQ,CAAC;AAAA,YACrD,EAAE,UAAU,EAAE,MAAM,EAAE,EAAE;AAAA,UACzB;AACA,qBAAW,KAAK,GAAG,kBAAkB;AACrC;AAAA,QACD;AACA,cAAM;AAAA,MACP;AAEA,YAAM,gBAAgB,KAAK,QAAQ;AAAA,QAClC,KAAK,QAAQ,gBAAgB,YAA6B;AAAA,QAC1D,EAAE,UAAU,EAAE,MAAM,EAAE,EAAE;AAAA,MACzB;AAEA,iBAAW,KAAK,GAAG,aAAa;AAAA,IACjC;AAEA,WAAO,CAAC,UAAU;AAAA,EACnB;AACD;","names":[]}