{"version":3,"sources":["../../../nodes/HelpScout/HelpScoutTrigger.node.ts"],"sourcesContent":["import { createHmac } from 'crypto';\nimport type {\n\tIHookFunctions,\n\tIWebhookFunctions,\n\tIDataObject,\n\tINodeType,\n\tINodeTypeDescription,\n\tIWebhookResponseData,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, randomString } from 'n8n-workflow';\n\nimport { helpscoutApiRequest, helpscoutApiRequestAllItems } from './GenericFunctions';\n\nexport class HelpScoutTrigger implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Help Scout Trigger',\n\t\tname: 'helpScoutTrigger',\n\t\ticon: 'file:helpScout.svg',\n\t\tgroup: ['trigger'],\n\t\tversion: 1,\n\t\tdescription: 'Starts the workflow when Help Scout events occur',\n\t\tdefaults: {\n\t\t\tname: 'Help Scout Trigger',\n\t\t},\n\t\tinputs: [],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'helpScoutOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\twebhooks: [\n\t\t\t{\n\t\t\t\tname: 'default',\n\t\t\t\thttpMethod: 'POST',\n\t\t\t\tresponseMode: 'onReceived',\n\t\t\t\tpath: 'webhook',\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Events',\n\t\t\t\tname: 'events',\n\t\t\t\ttype: 'multiOptions',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Conversation - Assigned',\n\t\t\t\t\t\tvalue: 'convo.assigned',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Conversation - Created',\n\t\t\t\t\t\tvalue: 'convo.created',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Conversation - Deleted',\n\t\t\t\t\t\tvalue: 'convo.deleted',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Conversation - Merged',\n\t\t\t\t\t\tvalue: 'convo.merged',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Conversation - Moved',\n\t\t\t\t\t\tvalue: 'convo.moved',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Conversation - Status',\n\t\t\t\t\t\tvalue: 'convo.status',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Conversation - Tags',\n\t\t\t\t\t\tvalue: 'convo.tags',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Conversation Agent Reply - Created',\n\t\t\t\t\t\tvalue: 'convo.agent.reply.created',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Conversation Customer Reply - Created',\n\t\t\t\t\t\tvalue: 'convo.customer.reply.created',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Conversation Note - Created',\n\t\t\t\t\t\tvalue: 'convo.note.created',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Customer - Created',\n\t\t\t\t\t\tvalue: 'customer.created',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Rating - Received',\n\t\t\t\t\t\tvalue: 'satisfaction.ratings',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: [],\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t};\n\n\twebhookMethods = {\n\t\tdefault: {\n\t\t\tasync checkExists(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookUrl = this.getNodeWebhookUrl('default');\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tconst events = this.getNodeParameter('events') as string;\n\n\t\t\t\t// Check all the webhooks which exist already if it is identical to the\n\t\t\t\t// one that is supposed to get created.\n\t\t\t\tconst endpoint = '/v2/webhooks';\n\t\t\t\tconst data = await helpscoutApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'_embedded.webhooks',\n\t\t\t\t\t'GET',\n\t\t\t\t\tendpoint,\n\t\t\t\t\t{},\n\t\t\t\t);\n\n\t\t\t\tfor (const webhook of data) {\n\t\t\t\t\tif (webhook.url === webhookUrl) {\n\t\t\t\t\t\tfor (const event of events) {\n\t\t\t\t\t\t\tif (!webhook.events.includes(event) && webhook.state === 'enabled') {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Set webhook-id to be sure that it can be deleted\n\t\t\t\t\twebhookData.webhookId = webhook.id as string;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tasync create(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tconst webhookUrl = this.getNodeWebhookUrl('default');\n\t\t\t\tconst events = this.getNodeParameter('events') as string;\n\n\t\t\t\tconst endpoint = '/v2/webhooks';\n\n\t\t\t\tconst body = {\n\t\t\t\t\turl: webhookUrl,\n\t\t\t\t\tevents,\n\t\t\t\t\tsecret: randomString(10).toLowerCase(),\n\t\t\t\t};\n\n\t\t\t\tconst responseData = await helpscoutApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'POST',\n\t\t\t\t\tendpoint,\n\t\t\t\t\tbody,\n\t\t\t\t\t{},\n\t\t\t\t\tundefined,\n\t\t\t\t\t{ resolveWithFullResponse: true },\n\t\t\t\t);\n\n\t\t\t\tif (responseData.headers['resource-id'] === undefined) {\n\t\t\t\t\t// Required data is missing so was not successful\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\twebhookData.webhookId = responseData.headers['resource-id'] as string;\n\t\t\t\twebhookData.secret = body.secret;\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tasync delete(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tif (webhookData.webhookId !== undefined) {\n\t\t\t\t\tconst endpoint = `/v2/webhooks/${webhookData.webhookId}`;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait helpscoutApiRequest.call(this, 'DELETE', endpoint);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Remove from the static workflow data so that it is clear\n\t\t\t\t\t// that no webhooks are registered anymore\n\t\t\t\t\tdelete webhookData.webhookId;\n\t\t\t\t\tdelete webhookData.secret;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync webhook(this: IWebhookFunctions): Promise<IWebhookResponseData> {\n\t\tconst req = this.getRequestObject();\n\t\tconst bodyData = this.getBodyData();\n\t\tconst headerData = this.getHeaderData() as IDataObject;\n\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\tif (headerData['x-helpscout-signature'] === undefined) {\n\t\t\treturn {};\n\t\t}\n\n\t\tconst computedSignature = createHmac('sha1', webhookData.secret as string)\n\t\t\t.update(req.rawBody)\n\t\t\t.digest('base64');\n\t\tif (headerData['x-helpscout-signature'] !== computedSignature) {\n\t\t\treturn {};\n\t\t}\n\t\treturn {\n\t\t\tworkflowData: [this.helpers.returnJsonArray(bodyData)],\n\t\t};\n\t}\n}\n"],"mappings":"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","names":[]}