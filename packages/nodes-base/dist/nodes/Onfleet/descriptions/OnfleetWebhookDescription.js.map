{"version":3,"sources":["../../../../nodes/Onfleet/descriptions/OnfleetWebhookDescription.ts"],"sourcesContent":["import type { INodeProperties } from 'n8n-workflow';\n\nimport { webhookMapping } from '../WebhookMapping';\n\nconst sort = (a: { name: string }, b: { name: string }) => {\n\tif (a.name < b.name) {\n\t\treturn -1;\n\t}\n\tif (a.name > b.name) {\n\t\treturn 1;\n\t}\n\treturn 0;\n};\n\nexport const eventDisplay: INodeProperties = {\n\tdisplayName: 'Trigger On',\n\tname: 'triggerOn',\n\ttype: 'options',\n\toptions: Object.keys(webhookMapping)\n\t\t.map((webhook) => {\n\t\t\tconst { name, value } = webhookMapping[webhook];\n\t\t\treturn { name, value };\n\t\t})\n\t\t.sort(sort),\n\trequired: true,\n\tdefault: [],\n};\n\nexport const eventNameField = {\n\tdisplayName: 'Additional Fields',\n\tname: 'additionalFields',\n\ttype: 'collection',\n\tplaceholder: 'Add Field',\n\tdefault: {},\n\toptions: [\n\t\t{\n\t\t\tdisplayName: 'Name',\n\t\t\tname: 'name',\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t\tdescription: 'A name for the webhook for identification',\n\t\t},\n\t],\n} as INodeProperties;\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,4BAA+B;AAE/B,MAAM,OAAO,CAAC,GAAqB,MAAwB;AAC1D,MAAI,EAAE,OAAO,EAAE,MAAM;AACpB,WAAO;AAAA,EACR;AACA,MAAI,EAAE,OAAO,EAAE,MAAM;AACpB,WAAO;AAAA,EACR;AACA,SAAO;AACR;AAEO,MAAM,eAAgC;AAAA,EAC5C,aAAa;AAAA,EACb,MAAM;AAAA,EACN,MAAM;AAAA,EACN,SAAS,OAAO,KAAK,oCAAc,EACjC,IAAI,CAAC,YAAY;AACjB,UAAM,EAAE,MAAM,MAAM,IAAI,qCAAe,OAAO;AAC9C,WAAO,EAAE,MAAM,MAAM;AAAA,EACtB,CAAC,EACA,KAAK,IAAI;AAAA,EACX,UAAU;AAAA,EACV,SAAS,CAAC;AACX;AAEO,MAAM,iBAAiB;AAAA,EAC7B,aAAa;AAAA,EACb,MAAM;AAAA,EACN,MAAM;AAAA,EACN,aAAa;AAAA,EACb,SAAS,CAAC;AAAA,EACV,SAAS;AAAA,IACR;AAAA,MACC,aAAa;AAAA,MACb,MAAM;AAAA,MACN,MAAM;AAAA,MACN,SAAS;AAAA,MACT,aAAa;AAAA,IACd;AAAA,EACD;AACD;","names":[]}