{"version":3,"sources":["../../../../../../nodes/Postgres/v2/actions/database/deleteTable.operation.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tINodeProperties,\n} from 'n8n-workflow';\nimport { NodeOperationError } from 'n8n-workflow';\n\nimport { updateDisplayOptions } from '@utils/utilities';\n\nimport type {\n\tPgpDatabase,\n\tPostgresNodeOptions,\n\tQueriesRunner,\n\tQueryValues,\n\tQueryWithValues,\n\tWhereClause,\n} from '../../helpers/interfaces';\nimport { addWhereClauses } from '../../helpers/utils';\nimport {\n\tcombineConditionsCollection,\n\toptionsCollection,\n\twhereFixedCollection,\n} from '../common.descriptions';\n\nconst properties: INodeProperties[] = [\n\t{\n\t\tdisplayName: 'Command',\n\t\tname: 'deleteCommand',\n\t\ttype: 'options',\n\t\tdefault: 'truncate',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tname: 'Truncate',\n\t\t\t\tvalue: 'truncate',\n\t\t\t\tdescription: \"Only removes the table's data and preserves the table's structure\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Delete',\n\t\t\t\tvalue: 'delete',\n\t\t\t\tdescription:\n\t\t\t\t\t\"Delete the rows that match the 'Select Rows' conditions below. If no selection is made, all rows in the table are deleted.\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Drop',\n\t\t\t\tvalue: 'drop',\n\t\t\t\tdescription: \"Deletes the table's data and also the table's structure permanently\",\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tdisplayName: 'Restart Sequences',\n\t\tname: 'restartSequences',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tdescription: 'Whether to reset identity (auto-increment) columns to their initial values',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tdeleteCommand: ['truncate'],\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\t...whereFixedCollection,\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tdeleteCommand: ['delete'],\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\t...combineConditionsCollection,\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tdeleteCommand: ['delete'],\n\t\t\t},\n\t\t},\n\t},\n\toptionsCollection,\n];\n\nconst displayOptions = {\n\tshow: {\n\t\tresource: ['database'],\n\t\toperation: ['deleteTable'],\n\t},\n\thide: {\n\t\ttable: [''],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n\nexport async function execute(\n\tthis: IExecuteFunctions,\n\trunQueries: QueriesRunner,\n\titems: INodeExecutionData[],\n\tnodeOptions: PostgresNodeOptions,\n\t_db?: PgpDatabase,\n): Promise<INodeExecutionData[]> {\n\tconst queries: QueryWithValues[] = [];\n\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst options = this.getNodeParameter('options', i, {});\n\n\t\tconst schema = this.getNodeParameter('schema', i, undefined, {\n\t\t\textractValue: true,\n\t\t}) as string;\n\n\t\tconst table = this.getNodeParameter('table', i, undefined, {\n\t\t\textractValue: true,\n\t\t}) as string;\n\n\t\tconst deleteCommand = this.getNodeParameter('deleteCommand', i) as string;\n\n\t\tlet query = '';\n\t\tlet values: QueryValues = [schema, table];\n\n\t\tif (deleteCommand === 'drop') {\n\t\t\tconst cascade = options.cascade ? ' CASCADE' : '';\n\t\t\tquery = `DROP TABLE IF EXISTS $1:name.$2:name${cascade}`;\n\t\t}\n\n\t\tif (deleteCommand === 'truncate') {\n\t\t\tconst identity = this.getNodeParameter('restartSequences', i, false)\n\t\t\t\t? ' RESTART IDENTITY'\n\t\t\t\t: '';\n\t\t\tconst cascade = options.cascade ? ' CASCADE' : '';\n\t\t\tquery = `TRUNCATE TABLE $1:name.$2:name${identity}${cascade}`;\n\t\t}\n\n\t\tif (deleteCommand === 'delete') {\n\t\t\tconst whereClauses =\n\t\t\t\t((this.getNodeParameter('where', i, []) as IDataObject).values as WhereClause[]) || [];\n\n\t\t\tconst combineConditions = this.getNodeParameter('combineConditions', i, 'AND') as string;\n\n\t\t\t[query, values] = addWhereClauses(\n\t\t\t\tthis.getNode(),\n\t\t\t\ti,\n\t\t\t\t'DELETE FROM $1:name.$2:name',\n\t\t\t\twhereClauses,\n\t\t\t\tvalues,\n\t\t\t\tcombineConditions,\n\t\t\t);\n\t\t}\n\n\t\tif (query === '') {\n\t\t\tthrow new NodeOperationError(\n\t\t\t\tthis.getNode(),\n\t\t\t\t'Invalid delete command, only drop, delete and truncate are supported ',\n\t\t\t\t{ itemIndex: i },\n\t\t\t);\n\t\t}\n\n\t\tconst queryWithValues = { query, values };\n\n\t\tqueries.push(queryWithValues);\n\t}\n\n\treturn await runQueries(queries, items, nodeOptions);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,0BAAmC;AAEnC,uBAAqC;AAUrC,mBAAgC;AAChC,oBAIO;AAEP,MAAM,aAAgC;AAAA,EACrC;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS;AAAA,IACT,SAAS;AAAA,MACR;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,QACP,aAAa;AAAA,MACd;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,QACP,aACC;AAAA,MACF;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,QACP,aAAa;AAAA,MACd;AAAA,IACD;AAAA,EACD;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,IACb,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,eAAe,CAAC,UAAU;AAAA,MAC3B;AAAA,IACD;AAAA,EACD;AAAA,EACA;AAAA,IACC,GAAG;AAAA,IACH,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,eAAe,CAAC,QAAQ;AAAA,MACzB;AAAA,IACD;AAAA,EACD;AAAA,EACA;AAAA,IACC,GAAG;AAAA,IACH,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,eAAe,CAAC,QAAQ;AAAA,MACzB;AAAA,IACD;AAAA,EACD;AAAA,EACA;AACD;AAEA,MAAM,iBAAiB;AAAA,EACtB,MAAM;AAAA,IACL,UAAU,CAAC,UAAU;AAAA,IACrB,WAAW,CAAC,aAAa;AAAA,EAC1B;AAAA,EACA,MAAM;AAAA,IACL,OAAO,CAAC,EAAE;AAAA,EACX;AACD;AAEO,MAAM,kBAAc,uCAAqB,gBAAgB,UAAU;AAE1E,eAAsB,QAErB,YACA,OACA,aACA,KACgC;AAChC,QAAM,UAA6B,CAAC;AAEpC,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACtC,UAAM,UAAU,KAAK,iBAAiB,WAAW,GAAG,CAAC,CAAC;AAEtD,UAAM,SAAS,KAAK,iBAAiB,UAAU,GAAG,QAAW;AAAA,MAC5D,cAAc;AAAA,IACf,CAAC;AAED,UAAM,QAAQ,KAAK,iBAAiB,SAAS,GAAG,QAAW;AAAA,MAC1D,cAAc;AAAA,IACf,CAAC;AAED,UAAM,gBAAgB,KAAK,iBAAiB,iBAAiB,CAAC;AAE9D,QAAI,QAAQ;AACZ,QAAI,SAAsB,CAAC,QAAQ,KAAK;AAExC,QAAI,kBAAkB,QAAQ;AAC7B,YAAM,UAAU,QAAQ,UAAU,aAAa;AAC/C,cAAQ,uCAAuC,OAAO;AAAA,IACvD;AAEA,QAAI,kBAAkB,YAAY;AACjC,YAAM,WAAW,KAAK,iBAAiB,oBAAoB,GAAG,KAAK,IAChE,sBACA;AACH,YAAM,UAAU,QAAQ,UAAU,aAAa;AAC/C,cAAQ,iCAAiC,QAAQ,GAAG,OAAO;AAAA,IAC5D;AAEA,QAAI,kBAAkB,UAAU;AAC/B,YAAM,eACH,KAAK,iBAAiB,SAAS,GAAG,CAAC,CAAC,EAAkB,UAA4B,CAAC;AAEtF,YAAM,oBAAoB,KAAK,iBAAiB,qBAAqB,GAAG,KAAK;AAE7E,OAAC,OAAO,MAAM,QAAI;AAAA,QACjB,KAAK,QAAQ;AAAA,QACb;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAEA,QAAI,UAAU,IAAI;AACjB,YAAM,IAAI;AAAA,QACT,KAAK,QAAQ;AAAA,QACb;AAAA,QACA,EAAE,WAAW,EAAE;AAAA,MAChB;AAAA,IACD;AAEA,UAAM,kBAAkB,EAAE,OAAO,OAAO;AAExC,YAAQ,KAAK,eAAe;AAAA,EAC7B;AAEA,SAAO,MAAM,WAAW,SAAS,OAAO,WAAW;AACpD;","names":[]}