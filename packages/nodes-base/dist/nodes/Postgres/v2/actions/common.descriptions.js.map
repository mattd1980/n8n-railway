{"version":3,"sources":["../../../../../nodes/Postgres/v2/actions/common.descriptions.ts"],"sourcesContent":["import type { INodeProperties } from 'n8n-workflow';\n\nexport const optionsCollection: INodeProperties = {\n\tdisplayName: 'Options',\n\tname: 'options',\n\ttype: 'collection',\n\tplaceholder: 'Add option',\n\tdefault: {},\n\toptions: [\n\t\t{\n\t\t\tdisplayName: 'Cascade',\n\t\t\tname: 'cascade',\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tdescription:\n\t\t\t\t'Whether to drop all objects that depend on the table, such as views and sequences',\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: {\n\t\t\t\t\t'/operation': ['deleteTable'],\n\t\t\t\t},\n\t\t\t\thide: {\n\t\t\t\t\t'/deleteCommand': ['delete'],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Connection Timeout',\n\t\t\tname: 'connectionTimeout',\n\t\t\ttype: 'number',\n\t\t\tdefault: 30,\n\t\t\tdescription: 'Number of seconds reserved for connecting to the database',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Delay Closing Idle Connection',\n\t\t\tname: 'delayClosingIdleConnection',\n\t\t\ttype: 'number',\n\t\t\tdefault: 0,\n\t\t\tdescription: 'Number of seconds to wait before idle connection would be eligible for closing',\n\t\t\ttypeOptions: {\n\t\t\t\tminValue: 0,\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Query Batching',\n\t\t\tname: 'queryBatching',\n\t\t\ttype: 'options',\n\t\t\tnoDataExpression: true,\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\tname: 'Single Query',\n\t\t\t\t\tvalue: 'single',\n\t\t\t\t\tdescription: 'A single query for all incoming items',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Independent',\n\t\t\t\t\tvalue: 'independently',\n\t\t\t\t\tdescription: 'Execute one query per incoming item of the run',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Transaction',\n\t\t\t\t\tvalue: 'transaction',\n\t\t\t\t\tdescription:\n\t\t\t\t\t\t'Execute all queries in a transaction, if a failure occurs, all changes are rolled back',\n\t\t\t\t},\n\t\t\t],\n\t\t\tdefault: 'single',\n\t\t\tdescription: 'The way queries should be sent to the database',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Query Parameters',\n\t\t\tname: 'queryReplacement',\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t\tdescription:\n\t\t\t\t'Comma-separated list of the values you want to use as query parameters. <a href=\"https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.postgres/#use-query-parameters\" target=\"_blank\">More info</a>.',\n\t\t\thint: 'Comma-separated list of values: reference them in your query as $1, $2, $3â€¦',\n\t\t\tplaceholder: 'e.g. value1,value2,value3',\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: { '/operation': ['executeQuery'] },\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-display-name-miscased\n\t\t\tdisplayName: 'Treat query parameters in single quotes as text',\n\t\t\tname: 'treatQueryParametersInSingleQuotesAsText',\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tdescription: \"Whether to treat query parameters enclosed in single quotes as text e.g. '$1'\",\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: { queryReplacement: [{ _cnd: { exists: true } }] },\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-display-name-wrong-for-dynamic-multi-options\n\t\t\tdisplayName: 'Output Columns',\n\t\t\tname: 'outputColumns',\n\t\t\ttype: 'multiOptions',\n\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-description-wrong-for-dynamic-multi-options\n\t\t\tdescription:\n\t\t\t\t'Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code/expressions/\" target=\"_blank\">expression</a>',\n\t\t\ttypeOptions: {\n\t\t\t\tloadOptionsMethod: 'getColumnsMultiOptions',\n\t\t\t\tloadOptionsDependsOn: ['table.value'],\n\t\t\t},\n\t\t\tdefault: [],\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: { '/operation': ['select', 'insert', 'update', 'upsert'] },\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Output Large-Format Numbers As',\n\t\t\tname: 'largeNumbersOutput',\n\t\t\ttype: 'options',\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\tname: 'Numbers',\n\t\t\t\t\tvalue: 'numbers',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Text',\n\t\t\t\t\tvalue: 'text',\n\t\t\t\t\tdescription:\n\t\t\t\t\t\t'Use this if you expect numbers longer than 16 digits (otherwise numbers may be incorrect)',\n\t\t\t\t},\n\t\t\t],\n\t\t\thint: 'Applies to NUMERIC and BIGINT columns only',\n\t\t\tdefault: 'text',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Skip on Conflict',\n\t\t\tname: 'skipOnConflict',\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tdescription:\n\t\t\t\t'Whether to skip the row and do not throw error if a unique constraint or exclusion constraint is violated',\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: {\n\t\t\t\t\t'/operation': ['insert'],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Replace Empty Strings with NULL',\n\t\t\tname: 'replaceEmptyStrings',\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tdescription:\n\t\t\t\t'Whether to replace empty strings with NULL in input, could be useful when data come from spreadsheet',\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: {\n\t\t\t\t\t'/operation': ['insert', 'update', 'upsert', 'executeQuery'],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n};\n\nexport const schemaRLC: INodeProperties = {\n\tdisplayName: 'Schema',\n\tname: 'schema',\n\ttype: 'resourceLocator',\n\tdefault: { mode: 'list', value: 'public' },\n\trequired: true,\n\tplaceholder: 'e.g. public',\n\tdescription: 'The schema that contains the table you want to work on',\n\tmodes: [\n\t\t{\n\t\t\tdisplayName: 'From List',\n\t\t\tname: 'list',\n\t\t\ttype: 'list',\n\t\t\ttypeOptions: {\n\t\t\t\tsearchListMethod: 'schemaSearch',\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'By Name',\n\t\t\tname: 'name',\n\t\t\ttype: 'string',\n\t\t},\n\t],\n};\n\nexport const tableRLC: INodeProperties = {\n\tdisplayName: 'Table',\n\tname: 'table',\n\ttype: 'resourceLocator',\n\tdefault: { mode: 'list', value: '' },\n\trequired: true,\n\tdescription: 'The table you want to work on',\n\tmodes: [\n\t\t{\n\t\t\tdisplayName: 'From List',\n\t\t\tname: 'list',\n\t\t\ttype: 'list',\n\t\t\ttypeOptions: {\n\t\t\t\tsearchListMethod: 'tableSearch',\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'By Name',\n\t\t\tname: 'name',\n\t\t\ttype: 'string',\n\t\t},\n\t],\n};\n\nexport const whereFixedCollection: INodeProperties = {\n\tdisplayName: 'Select Rows',\n\tname: 'where',\n\ttype: 'fixedCollection',\n\ttypeOptions: {\n\t\tmultipleValues: true,\n\t},\n\tplaceholder: 'Add Condition',\n\tdefault: {},\n\tdescription: 'If not set, all rows will be selected',\n\toptions: [\n\t\t{\n\t\t\tdisplayName: 'Values',\n\t\t\tname: 'values',\n\t\t\tvalues: [\n\t\t\t\t{\n\t\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-display-name-wrong-for-dynamic-options\n\t\t\t\t\tdisplayName: 'Column',\n\t\t\t\t\tname: 'column',\n\t\t\t\t\ttype: 'options',\n\t\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-description-wrong-for-dynamic-options\n\t\t\t\t\tdescription:\n\t\t\t\t\t\t'Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\" target=\"_blank\">expression</a>',\n\t\t\t\t\tdefault: '',\n\t\t\t\t\tplaceholder: 'e.g. ID',\n\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\tloadOptionsMethod: 'getColumns',\n\t\t\t\t\t\tloadOptionsDependsOn: ['schema.value', 'table.value'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdisplayName: 'Operator',\n\t\t\t\t\tname: 'condition',\n\t\t\t\t\ttype: 'options',\n\t\t\t\t\tdescription:\n\t\t\t\t\t\t\"The operator to check the column against. When using 'LIKE' operator percent sign ( %) matches zero or more characters, underscore ( _ ) matches any single character.\",\n\t\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-options-type-unsorted-items\n\t\t\t\t\toptions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'Equal',\n\t\t\t\t\t\t\tvalue: 'equal',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'Not Equal',\n\t\t\t\t\t\t\tvalue: '!=',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'Like',\n\t\t\t\t\t\t\tvalue: 'LIKE',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'Greater Than',\n\t\t\t\t\t\t\tvalue: '>',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'Less Than',\n\t\t\t\t\t\t\tvalue: '<',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'Greater Than Or Equal',\n\t\t\t\t\t\t\tvalue: '>=',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'Less Than Or Equal',\n\t\t\t\t\t\t\tvalue: '<=',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'Is Null',\n\t\t\t\t\t\t\tvalue: 'IS NULL',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'Is Not Null',\n\t\t\t\t\t\t\tvalue: 'IS NOT NULL',\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\tdefault: 'equal',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdisplayName: 'Value',\n\t\t\t\t\tname: 'value',\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\thide: {\n\t\t\t\t\t\t\tcondition: ['IS NULL', 'IS NOT NULL'],\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tdefault: '',\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t],\n};\n\nexport const sortFixedCollection: INodeProperties = {\n\tdisplayName: 'Sort',\n\tname: 'sort',\n\ttype: 'fixedCollection',\n\ttypeOptions: {\n\t\tmultipleValues: true,\n\t},\n\tplaceholder: 'Add Sort Rule',\n\tdefault: {},\n\toptions: [\n\t\t{\n\t\t\tdisplayName: 'Values',\n\t\t\tname: 'values',\n\t\t\tvalues: [\n\t\t\t\t{\n\t\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-display-name-wrong-for-dynamic-options\n\t\t\t\t\tdisplayName: 'Column',\n\t\t\t\t\tname: 'column',\n\t\t\t\t\ttype: 'options',\n\t\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-description-wrong-for-dynamic-options\n\t\t\t\t\tdescription:\n\t\t\t\t\t\t'Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\" target=\"_blank\">expression</a>',\n\t\t\t\t\tdefault: '',\n\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\tloadOptionsMethod: 'getColumns',\n\t\t\t\t\t\tloadOptionsDependsOn: ['schema.value', 'table.value'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdisplayName: 'Direction',\n\t\t\t\t\tname: 'direction',\n\t\t\t\t\ttype: 'options',\n\t\t\t\t\toptions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'ASC',\n\t\t\t\t\t\t\tvalue: 'ASC',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'DESC',\n\t\t\t\t\t\t\tvalue: 'DESC',\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\tdefault: 'ASC',\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t],\n};\n\nexport const combineConditionsCollection: INodeProperties = {\n\tdisplayName: 'Combine Conditions',\n\tname: 'combineConditions',\n\ttype: 'options',\n\tdescription:\n\t\t'How to combine the conditions defined in \"Select Rows\": AND requires all conditions to be true, OR requires at least one condition to be true',\n\toptions: [\n\t\t{\n\t\t\tname: 'AND',\n\t\t\tvalue: 'AND',\n\t\t\tdescription: 'Only rows that meet all the conditions are selected',\n\t\t},\n\t\t{\n\t\t\tname: 'OR',\n\t\t\tvalue: 'OR',\n\t\t\tdescription: 'Rows that meet at least one condition are selected',\n\t\t},\n\t],\n\tdefault: 'AND',\n};\n"],"mappings":"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","names":[]}