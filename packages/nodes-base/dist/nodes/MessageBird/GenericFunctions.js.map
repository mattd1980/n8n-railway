{"version":3,"sources":["../../../nodes/MessageBird/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIHookFunctions,\n\tIDataObject,\n\tJsonObject,\n\tIHttpRequestMethods,\n\tIRequestOptions,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\n/**\n * Make an API request to Message Bird\n *\n */\nexport async function messageBirdApiRequest(\n\tthis: IHookFunctions | IExecuteFunctions,\n\tmethod: IHttpRequestMethods,\n\tresource: string,\n\tbody: IDataObject,\n\tquery: IDataObject = {},\n): Promise<any> {\n\tconst credentials = await this.getCredentials('messageBirdApi');\n\n\tconst options: IRequestOptions = {\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\tAuthorization: `AccessKey ${credentials.accessKey}`,\n\t\t},\n\t\tmethod,\n\t\tqs: query,\n\t\tbody,\n\t\turi: `https://rest.messagebird.com${resource}`,\n\t\tjson: true,\n\t};\n\ttry {\n\t\tif (Object.keys(body).length === 0) {\n\t\t\tdelete options.body;\n\t\t}\n\t\treturn await this.helpers.request(options);\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,0BAA6B;AAM7B,eAAsB,sBAErB,QACA,UACA,MACA,QAAqB,CAAC,GACP;AACf,QAAM,cAAc,MAAM,KAAK,eAAe,gBAAgB;AAE9D,QAAM,UAA2B;AAAA,IAChC,SAAS;AAAA,MACR,QAAQ;AAAA,MACR,eAAe,aAAa,YAAY,SAAS;AAAA,IAClD;AAAA,IACA;AAAA,IACA,IAAI;AAAA,IACJ;AAAA,IACA,KAAK,+BAA+B,QAAQ;AAAA,IAC5C,MAAM;AAAA,EACP;AACA,MAAI;AACH,QAAI,OAAO,KAAK,IAAI,EAAE,WAAW,GAAG;AACnC,aAAO,QAAQ;AAAA,IAChB;AACA,WAAO,MAAM,KAAK,QAAQ,QAAQ,OAAO;AAAA,EAC1C,SAAS,OAAO;AACf,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,KAAmB;AAAA,EAC3D;AACD;","names":[]}