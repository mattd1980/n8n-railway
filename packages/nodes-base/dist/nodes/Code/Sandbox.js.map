{"version":3,"sources":["../../../nodes/Code/Sandbox.ts"],"sourcesContent":["import { EventEmitter } from 'events';\nimport type {\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tISupplyDataFunctions,\n\tIWorkflowDataProxyData,\n} from 'n8n-workflow';\n\nimport { isObject } from './utils';\nimport { ValidationError } from './ValidationError';\n\ninterface SandboxTextKeys {\n\tobject: {\n\t\tsingular: string;\n\t\tplural: string;\n\t};\n}\n\nexport interface SandboxContext extends IWorkflowDataProxyData {\n\t$getNodeParameter: IExecuteFunctions['getNodeParameter'];\n\t$getWorkflowStaticData: IExecuteFunctions['getWorkflowStaticData'];\n\thelpers: IExecuteFunctions['helpers'];\n}\n\nexport const REQUIRED_N8N_ITEM_KEYS = new Set([\n\t'json',\n\t'binary',\n\t'pairedItem',\n\t'error',\n\n\t/**\n\t * The `index` key was added accidentally to Function, FunctionItem, Gong,\n\t * Execute Workflow, and ToolWorkflowV2, so we need to allow it temporarily.\n\t * Once we stop using it in all nodes, we can stop allowing the `index` key.\n\t */\n\t'index',\n]);\n\nexport function getSandboxContext(\n\tthis: IExecuteFunctions | ISupplyDataFunctions,\n\tindex: number,\n): SandboxContext {\n\tconst helpers = {\n\t\t...this.helpers,\n\t\thttpRequestWithAuthentication: this.helpers.httpRequestWithAuthentication.bind(this),\n\t\trequestWithAuthenticationPaginated: this.helpers.requestWithAuthenticationPaginated.bind(this),\n\t};\n\treturn {\n\t\t// from NodeExecuteFunctions\n\t\t$getNodeParameter: this.getNodeParameter.bind(this),\n\t\t$getWorkflowStaticData: this.getWorkflowStaticData.bind(this),\n\t\thelpers,\n\n\t\t// to bring in all $-prefixed vars and methods from WorkflowDataProxy\n\t\t// $node, $items(), $parameter, $json, $env, etc.\n\t\t...this.getWorkflowDataProxy(index),\n\t};\n}\n\nexport abstract class Sandbox extends EventEmitter {\n\tconstructor(\n\t\tprivate textKeys: SandboxTextKeys,\n\t\tprotected helpers: IExecuteFunctions['helpers'],\n\t) {\n\t\tsuper();\n\t}\n\n\tabstract runCode<T = unknown>(): Promise<T>;\n\n\tabstract runCodeAllItems(): Promise<INodeExecutionData[] | INodeExecutionData[][]>;\n\n\tabstract runCodeEachItem(itemIndex: number): Promise<INodeExecutionData | undefined>;\n\n\tvalidateRunCodeEachItem(\n\t\texecutionResult: INodeExecutionData | undefined,\n\t\titemIndex: number,\n\t): INodeExecutionData {\n\t\tif (typeof executionResult !== 'object') {\n\t\t\tthrow new ValidationError({\n\t\t\t\tmessage: `Code doesn't return ${this.getTextKey('object', { includeArticle: true })}`,\n\t\t\t\tdescription: `Please return ${this.getTextKey('object', {\n\t\t\t\t\tincludeArticle: true,\n\t\t\t\t})} representing the output item. ('${executionResult}' was returned instead.)`,\n\t\t\t\titemIndex,\n\t\t\t});\n\t\t}\n\n\t\tif (Array.isArray(executionResult)) {\n\t\t\tconst firstSentence =\n\t\t\t\texecutionResult.length > 0\n\t\t\t\t\t? `An array of ${typeof executionResult[0]}s was returned.`\n\t\t\t\t\t: 'An empty array was returned.';\n\t\t\tthrow new ValidationError({\n\t\t\t\tmessage: `Code doesn't return a single ${this.getTextKey('object')}`,\n\t\t\t\tdescription: `${firstSentence} If you need to output multiple items, please use the 'Run Once for All Items' mode instead.`,\n\t\t\t\titemIndex,\n\t\t\t});\n\t\t}\n\n\t\tconst [returnData] = this.helpers.normalizeItems([executionResult]);\n\n\t\tthis.validateItem(returnData, itemIndex);\n\n\t\t// If at least one top-level key is a supported item key (`json`, `binary`, etc.),\n\t\t// and another top-level key is unrecognized, then the user mis-added a property\n\t\t// directly on the item, when they intended to add it on the `json` property\n\t\tthis.validateTopLevelKeys(returnData, itemIndex);\n\n\t\treturn returnData;\n\t}\n\n\tvalidateRunCodeAllItems(\n\t\texecutionResult: INodeExecutionData | INodeExecutionData[] | undefined,\n\t): INodeExecutionData[] {\n\t\tif (typeof executionResult !== 'object') {\n\t\t\tthrow new ValidationError({\n\t\t\t\tmessage: \"Code doesn't return items properly\",\n\t\t\t\tdescription: `Please return an array of ${this.getTextKey('object', {\n\t\t\t\t\tplural: true,\n\t\t\t\t})}, one for each item you would like to output.`,\n\t\t\t});\n\t\t}\n\n\t\tif (Array.isArray(executionResult)) {\n\t\t\t/**\n\t\t\t * If at least one top-level key is an n8n item key (`json`, `binary`, etc.),\n\t\t\t * then require all item keys to be an n8n item key.\n\t\t\t *\n\t\t\t * If no top-level key is an n8n key, then skip this check, allowing non-n8n\n\t\t\t * item keys to be wrapped in `json` when normalizing items below.\n\t\t\t */\n\t\t\tconst mustHaveTopLevelN8nKey = executionResult.some((item) =>\n\t\t\t\tObject.keys(item).find((key) => REQUIRED_N8N_ITEM_KEYS.has(key)),\n\t\t\t);\n\n\t\t\tif (mustHaveTopLevelN8nKey) {\n\t\t\t\tfor (let index = 0; index < executionResult.length; index++) {\n\t\t\t\t\tconst item = executionResult[index];\n\t\t\t\t\tthis.validateTopLevelKeys(item, index);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst returnData = this.helpers.normalizeItems(executionResult);\n\t\treturnData.forEach((item, index) => this.validateItem(item, index));\n\t\treturn returnData;\n\t}\n\n\tprivate getTextKey(\n\t\tkey: keyof SandboxTextKeys,\n\t\toptions?: { includeArticle?: boolean; plural?: boolean },\n\t) {\n\t\tconst response = this.textKeys[key][options?.plural ? 'plural' : 'singular'];\n\t\tif (!options?.includeArticle) {\n\t\t\treturn response;\n\t\t}\n\t\tif (['a', 'e', 'i', 'o', 'u'].some((value) => response.startsWith(value))) {\n\t\t\treturn `an ${response}`;\n\t\t}\n\t\treturn `a ${response}`;\n\t}\n\n\tprivate validateItem({ json, binary }: INodeExecutionData, itemIndex: number) {\n\t\tif (json === undefined || !isObject(json)) {\n\t\t\tthrow new ValidationError({\n\t\t\t\tmessage: `A 'json' property isn't ${this.getTextKey('object', { includeArticle: true })}`,\n\t\t\t\tdescription: `In the returned data, every key named 'json' must point to ${this.getTextKey(\n\t\t\t\t\t'object',\n\t\t\t\t\t{ includeArticle: true },\n\t\t\t\t)}.`,\n\t\t\t\titemIndex,\n\t\t\t});\n\t\t}\n\n\t\tif (binary !== undefined && !isObject(binary)) {\n\t\t\tthrow new ValidationError({\n\t\t\t\tmessage: `A 'binary' property isn't ${this.getTextKey('object', { includeArticle: true })}`,\n\t\t\t\tdescription: `In the returned data, every key named 'binaryâ€™ must point to ${this.getTextKey(\n\t\t\t\t\t'object',\n\t\t\t\t\t{ includeArticle: true },\n\t\t\t\t)}.`,\n\t\t\t\titemIndex,\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate validateTopLevelKeys(item: INodeExecutionData, itemIndex: number) {\n\t\tObject.keys(item).forEach((key) => {\n\t\t\tif (REQUIRED_N8N_ITEM_KEYS.has(key)) return;\n\t\t\tthrow new ValidationError({\n\t\t\t\tmessage: `Unknown top-level item key: ${key}`,\n\t\t\t\tdescription: 'Access the properties of an item under `.json`, e.g. `item.json`',\n\t\t\t\titemIndex,\n\t\t\t});\n\t\t});\n\t}\n}\n"],"mappings":"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","names":[]}