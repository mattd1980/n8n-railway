{"version":3,"sources":["../../../nodes/ExecuteCommand/ExecuteCommand.node.ts"],"sourcesContent":["import { exec } from 'child_process';\nimport type {\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nexport interface IExecReturnData {\n\texitCode: number;\n\terror?: Error;\n\tstderr: string;\n\tstdout: string;\n}\n\n/**\n * Promisifiy exec manually to also get the exit code\n *\n */\nasync function execPromise(command: string): Promise<IExecReturnData> {\n\tconst returnData: IExecReturnData = {\n\t\terror: undefined,\n\t\texitCode: 0,\n\t\tstderr: '',\n\t\tstdout: '',\n\t};\n\n\treturn await new Promise((resolve, _reject) => {\n\t\texec(command, { cwd: process.cwd() }, (error, stdout, stderr) => {\n\t\t\treturnData.stdout = stdout.trim();\n\t\t\treturnData.stderr = stderr.trim();\n\n\t\t\tif (error) {\n\t\t\t\treturnData.error = error;\n\t\t\t}\n\n\t\t\tresolve(returnData);\n\t\t}).on('exit', (code) => {\n\t\t\treturnData.exitCode = code || 0;\n\t\t});\n\t});\n}\n\nexport class ExecuteCommand implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Execute Command',\n\t\tname: 'executeCommand',\n\t\ticon: 'fa:terminal',\n\t\ticonColor: 'crimson',\n\t\tgroup: ['transform'],\n\t\tversion: 1,\n\t\tdescription: 'Executes a command on the host',\n\t\tdefaults: {\n\t\t\tname: 'Execute Command',\n\t\t\tcolor: '#886644',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Execute Once',\n\t\t\t\tname: 'executeOnce',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: 'Whether to execute only once instead of once for each entry',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Command',\n\t\t\t\tname: 'command',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\trows: 5,\n\t\t\t\t},\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tplaceholder: 'echo \"test\"',\n\t\t\t\tdescription: 'The command to execute',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tlet items = this.getInputData();\n\n\t\tlet command: string;\n\t\tconst executeOnce = this.getNodeParameter('executeOnce', 0) as boolean;\n\n\t\tif (executeOnce) {\n\t\t\titems = [items[0]];\n\t\t}\n\n\t\tconst returnItems: INodeExecutionData[] = [];\n\t\tfor (let itemIndex = 0; itemIndex < items.length; itemIndex++) {\n\t\t\ttry {\n\t\t\t\tcommand = this.getNodeParameter('command', itemIndex) as string;\n\n\t\t\t\tconst { error, exitCode, stdout, stderr } = await execPromise(command);\n\n\t\t\t\tif (error !== undefined) {\n\t\t\t\t\tthrow new NodeOperationError(this.getNode(), error.message, { itemIndex });\n\t\t\t\t}\n\n\t\t\t\treturnItems.push({\n\t\t\t\t\tjson: {\n\t\t\t\t\t\texitCode,\n\t\t\t\t\t\tstderr,\n\t\t\t\t\t\tstdout,\n\t\t\t\t\t},\n\t\t\t\t\tpairedItem: {\n\t\t\t\t\t\titem: itemIndex,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\treturnItems.push({\n\t\t\t\t\t\tjson: {\n\t\t\t\t\t\t\terror: error.message,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpairedItem: {\n\t\t\t\t\t\t\titem: itemIndex,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn [returnItems];\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAqB;AAOrB,0BAAwD;AAaxD,eAAe,YAAY,SAA2C;AACrE,QAAM,aAA8B;AAAA,IACnC,OAAO;AAAA,IACP,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,QAAQ;AAAA,EACT;AAEA,SAAO,MAAM,IAAI,QAAQ,CAAC,SAAS,YAAY;AAC9C,mCAAK,SAAS,EAAE,KAAK,QAAQ,IAAI,EAAE,GAAG,CAAC,OAAO,QAAQ,WAAW;AAChE,iBAAW,SAAS,OAAO,KAAK;AAChC,iBAAW,SAAS,OAAO,KAAK;AAEhC,UAAI,OAAO;AACV,mBAAW,QAAQ;AAAA,MACpB;AAEA,cAAQ,UAAU;AAAA,IACnB,CAAC,EAAE,GAAG,QAAQ,CAAC,SAAS;AACvB,iBAAW,WAAW,QAAQ;AAAA,IAC/B,CAAC;AAAA,EACF,CAAC;AACF;AAEO,MAAM,eAAoC;AAAA,EAA1C;AACN,uBAAoC;AAAA,MACnC,aAAa;AAAA,MACb,MAAM;AAAA,MACN,MAAM;AAAA,MACN,WAAW;AAAA,MACX,OAAO,CAAC,WAAW;AAAA,MACnB,SAAS;AAAA,MACT,aAAa;AAAA,MACb,UAAU;AAAA,QACT,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,MACA,cAAc;AAAA,MACd,QAAQ,CAAC,wCAAoB,IAAI;AAAA,MACjC,SAAS,CAAC,wCAAoB,IAAI;AAAA,MAClC,YAAY;AAAA,QACX;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,SAAS;AAAA,UACT,aAAa;AAAA,QACd;AAAA,QACA;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,aAAa;AAAA,YACZ,MAAM;AAAA,UACP;AAAA,UACA,MAAM;AAAA,UACN,SAAS;AAAA,UACT,aAAa;AAAA,UACb,aAAa;AAAA,UACb,UAAU;AAAA,QACX;AAAA,MACD;AAAA,IACD;AAAA;AAAA,EAEA,MAAM,UAAkE;AACvE,QAAI,QAAQ,KAAK,aAAa;AAE9B,QAAI;AACJ,UAAM,cAAc,KAAK,iBAAiB,eAAe,CAAC;AAE1D,QAAI,aAAa;AAChB,cAAQ,CAAC,MAAM,CAAC,CAAC;AAAA,IAClB;AAEA,UAAM,cAAoC,CAAC;AAC3C,aAAS,YAAY,GAAG,YAAY,MAAM,QAAQ,aAAa;AAC9D,UAAI;AACH,kBAAU,KAAK,iBAAiB,WAAW,SAAS;AAEpD,cAAM,EAAE,OAAO,UAAU,QAAQ,OAAO,IAAI,MAAM,YAAY,OAAO;AAErE,YAAI,UAAU,QAAW;AACxB,gBAAM,IAAI,uCAAmB,KAAK,QAAQ,GAAG,MAAM,SAAS,EAAE,UAAU,CAAC;AAAA,QAC1E;AAEA,oBAAY,KAAK;AAAA,UAChB,MAAM;AAAA,YACL;AAAA,YACA;AAAA,YACA;AAAA,UACD;AAAA,UACA,YAAY;AAAA,YACX,MAAM;AAAA,UACP;AAAA,QACD,CAAC;AAAA,MACF,SAAS,OAAO;AACf,YAAI,KAAK,eAAe,GAAG;AAC1B,sBAAY,KAAK;AAAA,YAChB,MAAM;AAAA,cACL,OAAO,MAAM;AAAA,YACd;AAAA,YACA,YAAY;AAAA,cACX,MAAM;AAAA,YACP;AAAA,UACD,CAAC;AACD;AAAA,QACD;AACA,cAAM;AAAA,MACP;AAAA,IACD;AAEA,WAAO,CAAC,WAAW;AAAA,EACpB;AACD;","names":[]}