{"version":3,"sources":["../../../nodes/OpenWeatherMap/OpenWeatherMap.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n\tJsonObject,\n\tIRequestOptions,\n} from 'n8n-workflow';\nimport { NodeApiError, NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nexport class OpenWeatherMap implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'OpenWeatherMap',\n\t\tname: 'openWeatherMap',\n\t\ticon: 'file:openWeatherMap.svg',\n\t\tgroup: ['input'],\n\t\tversion: 1,\n\t\tdescription: 'Gets current and future weather information',\n\t\tdefaults: {\n\t\t\tname: 'OpenWeatherMap',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'openWeatherMapApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Current Weather',\n\t\t\t\t\t\tvalue: 'currentWeather',\n\t\t\t\t\t\tdescription: 'Returns the current weather data',\n\t\t\t\t\t\taction: 'Return current weather data',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: '5 Day Forecast',\n\t\t\t\t\t\tvalue: '5DayForecast',\n\t\t\t\t\t\tdescription: 'Returns the weather data for the next 5 days',\n\t\t\t\t\t\taction: 'Return weather data for the next 5 days',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'currentWeather',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Format',\n\t\t\t\tname: 'format',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Imperial',\n\t\t\t\t\t\tvalue: 'imperial',\n\t\t\t\t\t\tdescription: 'Fahrenheit | miles/hour',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Metric',\n\t\t\t\t\t\tvalue: 'metric',\n\t\t\t\t\t\tdescription: 'Celsius | meter/sec',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Scientific',\n\t\t\t\t\t\tvalue: 'standard',\n\t\t\t\t\t\tdescription: 'Kelvin | meter/sec',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'metric',\n\t\t\t\tdescription: 'The format in which format the data should be returned',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         Location Information\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Location Selection',\n\t\t\t\tname: 'locationSelection',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'City Name',\n\t\t\t\t\t\tvalue: 'cityName',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'City ID',\n\t\t\t\t\t\tvalue: 'cityId',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Coordinates',\n\t\t\t\t\t\tvalue: 'coordinates',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Zip Code',\n\t\t\t\t\t\tvalue: 'zipCode',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'cityName',\n\t\t\t\tdescription: 'How to define the location for which to return the weather',\n\t\t\t},\n\n\t\t\t{\n\t\t\t\tdisplayName: 'City',\n\t\t\t\tname: 'cityName',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tplaceholder: 'berlin,de',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tlocationSelection: ['cityName'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The name of the city to return the weather of',\n\t\t\t},\n\n\t\t\t{\n\t\t\t\tdisplayName: 'City ID',\n\t\t\t\tname: 'cityId',\n\t\t\t\ttype: 'number',\n\t\t\t\tdefault: 160001123,\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tlocationSelection: ['cityId'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription:\n\t\t\t\t\t'The ID of city to return the weather of. List can be downloaded here: http://bulk.openweathermap.org/sample/.',\n\t\t\t},\n\n\t\t\t{\n\t\t\t\tdisplayName: 'Latitude',\n\t\t\t\tname: 'latitude',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tplaceholder: '13.39',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tlocationSelection: ['coordinates'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The latitude of the location to return the weather of',\n\t\t\t},\n\n\t\t\t{\n\t\t\t\tdisplayName: 'Longitude',\n\t\t\t\tname: 'longitude',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tplaceholder: '52.52',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tlocationSelection: ['coordinates'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The longitude of the location to return the weather of',\n\t\t\t},\n\n\t\t\t{\n\t\t\t\tdisplayName: 'Zip Code',\n\t\t\t\tname: 'zipCode',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tplaceholder: '10115,de',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tlocationSelection: ['zipCode'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription:\n\t\t\t\t\t'The ID of city to return the weather of. List can be downloaded here: http://bulk.openweathermap.org/sample/.',\n\t\t\t},\n\n\t\t\t{\n\t\t\t\tdisplayName: 'Language',\n\t\t\t\tname: 'language',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tplaceholder: 'en',\n\t\t\t\tdescription: 'The two letter language code to get your output in (eg. en, de, ...).',\n\t\t\t},\n\t\t],\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\n\t\tconst credentials = await this.getCredentials('openWeatherMapApi');\n\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\tlet endpoint = '';\n\t\tlet locationSelection;\n\t\tlet language;\n\n\t\tlet qs: IDataObject;\n\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\ttry {\n\t\t\t\t// Set base data\n\t\t\t\tqs = {\n\t\t\t\t\tAPPID: credentials.accessToken,\n\t\t\t\t\tunits: this.getNodeParameter('format', i) as string,\n\t\t\t\t};\n\n\t\t\t\t// Get the location\n\t\t\t\tlocationSelection = this.getNodeParameter('locationSelection', i) as string;\n\t\t\t\tif (locationSelection === 'cityName') {\n\t\t\t\t\tqs.q = this.getNodeParameter('cityName', i) as string;\n\t\t\t\t} else if (locationSelection === 'cityId') {\n\t\t\t\t\tqs.id = this.getNodeParameter('cityId', i) as number;\n\t\t\t\t} else if (locationSelection === 'coordinates') {\n\t\t\t\t\tqs.lat = this.getNodeParameter('latitude', i) as string;\n\t\t\t\t\tqs.lon = this.getNodeParameter('longitude', i) as string;\n\t\t\t\t} else if (locationSelection === 'zipCode') {\n\t\t\t\t\tqs.zip = this.getNodeParameter('zipCode', i) as string;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t`The locationSelection \"${locationSelection}\" is not known!`,\n\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// Get the language\n\t\t\t\tlanguage = this.getNodeParameter('language', i) as string;\n\t\t\t\tif (language) {\n\t\t\t\t\tqs.lang = language;\n\t\t\t\t}\n\n\t\t\t\tif (operation === 'currentWeather') {\n\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t//         currentWeather\n\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\tendpoint = 'weather';\n\t\t\t\t} else if (operation === '5DayForecast') {\n\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t//         5DayForecast\n\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\tendpoint = 'forecast';\n\t\t\t\t} else {\n\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t`The operation \"${operation}\" is not known!`,\n\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst options: IRequestOptions = {\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\tqs,\n\t\t\t\t\turi: `https://api.openweathermap.org/data/2.5/${endpoint}`,\n\t\t\t\t\tjson: true,\n\t\t\t\t};\n\n\t\t\t\tlet responseData;\n\t\t\t\ttry {\n\t\t\t\t\tresponseData = await this.helpers.request(options);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t\t\t\t}\n\n\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject),\n\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t);\n\t\t\t\treturnData.push(...executionData);\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\treturnData.push({ json: { error: error.message } });\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":[]}