{"version":3,"sources":["../../../nodes/PagerDuty/PagerDuty.node.ts"],"sourcesContent":["import { snakeCase } from 'change-case';\nimport moment from 'moment-timezone';\nimport type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes } from 'n8n-workflow';\n\nimport {\n\tkeysToSnakeCase,\n\tpagerDutyApiRequest,\n\tpagerDutyApiRequestAllItems,\n} from './GenericFunctions';\nimport { incidentFields, incidentOperations } from './IncidentDescription';\nimport type { IIncident } from './IncidentInterface';\nimport { incidentNoteFields, incidentNoteOperations } from './IncidentNoteDescription';\nimport { logEntryFields, logEntryOperations } from './LogEntryDescription';\nimport { userFields, userOperations } from './UserDescription';\n\nexport class PagerDuty implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'PagerDuty',\n\t\tname: 'pagerDuty',\n\t\ticon: 'file:pagerDuty.svg',\n\t\tgroup: ['output'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume PagerDuty API',\n\t\tdefaults: {\n\t\t\tname: 'PagerDuty',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'pagerDutyApi',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['apiToken'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'pagerDutyOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['oAuth2'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Authentication',\n\t\t\t\tname: 'authentication',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'API Token',\n\t\t\t\t\t\tvalue: 'apiToken',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'OAuth2',\n\t\t\t\t\t\tvalue: 'oAuth2',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'apiToken',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Incident',\n\t\t\t\t\t\tvalue: 'incident',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Incident Note',\n\t\t\t\t\t\tvalue: 'incidentNote',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Log Entry',\n\t\t\t\t\t\tvalue: 'logEntry',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'User',\n\t\t\t\t\t\tvalue: 'user',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'incident',\n\t\t\t},\n\t\t\t// INCIDENT\n\t\t\t...incidentOperations,\n\t\t\t...incidentFields,\n\t\t\t// INCIDENT NOTE\n\t\t\t...incidentNoteOperations,\n\t\t\t...incidentNoteFields,\n\t\t\t// LOG ENTRY\n\t\t\t...logEntryOperations,\n\t\t\t...logEntryFields,\n\t\t\t// USER\n\t\t\t...userOperations,\n\t\t\t...userFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get all the available escalation policies to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getEscalationPolicies(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst escalationPolicies = await pagerDutyApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'escalation_policies',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/escalation_policies',\n\t\t\t\t);\n\t\t\t\tfor (const escalationPolicy of escalationPolicies) {\n\t\t\t\t\tconst escalationPolicyName = escalationPolicy.name;\n\t\t\t\t\tconst escalationPolicyId = escalationPolicy.id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: escalationPolicyName,\n\t\t\t\t\t\tvalue: escalationPolicyId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the available priorities to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getPriorities(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst priorities = await pagerDutyApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'priorities',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/priorities',\n\t\t\t\t);\n\t\t\t\tfor (const priority of priorities) {\n\t\t\t\t\tconst priorityName = priority.name;\n\t\t\t\t\tconst priorityId = priority.id;\n\t\t\t\t\tconst priorityDescription = priority.description;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: priorityName,\n\t\t\t\t\t\tvalue: priorityId,\n\t\t\t\t\t\tdescription: priorityDescription,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the available services to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getServices(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst services = await pagerDutyApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'services',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/services',\n\t\t\t\t);\n\t\t\t\tfor (const service of services) {\n\t\t\t\t\tconst serviceName = service.name;\n\t\t\t\t\tconst serviceId = service.id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: serviceName,\n\t\t\t\t\t\tvalue: serviceId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the timezones to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getTimezones(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tfor (const timezone of moment.tz.names()) {\n\t\t\t\t\tconst timezoneName = timezone;\n\t\t\t\t\tconst timezoneId = timezone;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: timezoneName,\n\t\t\t\t\t\tvalue: timezoneId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst length = items.length;\n\t\tlet responseData;\n\t\tconst qs: IDataObject = {};\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'incident') {\n\t\t\t\t\t//https://api-reference.pagerduty.com/#!/Incidents/post_incidents\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst title = this.getNodeParameter('title', i) as string;\n\t\t\t\t\t\tconst serviceId = this.getNodeParameter('serviceId', i) as string;\n\t\t\t\t\t\tconst email = this.getNodeParameter('email', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst conferenceBridge = (this.getNodeParameter('conferenceBridgeUi', i) as IDataObject)\n\t\t\t\t\t\t\t.conferenceBridgeValues as IDataObject;\n\t\t\t\t\t\tconst body: IIncident = {\n\t\t\t\t\t\t\ttype: 'incident',\n\t\t\t\t\t\t\ttitle,\n\t\t\t\t\t\t\tservice: {\n\t\t\t\t\t\t\t\tid: serviceId,\n\t\t\t\t\t\t\t\ttype: 'service_reference',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (additionalFields.details) {\n\t\t\t\t\t\t\tbody.body = {\n\t\t\t\t\t\t\t\ttype: 'incident_body',\n\t\t\t\t\t\t\t\tdetails: additionalFields.details,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.priorityId) {\n\t\t\t\t\t\t\tbody.priority = {\n\t\t\t\t\t\t\t\tid: additionalFields.priorityId,\n\t\t\t\t\t\t\t\ttype: 'priority_reference',\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.escalationPolicyId) {\n\t\t\t\t\t\t\tbody.escalation_policy = {\n\t\t\t\t\t\t\t\tid: additionalFields.escalationPolicyId,\n\t\t\t\t\t\t\t\ttype: 'escalation_policy_reference',\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.urgency) {\n\t\t\t\t\t\t\tbody.urgency = additionalFields.urgency as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.incidentKey) {\n\t\t\t\t\t\t\tbody.incident_key = additionalFields.incidentKey as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (conferenceBridge) {\n\t\t\t\t\t\t\tbody.conference_bridge = {\n\t\t\t\t\t\t\t\tconference_number: conferenceBridge.conferenceNumber,\n\t\t\t\t\t\t\t\tconference_url: conferenceBridge.conferenceUrl,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await pagerDutyApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/incidents',\n\t\t\t\t\t\t\t{ incident: body },\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t{ from: email },\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.incident;\n\t\t\t\t\t}\n\t\t\t\t\t//https://api-reference.pagerduty.com/#!/Incidents/get_incidents_id\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst incidentId = this.getNodeParameter('incidentId', i) as string;\n\t\t\t\t\t\tresponseData = await pagerDutyApiRequest.call(this, 'GET', `/incidents/${incidentId}`);\n\t\t\t\t\t\tresponseData = responseData.incident;\n\t\t\t\t\t}\n\t\t\t\t\t//https://api-reference.pagerduty.com/#!/Incidents/get_incidents\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', 0);\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', 0);\n\t\t\t\t\t\tif (options.userIds) {\n\t\t\t\t\t\t\toptions.userIds = (options.userIds as string).split(',');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.teamIds) {\n\t\t\t\t\t\t\toptions.teamIds = (options.teamIds as string).split(',');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.include) {\n\t\t\t\t\t\t\toptions.include = (options.include as string[]).map((e) => snakeCase(e));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.sortBy) {\n\t\t\t\t\t\t\toptions.sortBy = options.sortBy as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tObject.assign(qs, keysToSnakeCase(options)[0]);\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await pagerDutyApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'incidents',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/incidents',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', 0);\n\t\t\t\t\t\t\tresponseData = await pagerDutyApiRequest.call(this, 'GET', '/incidents', {}, qs);\n\t\t\t\t\t\t\tresponseData = responseData.incidents;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://api-reference.pagerduty.com/#!/Incidents/put_incidents_id\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst incidentId = this.getNodeParameter('incidentId', i) as string;\n\t\t\t\t\t\tconst email = this.getNodeParameter('email', i) as string;\n\t\t\t\t\t\tconst conferenceBridge = (this.getNodeParameter('conferenceBridgeUi', i) as IDataObject)\n\t\t\t\t\t\t\t.conferenceBridgeValues as IDataObject;\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\tconst body: IIncident = {\n\t\t\t\t\t\t\ttype: 'incident',\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (updateFields.title) {\n\t\t\t\t\t\t\tbody.title = updateFields.title as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.escalationLevel) {\n\t\t\t\t\t\t\tbody.escalation_level = updateFields.escalationLevel as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.details) {\n\t\t\t\t\t\t\tbody.body = {\n\t\t\t\t\t\t\t\ttype: 'incident_body',\n\t\t\t\t\t\t\t\tdetails: updateFields.details,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.priorityId) {\n\t\t\t\t\t\t\tbody.priority = {\n\t\t\t\t\t\t\t\tid: updateFields.priorityId,\n\t\t\t\t\t\t\t\ttype: 'priority_reference',\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.escalationPolicyId) {\n\t\t\t\t\t\t\tbody.escalation_policy = {\n\t\t\t\t\t\t\t\tid: updateFields.escalationPolicyId,\n\t\t\t\t\t\t\t\ttype: 'escalation_policy_reference',\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.urgency) {\n\t\t\t\t\t\t\tbody.urgency = updateFields.urgency as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.resolution) {\n\t\t\t\t\t\t\tbody.resolution = updateFields.resolution as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.status) {\n\t\t\t\t\t\t\tbody.status = updateFields.status as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (conferenceBridge) {\n\t\t\t\t\t\t\tbody.conference_bridge = {\n\t\t\t\t\t\t\t\tconference_number: conferenceBridge.conferenceNumber,\n\t\t\t\t\t\t\t\tconference_url: conferenceBridge.conferenceUrl,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await pagerDutyApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t\t`/incidents/${incidentId}`,\n\t\t\t\t\t\t\t{ incident: body },\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t{ from: email },\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.incident;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'incidentNote') {\n\t\t\t\t\t//https://api-reference.pagerduty.com/#!/Incidents/post_incidents_id_notes\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst incidentId = this.getNodeParameter('incidentId', i) as string;\n\t\t\t\t\t\tconst content = this.getNodeParameter('content', i) as string;\n\t\t\t\t\t\tconst email = this.getNodeParameter('email', i) as string;\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tcontent,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tresponseData = await pagerDutyApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/incidents/${incidentId}/notes`,\n\t\t\t\t\t\t\t{ note: body },\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t{ from: email },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://api-reference.pagerduty.com/#!/Incidents/get_incidents_id_notes\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst incidentId = this.getNodeParameter('incidentId', i) as string;\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', 0);\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await pagerDutyApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'notes',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/incidents/${incidentId}/notes`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', 0);\n\t\t\t\t\t\t\tresponseData = await pagerDutyApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/incidents/${incidentId}/notes`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.notes;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'logEntry') {\n\t\t\t\t\t//https://api-reference.pagerduty.com/#!/Log_Entries/get_log_entries_id\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst logEntryId = this.getNodeParameter('logEntryId', i) as string;\n\t\t\t\t\t\tresponseData = await pagerDutyApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/log_entries/${logEntryId}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.log_entry;\n\t\t\t\t\t}\n\t\t\t\t\t//https://api-reference.pagerduty.com/#!/Log_Entries/get_log_entries\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tObject.assign(qs, options);\n\t\t\t\t\t\tkeysToSnakeCase(qs);\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', 0);\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await pagerDutyApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'log_entries',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/log_entries',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', 0);\n\t\t\t\t\t\t\tresponseData = await pagerDutyApiRequest.call(this, 'GET', '/log_entries', {}, qs);\n\t\t\t\t\t\t\tresponseData = responseData.log_entries;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'user') {\n\t\t\t\t\t//https://developer.pagerduty.com/api-reference/reference/REST/openapiv3.json/paths/~1users~1%7Bid%7D/get\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst userId = this.getNodeParameter('userId', i) as string;\n\t\t\t\t\t\tresponseData = await pagerDutyApiRequest.call(this, 'GET', `/users/${userId}`);\n\t\t\t\t\t\tresponseData = responseData.user;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t);\n\n\t\t\t\treturnData.push(...executionData);\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAA0B;AAC1B,6BAAmB;AAUnB,0BAAoC;AAEpC,8BAIO;AACP,iCAAmD;AAEnD,qCAA2D;AAC3D,iCAAmD;AACnD,6BAA2C;AAEpC,MAAM,UAA+B;AAAA,EAArC;AACN,uBAAoC;AAAA,MACnC,aAAa;AAAA,MACb,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO,CAAC,QAAQ;AAAA,MAChB,SAAS;AAAA,MACT,UAAU;AAAA,MACV,aAAa;AAAA,MACb,UAAU;AAAA,QACT,MAAM;AAAA,MACP;AAAA,MACA,cAAc;AAAA,MACd,QAAQ,CAAC,wCAAoB,IAAI;AAAA,MACjC,SAAS,CAAC,wCAAoB,IAAI;AAAA,MAClC,aAAa;AAAA,QACZ;AAAA,UACC,MAAM;AAAA,UACN,UAAU;AAAA,UACV,gBAAgB;AAAA,YACf,MAAM;AAAA,cACL,gBAAgB,CAAC,UAAU;AAAA,YAC5B;AAAA,UACD;AAAA,QACD;AAAA,QACA;AAAA,UACC,MAAM;AAAA,UACN,UAAU;AAAA,UACV,gBAAgB;AAAA,YACf,MAAM;AAAA,cACL,gBAAgB,CAAC,QAAQ;AAAA,YAC1B;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,MACA,YAAY;AAAA,QACX;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,SAAS;AAAA,YACR;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,UACD;AAAA,UACA,SAAS;AAAA,QACV;AAAA,QACA;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,kBAAkB;AAAA,UAClB,SAAS;AAAA,YACR;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,UACD;AAAA,UACA,SAAS;AAAA,QACV;AAAA;AAAA,QAEA,GAAG;AAAA,QACH,GAAG;AAAA;AAAA,QAEH,GAAG;AAAA,QACH,GAAG;AAAA;AAAA,QAEH,GAAG;AAAA,QACH,GAAG;AAAA;AAAA,QAEH,GAAG;AAAA,QACH,GAAG;AAAA,MACJ;AAAA,IACD;AAEA,mBAAU;AAAA,MACT,aAAa;AAAA;AAAA;AAAA,QAGZ,MAAM,wBAAoF;AACzF,gBAAM,aAAqC,CAAC;AAC5C,gBAAM,qBAAqB,MAAM,oDAA4B;AAAA,YAC5D;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACD;AACA,qBAAW,oBAAoB,oBAAoB;AAClD,kBAAM,uBAAuB,iBAAiB;AAC9C,kBAAM,qBAAqB,iBAAiB;AAC5C,uBAAW,KAAK;AAAA,cACf,MAAM;AAAA,cACN,OAAO;AAAA,YACR,CAAC;AAAA,UACF;AACA,iBAAO;AAAA,QACR;AAAA;AAAA;AAAA,QAGA,MAAM,gBAA4E;AACjF,gBAAM,aAAqC,CAAC;AAC5C,gBAAM,aAAa,MAAM,oDAA4B;AAAA,YACpD;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACD;AACA,qBAAW,YAAY,YAAY;AAClC,kBAAM,eAAe,SAAS;AAC9B,kBAAM,aAAa,SAAS;AAC5B,kBAAM,sBAAsB,SAAS;AACrC,uBAAW,KAAK;AAAA,cACf,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aAAa;AAAA,YACd,CAAC;AAAA,UACF;AACA,iBAAO;AAAA,QACR;AAAA;AAAA;AAAA,QAGA,MAAM,cAA0E;AAC/E,gBAAM,aAAqC,CAAC;AAC5C,gBAAM,WAAW,MAAM,oDAA4B;AAAA,YAClD;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACD;AACA,qBAAW,WAAW,UAAU;AAC/B,kBAAM,cAAc,QAAQ;AAC5B,kBAAM,YAAY,QAAQ;AAC1B,uBAAW,KAAK;AAAA,cACf,MAAM;AAAA,cACN,OAAO;AAAA,YACR,CAAC;AAAA,UACF;AACA,iBAAO;AAAA,QACR;AAAA;AAAA;AAAA,QAGA,MAAM,eAA2E;AAChF,gBAAM,aAAqC,CAAC;AAC5C,qBAAW,YAAY,uBAAAA,QAAO,GAAG,MAAM,GAAG;AACzC,kBAAM,eAAe;AACrB,kBAAM,aAAa;AACnB,uBAAW,KAAK;AAAA,cACf,MAAM;AAAA,cACN,OAAO;AAAA,YACR,CAAC;AAAA,UACF;AACA,iBAAO;AAAA,QACR;AAAA,MACD;AAAA,IACD;AAAA;AAAA,EAEA,MAAM,UAAkE;AACvE,UAAM,QAAQ,KAAK,aAAa;AAChC,UAAM,aAAmC,CAAC;AAC1C,UAAM,SAAS,MAAM;AACrB,QAAI;AACJ,UAAM,KAAkB,CAAC;AACzB,UAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AACpD,UAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,aAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAChC,UAAI;AACH,YAAI,aAAa,YAAY;AAE5B,cAAI,cAAc,UAAU;AAC3B,kBAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC9C,kBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,kBAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC9C,kBAAM,mBAAmB,KAAK,iBAAiB,oBAAoB,CAAC;AACpE,kBAAM,mBAAoB,KAAK,iBAAiB,sBAAsB,CAAC,EACrE;AACF,kBAAM,OAAkB;AAAA,cACvB,MAAM;AAAA,cACN;AAAA,cACA,SAAS;AAAA,gBACR,IAAI;AAAA,gBACJ,MAAM;AAAA,cACP;AAAA,YACD;AACA,gBAAI,iBAAiB,SAAS;AAC7B,mBAAK,OAAO;AAAA,gBACX,MAAM;AAAA,gBACN,SAAS,iBAAiB;AAAA,cAC3B;AAAA,YACD;AACA,gBAAI,iBAAiB,YAAY;AAChC,mBAAK,WAAW;AAAA,gBACf,IAAI,iBAAiB;AAAA,gBACrB,MAAM;AAAA,cACP;AAAA,YACD;AACA,gBAAI,iBAAiB,oBAAoB;AACxC,mBAAK,oBAAoB;AAAA,gBACxB,IAAI,iBAAiB;AAAA,gBACrB,MAAM;AAAA,cACP;AAAA,YACD;AACA,gBAAI,iBAAiB,SAAS;AAC7B,mBAAK,UAAU,iBAAiB;AAAA,YACjC;AACA,gBAAI,iBAAiB,aAAa;AACjC,mBAAK,eAAe,iBAAiB;AAAA,YACtC;AACA,gBAAI,kBAAkB;AACrB,mBAAK,oBAAoB;AAAA,gBACxB,mBAAmB,iBAAiB;AAAA,gBACpC,gBAAgB,iBAAiB;AAAA,cAClC;AAAA,YACD;AACA,2BAAe,MAAM,4CAAoB;AAAA,cACxC;AAAA,cACA;AAAA,cACA;AAAA,cACA,EAAE,UAAU,KAAK;AAAA,cACjB,CAAC;AAAA,cACD;AAAA,cACA,EAAE,MAAM,MAAM;AAAA,YACf;AACA,2BAAe,aAAa;AAAA,UAC7B;AAEA,cAAI,cAAc,OAAO;AACxB,kBAAM,aAAa,KAAK,iBAAiB,cAAc,CAAC;AACxD,2BAAe,MAAM,4CAAoB,KAAK,MAAM,OAAO,cAAc,UAAU,EAAE;AACrF,2BAAe,aAAa;AAAA,UAC7B;AAEA,cAAI,cAAc,UAAU;AAC3B,kBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,kBAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAClD,gBAAI,QAAQ,SAAS;AACpB,sBAAQ,UAAW,QAAQ,QAAmB,MAAM,GAAG;AAAA,YACxD;AACA,gBAAI,QAAQ,SAAS;AACpB,sBAAQ,UAAW,QAAQ,QAAmB,MAAM,GAAG;AAAA,YACxD;AACA,gBAAI,QAAQ,SAAS;AACpB,sBAAQ,UAAW,QAAQ,QAAqB,IAAI,CAAC,UAAM,8BAAU,CAAC,CAAC;AAAA,YACxE;AACA,gBAAI,QAAQ,QAAQ;AACnB,sBAAQ,SAAS,QAAQ;AAAA,YAC1B;AACA,mBAAO,OAAO,QAAI,yCAAgB,OAAO,EAAE,CAAC,CAAC;AAC7C,gBAAI,WAAW;AACd,6BAAe,MAAM,oDAA4B;AAAA,gBAChD;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,CAAC;AAAA,gBACD;AAAA,cACD;AAAA,YACD,OAAO;AACN,iBAAG,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC3C,6BAAe,MAAM,4CAAoB,KAAK,MAAM,OAAO,cAAc,CAAC,GAAG,EAAE;AAC/E,6BAAe,aAAa;AAAA,YAC7B;AAAA,UACD;AAEA,cAAI,cAAc,UAAU;AAC3B,kBAAM,aAAa,KAAK,iBAAiB,cAAc,CAAC;AACxD,kBAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC9C,kBAAM,mBAAoB,KAAK,iBAAiB,sBAAsB,CAAC,EACrE;AACF,kBAAM,eAAe,KAAK,iBAAiB,gBAAgB,CAAC;AAC5D,kBAAM,OAAkB;AAAA,cACvB,MAAM;AAAA,YACP;AACA,gBAAI,aAAa,OAAO;AACvB,mBAAK,QAAQ,aAAa;AAAA,YAC3B;AACA,gBAAI,aAAa,iBAAiB;AACjC,mBAAK,mBAAmB,aAAa;AAAA,YACtC;AACA,gBAAI,aAAa,SAAS;AACzB,mBAAK,OAAO;AAAA,gBACX,MAAM;AAAA,gBACN,SAAS,aAAa;AAAA,cACvB;AAAA,YACD;AACA,gBAAI,aAAa,YAAY;AAC5B,mBAAK,WAAW;AAAA,gBACf,IAAI,aAAa;AAAA,gBACjB,MAAM;AAAA,cACP;AAAA,YACD;AACA,gBAAI,aAAa,oBAAoB;AACpC,mBAAK,oBAAoB;AAAA,gBACxB,IAAI,aAAa;AAAA,gBACjB,MAAM;AAAA,cACP;AAAA,YACD;AACA,gBAAI,aAAa,SAAS;AACzB,mBAAK,UAAU,aAAa;AAAA,YAC7B;AACA,gBAAI,aAAa,YAAY;AAC5B,mBAAK,aAAa,aAAa;AAAA,YAChC;AACA,gBAAI,aAAa,QAAQ;AACxB,mBAAK,SAAS,aAAa;AAAA,YAC5B;AACA,gBAAI,kBAAkB;AACrB,mBAAK,oBAAoB;AAAA,gBACxB,mBAAmB,iBAAiB;AAAA,gBACpC,gBAAgB,iBAAiB;AAAA,cAClC;AAAA,YACD;AACA,2BAAe,MAAM,4CAAoB;AAAA,cACxC;AAAA,cACA;AAAA,cACA,cAAc,UAAU;AAAA,cACxB,EAAE,UAAU,KAAK;AAAA,cACjB,CAAC;AAAA,cACD;AAAA,cACA,EAAE,MAAM,MAAM;AAAA,YACf;AACA,2BAAe,aAAa;AAAA,UAC7B;AAAA,QACD;AACA,YAAI,aAAa,gBAAgB;AAEhC,cAAI,cAAc,UAAU;AAC3B,kBAAM,aAAa,KAAK,iBAAiB,cAAc,CAAC;AACxD,kBAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAClD,kBAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC9C,kBAAM,OAAoB;AAAA,cACzB;AAAA,YACD;AACA,2BAAe,MAAM,4CAAoB;AAAA,cACxC;AAAA,cACA;AAAA,cACA,cAAc,UAAU;AAAA,cACxB,EAAE,MAAM,KAAK;AAAA,cACb,CAAC;AAAA,cACD;AAAA,cACA,EAAE,MAAM,MAAM;AAAA,YACf;AAAA,UACD;AAEA,cAAI,cAAc,UAAU;AAC3B,kBAAM,aAAa,KAAK,iBAAiB,cAAc,CAAC;AACxD,kBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,gBAAI,WAAW;AACd,6BAAe,MAAM,oDAA4B;AAAA,gBAChD;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,cAAc,UAAU;AAAA,gBACxB,CAAC;AAAA,gBACD;AAAA,cACD;AAAA,YACD,OAAO;AACN,iBAAG,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC3C,6BAAe,MAAM,4CAAoB;AAAA,gBACxC;AAAA,gBACA;AAAA,gBACA,cAAc,UAAU;AAAA,gBACxB,CAAC;AAAA,gBACD;AAAA,cACD;AACA,6BAAe,aAAa;AAAA,YAC7B;AAAA,UACD;AAAA,QACD;AACA,YAAI,aAAa,YAAY;AAE5B,cAAI,cAAc,OAAO;AACxB,kBAAM,aAAa,KAAK,iBAAiB,cAAc,CAAC;AACxD,2BAAe,MAAM,4CAAoB;AAAA,cACxC;AAAA,cACA;AAAA,cACA,gBAAgB,UAAU;AAAA,YAC3B;AACA,2BAAe,aAAa;AAAA,UAC7B;AAEA,cAAI,cAAc,UAAU;AAC3B,kBAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAClD,mBAAO,OAAO,IAAI,OAAO;AACzB,yDAAgB,EAAE;AAClB,kBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,gBAAI,WAAW;AACd,6BAAe,MAAM,oDAA4B;AAAA,gBAChD;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,CAAC;AAAA,gBACD;AAAA,cACD;AAAA,YACD,OAAO;AACN,iBAAG,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC3C,6BAAe,MAAM,4CAAoB,KAAK,MAAM,OAAO,gBAAgB,CAAC,GAAG,EAAE;AACjF,6BAAe,aAAa;AAAA,YAC7B;AAAA,UACD;AAAA,QACD;AACA,YAAI,aAAa,QAAQ;AAExB,cAAI,cAAc,OAAO;AACxB,kBAAM,SAAS,KAAK,iBAAiB,UAAU,CAAC;AAChD,2BAAe,MAAM,4CAAoB,KAAK,MAAM,OAAO,UAAU,MAAM,EAAE;AAC7E,2BAAe,aAAa;AAAA,UAC7B;AAAA,QACD;AAEA,cAAM,gBAAgB,KAAK,QAAQ;AAAA,UAClC,KAAK,QAAQ,gBAAgB,YAA6B;AAAA,UAC1D,EAAE,UAAU,EAAE,MAAM,EAAE,EAAE;AAAA,QACzB;AAEA,mBAAW,KAAK,GAAG,aAAa;AAAA,MACjC,SAAS,OAAO;AACf,YAAI,KAAK,eAAe,GAAG;AAC1B,gBAAM,qBAAqB,KAAK,QAAQ;AAAA,YACvC,KAAK,QAAQ,gBAAgB,EAAE,OAAO,MAAM,QAAQ,CAAC;AAAA,YACrD,EAAE,UAAU,EAAE,MAAM,EAAE,EAAE;AAAA,UACzB;AACA,qBAAW,KAAK,GAAG,kBAAkB;AACrC;AAAA,QACD;AACA,cAAM;AAAA,MACP;AAAA,IACD;AACA,WAAO,CAAC,UAAU;AAAA,EACnB;AACD;","names":["moment"]}