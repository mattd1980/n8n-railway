{"version":3,"sources":["../../../nodes/ErrorTrigger/ErrorTrigger.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes } from 'n8n-workflow';\n\nexport class ErrorTrigger implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Error Trigger',\n\t\tname: 'errorTrigger',\n\t\ticon: 'fa:bug',\n\t\ticonColor: 'blue',\n\t\tgroup: ['trigger'],\n\t\tversion: 1,\n\t\tdescription: 'Triggers the workflow when another workflow has an error',\n\t\teventTriggerDescription: '',\n\t\tmockManualExecution: true,\n\t\tmaxNodes: 1,\n\t\tdefaults: {\n\t\t\tname: 'Error Trigger',\n\t\t\tcolor: '#0000FF',\n\t\t},\n\t\tinputs: [],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName:\n\t\t\t\t\t'This node will trigger when there is an error in another workflow, as long as that workflow is set up to do so. <a href=\"https://docs.n8n.io/integrations/core-nodes/n8n-nodes-base.errortrigger\" target=\"_blank\">More info<a>',\n\t\t\t\tname: 'notice',\n\t\t\t\ttype: 'notice',\n\t\t\t\tdefault: '',\n\t\t\t},\n\t\t],\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\n\t\tconst mode = this.getMode();\n\n\t\tif (\n\t\t\tmode === 'manual' &&\n\t\t\titems.length === 1 &&\n\t\t\tObject.keys(items[0].json).length === 0 &&\n\t\t\titems[0].binary === undefined\n\t\t) {\n\t\t\t// If we are in manual mode and no input data got provided we return\n\t\t\t// example data to allow to develope and test errorWorkflows easily\n\n\t\t\tconst restApiUrl = this.getRestApiUrl();\n\n\t\t\tconst urlParts = restApiUrl.split('/');\n\t\t\turlParts.pop();\n\t\t\turlParts.push('execution');\n\n\t\t\tconst id = 231;\n\n\t\t\titems[0].json = {\n\t\t\t\texecution: {\n\t\t\t\t\tid,\n\t\t\t\t\turl: `${urlParts.join('/')}/workflow/1/${id}`,\n\t\t\t\t\tretryOf: '34',\n\t\t\t\t\terror: {\n\t\t\t\t\t\tmessage: 'Example Error Message',\n\t\t\t\t\t\tstack: 'Stacktrace',\n\t\t\t\t\t},\n\t\t\t\t\tlastNodeExecuted: 'Node With Error',\n\t\t\t\t\tmode: 'manual',\n\t\t\t\t},\n\t\t\t\tworkflow: {\n\t\t\t\t\tid: '1',\n\t\t\t\t\tname: 'Example Workflow',\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\treturn [items];\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,0BAAoC;AAE7B,MAAM,aAAkC;AAAA,EAAxC;AACN,uBAAoC;AAAA,MACnC,aAAa;AAAA,MACb,MAAM;AAAA,MACN,MAAM;AAAA,MACN,WAAW;AAAA,MACX,OAAO,CAAC,SAAS;AAAA,MACjB,SAAS;AAAA,MACT,aAAa;AAAA,MACb,yBAAyB;AAAA,MACzB,qBAAqB;AAAA,MACrB,UAAU;AAAA,MACV,UAAU;AAAA,QACT,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,MACA,QAAQ,CAAC;AAAA,MACT,SAAS,CAAC,wCAAoB,IAAI;AAAA,MAClC,YAAY;AAAA,QACX;AAAA,UACC,aACC;AAAA,UACD,MAAM;AAAA,UACN,MAAM;AAAA,UACN,SAAS;AAAA,QACV;AAAA,MACD;AAAA,IACD;AAAA;AAAA,EAEA,MAAM,UAAkE;AACvE,UAAM,QAAQ,KAAK,aAAa;AAEhC,UAAM,OAAO,KAAK,QAAQ;AAE1B,QACC,SAAS,YACT,MAAM,WAAW,KACjB,OAAO,KAAK,MAAM,CAAC,EAAE,IAAI,EAAE,WAAW,KACtC,MAAM,CAAC,EAAE,WAAW,QACnB;AAID,YAAM,aAAa,KAAK,cAAc;AAEtC,YAAM,WAAW,WAAW,MAAM,GAAG;AACrC,eAAS,IAAI;AACb,eAAS,KAAK,WAAW;AAEzB,YAAM,KAAK;AAEX,YAAM,CAAC,EAAE,OAAO;AAAA,QACf,WAAW;AAAA,UACV;AAAA,UACA,KAAK,GAAG,SAAS,KAAK,GAAG,CAAC,eAAe,EAAE;AAAA,UAC3C,SAAS;AAAA,UACT,OAAO;AAAA,YACN,SAAS;AAAA,YACT,OAAO;AAAA,UACR;AAAA,UACA,kBAAkB;AAAA,UAClB,MAAM;AAAA,QACP;AAAA,QACA,UAAU;AAAA,UACT,IAAI;AAAA,UACJ,MAAM;AAAA,QACP;AAAA,MACD;AAAA,IACD;AAEA,WAAO,CAAC,KAAK;AAAA,EACd;AACD;","names":[]}