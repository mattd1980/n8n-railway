{"version":3,"sources":["../../../nodes/GoToWebinar/GoToWebinar.node.ts"],"sourcesContent":["import isEmpty from 'lodash/isEmpty';\nimport omit from 'lodash/omit';\nimport moment from 'moment-timezone';\nimport { NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\nimport type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\n\nimport {\n\tattendeeFields,\n\tattendeeOperations,\n\tcoorganizerFields,\n\tcoorganizerOperations,\n\tpanelistFields,\n\tpanelistOperations,\n\tregistrantFields,\n\tregistrantOperations,\n\tsessionFields,\n\tsessionOperations,\n\twebinarFields,\n\twebinarOperations,\n} from './descriptions';\nimport {\n\tgoToWebinarApiRequest,\n\tgoToWebinarApiRequestAllItems,\n\thandleGetAll,\n\tloadAnswers,\n\tloadRegistranMultiChoiceQuestions,\n\tloadRegistranSimpleQuestions,\n\tloadWebinars,\n\tloadWebinarSessions,\n} from './GenericFunctions';\n\nexport class GoToWebinar implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'GoToWebinar',\n\t\tname: 'goToWebinar',\n\t\ticon: 'file:gotowebinar.svg',\n\t\tgroup: ['transform'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume the GoToWebinar API',\n\t\tdefaults: {\n\t\t\tname: 'GoToWebinar',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'goToWebinarOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Attendee',\n\t\t\t\t\t\tvalue: 'attendee',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Co-Organizer',\n\t\t\t\t\t\tvalue: 'coorganizer',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Panelist',\n\t\t\t\t\t\tvalue: 'panelist',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Registrant',\n\t\t\t\t\t\tvalue: 'registrant',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Session',\n\t\t\t\t\t\tvalue: 'session',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Webinar',\n\t\t\t\t\t\tvalue: 'webinar',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'attendee',\n\t\t\t},\n\t\t\t...attendeeOperations,\n\t\t\t...attendeeFields,\n\t\t\t...coorganizerOperations,\n\t\t\t...coorganizerFields,\n\t\t\t...panelistOperations,\n\t\t\t...panelistFields,\n\t\t\t...registrantOperations,\n\t\t\t...registrantFields,\n\t\t\t...sessionOperations,\n\t\t\t...sessionFields,\n\t\t\t...webinarOperations,\n\t\t\t...webinarFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\tasync getWebinars(this: ILoadOptionsFunctions) {\n\t\t\t\treturn await loadWebinars.call(this);\n\t\t\t},\n\t\t\tasync getAnswers(this: ILoadOptionsFunctions) {\n\t\t\t\treturn await loadAnswers.call(this);\n\t\t\t},\n\t\t\tasync getWebinarSessions(this: ILoadOptionsFunctions) {\n\t\t\t\treturn await loadWebinarSessions.call(this);\n\t\t\t},\n\t\t\t// Get all the timezones to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getTimezones(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tfor (const timezone of moment.tz.names()) {\n\t\t\t\t\tconst timezoneName = timezone;\n\t\t\t\t\tconst timezoneId = timezone;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: timezoneName,\n\t\t\t\t\t\tvalue: timezoneId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\tasync getRegistranSimpleQuestions(\n\t\t\t\tthis: ILoadOptionsFunctions,\n\t\t\t): Promise<INodePropertyOptions[]> {\n\t\t\t\treturn await loadRegistranSimpleQuestions.call(this);\n\t\t\t},\n\t\t\tasync getRegistranMultiChoiceQuestions(\n\t\t\t\tthis: ILoadOptionsFunctions,\n\t\t\t): Promise<INodePropertyOptions[]> {\n\t\t\t\treturn await loadRegistranMultiChoiceQuestions.call(this);\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\tlet responseData;\n\t\tconst returnData: INodeExecutionData[] = [];\n\n\t\tconst { oauthTokenData } = await this.getCredentials<{\n\t\t\toauthTokenData: { account_key: string; organizer_key: string };\n\t\t}>('goToWebinarOAuth2Api');\n\n\t\tconst accountKey = oauthTokenData.account_key;\n\t\tconst organizerKey = oauthTokenData.organizer_key;\n\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'attendee') {\n\t\t\t\t\t// *********************************************************************\n\t\t\t\t\t//                            attendee\n\t\t\t\t\t// *********************************************************************\n\n\t\t\t\t\t// https://developer.goto.com/GoToWebinarV2/#tag/Attendees\n\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         attendee: get\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst webinarKey = this.getNodeParameter('webinarKey', i) as string;\n\t\t\t\t\t\tconst sessionKey = this.getNodeParameter('sessionKey', i) as string;\n\t\t\t\t\t\tconst registrantKey = this.getNodeParameter('registrantKey', i) as string;\n\n\t\t\t\t\t\tconst endpoint = `organizers/${organizerKey}/webinars/${webinarKey}/sessions/${sessionKey}/attendees/${registrantKey}`;\n\t\t\t\t\t\tresponseData = await goToWebinarApiRequest.call(this, 'GET', endpoint, {}, {});\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//        attendee: getAll\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst webinarKey = this.getNodeParameter('webinarKey', i) as string;\n\t\t\t\t\t\tconst sessionKey = this.getNodeParameter('sessionKey', i) as string;\n\n\t\t\t\t\t\tconst endpoint = `organizers/${organizerKey}/webinars/${webinarKey}/sessions/${sessionKey}/attendees`;\n\t\t\t\t\t\tresponseData = await handleGetAll.call(this, endpoint, {}, {}, resource);\n\t\t\t\t\t} else if (operation === 'getDetails') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//     attendee: getDetails\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst webinarKey = this.getNodeParameter('webinarKey', i) as string;\n\t\t\t\t\t\tconst sessionKey = this.getNodeParameter('sessionKey', i) as string;\n\t\t\t\t\t\tconst registrantKey = this.getNodeParameter('registrantKey', i) as string;\n\t\t\t\t\t\tconst details = this.getNodeParameter('details', i) as string;\n\n\t\t\t\t\t\tconst endpoint = `organizers/${organizerKey}/webinars/${webinarKey}/sessions/${sessionKey}/attendees/${registrantKey}/${details}`;\n\t\t\t\t\t\tresponseData = await goToWebinarApiRequest.call(this, 'GET', endpoint, {}, {});\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'coorganizer') {\n\t\t\t\t\t// *********************************************************************\n\t\t\t\t\t//                            coorganizer\n\t\t\t\t\t// *********************************************************************\n\n\t\t\t\t\t// https://developer.goto.com/GoToWebinarV2/#tag/Co-organizers\n\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//        coorganizer: create\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst webinarKey = this.getNodeParameter('webinarKey', i) as string;\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\texternal: this.getNodeParameter('isExternal', i) as boolean,\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tif (body.external === false) {\n\t\t\t\t\t\t\tbody.organizerKey = this.getNodeParameter('organizerKey', i) as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (body.external === true) {\n\t\t\t\t\t\t\tbody.givenName = this.getNodeParameter('givenName', i) as string;\n\t\t\t\t\t\t\tbody.email = this.getNodeParameter('email', i) as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst endpoint = `organizers/${organizerKey}/webinars/${webinarKey}/coorganizers`;\n\t\t\t\t\t\tresponseData = await goToWebinarApiRequest.call(this, 'POST', endpoint, {}, [body]);\n\t\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//       coorganizer: delete\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst webinarKey = this.getNodeParameter('webinarKey', i) as string;\n\t\t\t\t\t\tconst coorganizerKey = this.getNodeParameter('coorganizerKey', i) as string;\n\n\t\t\t\t\t\tconst qs = {\n\t\t\t\t\t\t\texternal: this.getNodeParameter('isExternal', i) as boolean,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tconst endpoint = `organizers/${organizerKey}/webinars/${webinarKey}/coorganizers/${coorganizerKey}`;\n\t\t\t\t\t\tresponseData = await goToWebinarApiRequest.call(this, 'DELETE', endpoint, qs, {});\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//        coorganizer: getAll\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst webinarKey = this.getNodeParameter('webinarKey', i) as string;\n\n\t\t\t\t\t\tconst endpoint = `organizers/${organizerKey}/webinars/${webinarKey}/coorganizers`;\n\t\t\t\t\t\tresponseData = await handleGetAll.call(this, endpoint, {}, {}, resource);\n\t\t\t\t\t} else if (operation === 'reinvite') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//       coorganizer: reinvite\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst webinarKey = this.getNodeParameter('webinarKey', i) as string;\n\t\t\t\t\t\tconst coorganizerKey = this.getNodeParameter('coorganizerKey', i) as string;\n\n\t\t\t\t\t\tconst qs = {\n\t\t\t\t\t\t\texternal: this.getNodeParameter('isExternal', i) as boolean,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tconst endpoint = `organizers/${organizerKey}/webinars/${webinarKey}/coorganizers/${coorganizerKey}/resendInvitation`;\n\n\t\t\t\t\t\tresponseData = await goToWebinarApiRequest.call(this, 'POST', endpoint, qs, {});\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'panelist') {\n\t\t\t\t\t// *********************************************************************\n\t\t\t\t\t//                            panelist\n\t\t\t\t\t// *********************************************************************\n\n\t\t\t\t\t// https://developer.goto.com/GoToWebinarV2/#tag/Panelists\n\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         panelist: create\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst webinarKey = this.getNodeParameter('webinarKey', i) as string;\n\n\t\t\t\t\t\tconst body = [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: this.getNodeParameter('name', i) as string,\n\t\t\t\t\t\t\t\temail: this.getNodeParameter('email', i) as string,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t] as IDataObject[];\n\n\t\t\t\t\t\tconst endpoint = `organizers/${organizerKey}/webinars/${webinarKey}/panelists`;\n\t\t\t\t\t\tresponseData = await goToWebinarApiRequest.call(this, 'POST', endpoint, {}, body);\n\t\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         panelist: delete\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst webinarKey = this.getNodeParameter('webinarKey', i) as string;\n\t\t\t\t\t\tconst panelistKey = this.getNodeParameter('panelistKey', i) as string;\n\n\t\t\t\t\t\tconst endpoint = `organizers/${organizerKey}/webinars/${webinarKey}/panelists/${panelistKey}`;\n\t\t\t\t\t\tresponseData = await goToWebinarApiRequest.call(this, 'DELETE', endpoint, {}, {});\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         panelist: getAll\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst webinarKey = this.getNodeParameter('webinarKey', i) as string;\n\n\t\t\t\t\t\tconst endpoint = `organizers/${organizerKey}/webinars/${webinarKey}/panelists`;\n\t\t\t\t\t\tresponseData = await handleGetAll.call(this, endpoint, {}, {}, resource);\n\t\t\t\t\t} else if (operation === 'reinvite') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//        panelist: reinvite\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst webinarKey = this.getNodeParameter('webinarKey', i) as string;\n\t\t\t\t\t\tconst panelistKey = this.getNodeParameter('panelistKey', i) as string;\n\n\t\t\t\t\t\tconst endpoint = `organizers/${organizerKey}/webinars/${webinarKey}/panelists/${panelistKey}/resendInvitation`;\n\t\t\t\t\t\tresponseData = await goToWebinarApiRequest.call(this, 'POST', endpoint, {}, {});\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'registrant') {\n\t\t\t\t\t// *********************************************************************\n\t\t\t\t\t//                            registrant\n\t\t\t\t\t// *********************************************************************\n\n\t\t\t\t\t// https://developer.goto.com/GoToWebinarV2/#tag/Registrants\n\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         registrant: create\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst webinarKey = this.getNodeParameter('webinarKey', i) as string;\n\n\t\t\t\t\t\tconst qs = {} as IDataObject;\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\tfirstName: this.getNodeParameter('firstName', i) as string,\n\t\t\t\t\t\t\tlastName: this.getNodeParameter('lastName', i) as string,\n\t\t\t\t\t\t\temail: this.getNodeParameter('email', i) as string,\n\t\t\t\t\t\t\tresponses: [],\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tlet additionalFields = this.getNodeParameter('additionalFields', i) as Partial<{\n\t\t\t\t\t\t\tresendConfirmation: boolean;\n\t\t\t\t\t\t\tfullAddress: {\n\t\t\t\t\t\t\t\tdetails: { [key: string]: string };\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tsimpleResponses: [{ [key: string]: string }];\n\t\t\t\t\t\t\tmultiChoiceResponses: [{ [key: string]: string }];\n\t\t\t\t\t\t}>;\n\n\t\t\t\t\t\tif (additionalFields.resendConfirmation) {\n\t\t\t\t\t\t\tqs.resendConfirmation = additionalFields.resendConfirmation;\n\t\t\t\t\t\t\tadditionalFields = omit(additionalFields, ['resendConfirmation']);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.fullAddress) {\n\t\t\t\t\t\t\tObject.assign(body, additionalFields.fullAddress.details);\n\t\t\t\t\t\t\tadditionalFields = omit(additionalFields, ['fullAddress']);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.simpleResponses) {\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tbody.responses.push(...additionalFields.simpleResponses.details);\n\t\t\t\t\t\t\tadditionalFields = omit(additionalFields, ['simpleResponses']);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.multiChoiceResponses) {\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tbody.responses.push(...additionalFields.multiChoiceResponses.details);\n\t\t\t\t\t\t\tadditionalFields = omit(additionalFields, ['multiChoiceResponses']);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tObject.assign(body, additionalFields);\n\n\t\t\t\t\t\tconst endpoint = `organizers/${organizerKey}/webinars/${webinarKey}/registrants`;\n\t\t\t\t\t\tresponseData = await goToWebinarApiRequest.call(this, 'POST', endpoint, qs, body);\n\t\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//        registrant: delete\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst webinarKey = this.getNodeParameter('webinarKey', i) as string;\n\t\t\t\t\t\tconst registrantKey = this.getNodeParameter('registrantKey', i) as string;\n\n\t\t\t\t\t\tconst endpoint = `organizers/${organizerKey}/webinars/${webinarKey}/registrants/${registrantKey}`;\n\t\t\t\t\t\tresponseData = await goToWebinarApiRequest.call(this, 'DELETE', endpoint, {}, {});\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t} else if (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//        registrant: get\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst webinarKey = this.getNodeParameter('webinarKey', i) as string;\n\t\t\t\t\t\tconst registrantKey = this.getNodeParameter('registrantKey', i) as string;\n\n\t\t\t\t\t\tconst endpoint = `organizers/${organizerKey}/webinars/${webinarKey}/registrants/${registrantKey}`;\n\t\t\t\t\t\tresponseData = await goToWebinarApiRequest.call(this, 'GET', endpoint, {}, {});\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//        registrant: getAll\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst webinarKey = this.getNodeParameter('webinarKey', i) as string;\n\n\t\t\t\t\t\tconst endpoint = `organizers/${organizerKey}/webinars/${webinarKey}/registrants`;\n\t\t\t\t\t\tresponseData = await handleGetAll.call(this, endpoint, {}, {}, resource);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'session') {\n\t\t\t\t\t// *********************************************************************\n\t\t\t\t\t//                              session\n\t\t\t\t\t// *********************************************************************\n\n\t\t\t\t\t// https://developer.goto.com/GoToWebinarV2/#tag/Sessions\n\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         session: get\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst webinarKey = this.getNodeParameter('webinarKey', i) as string;\n\t\t\t\t\t\tconst sessionKey = this.getNodeParameter('sessionKey', i) as string;\n\n\t\t\t\t\t\tconst endpoint = `organizers/${organizerKey}/webinars/${webinarKey}/sessions/${sessionKey}`;\n\t\t\t\t\t\tresponseData = await goToWebinarApiRequest.call(this, 'GET', endpoint, {}, {});\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         session: getAll\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst qs = {} as IDataObject;\n\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', 0);\n\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', 0);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst { webinarKey, times } = this.getNodeParameter('additionalFields', i) as {\n\t\t\t\t\t\t\tfilterByWebinar: boolean;\n\t\t\t\t\t\t\twebinarKey: string;\n\t\t\t\t\t\t\ttimes: {\n\t\t\t\t\t\t\t\ttimesProperties: { [key: string]: string };\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (times) {\n\t\t\t\t\t\t\tqs.fromTime = moment(times.timesProperties.fromTime).format();\n\t\t\t\t\t\t\tqs.toTime = moment(times.timesProperties.toTime).format();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.fromTime = moment().subtract(1, 'years').format();\n\t\t\t\t\t\t\tqs.toTime = moment().format();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (webinarKey !== undefined) {\n\t\t\t\t\t\t\tconst endpoint = `organizers/${organizerKey}/webinars/${webinarKey}/sessions`;\n\t\t\t\t\t\t\tresponseData = await goToWebinarApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\tendpoint,\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst endpoint = `organizers/${organizerKey}/sessions`;\n\t\t\t\t\t\t\tresponseData = await goToWebinarApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\tendpoint,\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (operation === 'getDetails') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         session: getDetails\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst webinarKey = this.getNodeParameter('webinarKey', i) as string;\n\t\t\t\t\t\tconst sessionKey = this.getNodeParameter('sessionKey', i) as string;\n\t\t\t\t\t\tconst details = this.getNodeParameter('details', i) as string;\n\n\t\t\t\t\t\tconst endpoint = `organizers/${organizerKey}/webinars/${webinarKey}/sessions/${sessionKey}/${details}`;\n\t\t\t\t\t\tresponseData = await goToWebinarApiRequest.call(this, 'GET', endpoint, {}, {});\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'webinar') {\n\t\t\t\t\t// *********************************************************************\n\t\t\t\t\t//                               webinar\n\t\t\t\t\t// *********************************************************************\n\n\t\t\t\t\t// https://developer.goto.com/GoToWebinarV2/#tag/Webinars\n\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         webinar: create\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst timesProperties = this.getNodeParameter(\n\t\t\t\t\t\t\t'times.timesProperties',\n\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t[],\n\t\t\t\t\t\t) as IDataObject;\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\tsubject: this.getNodeParameter('subject', i) as string,\n\t\t\t\t\t\t\ttimes: timesProperties,\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tObject.assign(body, additionalFields);\n\n\t\t\t\t\t\tconst endpoint = `organizers/${organizerKey}/webinars`;\n\t\t\t\t\t\tresponseData = await goToWebinarApiRequest.call(this, 'POST', endpoint, {}, body);\n\t\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         webinar: delete\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst webinarKey = this.getNodeParameter('webinarKey', i) as string;\n\n\t\t\t\t\t\tconst { sendCancellationEmails } = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tconst qs = {} as IDataObject;\n\n\t\t\t\t\t\tif (sendCancellationEmails) {\n\t\t\t\t\t\t\tqs.sendCancellationEmails = sendCancellationEmails;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst endpoint = `organizers/${organizerKey}/webinars/${webinarKey}`;\n\t\t\t\t\t\tawait goToWebinarApiRequest.call(this, 'DELETE', endpoint, qs, {});\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t} else if (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         webinar: get\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst webinarKey = this.getNodeParameter('webinarKey', i) as string;\n\n\t\t\t\t\t\tconst endpoint = `organizers/${organizerKey}/webinars/${webinarKey}`;\n\t\t\t\t\t\tresponseData = await goToWebinarApiRequest.call(this, 'GET', endpoint, {}, {});\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         webinar: getAll\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst qs = {} as IDataObject;\n\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', 0);\n\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', 0);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst { times } = this.getNodeParameter('additionalFields', i) as {\n\t\t\t\t\t\t\ttimes: {\n\t\t\t\t\t\t\t\ttimesProperties: { [key: string]: string };\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (times) {\n\t\t\t\t\t\t\tqs.fromTime = moment(times.timesProperties.fromTime).format();\n\t\t\t\t\t\t\tqs.toTime = moment(times.timesProperties.toTime).format();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.fromTime = moment().subtract(1, 'years').format();\n\t\t\t\t\t\t\tqs.toTime = moment().format();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst endpoint = `accounts/${accountKey}/webinars`;\n\t\t\t\t\t\tresponseData = await goToWebinarApiRequestAllItems.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\tendpoint,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (operation === 'update') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         webinar: update\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst webinarKey = this.getNodeParameter('webinarKey', i) as string;\n\n\t\t\t\t\t\tconst qs = {\n\t\t\t\t\t\t\tnotifyParticipants: this.getNodeParameter('notifyParticipants', i) as boolean,\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tlet body = {};\n\n\t\t\t\t\t\tlet updateFields = this.getNodeParameter('updateFields', i);\n\n\t\t\t\t\t\tif (updateFields.times) {\n\t\t\t\t\t\t\tconst { times } = updateFields as {\n\t\t\t\t\t\t\t\ttimes: { timesProperties: Array<{ startTime: string; endTime: string }> };\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tbody = {\n\t\t\t\t\t\t\t\ttimes: times.timesProperties,\n\t\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\t\tupdateFields = omit(updateFields, ['times']);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tObject.assign(body, updateFields);\n\n\t\t\t\t\t\tif (isEmpty(updateFields)) {\n\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t`Please enter at least one field to update for the ${resource}.`,\n\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst endpoint = `organizers/${organizerKey}/webinars/${webinarKey}`;\n\t\t\t\t\t\tawait goToWebinarApiRequest.call(this, 'PUT', endpoint, qs, body);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t{ itemData: { item: i } },\n\t\t\t);\n\n\t\t\treturnData.push(...executionData);\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":["moment","omit","isEmpty"]}