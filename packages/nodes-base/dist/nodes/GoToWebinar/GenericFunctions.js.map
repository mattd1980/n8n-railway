{"version":3,"sources":["../../../nodes/GoToWebinar/GenericFunctions.ts"],"sourcesContent":["import * as losslessJSON from 'lossless-json';\nimport moment from 'moment-timezone';\nimport type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHookFunctions,\n\tIHttpRequestMethods,\n\tILoadOptionsFunctions,\n\tINodePropertyOptions,\n\tIRequestOptions,\n\tJsonObject,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\nfunction convertLosslessNumber(_: any, value: any) {\n\tif (value?.isLosslessNumber) {\n\t\treturn value.toString();\n\t} else {\n\t\treturn value;\n\t}\n}\n\n/**\n * Make an authenticated API request to GoToWebinar.\n */\nexport async function goToWebinarApiRequest(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\tqs: IDataObject,\n\tbody: IDataObject | IDataObject[],\n\toption: IDataObject = {},\n) {\n\tconst operation = this.getNodeParameter('operation', 0);\n\tconst resource = this.getNodeParameter('resource', 0);\n\n\tconst options: IRequestOptions = {\n\t\theaders: {\n\t\t\t'user-agent': 'n8n',\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tmethod,\n\t\turi: `https://api.getgo.com/G2W/rest/v2/${endpoint}`,\n\t\tqs,\n\t\tbody: JSON.stringify(body),\n\t\tjson: false,\n\t};\n\n\tif (resource === 'session' && operation === 'getAll') {\n\t\toptions.headers!.Accept = 'application/vnd.citrix.g2wapi-v1.1+json';\n\t}\n\n\tif (['GET', 'DELETE'].includes(method)) {\n\t\tdelete options.body;\n\t}\n\n\tif (!Object.keys(qs).length) {\n\t\tdelete options.qs;\n\t}\n\n\tif (Object.keys(option)) {\n\t\tObject.assign(options, option);\n\t}\n\n\ttry {\n\t\tconst response = await this.helpers.requestOAuth2.call(this, 'goToWebinarOAuth2Api', options, {\n\t\t\ttokenExpiredStatusCode: 403,\n\t\t});\n\n\t\tif (response === '') {\n\t\t\treturn {};\n\t\t}\n\n\t\t// https://stackoverflow.com/questions/62190724/getting-gotowebinar-registrant\n\t\treturn losslessJSON.parse(response as string, convertLosslessNumber);\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\n/**\n * Make an authenticated API request to GoToWebinar and return all results.\n */\nexport async function goToWebinarApiRequestAllItems(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\tquery: IDataObject,\n\tbody: IDataObject,\n\tresource: string,\n) {\n\tconst resourceToResponseKey: { [key: string]: string } = {\n\t\tsession: 'sessionInfoResources',\n\t\twebinar: 'webinars',\n\t};\n\n\tconst key = resourceToResponseKey[resource];\n\n\tlet returnData: IDataObject[] = [];\n\tlet responseData;\n\n\tdo {\n\t\tresponseData = await goToWebinarApiRequest.call(this, method, endpoint, query, body);\n\n\t\tif (responseData.page && parseInt(responseData.page.totalElements as string, 10) === 0) {\n\t\t\treturn [];\n\t\t} else if (responseData._embedded?.[key]) {\n\t\t\treturnData.push(...(responseData._embedded[key] as IDataObject[]));\n\t\t} else {\n\t\t\treturnData.push(...(responseData as IDataObject[]));\n\t\t}\n\n\t\tconst limit = query.limit as number | undefined;\n\t\tif (limit && returnData.length >= limit) {\n\t\t\treturnData = returnData.splice(0, limit);\n\t\t\treturn returnData;\n\t\t}\n\t} while (\n\t\tresponseData.totalElements &&\n\t\tparseInt(responseData.totalElements as string, 10) > returnData.length\n\t);\n\n\treturn returnData;\n}\n\nexport async function handleGetAll(\n\tthis: IExecuteFunctions,\n\tendpoint: string,\n\tqs: IDataObject,\n\tbody: IDataObject,\n\tresource: string,\n) {\n\tconst returnAll = this.getNodeParameter('returnAll', 0);\n\n\tif (!returnAll) {\n\t\tqs.limit = this.getNodeParameter('limit', 0);\n\t}\n\n\treturn await goToWebinarApiRequestAllItems.call(this, 'GET', endpoint, qs, body, resource);\n}\n\nexport async function loadWebinars(this: ILoadOptionsFunctions) {\n\tconst { oauthTokenData } = await this.getCredentials<{\n\t\toauthTokenData: { account_key: string };\n\t}>('goToWebinarOAuth2Api');\n\n\tconst endpoint = `accounts/${oauthTokenData.account_key}/webinars`;\n\n\tconst qs = {\n\t\tfromTime: moment().subtract(1, 'years').format(),\n\t\ttoTime: moment().add(1, 'years').format(),\n\t};\n\n\tconst resourceItems = await goToWebinarApiRequestAllItems.call(\n\t\tthis,\n\t\t'GET',\n\t\tendpoint,\n\t\tqs,\n\t\t{},\n\t\t'webinar',\n\t);\n\n\tconst returnData: INodePropertyOptions[] = [];\n\n\tresourceItems.forEach((item) => {\n\t\treturnData.push({\n\t\t\tname: item.subject as string,\n\t\t\tvalue: item.webinarKey as string,\n\t\t});\n\t});\n\n\treturn returnData;\n}\n\nexport async function loadWebinarSessions(this: ILoadOptionsFunctions) {\n\tconst { oauthTokenData } = await this.getCredentials<{\n\t\toauthTokenData: { organizer_key: string };\n\t}>('goToWebinarOAuth2Api');\n\n\tconst webinarKey = this.getCurrentNodeParameter('webinarKey') as string;\n\n\tconst endpoint = `organizers/${oauthTokenData.organizer_key}/webinars/${webinarKey}/sessions`;\n\n\tconst resourceItems = await goToWebinarApiRequestAllItems.call(\n\t\tthis,\n\t\t'GET',\n\t\tendpoint,\n\t\t{},\n\t\t{},\n\t\t'session',\n\t);\n\n\tconst returnData: INodePropertyOptions[] = [];\n\n\tresourceItems.forEach((item) => {\n\t\treturnData.push({\n\t\t\tname: `Date: ${moment(item.startTime as string).format('MM-DD-YYYY')} | From: ${moment(\n\t\t\t\titem.startTime as string,\n\t\t\t).format('LT')} - To: ${moment(item.endTime as string).format('LT')}`,\n\t\t\tvalue: item.sessionKey as string,\n\t\t});\n\t});\n\n\treturn returnData;\n}\n\nexport async function loadRegistranSimpleQuestions(this: ILoadOptionsFunctions) {\n\tconst { oauthTokenData } = await this.getCredentials<{\n\t\toauthTokenData: { organizer_key: string };\n\t}>('goToWebinarOAuth2Api');\n\n\tconst webinarkey = this.getNodeParameter('webinarKey') as string;\n\n\tconst endpoint = `organizers/${oauthTokenData.organizer_key}/webinars/${webinarkey}/registrants/fields`;\n\n\tconst { questions } = await goToWebinarApiRequest.call(this, 'GET', endpoint, {}, {});\n\n\tconst returnData: INodePropertyOptions[] = [];\n\n\tquestions.forEach((item: IDataObject) => {\n\t\tif (item.type === 'shortAnswer') {\n\t\t\treturnData.push({\n\t\t\t\tname: item.question as string,\n\t\t\t\tvalue: item.questionKey as string,\n\t\t\t});\n\t\t}\n\t});\n\n\treturn returnData;\n}\n\nexport async function loadAnswers(this: ILoadOptionsFunctions) {\n\tconst { oauthTokenData } = await this.getCredentials<{\n\t\toauthTokenData: { organizer_key: string };\n\t}>('goToWebinarOAuth2Api');\n\n\tconst webinarKey = this.getCurrentNodeParameter('webinarKey') as string;\n\n\tconst questionKey = this.getCurrentNodeParameter('questionKey') as string;\n\n\tconst endpoint = `organizers/${oauthTokenData.organizer_key}/webinars/${webinarKey}/registrants/fields`;\n\n\tconst { questions } = await goToWebinarApiRequest.call(this, 'GET', endpoint, {}, {});\n\n\tconst returnData: INodePropertyOptions[] = [];\n\n\tquestions.forEach((item: IDataObject) => {\n\t\tif (item.type === 'multiChoice' && item.questionKey === questionKey) {\n\t\t\tfor (const answer of item.answers as IDataObject[]) {\n\t\t\t\treturnData.push({\n\t\t\t\t\tname: answer.answer as string,\n\t\t\t\t\tvalue: answer.answerKey as string,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n\n\treturn returnData;\n}\n\nexport async function loadRegistranMultiChoiceQuestions(this: ILoadOptionsFunctions) {\n\tconst { oauthTokenData } = await this.getCredentials<{\n\t\toauthTokenData: { organizer_key: string };\n\t}>('goToWebinarOAuth2Api');\n\n\tconst webinarkey = this.getNodeParameter('webinarKey') as string;\n\n\tconst endpoint = `organizers/${oauthTokenData.organizer_key}/webinars/${webinarkey}/registrants/fields`;\n\n\tconst { questions } = await goToWebinarApiRequest.call(this, 'GET', endpoint, {}, {});\n\n\tconst returnData: INodePropertyOptions[] = [];\n\n\tquestions.forEach((item: IDataObject) => {\n\t\tif (item.type === 'multipleChoice') {\n\t\t\treturnData.push({\n\t\t\t\tname: item.question as string,\n\t\t\t\tvalue: item.questionKey as string,\n\t\t\t});\n\t\t}\n\t});\n\n\treturn returnData;\n}\n"],"mappings":"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","names":["moment"]}