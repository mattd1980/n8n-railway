{"version":3,"sources":["../../../nodes/OpenThesaurus/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHookFunctions,\n\tILoadOptionsFunctions,\n\tJsonObject,\n\tIRequestOptions,\n\tIHttpRequestMethods,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\nexport async function openThesaurusApiRequest(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tresource: string,\n\n\tbody: any = {},\n\tqs: IDataObject = {},\n\turi?: string,\n\toption: IDataObject = {},\n): Promise<any> {\n\ttry {\n\t\tlet options = {\n\t\t\theaders: {\n\t\t\t\t'User-Agent': 'https://n8n.io',\n\t\t\t},\n\t\t\tmethod,\n\t\t\tqs,\n\t\t\tbody,\n\t\t\turi: uri || `https://www.openthesaurus.de${resource}`,\n\t\t\tjson: true,\n\t\t} satisfies IRequestOptions;\n\n\t\toptions = Object.assign({}, options, option);\n\t\toptions.qs.format = 'application/json';\n\n\t\treturn await this.helpers.request(options);\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,0BAA6B;AAE7B,eAAsB,wBAErB,QACA,UAEA,OAAY,CAAC,GACb,KAAkB,CAAC,GACnB,KACA,SAAsB,CAAC,GACR;AACf,MAAI;AACH,QAAI,UAAU;AAAA,MACb,SAAS;AAAA,QACR,cAAc;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,KAAK,OAAO,+BAA+B,QAAQ;AAAA,MACnD,MAAM;AAAA,IACP;AAEA,cAAU,OAAO,OAAO,CAAC,GAAG,SAAS,MAAM;AAC3C,YAAQ,GAAG,SAAS;AAEpB,WAAO,MAAM,KAAK,QAAQ,QAAQ,OAAO;AAAA,EAC1C,SAAS,OAAO;AACf,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,KAAmB;AAAA,EAC3D;AACD;","names":[]}