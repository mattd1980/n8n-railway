{"version":3,"sources":["../../../nodes/Figma/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHookFunctions,\n\tILoadOptionsFunctions,\n\tJsonObject,\n\tIRequestOptions,\n\tIHttpRequestMethods,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\nexport async function figmaApiRequest(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tresource: string,\n\n\tbody: any = {},\n\t_qs: IDataObject = {},\n\turi?: string,\n\toption: IDataObject = {},\n): Promise<any> {\n\tconst credentials = await this.getCredentials('figmaApi');\n\n\tlet options: IRequestOptions = {\n\t\theaders: { 'X-FIGMA-TOKEN': credentials.accessToken },\n\t\tmethod,\n\t\tbody,\n\t\turi: uri || `https://api.figma.com${resource}`,\n\t\tjson: true,\n\t};\n\toptions = Object.assign({}, options, option);\n\tif (Object.keys(options.body as IDataObject).length === 0) {\n\t\tdelete options.body;\n\t}\n\ttry {\n\t\treturn await this.helpers.request(options);\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,0BAA6B;AAE7B,eAAsB,gBAErB,QACA,UAEA,OAAY,CAAC,GACb,MAAmB,CAAC,GACpB,KACA,SAAsB,CAAC,GACR;AACf,QAAM,cAAc,MAAM,KAAK,eAAe,UAAU;AAExD,MAAI,UAA2B;AAAA,IAC9B,SAAS,EAAE,iBAAiB,YAAY,YAAY;AAAA,IACpD;AAAA,IACA;AAAA,IACA,KAAK,OAAO,wBAAwB,QAAQ;AAAA,IAC5C,MAAM;AAAA,EACP;AACA,YAAU,OAAO,OAAO,CAAC,GAAG,SAAS,MAAM;AAC3C,MAAI,OAAO,KAAK,QAAQ,IAAmB,EAAE,WAAW,GAAG;AAC1D,WAAO,QAAQ;AAAA,EAChB;AACA,MAAI;AACH,WAAO,MAAM,KAAK,QAAQ,QAAQ,OAAO;AAAA,EAC1C,SAAS,OAAO;AACf,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,KAAmB;AAAA,EAC3D;AACD;","names":[]}