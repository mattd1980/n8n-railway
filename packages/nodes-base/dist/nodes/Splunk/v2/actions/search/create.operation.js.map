{"version":3,"sources":["../../../../../../nodes/Splunk/v2/actions/search/create.operation.ts"],"sourcesContent":["import type { INodeProperties, IExecuteFunctions, IDataObject } from 'n8n-workflow';\n\nimport { updateDisplayOptions } from '../../../../../utils/utilities';\nimport { populate, toUnixEpoch } from '../../helpers/utils';\nimport { splunkApiJsonRequest, splunkApiRequest } from '../../transport';\n\nconst properties: INodeProperties[] = [\n\t{\n\t\tdisplayName: 'Query',\n\t\tname: 'search',\n\t\tdescription:\n\t\t\t'Search language string to execute, in Splunk\\'s <a href=\"https://docs.splunk.com/Documentation/Splunk/latest/SearchReference/WhatsInThisManual\">Search Processing Language</a>',\n\t\tplaceholder: 'e.g. search index=_internal | stats count by source',\n\t\ttype: 'string',\n\t\trequired: true,\n\t\tdefault: '',\n\t\ttypeOptions: {\n\t\t\trows: 2,\n\t\t},\n\t},\n\t{\n\t\tdisplayName: 'Additional Fields',\n\t\tname: 'additionalFields',\n\t\ttype: 'collection',\n\t\tplaceholder: 'Add Field',\n\t\tdefault: {},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Ad Hoc Search Level',\n\t\t\t\tname: 'adhoc_search_level',\n\t\t\t\ttype: 'options',\n\t\t\t\tdefault: 'verbose',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Fast',\n\t\t\t\t\t\tvalue: 'fast',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Smart',\n\t\t\t\t\t\tvalue: 'smart',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Verbose',\n\t\t\t\t\t\tvalue: 'verbose',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Auto-Cancel After (Seconds)',\n\t\t\t\tname: 'auto_cancel',\n\t\t\t\ttype: 'number',\n\t\t\t\tdefault: 0,\n\t\t\t\tdescription: 'Seconds after which the search job automatically cancels',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Auto-Finalize After (Num Events)',\n\t\t\t\tname: 'auto_finalize_ec',\n\t\t\t\ttype: 'number',\n\t\t\t\tdefault: 0,\n\t\t\t\tdescription: 'Auto-finalize the search after at least this many events are processed',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Auto Pause After (Seconds)',\n\t\t\t\tname: 'auto_pause',\n\t\t\t\ttype: 'number',\n\t\t\t\tdefault: 0,\n\t\t\t\tdescription: 'Seconds of inactivity after which the search job automatically pauses',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Earliest Index',\n\t\t\t\tname: 'index_earliest',\n\t\t\t\ttype: 'dateTime',\n\t\t\t\tdefault: '',\n\t\t\t\tdescription: 'The earliest index time for the search (inclusive)',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Earliest Time',\n\t\t\t\tname: 'earliest_time',\n\t\t\t\ttype: 'dateTime',\n\t\t\t\tdefault: '',\n\t\t\t\tdescription: 'The earliest cut-off for the search (inclusive)',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Exec Mode',\n\t\t\t\tname: 'exec_mode',\n\t\t\t\ttype: 'options',\n\t\t\t\tdefault: 'blocking',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Blocking',\n\t\t\t\t\t\tvalue: 'blocking',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Normal',\n\t\t\t\t\t\tvalue: 'normal',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'One Shot',\n\t\t\t\t\t\tvalue: 'oneshot',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Indexed Real Time Offset',\n\t\t\t\tname: 'indexedRealtimeOffset',\n\t\t\t\ttype: 'number',\n\t\t\t\tdefault: 0,\n\t\t\t\tdescription: 'Seconds of disk sync delay for indexed real-time search',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Latest Index',\n\t\t\t\tname: 'index_latest',\n\t\t\t\ttype: 'dateTime',\n\t\t\t\tdefault: '',\n\t\t\t\tdescription: 'The latest index time for the search (inclusive)',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Latest Time',\n\t\t\t\tname: 'latest_time',\n\t\t\t\ttype: 'dateTime',\n\t\t\t\tdefault: '',\n\t\t\t\tdescription: 'The latest cut-off for the search (inclusive)',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Max Time',\n\t\t\t\tname: 'max_time',\n\t\t\t\ttype: 'number',\n\t\t\t\tdefault: 0,\n\t\t\t\tdescription:\n\t\t\t\t\t'Number of seconds to run this search before finalizing. Enter <code>0</code> to never finalize.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Namespace',\n\t\t\t\tname: 'namespace',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tdescription: 'Application namespace in which to restrict searches',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Reduce Frequency',\n\t\t\t\tname: 'reduce_freq',\n\t\t\t\ttype: 'number',\n\t\t\t\tdefault: 0,\n\t\t\t\tdescription: 'How frequently to run the MapReduce reduce phase on accumulated map values',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Remote Server List',\n\t\t\t\tname: 'remote_server_list',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tdescription:\n\t\t\t\t\t'Comma-separated list of (possibly wildcarded) servers from which raw events should be pulled. This same server list is to be used in subsearches.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Reuse Limit (Seconds)',\n\t\t\t\tname: 'reuse_max_seconds_ago',\n\t\t\t\ttype: 'number',\n\t\t\t\tdefault: 0,\n\t\t\t\tdescription:\n\t\t\t\t\t'Number of seconds ago to check when an identical search is started and return the jobâ€™s search ID instead of starting a new job',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Required Field',\n\t\t\t\tname: 'rf',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tdescription:\n\t\t\t\t\t'Name of a required field to add to the search. Even if not referenced or used directly by the search, a required field is still included in events and summary endpoints.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Search Mode',\n\t\t\t\tname: 'search_mode',\n\t\t\t\ttype: 'options',\n\t\t\t\tdefault: 'normal',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Normal',\n\t\t\t\t\t\tvalue: 'normal',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Real Time',\n\t\t\t\t\t\tvalue: 'realtime',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Status Buckets',\n\t\t\t\tname: 'status_buckets',\n\t\t\t\ttype: 'number',\n\t\t\t\tdefault: 0,\n\t\t\t\tdescription:\n\t\t\t\t\t'The most status buckets to generate. Set <code>0</code> generate no timeline information.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Timeout',\n\t\t\t\tname: 'timeout',\n\t\t\t\ttype: 'number',\n\t\t\t\tdefault: 86400,\n\t\t\t\tdescription: 'Number of seconds to keep this search after processing has stopped',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Workload Pool',\n\t\t\t\tname: 'workload_pool',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tdescription: 'New workload pool where the existing running search should be placed',\n\t\t\t},\n\t\t],\n\t},\n];\n\nconst displayOptions = {\n\tshow: {\n\t\tresource: ['search'],\n\t\toperation: ['create'],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n\nexport async function execute(\n\tthis: IExecuteFunctions,\n\ti: number,\n): Promise<IDataObject | IDataObject[]> {\n\t// https://docs.splunk.com/Documentation/Splunk/8.2.2/RESTREF/RESTsearch#search.2Fjobs\n\n\tconst body = {\n\t\tsearch: this.getNodeParameter('search', i),\n\t} as IDataObject;\n\n\tconst { earliest_time, latest_time, index_earliest, index_latest, ...rest } =\n\t\tthis.getNodeParameter('additionalFields', i) as IDataObject & {\n\t\t\tearliest_time?: string;\n\t\t\tlatest_time?: string;\n\t\t\tindex_earliest?: string;\n\t\t\tindex_latest?: string;\n\t\t};\n\n\tpopulate(\n\t\t{\n\t\t\t...(earliest_time && { earliest_time: toUnixEpoch(earliest_time) }),\n\t\t\t...(latest_time && { latest_time: toUnixEpoch(latest_time) }),\n\t\t\t...(index_earliest && { index_earliest: toUnixEpoch(index_earliest) }),\n\t\t\t...(index_latest && { index_latest: toUnixEpoch(index_latest) }),\n\t\t\t...rest,\n\t\t},\n\t\tbody,\n\t);\n\n\tconst endpoint = '/services/search/jobs';\n\tconst responseData = await splunkApiRequest.call(this, 'POST', endpoint, body);\n\n\tconst getEndpoint = `/services/search/jobs/${responseData.response.sid}`;\n\tconst returnData = await splunkApiJsonRequest.call(this, 'GET', getEndpoint);\n\treturn returnData;\n}\n"],"mappings":"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","names":[]}