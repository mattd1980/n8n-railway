{"version":3,"sources":["../../../../nodes/Transform/Limit/Limit.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes } from 'n8n-workflow';\n\nexport class Limit implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Limit',\n\t\tname: 'limit',\n\t\ticon: 'file:limit.svg',\n\t\tgroup: ['transform'],\n\t\tsubtitle: '',\n\t\tversion: 1,\n\t\tdescription: 'Restrict the number of items',\n\t\tdefaults: {\n\t\t\tname: 'Limit',\n\t\t},\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Max Items',\n\t\t\t\tname: 'maxItems',\n\t\t\t\ttype: 'number',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tminValue: 1,\n\t\t\t\t},\n\t\t\t\tdefault: 1,\n\t\t\t\tdescription: 'If there are more items than this number, some are removed',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Keep',\n\t\t\t\tname: 'keep',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'First Items',\n\t\t\t\t\t\tvalue: 'firstItems',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Last Items',\n\t\t\t\t\t\tvalue: 'lastItems',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'firstItems',\n\t\t\t\tdescription: 'When removing items, whether to keep the ones at the start or the ending',\n\t\t\t},\n\t\t],\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tlet returnData = items;\n\t\tconst maxItems = this.getNodeParameter('maxItems', 0) as number;\n\t\tconst keep = this.getNodeParameter('keep', 0) as string;\n\n\t\tif (maxItems > items.length) {\n\t\t\treturn [returnData];\n\t\t}\n\n\t\tif (keep === 'firstItems') {\n\t\t\treturnData = items.slice(0, maxItems);\n\t\t} else {\n\t\t\treturnData = items.slice(items.length - maxItems, items.length);\n\t\t}\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,0BAAoC;AAE7B,MAAM,MAA2B;AAAA,EAAjC;AACN,uBAAoC;AAAA,MACnC,aAAa;AAAA,MACb,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO,CAAC,WAAW;AAAA,MACnB,UAAU;AAAA,MACV,SAAS;AAAA,MACT,aAAa;AAAA,MACb,UAAU;AAAA,QACT,MAAM;AAAA,MACP;AAAA,MACA,QAAQ,CAAC,wCAAoB,IAAI;AAAA,MACjC,SAAS,CAAC,wCAAoB,IAAI;AAAA,MAClC,YAAY;AAAA,QACX;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,aAAa;AAAA,YACZ,UAAU;AAAA,UACX;AAAA,UACA,SAAS;AAAA,UACT,aAAa;AAAA,QACd;AAAA,QACA;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,SAAS;AAAA,YACR;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,UACD;AAAA,UACA,SAAS;AAAA,UACT,aAAa;AAAA,QACd;AAAA,MACD;AAAA,IACD;AAAA;AAAA,EAEA,MAAM,UAAkE;AACvE,UAAM,QAAQ,KAAK,aAAa;AAChC,QAAI,aAAa;AACjB,UAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AACpD,UAAM,OAAO,KAAK,iBAAiB,QAAQ,CAAC;AAE5C,QAAI,WAAW,MAAM,QAAQ;AAC5B,aAAO,CAAC,UAAU;AAAA,IACnB;AAEA,QAAI,SAAS,cAAc;AAC1B,mBAAa,MAAM,MAAM,GAAG,QAAQ;AAAA,IACrC,OAAO;AACN,mBAAa,MAAM,MAAM,MAAM,SAAS,UAAU,MAAM,MAAM;AAAA,IAC/D;AACA,WAAO,CAAC,UAAU;AAAA,EACnB;AACD;","names":[]}