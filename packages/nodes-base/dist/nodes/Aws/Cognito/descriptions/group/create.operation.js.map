{"version":3,"sources":["../../../../../../nodes/Aws/Cognito/descriptions/group/create.operation.ts"],"sourcesContent":["import type { IExecuteSingleFunctions, IHttpRequestOptions, INodeProperties } from 'n8n-workflow';\nimport { NodeApiError, updateDisplayOptions } from 'n8n-workflow';\n\nimport { validateArn } from '../../helpers/utils';\nimport { userPoolResourceLocator } from '../common.description';\n\nconst properties: INodeProperties[] = [\n\t{\n\t\t...userPoolResourceLocator,\n\t\tdescription: 'Select the user pool to use',\n\t},\n\t{\n\t\tdisplayName: 'Group Name',\n\t\tname: 'newGroupName',\n\t\tdefault: '',\n\t\tplaceholder: 'e.g. MyNewGroup',\n\t\tdescription: 'The name of the new group to create',\n\t\trequired: true,\n\t\ttype: 'string',\n\t\tvalidateType: 'string',\n\t\trouting: {\n\t\t\tsend: {\n\t\t\t\tproperty: 'GroupName',\n\t\t\t\ttype: 'body',\n\t\t\t\tpreSend: [\n\t\t\t\t\tasync function (\n\t\t\t\t\t\tthis: IExecuteSingleFunctions,\n\t\t\t\t\t\trequestOptions: IHttpRequestOptions,\n\t\t\t\t\t): Promise<IHttpRequestOptions> {\n\t\t\t\t\t\tconst newGroupName = this.getNodeParameter('newGroupName', '') as string;\n\t\t\t\t\t\tconst groupNameRegex = /^[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+$/u;\n\t\t\t\t\t\tif (!groupNameRegex.test(newGroupName)) {\n\t\t\t\t\t\t\tthrow new NodeApiError(this.getNode(), {\n\t\t\t\t\t\t\t\tmessage: 'Invalid format for Group Name',\n\t\t\t\t\t\t\t\tdescription: 'Group Name should not contain spaces.',\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn requestOptions;\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tdisplayName: 'Additional Fields',\n\t\tname: 'additionalFields',\n\t\tdefault: {},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Description',\n\t\t\t\tname: 'description',\n\t\t\t\tdefault: '',\n\t\t\t\tplaceholder: 'e.g. New group description',\n\t\t\t\tdescription: 'A description for the new group',\n\t\t\t\ttype: 'string',\n\t\t\t\trouting: {\n\t\t\t\t\tsend: {\n\t\t\t\t\t\ttype: 'body',\n\t\t\t\t\t\tproperty: 'Description',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Precedence',\n\t\t\t\tname: 'precedence',\n\t\t\t\tdefault: '',\n\t\t\t\tplaceholder: 'e.g. 10',\n\t\t\t\tdescription: 'Precedence value for the group. Lower values indicate higher priority.',\n\t\t\t\ttype: 'number',\n\t\t\t\trouting: {\n\t\t\t\t\tsend: {\n\t\t\t\t\t\ttype: 'body',\n\t\t\t\t\t\tproperty: 'Precedence',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tvalidateType: 'number',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Role ARN',\n\t\t\t\tname: 'arn',\n\t\t\t\tdefault: '',\n\t\t\t\tplaceholder: 'e.g. arn:aws:iam::123456789012:role/GroupRole',\n\t\t\t\tdescription: 'The role ARN for the group, used for setting claims in tokens',\n\t\t\t\ttype: 'string',\n\t\t\t\trouting: {\n\t\t\t\t\tsend: {\n\t\t\t\t\t\ttype: 'body',\n\t\t\t\t\t\tproperty: 'Arn',\n\t\t\t\t\t\tpreSend: [validateArn],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tplaceholder: 'Add Option',\n\t\ttype: 'collection',\n\t},\n];\n\nconst displayOptions = {\n\tshow: {\n\t\tresource: ['group'],\n\t\toperation: ['create'],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,0BAAmD;AAEnD,mBAA4B;AAC5B,oBAAwC;AAExC,MAAM,aAAgC;AAAA,EACrC;AAAA,IACC,GAAG;AAAA,IACH,aAAa;AAAA,EACd;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,IACb,aAAa;AAAA,IACb,UAAU;AAAA,IACV,MAAM;AAAA,IACN,cAAc;AAAA,IACd,SAAS;AAAA,MACR,MAAM;AAAA,QACL,UAAU;AAAA,QACV,MAAM;AAAA,QACN,SAAS;AAAA,UACR,eAEC,gBAC+B;AAC/B,kBAAM,eAAe,KAAK,iBAAiB,gBAAgB,EAAE;AAC7D,kBAAM,iBAAiB;AACvB,gBAAI,CAAC,eAAe,KAAK,YAAY,GAAG;AACvC,oBAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG;AAAA,gBACtC,SAAS;AAAA,gBACT,aAAa;AAAA,cACd,CAAC;AAAA,YACF;AACA,mBAAO;AAAA,UACR;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,IACV,SAAS;AAAA,MACR;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aAAa;AAAA,QACb,aAAa;AAAA,QACb,MAAM;AAAA,QACN,SAAS;AAAA,UACR,MAAM;AAAA,YACL,MAAM;AAAA,YACN,UAAU;AAAA,UACX;AAAA,QACD;AAAA,MACD;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aAAa;AAAA,QACb,aAAa;AAAA,QACb,MAAM;AAAA,QACN,SAAS;AAAA,UACR,MAAM;AAAA,YACL,MAAM;AAAA,YACN,UAAU;AAAA,UACX;AAAA,QACD;AAAA,QACA,cAAc;AAAA,MACf;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aAAa;AAAA,QACb,aAAa;AAAA,QACb,MAAM;AAAA,QACN,SAAS;AAAA,UACR,MAAM;AAAA,YACL,MAAM;AAAA,YACN,UAAU;AAAA,YACV,SAAS,CAAC,wBAAW;AAAA,UACtB;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,IACA,aAAa;AAAA,IACb,MAAM;AAAA,EACP;AACD;AAEA,MAAM,iBAAiB;AAAA,EACtB,MAAM;AAAA,IACL,UAAU,CAAC,OAAO;AAAA,IAClB,WAAW,CAAC,QAAQ;AAAA,EACrB;AACD;AAEO,MAAM,kBAAc,0CAAqB,gBAAgB,UAAU;","names":[]}