{"version":3,"sources":["../../../nodes/Aws/AwsSnsTrigger.node.ts"],"sourcesContent":["import get from 'lodash/get';\nimport type {\n\tIHookFunctions,\n\tIWebhookFunctions,\n\tILoadOptionsFunctions,\n\tINodeListSearchItems,\n\tINodeListSearchResult,\n\tINodeType,\n\tINodeTypeDescription,\n\tIWebhookResponseData,\n} from 'n8n-workflow';\nimport { jsonParse, NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport { awsApiRequestSOAP } from './GenericFunctions';\n\nexport class AwsSnsTrigger implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'AWS SNS Trigger',\n\t\tsubtitle: '={{$parameter[\"topic\"].split(\\':\\')[5]}}',\n\t\tname: 'awsSnsTrigger',\n\t\ticon: 'file:sns.svg',\n\t\tgroup: ['trigger'],\n\t\tversion: 1,\n\t\tdescription: 'Handle AWS SNS events via webhooks',\n\t\tdefaults: {\n\t\t\tname: 'AWS SNS Trigger',\n\t\t},\n\t\tinputs: [],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'aws',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\twebhooks: [\n\t\t\t{\n\t\t\t\tname: 'default',\n\t\t\t\thttpMethod: 'POST',\n\t\t\t\tresponseMode: 'onReceived',\n\t\t\t\tpath: 'webhook',\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Topic',\n\t\t\t\tname: 'topic',\n\t\t\t\ttype: 'resourceLocator',\n\t\t\t\tdefault: { mode: 'list', value: '' },\n\t\t\t\trequired: true,\n\t\t\t\tmodes: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'From List',\n\t\t\t\t\t\tname: 'list',\n\t\t\t\t\t\ttype: 'list',\n\t\t\t\t\t\tplaceholder: 'Select a topic...',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tsearchListMethod: 'listTopics',\n\t\t\t\t\t\t\tsearchable: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'By URL',\n\t\t\t\t\t\tname: 'url',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tplaceholder:\n\t\t\t\t\t\t\t'https://us-east-1.console.aws.amazon.com/sns/v3/home?region=us-east-1#/topic/arn:aws:sns:us-east-1:777777777777:your_topic',\n\t\t\t\t\t\tvalidation: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'regex',\n\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\tregex:\n\t\t\t\t\t\t\t\t\t\t'https:\\\\/\\\\/[0-9a-zA-Z\\\\-_]+\\\\.console\\\\.aws\\\\.amazon\\\\.com\\\\/sns\\\\/v3\\\\/home\\\\?region\\\\=[0-9a-zA-Z\\\\-_]+\\\\#\\\\/topic\\\\/arn:aws:sns:[0-9a-zA-Z\\\\-_]+:[0-9]+:[0-9a-zA-Z\\\\-_]+(?:\\\\/.*|)',\n\t\t\t\t\t\t\t\t\terrorMessage: 'Not a valid AWS SNS Topic URL',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\textractValue: {\n\t\t\t\t\t\t\ttype: 'regex',\n\t\t\t\t\t\t\tregex:\n\t\t\t\t\t\t\t\t'https:\\\\/\\\\/[0-9a-zA-Z\\\\-_]+\\\\.console\\\\.aws\\\\.amazon\\\\.com\\\\/sns\\\\/v3\\\\/home\\\\?region\\\\=[0-9a-zA-Z\\\\-_]+\\\\#\\\\/topic\\\\/(arn:aws:sns:[0-9a-zA-Z\\\\-_]+:[0-9]+:[0-9a-zA-Z\\\\-_]+)(?:\\\\/.*|)',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'ID',\n\t\t\t\t\t\tname: 'id',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tvalidation: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'regex',\n\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\tregex: 'arn:aws:sns:[0-9a-zA-Z\\\\-_]+:[0-9]+:[0-9a-zA-Z\\\\-_]+',\n\t\t\t\t\t\t\t\t\terrorMessage: 'Not a valid AWS SNS Topic ARN',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tplaceholder: 'arn:aws:sns:your-aws-region:777777777777:your_topic',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t};\n\n\tmethods = {\n\t\tlistSearch: {\n\t\t\tasync listTopics(\n\t\t\t\tthis: ILoadOptionsFunctions,\n\t\t\t\tfilter?: string,\n\t\t\t\tpaginationToken?: string,\n\t\t\t): Promise<INodeListSearchResult> {\n\t\t\t\tconst returnData: INodeListSearchItems[] = [];\n\t\t\t\tconst params = paginationToken ? `NextToken=${encodeURIComponent(paginationToken)}` : '';\n\n\t\t\t\tconst data = await awsApiRequestSOAP.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'sns',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/?Action=ListTopics&' + params,\n\t\t\t\t);\n\n\t\t\t\tlet topics = data.ListTopicsResponse.ListTopicsResult.Topics.member;\n\t\t\t\tconst nextToken = data.ListTopicsResponse.ListTopicsResult.NextToken;\n\n\t\t\t\tif (nextToken) {\n\t\t\t\t\tpaginationToken = nextToken as string;\n\t\t\t\t} else {\n\t\t\t\t\tpaginationToken = undefined;\n\t\t\t\t}\n\n\t\t\t\tif (!Array.isArray(topics)) {\n\t\t\t\t\ttopics = [topics];\n\t\t\t\t}\n\n\t\t\t\tfor (const topic of topics) {\n\t\t\t\t\tconst topicArn = topic.TopicArn as string;\n\t\t\t\t\tconst arnParsed = topicArn.split(':');\n\t\t\t\t\tconst topicName = arnParsed[5];\n\t\t\t\t\tconst awsRegion = arnParsed[3];\n\n\t\t\t\t\tif (filter && !topicName.includes(filter)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: topicName,\n\t\t\t\t\t\tvalue: topicArn,\n\t\t\t\t\t\turl: `https://${awsRegion}.console.aws.amazon.com/sns/v3/home?region=${awsRegion}#/topic/${topicArn}`,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn { results: returnData, paginationToken };\n\t\t\t},\n\t\t},\n\t};\n\n\twebhookMethods = {\n\t\tdefault: {\n\t\t\tasync checkExists(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tconst topic = this.getNodeParameter('topic', undefined, {\n\t\t\t\t\textractValue: true,\n\t\t\t\t}) as string;\n\n\t\t\t\tif (webhookData.webhookId === undefined) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tconst params = [`TopicArn=${topic}`, 'Version=2010-03-31'];\n\t\t\t\tconst data = await awsApiRequestSOAP.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'sns',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/?Action=ListSubscriptionsByTopic&' + params.join('&'),\n\t\t\t\t);\n\t\t\t\tconst subscriptions = get(\n\t\t\t\t\tdata,\n\t\t\t\t\t'ListSubscriptionsByTopicResponse.ListSubscriptionsByTopicResult.Subscriptions',\n\t\t\t\t);\n\t\t\t\tif (!subscriptions?.member) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tlet subscriptionMembers = subscriptions.member;\n\n\t\t\t\tif (!Array.isArray(subscriptionMembers)) {\n\t\t\t\t\tsubscriptionMembers = [subscriptionMembers];\n\t\t\t\t}\n\n\t\t\t\tfor (const subscription of subscriptionMembers) {\n\t\t\t\t\tif (webhookData.webhookId === subscription.SubscriptionArn) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tasync create(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tconst webhookUrl = this.getNodeWebhookUrl('default') as string;\n\t\t\t\tconst topic = this.getNodeParameter('topic', undefined, {\n\t\t\t\t\textractValue: true,\n\t\t\t\t}) as string;\n\n\t\t\t\tif (webhookUrl.includes('%20')) {\n\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t'The name of the SNS Trigger Node is not allowed to contain any spaces!',\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst params = [\n\t\t\t\t\t`TopicArn=${topic}`,\n\t\t\t\t\t`Endpoint=${webhookUrl}`,\n\t\t\t\t\t`Protocol=${webhookUrl?.split(':')[0]}`,\n\t\t\t\t\t'ReturnSubscriptionArn=true',\n\t\t\t\t\t'Version=2010-03-31',\n\t\t\t\t];\n\n\t\t\t\tconst { SubscribeResponse } = await awsApiRequestSOAP.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'sns',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/?Action=Subscribe&' + params.join('&'),\n\t\t\t\t);\n\t\t\t\twebhookData.webhookId = SubscribeResponse.SubscribeResult.SubscriptionArn;\n\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tasync delete(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tconst params = [`SubscriptionArn=${webhookData.webhookId}`, 'Version=2010-03-31'];\n\t\t\t\ttry {\n\t\t\t\t\tawait awsApiRequestSOAP.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t'sns',\n\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t'/?Action=Unsubscribe&' + params.join('&'),\n\t\t\t\t\t);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tdelete webhookData.webhookId;\n\t\t\t\treturn true;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync webhook(this: IWebhookFunctions): Promise<IWebhookResponseData> {\n\t\tconst req = this.getRequestObject();\n\t\tconst topic = this.getNodeParameter('topic', undefined, {\n\t\t\textractValue: true,\n\t\t}) as string;\n\n\t\tconst body = jsonParse<{ Type: string; TopicArn: string; Token: string }>(\n\t\t\treq.rawBody.toString(),\n\t\t);\n\n\t\tif (body.Type === 'SubscriptionConfirmation' && body.TopicArn === topic) {\n\t\t\tconst { Token } = body;\n\t\t\tconst params = [`TopicArn=${topic}`, `Token=${Token}`, 'Version=2010-03-31'];\n\t\t\tawait awsApiRequestSOAP.call(\n\t\t\t\tthis,\n\t\t\t\t'sns',\n\t\t\t\t'GET',\n\t\t\t\t'/?Action=ConfirmSubscription&' + params.join('&'),\n\t\t\t);\n\n\t\t\treturn {\n\t\t\t\tnoWebhookResponse: true,\n\t\t\t};\n\t\t}\n\n\t\tif (body.Type === 'UnsubscribeConfirmation') {\n\t\t\treturn {};\n\t\t}\n\n\t\t//TODO verify message signature\n\t\treturn {\n\t\t\tworkflowData: [this.helpers.returnJsonArray(body)],\n\t\t};\n\t}\n}\n"],"mappings":"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","names":["get"]}