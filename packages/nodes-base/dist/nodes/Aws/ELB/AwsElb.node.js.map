{"version":3,"sources":["../../../../nodes/Aws/ELB/AwsElb.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n\tJsonObject,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes } from 'n8n-workflow';\n\nimport { awsApiRequestSOAP, awsApiRequestSOAPAllItems } from './GenericFunctions';\nimport {\n\tlistenerCertificateFields,\n\tlistenerCertificateOperations,\n} from './ListenerCertificateDescription';\nimport { loadBalancerFields, loadBalancerOperations } from './LoadBalancerDescription';\n\nexport class AwsElb implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'AWS ELB',\n\t\tname: 'awsElb',\n\t\ticon: 'file:elb.svg',\n\t\tgroup: ['output'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Sends data to AWS ELB API',\n\t\tdefaults: {\n\t\t\tname: 'AWS ELB',\n\t\t},\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'aws',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Listener Certificate',\n\t\t\t\t\t\tvalue: 'listenerCertificate',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Load Balancer',\n\t\t\t\t\t\tvalue: 'loadBalancer',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'loadBalancer',\n\t\t\t},\n\t\t\t...loadBalancerOperations,\n\t\t\t...loadBalancerFields,\n\n\t\t\t...listenerCertificateOperations,\n\t\t\t...listenerCertificateFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\tasync getLoadBalancers(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\n\t\t\t\tconst params = ['Version=2015-12-01'];\n\n\t\t\t\tconst data = await awsApiRequestSOAP.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'elasticloadbalancing',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/?Action=DescribeLoadBalancers&' + params.join('&'),\n\t\t\t\t);\n\n\t\t\t\tlet loadBalancers =\n\t\t\t\t\tdata.DescribeLoadBalancersResponse.DescribeLoadBalancersResult.LoadBalancers.member;\n\n\t\t\t\tif (!Array.isArray(loadBalancers)) {\n\t\t\t\t\tloadBalancers = [loadBalancers];\n\t\t\t\t}\n\n\t\t\t\tfor (const loadBalancer of loadBalancers) {\n\t\t\t\t\tconst loadBalancerArn = loadBalancer.LoadBalancerArn as string;\n\n\t\t\t\t\tconst loadBalancerName = loadBalancer.LoadBalancerName as string;\n\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: loadBalancerName,\n\t\t\t\t\t\tvalue: loadBalancerArn,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn returnData;\n\t\t\t},\n\n\t\t\tasync getLoadBalancerListeners(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\n\t\t\t\tconst loadBalancerId = this.getCurrentNodeParameter('loadBalancerId') as string;\n\n\t\t\t\tconst params = ['Version=2015-12-01', 'LoadBalancerArn=' + loadBalancerId];\n\n\t\t\t\tconst data = await awsApiRequestSOAP.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'elasticloadbalancing',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/?Action=DescribeListeners&' + params.join('&'),\n\t\t\t\t);\n\n\t\t\t\tlet listeners = data.DescribeListenersResponse.DescribeListenersResult.Listeners.member;\n\n\t\t\t\tif (!Array.isArray(listeners)) {\n\t\t\t\t\tlisteners = [listeners];\n\t\t\t\t}\n\n\t\t\t\tfor (const listener of listeners) {\n\t\t\t\t\tconst listenerArn = listener.ListenerArn as string;\n\n\t\t\t\t\tconst listenerName = listener.ListenerArn as string;\n\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: listenerArn,\n\t\t\t\t\t\tvalue: listenerName,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn returnData;\n\t\t\t},\n\n\t\t\tasync getSecurityGroups(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\n\t\t\t\tconst body = ['Version=2016-11-15', 'Action=DescribeSecurityGroups'].join('&');\n\n\t\t\t\tconst data = await awsApiRequestSOAP.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'ec2',\n\t\t\t\t\t'POST',\n\t\t\t\t\t'/',\n\t\t\t\t\tbody,\n\t\t\t\t\t{},\n\t\t\t\t\t{\n\t\t\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t\t\t\t\tcharset: 'utf-8',\n\t\t\t\t\t\t'User-Agent': 'aws-cli/1.18.124',\n\t\t\t\t\t},\n\t\t\t\t);\n\n\t\t\t\tlet securityGroups = data.DescribeSecurityGroupsResponse.securityGroupInfo.item;\n\n\t\t\t\tif (!Array.isArray(securityGroups)) {\n\t\t\t\t\tsecurityGroups = [securityGroups];\n\t\t\t\t}\n\n\t\t\t\tfor (const securityGroup of securityGroups) {\n\t\t\t\t\tconst securityGroupId = securityGroup.groupId as string;\n\n\t\t\t\t\tconst securityGroupName = securityGroup.groupName as string;\n\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: securityGroupName,\n\t\t\t\t\t\tvalue: securityGroupId,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn returnData;\n\t\t\t},\n\n\t\t\tasync getSubnets(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\n\t\t\t\tconst body = ['Version=2016-11-15', 'Action=DescribeSubnets'].join('&');\n\n\t\t\t\tconst data = await awsApiRequestSOAP.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'ec2',\n\t\t\t\t\t'POST',\n\t\t\t\t\t'/',\n\t\t\t\t\tbody,\n\t\t\t\t\t{},\n\t\t\t\t\t{\n\t\t\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t\t\t\t\tcharset: 'utf-8',\n\t\t\t\t\t\t'User-Agent': 'aws-cli/1.18.124',\n\t\t\t\t\t},\n\t\t\t\t);\n\n\t\t\t\tlet subnets = data.DescribeSubnetsResponse.subnetSet.item;\n\n\t\t\t\tif (!Array.isArray(subnets)) {\n\t\t\t\t\tsubnets = [subnets];\n\t\t\t\t}\n\n\t\t\t\tfor (const subnet of subnets) {\n\t\t\t\t\tconst subnetId = subnet.subnetId as string;\n\n\t\t\t\t\tconst subnetName = subnet.subnetId as string;\n\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: subnetName,\n\t\t\t\t\t\tvalue: subnetId,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: IDataObject[] = [];\n\t\tlet responseData;\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'listenerCertificate') {\n\t\t\t\t\t//https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_AddListenerCertificates.html\n\t\t\t\t\tif (operation === 'add') {\n\t\t\t\t\t\tconst params = ['Version=2015-12-01'];\n\n\t\t\t\t\t\tparams.push(\n\t\t\t\t\t\t\t'Certificates.member.1.CertificateArn=' +\n\t\t\t\t\t\t\t\t(this.getNodeParameter('certificateId', i) as string),\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tparams.push('ListenerArn=' + (this.getNodeParameter('listenerId', i) as string));\n\n\t\t\t\t\t\tresponseData = await awsApiRequestSOAP.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'elasticloadbalancing',\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t'/?Action=AddListenerCertificates&' + params.join('&'),\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData =\n\t\t\t\t\t\t\tresponseData.AddListenerCertificatesResponse.AddListenerCertificatesResult\n\t\t\t\t\t\t\t\t.Certificates.member;\n\t\t\t\t\t}\n\n\t\t\t\t\t//https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeListenerCertificates.html\n\t\t\t\t\tif (operation === 'getMany') {\n\t\t\t\t\t\tconst params = ['Version=2015-12-01'];\n\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', 0);\n\n\t\t\t\t\t\tconst listenerId = this.getNodeParameter('listenerId', i) as string;\n\n\t\t\t\t\t\tparams.push(`ListenerArn=${listenerId}`);\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await awsApiRequestSOAPAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'DescribeListenerCertificatesResponse.DescribeListenerCertificatesResult.Certificates.member',\n\t\t\t\t\t\t\t\t'elasticloadbalancing',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/?Action=DescribeListenerCertificates&' + params.join('&'),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tparams.push('PageSize=' + (this.getNodeParameter('limit', 0) as unknown as string));\n\n\t\t\t\t\t\t\tresponseData = await awsApiRequestSOAP.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'elasticloadbalancing',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/?Action=DescribeListenerCertificates&' + params.join('&'),\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tresponseData =\n\t\t\t\t\t\t\t\tresponseData.DescribeListenerCertificatesResponse.DescribeListenerCertificatesResult\n\t\t\t\t\t\t\t\t\t.Certificates.member;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t//https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_RemoveListenerCertificates.html\n\t\t\t\t\tif (operation === 'remove') {\n\t\t\t\t\t\tconst params = ['Version=2015-12-01'];\n\n\t\t\t\t\t\tparams.push(\n\t\t\t\t\t\t\t'Certificates.member.1.CertificateArn=' +\n\t\t\t\t\t\t\t\t(this.getNodeParameter('certificateId', i) as string),\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tparams.push('ListenerArn=' + (this.getNodeParameter('listenerId', i) as string));\n\n\t\t\t\t\t\tresponseData = await awsApiRequestSOAP.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'elasticloadbalancing',\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t'/?Action=RemoveListenerCertificates&' + params.join('&'),\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData = { sucess: true };\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (resource === 'loadBalancer') {\n\t\t\t\t\t//https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_CreateLoadBalancer.html\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst ipAddressType = this.getNodeParameter('ipAddressType', i) as string;\n\n\t\t\t\t\t\tconst name = this.getNodeParameter('name', i) as string;\n\n\t\t\t\t\t\tconst schema = this.getNodeParameter('schema', i) as string;\n\n\t\t\t\t\t\tconst type = this.getNodeParameter('type', i) as string;\n\n\t\t\t\t\t\tconst subnets = this.getNodeParameter('subnets', i) as string[];\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tconst params = ['Version=2015-12-01'];\n\n\t\t\t\t\t\tparams.push(`IpAddressType=${ipAddressType}`);\n\n\t\t\t\t\t\tparams.push(`Name=${name}`);\n\n\t\t\t\t\t\tparams.push(`Scheme=${schema}`);\n\n\t\t\t\t\t\tparams.push(`Type=${type}`);\n\n\t\t\t\t\t\tfor (let index = 1; index <= subnets.length; index++) {\n\t\t\t\t\t\t\tparams.push(`Subnets.member.${index}=${subnets[index - 1]}`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.securityGroups) {\n\t\t\t\t\t\t\tconst securityGroups = additionalFields.securityGroups as string[];\n\n\t\t\t\t\t\t\tfor (let index = 1; index <= securityGroups.length; index++) {\n\t\t\t\t\t\t\t\tparams.push(`SecurityGroups.member.${index}=${securityGroups[index - 1]}`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.tagsUi) {\n\t\t\t\t\t\t\tconst tags = (additionalFields.tagsUi as IDataObject).tagValues as IDataObject[];\n\n\t\t\t\t\t\t\tif (tags) {\n\t\t\t\t\t\t\t\tfor (let index = 1; index <= tags.length; index++) {\n\t\t\t\t\t\t\t\t\tparams.push(`Tags.member.${index}.Key=${tags[index - 1].key}`);\n\n\t\t\t\t\t\t\t\t\tparams.push(`Tags.member.${index}.Value=${tags[index - 1].value}`);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await awsApiRequestSOAP.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'elasticloadbalancing',\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t'/?Action=CreateLoadBalancer&' + params.join('&'),\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData =\n\t\t\t\t\t\t\tresponseData.CreateLoadBalancerResponse.CreateLoadBalancerResult.LoadBalancers.member;\n\t\t\t\t\t}\n\n\t\t\t\t\t//https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DeleteLoadBalancer.html\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst params = ['Version=2015-12-01'];\n\n\t\t\t\t\t\tparams.push(\n\t\t\t\t\t\t\t'LoadBalancerArn=' + (this.getNodeParameter('loadBalancerId', i) as string),\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData = await awsApiRequestSOAP.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'elasticloadbalancing',\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t'/?Action=DeleteLoadBalancer&' + params.join('&'),\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\n\t\t\t\t\t//https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeLoadBalancers.html\n\t\t\t\t\tif (operation === 'getMany') {\n\t\t\t\t\t\tconst params = ['Version=2015-12-01'];\n\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', 0);\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\n\t\t\t\t\t\t\tif (filters.names) {\n\t\t\t\t\t\t\t\tconst names = (filters.names as string).split(',');\n\n\t\t\t\t\t\t\t\tfor (let index = 1; index <= names.length; index++) {\n\t\t\t\t\t\t\t\t\tparams.push(`Names.member.${index}=${names[index - 1]}`);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tresponseData = await awsApiRequestSOAPAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'DescribeLoadBalancersResponse.DescribeLoadBalancersResult.LoadBalancers.member',\n\t\t\t\t\t\t\t\t'elasticloadbalancing',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/?Action=DescribeLoadBalancers&' + params.join('&'),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tparams.push('PageSize=' + this.getNodeParameter('limit', 0).toString());\n\n\t\t\t\t\t\t\tresponseData = await awsApiRequestSOAP.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'elasticloadbalancing',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/?Action=DescribeLoadBalancers&' + params.join('&'),\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tresponseData =\n\t\t\t\t\t\t\t\tresponseData.DescribeLoadBalancersResponse.DescribeLoadBalancersResult.LoadBalancers\n\t\t\t\t\t\t\t\t\t.member;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t//https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeLoadBalancers.html\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst params = ['Version=2015-12-01'];\n\n\t\t\t\t\t\tparams.push(\n\t\t\t\t\t\t\t'LoadBalancerArns.member.1=' + (this.getNodeParameter('loadBalancerId', i) as string),\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData = await awsApiRequestSOAP.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'elasticloadbalancing',\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t'/?Action=DescribeLoadBalancers&' + params.join('&'),\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData =\n\t\t\t\t\t\t\tresponseData.DescribeLoadBalancersResponse.DescribeLoadBalancersResult.LoadBalancers\n\t\t\t\t\t\t\t\t.member;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturnData.push(\n\t\t\t\t\t...this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\titemData: { item: i },\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\treturnData.push({ error: (error as JsonObject).toString() });\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn [returnData as INodeExecutionData[]];\n\t}\n}\n"],"mappings":"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","names":[]}