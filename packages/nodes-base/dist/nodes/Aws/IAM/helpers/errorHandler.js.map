{"version":3,"sources":["../../../../../nodes/Aws/IAM/helpers/errorHandler.ts"],"sourcesContent":["import type {\n\tJsonObject,\n\tIDataObject,\n\tIExecuteSingleFunctions,\n\tIN8nHttpFullResponse,\n\tINodeExecutionData,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\nimport { ERROR_DESCRIPTIONS } from './constants';\nimport type { AwsError, ErrorMessage } from './types';\n\nfunction mapErrorToResponse(errorCode: string, errorMessage: string): ErrorMessage | undefined {\n\tconst isUser = /user/i.test(errorMessage);\n\tconst isGroup = /group/i.test(errorMessage);\n\n\tswitch (errorCode) {\n\t\tcase 'EntityAlreadyExists':\n\t\t\tif (isUser) {\n\t\t\t\treturn {\n\t\t\t\t\tmessage: errorMessage,\n\t\t\t\t\tdescription: ERROR_DESCRIPTIONS.EntityAlreadyExists.User,\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (isGroup) {\n\t\t\t\treturn {\n\t\t\t\t\tmessage: errorMessage,\n\t\t\t\t\tdescription: ERROR_DESCRIPTIONS.EntityAlreadyExists.Group,\n\t\t\t\t};\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'NoSuchEntity':\n\t\t\tif (isUser) {\n\t\t\t\treturn {\n\t\t\t\t\tmessage: errorMessage,\n\t\t\t\t\tdescription: ERROR_DESCRIPTIONS.NoSuchEntity.User,\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (isGroup) {\n\t\t\t\treturn {\n\t\t\t\t\tmessage: errorMessage,\n\t\t\t\t\tdescription: ERROR_DESCRIPTIONS.NoSuchEntity.Group,\n\t\t\t\t};\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'DeleteConflict':\n\t\t\treturn {\n\t\t\t\tmessage: errorMessage,\n\t\t\t\tdescription: ERROR_DESCRIPTIONS.DeleteConflict.Default,\n\t\t\t};\n\t}\n\n\treturn undefined;\n}\n\nexport async function handleError(\n\tthis: IExecuteSingleFunctions,\n\tdata: INodeExecutionData[],\n\tresponse: IN8nHttpFullResponse,\n): Promise<INodeExecutionData[]> {\n\tconst statusCode = String(response.statusCode);\n\n\tif (!statusCode.startsWith('4') && !statusCode.startsWith('5')) {\n\t\treturn data;\n\t}\n\n\tconst responseBody = response.body as IDataObject;\n\tconst error = responseBody.Error as AwsError;\n\n\tif (!error) {\n\t\tthrow new NodeApiError(this.getNode(), response as unknown as JsonObject);\n\t}\n\n\tconst specificError = mapErrorToResponse(error.Code, error.Message);\n\n\tif (specificError) {\n\t\tthrow new NodeApiError(this.getNode(), response as unknown as JsonObject, specificError);\n\t} else {\n\t\tthrow new NodeApiError(this.getNode(), response as unknown as JsonObject, {\n\t\t\tmessage: error.Code,\n\t\t\tdescription: error.Message,\n\t\t});\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,0BAA6B;AAE7B,uBAAmC;AAGnC,SAAS,mBAAmB,WAAmB,cAAgD;AAC9F,QAAM,SAAS,QAAQ,KAAK,YAAY;AACxC,QAAM,UAAU,SAAS,KAAK,YAAY;AAE1C,UAAQ,WAAW;AAAA,IAClB,KAAK;AACJ,UAAI,QAAQ;AACX,eAAO;AAAA,UACN,SAAS;AAAA,UACT,aAAa,oCAAmB,oBAAoB;AAAA,QACrD;AAAA,MACD;AACA,UAAI,SAAS;AACZ,eAAO;AAAA,UACN,SAAS;AAAA,UACT,aAAa,oCAAmB,oBAAoB;AAAA,QACrD;AAAA,MACD;AACA;AAAA,IAED,KAAK;AACJ,UAAI,QAAQ;AACX,eAAO;AAAA,UACN,SAAS;AAAA,UACT,aAAa,oCAAmB,aAAa;AAAA,QAC9C;AAAA,MACD;AACA,UAAI,SAAS;AACZ,eAAO;AAAA,UACN,SAAS;AAAA,UACT,aAAa,oCAAmB,aAAa;AAAA,QAC9C;AAAA,MACD;AACA;AAAA,IAED,KAAK;AACJ,aAAO;AAAA,QACN,SAAS;AAAA,QACT,aAAa,oCAAmB,eAAe;AAAA,MAChD;AAAA,EACF;AAEA,SAAO;AACR;AAEA,eAAsB,YAErB,MACA,UACgC;AAChC,QAAM,aAAa,OAAO,SAAS,UAAU;AAE7C,MAAI,CAAC,WAAW,WAAW,GAAG,KAAK,CAAC,WAAW,WAAW,GAAG,GAAG;AAC/D,WAAO;AAAA,EACR;AAEA,QAAM,eAAe,SAAS;AAC9B,QAAM,QAAQ,aAAa;AAE3B,MAAI,CAAC,OAAO;AACX,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,QAAiC;AAAA,EACzE;AAEA,QAAM,gBAAgB,mBAAmB,MAAM,MAAM,MAAM,OAAO;AAElE,MAAI,eAAe;AAClB,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,UAAmC,aAAa;AAAA,EACxF,OAAO;AACN,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,UAAmC;AAAA,MACzE,SAAS,MAAM;AAAA,MACf,aAAa,MAAM;AAAA,IACpB,CAAC;AAAA,EACF;AACD;","names":[]}