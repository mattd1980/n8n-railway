{"version":3,"sources":["../../../../../../nodes/Aws/IAM/descriptions/group/Group.resource.ts"],"sourcesContent":["import type { INodeProperties } from 'n8n-workflow';\n\nimport * as create from './create.operation';\nimport * as del from './delete.operation';\nimport * as get from './get.operation';\nimport * as getAll from './getAll.operation';\nimport * as update from './update.operation';\nimport { CURRENT_VERSION } from '../../helpers/constants';\nimport { handleError } from '../../helpers/errorHandler';\nimport {\n\tdeleteGroupMembers,\n\tsimplifyGetAllGroupsResponse,\n\tsimplifyGetGroupsResponse,\n} from '../../helpers/utils';\n\nexport const description: INodeProperties[] = [\n\t{\n\t\tdisplayName: 'Operation',\n\t\tname: 'operation',\n\t\ttype: 'options',\n\t\tnoDataExpression: true,\n\t\tdefault: 'getAll',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['group'],\n\t\t\t},\n\t\t},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tname: 'Create',\n\t\t\t\tvalue: 'create',\n\t\t\t\taction: 'Create group',\n\t\t\t\tdescription: 'Create a new group',\n\t\t\t\trouting: {\n\t\t\t\t\trequest: {\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\turl: '',\n\t\t\t\t\t\tbody: {\n\t\t\t\t\t\t\tAction: 'CreateGroup',\n\t\t\t\t\t\t\tVersion: CURRENT_VERSION,\n\t\t\t\t\t\t\tGroupName: '={{ $parameter[\"groupName\"] }}',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tignoreHttpStatusErrors: true,\n\t\t\t\t\t},\n\t\t\t\t\toutput: {\n\t\t\t\t\t\tpostReceive: [handleError],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Delete',\n\t\t\t\tvalue: 'delete',\n\t\t\t\taction: 'Delete group',\n\t\t\t\tdescription: 'Delete an existing group',\n\t\t\t\trouting: {\n\t\t\t\t\tsend: {\n\t\t\t\t\t\tpreSend: [deleteGroupMembers],\n\t\t\t\t\t},\n\t\t\t\t\trequest: {\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\turl: '',\n\t\t\t\t\t\tbody: {\n\t\t\t\t\t\t\tAction: 'DeleteGroup',\n\t\t\t\t\t\t\tVersion: CURRENT_VERSION,\n\t\t\t\t\t\t\tGroupName: '={{ $parameter[\"group\"] }}',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tignoreHttpStatusErrors: true,\n\t\t\t\t\t},\n\t\t\t\t\toutput: {\n\t\t\t\t\t\tpostReceive: [handleError],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Get',\n\t\t\t\tvalue: 'get',\n\t\t\t\taction: 'Get group',\n\t\t\t\tdescription: 'Retrieve details of an existing group',\n\t\t\t\trouting: {\n\t\t\t\t\trequest: {\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\turl: '',\n\t\t\t\t\t\tbody: {\n\t\t\t\t\t\t\tAction: 'GetGroup',\n\t\t\t\t\t\t\tVersion: CURRENT_VERSION,\n\t\t\t\t\t\t\tGroupName: '={{ $parameter[\"group\"] }}',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tignoreHttpStatusErrors: true,\n\t\t\t\t\t},\n\t\t\t\t\toutput: {\n\t\t\t\t\t\tpostReceive: [handleError, simplifyGetGroupsResponse],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Get Many',\n\t\t\t\tvalue: 'getAll',\n\t\t\t\taction: 'Get many groups',\n\t\t\t\tdescription: 'Retrieve a list of groups',\n\t\t\t\trouting: {\n\t\t\t\t\trequest: {\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\turl: '',\n\t\t\t\t\t\tbody: {\n\t\t\t\t\t\t\tAction: 'ListGroups',\n\t\t\t\t\t\t\tVersion: CURRENT_VERSION,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tignoreHttpStatusErrors: true,\n\t\t\t\t\t},\n\t\t\t\t\toutput: {\n\t\t\t\t\t\tpostReceive: [handleError, simplifyGetAllGroupsResponse],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Update',\n\t\t\t\tvalue: 'update',\n\t\t\t\taction: 'Update group',\n\t\t\t\tdescription: 'Update an existing group',\n\t\t\t\trouting: {\n\t\t\t\t\trequest: {\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\turl: '',\n\t\t\t\t\t\tbody: {\n\t\t\t\t\t\t\tAction: 'UpdateGroup',\n\t\t\t\t\t\t\tVersion: CURRENT_VERSION,\n\t\t\t\t\t\t\tGroupName: '={{ $parameter[\"group\"] }}',\n\t\t\t\t\t\t\tNewGroupName: '={{ $parameter[\"groupName\"] }}',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tignoreHttpStatusErrors: true,\n\t\t\t\t\t},\n\t\t\t\t\toutput: {\n\t\t\t\t\t\tpostReceive: [handleError],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n\n\t...create.description,\n\t...del.description,\n\t...get.description,\n\t...getAll.description,\n\t...update.description,\n];\n"],"mappings":"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","names":[]}