{"version":3,"sources":["../../../nodes/KoBoToolbox/KoBoToolboxTrigger.node.ts"],"sourcesContent":["import {\n\tNodeConnectionTypes,\n\ttype IDataObject,\n\ttype IHookFunctions,\n\ttype INodeType,\n\ttype INodeTypeDescription,\n\ttype IWebhookFunctions,\n\ttype IWebhookResponseData,\n} from 'n8n-workflow';\n\nimport {\n\tdownloadAttachments,\n\tformatSubmission,\n\tkoBoToolboxApiRequest,\n\tloadForms,\n\tparseStringList,\n} from './GenericFunctions';\nimport { options } from './Options';\n\nexport class KoBoToolboxTrigger implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'KoBoToolbox Trigger',\n\t\tname: 'koBoToolboxTrigger',\n\t\ticon: 'file:koBoToolbox.svg',\n\t\tgroup: ['trigger'],\n\t\tversion: 1,\n\t\tdescription: 'Process KoBoToolbox submissions',\n\t\tdefaults: {\n\t\t\tname: 'KoBoToolbox Trigger',\n\t\t},\n\t\tinputs: [],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'koBoToolboxApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\twebhooks: [\n\t\t\t{\n\t\t\t\tname: 'default',\n\t\t\t\thttpMethod: 'POST',\n\t\t\t\tresponseMode: 'onReceived',\n\t\t\t\tpath: 'webhook',\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Form Name or ID',\n\t\t\t\tname: 'formId',\n\t\t\t\ttype: 'options',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'loadForms',\n\t\t\t\t},\n\t\t\t\trequired: true,\n\t\t\t\tdefault: '',\n\t\t\t\tdescription:\n\t\t\t\t\t'Form ID (e.g. aSAvYreNzVEkrWg5Gdcvg). Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Trigger On',\n\t\t\t\tname: 'triggerOn',\n\t\t\t\ttype: 'options',\n\t\t\t\trequired: true,\n\t\t\t\tdefault: 'formSubmission',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'On Form Submission',\n\t\t\t\t\t\tvalue: 'formSubmission',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{ ...options },\n\t\t],\n\t};\n\n\twebhookMethods = {\n\t\tdefault: {\n\t\t\tasync checkExists(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tconst webhookUrl = this.getNodeWebhookUrl('default');\n\t\t\t\tconst formId = this.getNodeParameter('formId') as string;\n\t\t\t\tconst webhooks = await koBoToolboxApiRequest.call(this, {\n\t\t\t\t\turl: `/api/v2/assets/${formId}/hooks/`,\n\t\t\t\t});\n\t\t\t\tfor (const webhook of webhooks || []) {\n\t\t\t\t\tif (webhook.endpoint === webhookUrl && webhook.active === true) {\n\t\t\t\t\t\twebhookData.webhookId = webhook.uid;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\n\t\t\tasync create(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tconst webhookUrl = this.getNodeWebhookUrl('default');\n\t\t\t\tconst workflow = this.getWorkflow();\n\t\t\t\tconst formId = this.getNodeParameter('formId') as string;\n\n\t\t\t\tconst response = await koBoToolboxApiRequest.call(this, {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\turl: `/api/v2/assets/${formId}/hooks/`,\n\t\t\t\t\tbody: {\n\t\t\t\t\t\tname: `n8n webhook id ${workflow.id}: ${workflow.name}`,\n\t\t\t\t\t\tendpoint: webhookUrl,\n\t\t\t\t\t\temail_notification: true,\n\t\t\t\t\t},\n\t\t\t\t});\n\n\t\t\t\tif (response.uid) {\n\t\t\t\t\twebhookData.webhookId = response.uid;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t},\n\n\t\t\tasync delete(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tconst formId = this.getNodeParameter('formId') as string;\n\t\t\t\ttry {\n\t\t\t\t\tawait koBoToolboxApiRequest.call(this, {\n\t\t\t\t\t\tmethod: 'DELETE',\n\t\t\t\t\t\turl: `/api/v2/assets/${formId}/hooks/${webhookData.webhookId}`,\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tdelete webhookData.webhookId;\n\t\t\t\treturn true;\n\t\t\t},\n\t\t},\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\tloadForms,\n\t\t},\n\t};\n\n\tasync webhook(this: IWebhookFunctions): Promise<IWebhookResponseData> {\n\t\tconst req = this.getRequestObject();\n\t\tconst formatOptions = this.getNodeParameter('formatOptions') as IDataObject;\n\n\t\tconst responseData = formatOptions.reformat\n\t\t\t? formatSubmission(\n\t\t\t\t\treq.body as IDataObject,\n\t\t\t\t\tparseStringList(formatOptions.selectMask as string),\n\t\t\t\t\tparseStringList(formatOptions.numberMask as string),\n\t\t\t\t)\n\t\t\t: req.body;\n\n\t\tif (formatOptions.download) {\n\t\t\t// Download related attachments\n\t\t\treturn {\n\t\t\t\tworkflowData: [\n\t\t\t\t\t[await downloadAttachments.call(this, responseData as IDataObject, formatOptions)],\n\t\t\t\t],\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tworkflowData: [this.helpers.returnJsonArray([responseData])],\n\t\t\t};\n\t\t}\n\t}\n}\n"],"mappings":"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","names":[]}