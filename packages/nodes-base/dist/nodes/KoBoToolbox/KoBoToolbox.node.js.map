{"version":3,"sources":["../../../nodes/KoBoToolbox/KoBoToolbox.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIBinaryKeyData,\n\tIDataObject,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes } from 'n8n-workflow';\n\nimport { fileFields, fileOperations } from './FileDescription';\nimport { formFields, formOperations } from './FormDescription';\nimport {\n\tdownloadAttachments,\n\tformatSubmission,\n\tkoBoToolboxApiRequest,\n\tkoBoToolboxRawRequest,\n\tloadForms,\n\tparseStringList,\n} from './GenericFunctions';\nimport { hookFields, hookOperations } from './HookDescription';\nimport { submissionFields, submissionOperations } from './SubmissionDescription';\n\nexport class KoBoToolbox implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'KoBoToolbox',\n\t\tname: 'koBoToolbox',\n\t\ticon: 'file:koBoToolbox.svg',\n\t\tgroup: ['transform'],\n\t\tversion: 1,\n\t\tdescription: 'Work with KoBoToolbox forms and submissions',\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdefaults: {\n\t\t\tname: 'KoBoToolbox',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'koBoToolboxApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'File',\n\t\t\t\t\t\tvalue: 'file',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Form',\n\t\t\t\t\t\tvalue: 'form',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Hook',\n\t\t\t\t\t\tvalue: 'hook',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Submission',\n\t\t\t\t\t\tvalue: 'submission',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'submission',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t\t...formOperations,\n\t\t\t...formFields,\n\t\t\t...hookOperations,\n\t\t\t...hookFields,\n\t\t\t...submissionOperations,\n\t\t\t...submissionFields,\n\t\t\t...fileOperations,\n\t\t\t...fileFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\tloadForms,\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tlet responseData: any;\n\n\t\tlet returnData: any[] = [];\n\t\tconst binaryItems: INodeExecutionData[] = [];\n\t\tconst items = this.getInputData();\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\tif (resource === 'form') {\n\t\t\t\t// *********************************************************************\n\t\t\t\t//                             Form\n\t\t\t\t// *********************************************************************\n\n\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t//          Form: get\n\t\t\t\t\t// ----------------------------------\n\t\t\t\t\tconst formId = this.getNodeParameter('formId', i) as string;\n\t\t\t\t\tresponseData = [\n\t\t\t\t\t\tawait koBoToolboxApiRequest.call(this, {\n\t\t\t\t\t\t\turl: `/api/v2/assets/${formId}`,\n\t\t\t\t\t\t}),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t//          Form: getAll\n\t\t\t\t\t// ----------------------------------\n\t\t\t\t\tconst formQueryOptions = this.getNodeParameter('options', i) as {\n\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\tdescending: boolean;\n\t\t\t\t\t\t\t\tordering: string;\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t\tconst formFilterOptions = this.getNodeParameter('filters', i);\n\n\t\t\t\t\tresponseData = await koBoToolboxApiRequest.call(this, {\n\t\t\t\t\t\turl: '/api/v2/assets/',\n\t\t\t\t\t\tqs: {\n\t\t\t\t\t\t\tlimit: this.getNodeParameter('limit', i, 1000),\n\t\t\t\t\t\t\t...(formFilterOptions.filter && { q: formFilterOptions.filter }),\n\t\t\t\t\t\t\t...(formQueryOptions?.sort?.value?.ordering && {\n\t\t\t\t\t\t\t\tordering:\n\t\t\t\t\t\t\t\t\t(formQueryOptions?.sort?.value?.descending ? '-' : '') +\n\t\t\t\t\t\t\t\t\tformQueryOptions?.sort?.value?.ordering,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tscroll: this.getNodeParameter('returnAll', i),\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (operation === 'redeploy') {\n\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t//          Form: redeploy\n\t\t\t\t\t// ----------------------------------\n\t\t\t\t\tconst formId = this.getNodeParameter('formId', i) as string;\n\t\t\t\t\tresponseData = [\n\t\t\t\t\t\tawait koBoToolboxApiRequest.call(this, {\n\t\t\t\t\t\t\tmethod: 'PATCH',\n\t\t\t\t\t\t\turl: `/api/v2/assets/${formId}/deployment/`,\n\t\t\t\t\t\t}),\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (resource === 'submission') {\n\t\t\t\t// *********************************************************************\n\t\t\t\t//                             Submissions\n\t\t\t\t// *********************************************************************\n\t\t\t\tconst formId = this.getNodeParameter('formId', i) as string;\n\n\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t//          Submissions: getAll\n\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\tconst submissionQueryOptions = this.getNodeParameter('options', i);\n\t\t\t\t\tconst filterJson = this.getNodeParameter('filterJson', i, null) as string;\n\n\t\t\t\t\tresponseData = await koBoToolboxApiRequest.call(this, {\n\t\t\t\t\t\turl: `/api/v2/assets/${formId}/data/`,\n\t\t\t\t\t\tqs: {\n\t\t\t\t\t\t\tlimit: this.getNodeParameter('limit', i, 1000),\n\t\t\t\t\t\t\t...(filterJson && { query: filterJson }),\n\t\t\t\t\t\t\t...(submissionQueryOptions.sort && { sort: submissionQueryOptions.sort }),\n\t\t\t\t\t\t\t...(submissionQueryOptions.fields && {\n\t\t\t\t\t\t\t\tfields: JSON.stringify(parseStringList(submissionQueryOptions.fields as string)),\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tscroll: this.getNodeParameter('returnAll', i),\n\t\t\t\t\t});\n\n\t\t\t\t\tif (submissionQueryOptions.reformat) {\n\t\t\t\t\t\tresponseData = responseData.map((submission: IDataObject) => {\n\t\t\t\t\t\t\treturn formatSubmission(\n\t\t\t\t\t\t\t\tsubmission,\n\t\t\t\t\t\t\t\tparseStringList(submissionQueryOptions.selectMask as string),\n\t\t\t\t\t\t\t\tparseStringList(submissionQueryOptions.numberMask as string),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (submissionQueryOptions.download) {\n\t\t\t\t\t\t// Download related attachments\n\t\t\t\t\t\tfor (const submission of responseData) {\n\t\t\t\t\t\t\tbinaryItems.push(\n\t\t\t\t\t\t\t\tawait downloadAttachments.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\tsubmission as IDataObject,\n\t\t\t\t\t\t\t\t\tsubmissionQueryOptions,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t//          Submissions: get\n\t\t\t\t\t// ----------------------------------\n\t\t\t\t\tconst submissionId = this.getNodeParameter('submissionId', i) as string;\n\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\n\t\t\t\t\tresponseData = [\n\t\t\t\t\t\tawait koBoToolboxApiRequest.call(this, {\n\t\t\t\t\t\t\turl: `/api/v2/assets/${formId}/data/${submissionId}`,\n\t\t\t\t\t\t\tqs: {\n\t\t\t\t\t\t\t\t...(options.fields && {\n\t\t\t\t\t\t\t\t\tfields: JSON.stringify(parseStringList(options.fields as string)),\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}),\n\t\t\t\t\t];\n\n\t\t\t\t\tif (options.reformat) {\n\t\t\t\t\t\tresponseData = responseData.map((submission: IDataObject) => {\n\t\t\t\t\t\t\treturn formatSubmission(\n\t\t\t\t\t\t\t\tsubmission,\n\t\t\t\t\t\t\t\tparseStringList(options.selectMask as string),\n\t\t\t\t\t\t\t\tparseStringList(options.numberMask as string),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (options.download) {\n\t\t\t\t\t\t// Download related attachments\n\t\t\t\t\t\tfor (const submission of responseData) {\n\t\t\t\t\t\t\tbinaryItems.push(\n\t\t\t\t\t\t\t\tawait downloadAttachments.call(this, submission as IDataObject, options),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t//          Submissions: delete\n\t\t\t\t\t// ----------------------------------\n\t\t\t\t\tconst id = this.getNodeParameter('submissionId', i) as string;\n\n\t\t\t\t\tawait koBoToolboxApiRequest.call(this, {\n\t\t\t\t\t\tmethod: 'DELETE',\n\t\t\t\t\t\turl: `/api/v2/assets/${formId}/data/${id}`,\n\t\t\t\t\t});\n\n\t\t\t\t\tresponseData = [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsuccess: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\tif (operation === 'getValidation') {\n\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t//          Submissions: getValidation\n\t\t\t\t\t// ----------------------------------\n\t\t\t\t\tconst submissionId = this.getNodeParameter('submissionId', i) as string;\n\n\t\t\t\t\tresponseData = [\n\t\t\t\t\t\tawait koBoToolboxApiRequest.call(this, {\n\t\t\t\t\t\t\turl: `/api/v2/assets/${formId}/data/${submissionId}/validation_status/`,\n\t\t\t\t\t\t}),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\tif (operation === 'setValidation') {\n\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t//          Submissions: setValidation\n\t\t\t\t\t// ----------------------------------\n\t\t\t\t\tconst submissionId = this.getNodeParameter('submissionId', i) as string;\n\t\t\t\t\tconst status = this.getNodeParameter('validationStatus', i) as string;\n\n\t\t\t\t\tresponseData = [\n\t\t\t\t\t\tawait koBoToolboxApiRequest.call(this, {\n\t\t\t\t\t\t\tmethod: 'PATCH',\n\t\t\t\t\t\t\turl: `/api/v2/assets/${formId}/data/${submissionId}/validation_status/`,\n\t\t\t\t\t\t\tbody: {\n\t\t\t\t\t\t\t\t'validation_status.uid': status,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}),\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (resource === 'hook') {\n\t\t\t\tconst formId = this.getNodeParameter('formId', i) as string;\n\t\t\t\t// *********************************************************************\n\t\t\t\t//                             Hook\n\t\t\t\t// *********************************************************************\n\n\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t//          Hook: getAll\n\t\t\t\t\t// ----------------------------------\n\t\t\t\t\tresponseData = await koBoToolboxApiRequest.call(this, {\n\t\t\t\t\t\turl: `/api/v2/assets/${formId}/hooks/`,\n\t\t\t\t\t\tqs: {\n\t\t\t\t\t\t\tlimit: this.getNodeParameter('limit', i, 1000),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tscroll: this.getNodeParameter('returnAll', i),\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t//          Hook: get\n\t\t\t\t\t// ----------------------------------\n\t\t\t\t\tconst hookId = this.getNodeParameter('hookId', i) as string;\n\t\t\t\t\tresponseData = [\n\t\t\t\t\t\tawait koBoToolboxApiRequest.call(this, {\n\t\t\t\t\t\t\turl: `/api/v2/assets/${formId}/hooks/${hookId}`,\n\t\t\t\t\t\t}),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\tif (operation === 'retryAll') {\n\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t//          Hook: retryAll\n\t\t\t\t\t// ----------------------------------\n\t\t\t\t\tconst hookId = this.getNodeParameter('hookId', i) as string;\n\t\t\t\t\tresponseData = [\n\t\t\t\t\t\tawait koBoToolboxApiRequest.call(this, {\n\t\t\t\t\t\t\tmethod: 'PATCH',\n\t\t\t\t\t\t\turl: `/api/v2/assets/${formId}/hooks/${hookId}/retry/`,\n\t\t\t\t\t\t}),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\tif (operation === 'getLogs') {\n\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t//          Hook: getLogs\n\t\t\t\t\t// ----------------------------------\n\t\t\t\t\tconst hookId = this.getNodeParameter('hookId', i) as string;\n\t\t\t\t\tconst startDate = this.getNodeParameter('startDate', i, null);\n\t\t\t\t\tconst endDate = this.getNodeParameter('endDate', i, null);\n\t\t\t\t\tconst status = this.getNodeParameter('status', i, null);\n\n\t\t\t\t\tresponseData = await koBoToolboxApiRequest.call(this, {\n\t\t\t\t\t\turl: `/api/v2/assets/${formId}/hooks/${hookId}/logs/`,\n\t\t\t\t\t\tqs: {\n\t\t\t\t\t\t\t...(startDate && { start: startDate }),\n\t\t\t\t\t\t\t...(endDate && { end: endDate }),\n\t\t\t\t\t\t\t...(status && { status }),\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (operation === 'retryOne') {\n\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t//          Hook: retryOne\n\t\t\t\t\t// ----------------------------------\n\t\t\t\t\tconst hookId = this.getNodeParameter('hookId', i) as string;\n\t\t\t\t\tconst logId = this.getNodeParameter('logId', i) as string;\n\n\t\t\t\t\tresponseData = [\n\t\t\t\t\t\tawait koBoToolboxApiRequest.call(this, {\n\t\t\t\t\t\t\tmethod: 'PATCH',\n\t\t\t\t\t\t\turl: `/api/v2/assets/${formId}/hooks/${hookId}/logs/${logId}/retry/`,\n\t\t\t\t\t\t}),\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (resource === 'file') {\n\t\t\t\t// *********************************************************************\n\t\t\t\t//                             File\n\t\t\t\t// *********************************************************************\n\t\t\t\tconst formId = this.getNodeParameter('formId', i) as string;\n\n\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\tresponseData = [\n\t\t\t\t\t\tawait koBoToolboxApiRequest.call(this, {\n\t\t\t\t\t\t\turl: `/api/v2/assets/${formId}/files`,\n\t\t\t\t\t\t\tqs: {\n\t\t\t\t\t\t\t\tfile_type: 'form_media',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tscroll: true,\n\t\t\t\t\t\t}),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\tif (operation === 'get') {\n\t\t\t\t\tconst fileId = this.getNodeParameter('fileId', i) as string;\n\t\t\t\t\tconst download = this.getNodeParameter('download', i);\n\n\t\t\t\t\tresponseData = [\n\t\t\t\t\t\tawait koBoToolboxApiRequest.call(this, {\n\t\t\t\t\t\t\turl: `/api/v2/assets/${formId}/files/${fileId}`,\n\t\t\t\t\t\t}),\n\t\t\t\t\t];\n\n\t\t\t\t\tif (responseData?.[0] && download) {\n\t\t\t\t\t\tconst binaryPropertyName = this.getNodeParameter('binaryPropertyName', i);\n\n\t\t\t\t\t\tconst binaryItem: INodeExecutionData = {\n\t\t\t\t\t\t\tjson: responseData[0],\n\t\t\t\t\t\t\tbinary: {},\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tconst response = await koBoToolboxRawRequest.call(this, {\n\t\t\t\t\t\t\turl: `/api/v2/assets/${formId}/files/${fileId}/content`,\n\t\t\t\t\t\t\tencoding: 'arraybuffer',\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tconsole.dir(response);\n\n\t\t\t\t\t\tbinaryItem.binary![binaryPropertyName] = await this.helpers.prepareBinaryData(\n\t\t\t\t\t\t\tresponse as Buffer,\n\t\t\t\t\t\t\tresponseData[0].metadata.filename as string,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbinaryItems.push(binaryItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\tconst fileId = this.getNodeParameter('fileId', i) as string;\n\t\t\t\t\tresponseData = [\n\t\t\t\t\t\tawait koBoToolboxApiRequest.call(this, {\n\t\t\t\t\t\t\tmethod: 'DELETE',\n\t\t\t\t\t\t\turl: `/api/v2/assets/${formId}/files/${fileId}`,\n\t\t\t\t\t\t}),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\tif (operation === 'create') {\n\t\t\t\t\tconst fileMode = this.getNodeParameter('fileMode', i) as string;\n\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\tdescription: 'Uploaded file',\n\t\t\t\t\t\tfile_type: 'form_media',\n\t\t\t\t\t};\n\n\t\t\t\t\tif ('binary' === fileMode) {\n\t\t\t\t\t\tconst binaryPropertyName = this.getNodeParameter('binaryPropertyName', i);\n\t\t\t\t\t\tconst item = items[i].binary as IBinaryKeyData;\n\t\t\t\t\t\tconst binaryData = item[binaryPropertyName];\n\n\t\t\t\t\t\tbody.base64Encoded = 'data:' + binaryData.mimeType + ';base64,' + binaryData.data;\n\t\t\t\t\t\tbody.metadata = {\n\t\t\t\t\t\t\tfilename: binaryData.fileName,\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst fileUrl = this.getNodeParameter('fileUrl', i) as string;\n\n\t\t\t\t\t\tbody.metadata = {\n\t\t\t\t\t\t\tredirect_url: fileUrl,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tresponseData = [\n\t\t\t\t\t\tawait koBoToolboxApiRequest.call(this, {\n\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\turl: `/api/v2/assets/${formId}/files/`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t}),\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturnData = returnData.concat(responseData);\n\t\t}\n\n\t\t// Map data to n8n data\n\t\treturn binaryItems.length > 0 ? [binaryItems] : [this.helpers.returnJsonArray(returnData)];\n\t}\n}\n"],"mappings":"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","names":[]}