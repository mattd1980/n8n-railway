{"version":3,"sources":["../../../../../nodes/SeaTable/v2/actions/router.ts"],"sourcesContent":["import type { IExecuteFunctions, IDataObject, INodeExecutionData } from 'n8n-workflow';\n\nimport * as asset from './asset';\nimport * as base from './base';\nimport type { SeaTable } from './Interfaces';\nimport * as link from './link';\nimport * as row from './row';\n\nexport async function router(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\tconst items = this.getInputData();\n\tconst operationResult: INodeExecutionData[] = [];\n\tlet responseData: IDataObject | IDataObject[] = [];\n\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst resource = this.getNodeParameter<SeaTable>('resource', i);\n\t\tconst operation = this.getNodeParameter('operation', i);\n\n\t\tconst seatable = {\n\t\t\tresource,\n\t\t\toperation,\n\t\t} as SeaTable;\n\n\t\ttry {\n\t\t\tif (seatable.resource === 'row') {\n\t\t\t\tresponseData = await row[seatable.operation].execute.call(this, i);\n\t\t\t} else if (seatable.resource === 'base') {\n\t\t\t\tresponseData = await base[seatable.operation].execute.call(this, i);\n\t\t\t} else if (seatable.resource === 'link') {\n\t\t\t\tresponseData = await link[seatable.operation].execute.call(this, i);\n\t\t\t} else if (seatable.resource === 'asset') {\n\t\t\t\tresponseData = await asset[seatable.operation].execute.call(this, i);\n\t\t\t}\n\n\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\tresponseData as INodeExecutionData[],\n\t\t\t\t{\n\t\t\t\t\titemData: { item: i },\n\t\t\t\t},\n\t\t\t);\n\n\t\t\toperationResult.push(...executionData);\n\t\t} catch (error) {\n\t\t\tif (this.continueOnFail()) {\n\t\t\t\toperationResult.push({ json: this.getInputData(i)[0].json, error });\n\t\t\t} else {\n\t\t\t\tif (error.context) error.context.itemIndex = i;\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn [operationResult];\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,YAAuB;AACvB,WAAsB;AAEtB,WAAsB;AACtB,UAAqB;AAErB,eAAsB,SAAiE;AACtF,QAAM,QAAQ,KAAK,aAAa;AAChC,QAAM,kBAAwC,CAAC;AAC/C,MAAI,eAA4C,CAAC;AAEjD,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACtC,UAAM,WAAW,KAAK,iBAA2B,YAAY,CAAC;AAC9D,UAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AAEtD,UAAM,WAAW;AAAA,MAChB;AAAA,MACA;AAAA,IACD;AAEA,QAAI;AACH,UAAI,SAAS,aAAa,OAAO;AAChC,uBAAe,MAAM,IAAI,SAAS,SAAS,EAAE,QAAQ,KAAK,MAAM,CAAC;AAAA,MAClE,WAAW,SAAS,aAAa,QAAQ;AACxC,uBAAe,MAAM,KAAK,SAAS,SAAS,EAAE,QAAQ,KAAK,MAAM,CAAC;AAAA,MACnE,WAAW,SAAS,aAAa,QAAQ;AACxC,uBAAe,MAAM,KAAK,SAAS,SAAS,EAAE,QAAQ,KAAK,MAAM,CAAC;AAAA,MACnE,WAAW,SAAS,aAAa,SAAS;AACzC,uBAAe,MAAM,MAAM,SAAS,SAAS,EAAE,QAAQ,KAAK,MAAM,CAAC;AAAA,MACpE;AAEA,YAAM,gBAAgB,KAAK,QAAQ;AAAA,QAClC;AAAA,QACA;AAAA,UACC,UAAU,EAAE,MAAM,EAAE;AAAA,QACrB;AAAA,MACD;AAEA,sBAAgB,KAAK,GAAG,aAAa;AAAA,IACtC,SAAS,OAAO;AACf,UAAI,KAAK,eAAe,GAAG;AAC1B,wBAAgB,KAAK,EAAE,MAAM,KAAK,aAAa,CAAC,EAAE,CAAC,EAAE,MAAM,MAAM,CAAC;AAAA,MACnE,OAAO;AACN,YAAI,MAAM,QAAS,OAAM,QAAQ,YAAY;AAC7C,cAAM;AAAA,MACP;AAAA,IACD;AAAA,EACD;AAEA,SAAO,CAAC,eAAe;AACxB;","names":[]}