{"version":3,"sources":["../../../nodes/ServiceNow/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tILoadOptionsFunctions,\n\tIDataObject,\n\tINodePropertyOptions,\n\tJsonObject,\n\tIHttpRequestMethods,\n\tIRequestOptions,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\nexport async function serviceNowApiRequest(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tresource: string,\n\n\tbody: any = {},\n\tqs: IDataObject = {},\n\turi?: string,\n\toption: IDataObject = {},\n): Promise<any> {\n\tconst headers = {} as IDataObject;\n\tconst authenticationMethod = this.getNodeParameter('authentication', 0, 'oAuth2') as string;\n\n\tlet credentials;\n\n\tif (authenticationMethod === 'basicAuth') {\n\t\tcredentials = await this.getCredentials('serviceNowBasicApi');\n\t} else {\n\t\tcredentials = await this.getCredentials('serviceNowOAuth2Api');\n\t}\n\n\tconst options = {\n\t\theaders,\n\t\tmethod,\n\t\tqs,\n\t\tbody,\n\t\turi: uri || `https://${credentials.subdomain}.service-now.com/api${resource}`,\n\t\tjson: true,\n\t} satisfies IRequestOptions;\n\tif (!Object.keys(body as IDataObject).length) {\n\t\tdelete options.body;\n\t}\n\n\tif (Object.keys(option).length !== 0) {\n\t\tObject.assign(options, option);\n\t}\n\n\tif (options.qs.limit) {\n\t\tdelete options.qs.limit;\n\t}\n\n\ttry {\n\t\tconst credentialType =\n\t\t\tauthenticationMethod === 'oAuth2' ? 'serviceNowOAuth2Api' : 'serviceNowBasicApi';\n\t\treturn await this.helpers.requestWithAuthentication.call(this, credentialType, options);\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\nexport async function serviceNowRequestAllItems(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tresource: string,\n\n\tbody: any = {},\n\tquery: IDataObject = {},\n): Promise<any> {\n\tconst returnData: IDataObject[] = [];\n\tlet responseData;\n\n\tconst page = 100;\n\n\tquery.sysparm_limit = page;\n\n\tresponseData = await serviceNowApiRequest.call(this, method, resource, body, query, undefined, {\n\t\tresolveWithFullResponse: true,\n\t});\n\treturnData.push.apply(returnData, responseData.body.result as IDataObject[]);\n\n\tconst quantity = responseData.headers['x-total-count'];\n\tconst iterations = Math.round(quantity / page) + (quantity % page ? 1 : 0);\n\n\tfor (let iteration = 1; iteration < iterations; iteration++) {\n\t\tquery.sysparm_limit = page;\n\t\tquery.sysparm_offset = iteration * page;\n\t\tresponseData = await serviceNowApiRequest.call(this, method, resource, body, query, undefined, {\n\t\t\tresolveWithFullResponse: true,\n\t\t});\n\n\t\treturnData.push.apply(returnData, responseData.body.result as IDataObject[]);\n\t}\n\n\treturn returnData;\n}\n\nexport async function serviceNowDownloadAttachment(\n\tthis: IExecuteFunctions,\n\tendpoint: string,\n\tfileName: string,\n\tcontentType: string,\n) {\n\tconst fileData = await serviceNowApiRequest.call(this, 'GET', `${endpoint}/file`, {}, {}, '', {\n\t\tjson: false,\n\t\tencoding: null,\n\t\tresolveWithFullResponse: true,\n\t});\n\tconst binaryData = await this.helpers.prepareBinaryData(\n\t\tBuffer.from(fileData.body as string),\n\t\tfileName,\n\t\tcontentType,\n\t);\n\n\treturn binaryData;\n}\n\nexport const mapEndpoint = (resource: string, _operation: string) => {\n\tconst resourceEndpoint = new Map([\n\t\t['attachment', 'sys_dictionary'],\n\t\t['tableRecord', 'sys_dictionary'],\n\t\t['businessService', 'cmdb_ci_service'],\n\t\t['configurationItems', 'cmdb_ci'],\n\t\t['department', 'cmn_department'],\n\t\t['dictionary', 'sys_dictionary'],\n\t\t['incident', 'incident'],\n\t\t['user', 'sys_user'],\n\t\t['userGroup', 'sys_user_group'],\n\t\t['userRole', 'sys_user_role'],\n\t]);\n\treturn resourceEndpoint.get(resource);\n};\n\nexport const sortData = (returnData: INodePropertyOptions[]): INodePropertyOptions[] => {\n\treturnData.sort((a, b) => {\n\t\tif (a.name < b.name) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (a.name > b.name) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t});\n\treturn returnData;\n};\n"],"mappings":"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","names":[]}