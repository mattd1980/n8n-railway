{"version":3,"sources":["../../../nodes/InvoiceNinja/InvoiceNinja.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes } from 'n8n-workflow';\n\nimport { isoCountryCodes } from '@utils/ISOCountryCodes';\n\nimport { bankTransactionFields, bankTransactionOperations } from './BankTransactionDescription';\nimport type { IBankTransaction, IBankTransactions } from './BankTransactionInterface';\nimport { clientFields, clientOperations } from './ClientDescription';\nimport type { IClient, IContact } from './ClientInterface';\nimport { expenseFields, expenseOperations } from './ExpenseDescription';\nimport type { IExpense } from './ExpenseInterface';\nimport { invoiceNinjaApiRequest, invoiceNinjaApiRequestAllItems } from './GenericFunctions';\nimport { invoiceFields, invoiceOperations } from './InvoiceDescription';\nimport type { IInvoice, IItem } from './invoiceInterface';\nimport { paymentFields, paymentOperations } from './PaymentDescription';\nimport type { IPayment } from './PaymentInterface';\nimport { quoteFields, quoteOperations } from './QuoteDescription';\nimport type { IQuote } from './QuoteInterface';\nimport { taskFields, taskOperations } from './TaskDescription';\nimport type { ITask } from './TaskInterface';\n\nexport class InvoiceNinja implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Invoice Ninja',\n\t\tname: 'invoiceNinja',\n\t\ticon: 'file:invoiceNinja.svg',\n\t\tgroup: ['output'],\n\t\tversion: [1, 2],\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume Invoice Ninja API',\n\t\tdefaults: {\n\t\t\tname: 'Invoice Ninja',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'invoiceNinjaApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'API Version',\n\t\t\t\tname: 'apiVersion',\n\t\t\t\ttype: 'options',\n\t\t\t\tisNodeSetting: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\t'@version': [1],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Version 4',\n\t\t\t\t\t\tvalue: 'v4',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Version 5',\n\t\t\t\t\t\tvalue: 'v5',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'v4',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'API Version',\n\t\t\t\tname: 'apiVersion',\n\t\t\t\ttype: 'options',\n\t\t\t\tisNodeSetting: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\t'@version': [2],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Version 4',\n\t\t\t\t\t\tvalue: 'v4',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Version 5',\n\t\t\t\t\t\tvalue: 'v5',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'v5',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Bank Transaction',\n\t\t\t\t\t\tvalue: 'bank_transaction',\n\t\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\t\tapiVersion: ['v5'],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Client',\n\t\t\t\t\t\tvalue: 'client',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Expense',\n\t\t\t\t\t\tvalue: 'expense',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Invoice',\n\t\t\t\t\t\tvalue: 'invoice',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Payment',\n\t\t\t\t\t\tvalue: 'payment',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Quote',\n\t\t\t\t\t\tvalue: 'quote',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Task',\n\t\t\t\t\t\tvalue: 'task',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'client',\n\t\t\t},\n\t\t\t...clientOperations,\n\t\t\t...clientFields,\n\t\t\t...invoiceOperations,\n\t\t\t...invoiceFields,\n\t\t\t...taskOperations,\n\t\t\t...taskFields,\n\t\t\t...paymentOperations,\n\t\t\t...paymentFields,\n\t\t\t...expenseOperations,\n\t\t\t...expenseFields,\n\t\t\t...quoteOperations,\n\t\t\t...quoteFields,\n\t\t\t...bankTransactionOperations,\n\t\t\t...bankTransactionFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get all the available clients to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getClients(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst clients = await invoiceNinjaApiRequestAllItems.call(this, 'data', 'GET', '/clients');\n\t\t\t\tfor (const client of clients) {\n\t\t\t\t\tconst clientName = client.display_name as string;\n\t\t\t\t\tconst clientId = client.id as string;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: clientName,\n\t\t\t\t\t\tvalue: clientId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the available projects to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getProjects(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst projects = await invoiceNinjaApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'data',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/projects',\n\t\t\t\t);\n\t\t\t\tfor (const project of projects) {\n\t\t\t\t\tconst projectName = project.name as string;\n\t\t\t\t\tconst projectId = project.id as string;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: projectName,\n\t\t\t\t\t\tvalue: projectId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the available invoices to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getInvoices(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst invoices = await invoiceNinjaApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'data',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/invoices',\n\t\t\t\t);\n\t\t\t\tfor (const invoice of invoices) {\n\t\t\t\t\tconst invoiceName = (invoice.invoice_number || invoice.number) as string;\n\t\t\t\t\tconst invoiceId = invoice.id as string;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: invoiceName,\n\t\t\t\t\t\tvalue: invoiceId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the available country codes to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getCountryCodes(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tfor (let i = 0; i < isoCountryCodes.length; i++) {\n\t\t\t\t\tconst countryName = isoCountryCodes[i].name;\n\t\t\t\t\tconst countryId = isoCountryCodes[i].numeric;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: countryName,\n\t\t\t\t\t\tvalue: countryId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the available vendors to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getVendors(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst vendors = await invoiceNinjaApiRequestAllItems.call(this, 'data', 'GET', '/vendors');\n\t\t\t\tfor (const vendor of vendors) {\n\t\t\t\t\tconst vendorName = vendor.name as string;\n\t\t\t\t\tconst vendorId = vendor.id as string;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: vendorName,\n\t\t\t\t\t\tvalue: vendorId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the available expense categories to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getExpenseCategories(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst categories = await invoiceNinjaApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'data',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/expense_categories',\n\t\t\t\t);\n\t\t\t\tfor (const category of categories) {\n\t\t\t\t\tconst categoryName = category.name as string;\n\t\t\t\t\tconst categoryId = category.id as string;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: categoryName,\n\t\t\t\t\t\tvalue: categoryId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the available bank integrations to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getBankIntegrations(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tlet banks = await invoiceNinjaApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'data',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/bank_integrations',\n\t\t\t\t);\n\t\t\t\tbanks = banks.filter((e) => !e.is_deleted);\n\t\t\t\tfor (const bank of banks) {\n\t\t\t\t\tconst providerName = bank.provider_name as string;\n\t\t\t\t\tconst accountName = bank.bank_account_name as string;\n\t\t\t\t\tconst bankId = bank.id as string;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname:\n\t\t\t\t\t\t\tproviderName != accountName\n\t\t\t\t\t\t\t\t? `${providerName} - ${accountName}`\n\t\t\t\t\t\t\t\t: accountName || providerName,\n\t\t\t\t\t\tvalue: bankId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the matchable payments to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getPayments(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst qs: IDataObject = {};\n\t\t\t\t// Only select payments that can be matched to transactions\n\t\t\t\tqs.match_transactions = true;\n\t\t\t\tconst payments = await invoiceNinjaApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'data',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/payments',\n\t\t\t\t\t{},\n\t\t\t\t\tqs,\n\t\t\t\t);\n\t\t\t\tfor (const payment of payments) {\n\t\t\t\t\tconst paymentName = [payment.number, payment.date, payment.amount]\n\t\t\t\t\t\t.filter((e) => e)\n\t\t\t\t\t\t.join(' - ');\n\t\t\t\t\tconst paymentId = payment.id as string;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: paymentName,\n\t\t\t\t\t\tvalue: paymentId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the currencies to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getCurrencies(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\n\t\t\t\tconst statics = await invoiceNinjaApiRequestAllItems.call(this, 'data', 'GET', '/statics');\n\n\t\t\t\tObject.entries(statics)\n\t\t\t\t\t.filter(([key]) => key === 'currencies')\n\t\t\t\t\t.forEach(([key, value]) => {\n\t\t\t\t\t\tif (key === 'currencies' && Array.isArray(value)) {\n\t\t\t\t\t\t\tfor (const currency of value) {\n\t\t\t\t\t\t\t\tconst currencyName = [currency.number, currency.code].filter((e) => e).join(' - ');\n\t\t\t\t\t\t\t\tconst currencyId = currency.id as string;\n\t\t\t\t\t\t\t\treturnData.push({\n\t\t\t\t\t\t\t\t\tname: currencyName,\n\t\t\t\t\t\t\t\t\tvalue: currencyId,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst length = items.length;\n\t\tconst qs: IDataObject = {};\n\n\t\tlet responseData;\n\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\t\tconst apiVersion = this.getNodeParameter('apiVersion', 0) as string;\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\t//Routes: https://github.com/invoiceninja/invoiceninja/blob/ff455c8ed9fd0c0326956175ecd509efa8bad263/routes/api.php\n\t\t\ttry {\n\t\t\t\tif (resource === 'client') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst body: IClient = {};\n\t\t\t\t\t\tif (additionalFields.clientName) {\n\t\t\t\t\t\t\tbody.name = additionalFields.clientName as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.clientName) {\n\t\t\t\t\t\t\tbody.name = additionalFields.clientName as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.idNumber) {\n\t\t\t\t\t\t\tbody.id_number = additionalFields.idNumber as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.idNumber) {\n\t\t\t\t\t\t\tbody.id_number = additionalFields.idNumber as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.privateNotes) {\n\t\t\t\t\t\t\tbody.private_notes = additionalFields.privateNotes as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.vatNumber) {\n\t\t\t\t\t\t\tbody.vat_number = additionalFields.vatNumber as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.workPhone) {\n\t\t\t\t\t\t\tbody.work_phone = additionalFields.workPhone as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.website) {\n\t\t\t\t\t\t\tbody.website = additionalFields.website as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst contactsValues = (this.getNodeParameter('contactsUi', i) as IDataObject)\n\t\t\t\t\t\t\t.contacstValues as IDataObject[];\n\t\t\t\t\t\tif (contactsValues) {\n\t\t\t\t\t\t\tconst contacts: IContact[] = [];\n\t\t\t\t\t\t\tfor (const contactValue of contactsValues) {\n\t\t\t\t\t\t\t\tconst contact: IContact = {\n\t\t\t\t\t\t\t\t\tfirst_name: contactValue.firstName as string,\n\t\t\t\t\t\t\t\t\tlast_name: contactValue.lastName as string,\n\t\t\t\t\t\t\t\t\temail: contactValue.email as string,\n\t\t\t\t\t\t\t\t\tphone: contactValue.phone as string,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tcontacts.push(contact);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbody.contacts = contacts;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst shippingAddressValue = (\n\t\t\t\t\t\t\tthis.getNodeParameter('shippingAddressUi', i) as IDataObject\n\t\t\t\t\t\t).shippingAddressValue as IDataObject;\n\t\t\t\t\t\tif (shippingAddressValue) {\n\t\t\t\t\t\t\tbody.shipping_address1 = shippingAddressValue.streetAddress as string;\n\t\t\t\t\t\t\tbody.shipping_address2 = shippingAddressValue.aptSuite as string;\n\t\t\t\t\t\t\tbody.shipping_city = shippingAddressValue.city as string;\n\t\t\t\t\t\t\tbody.shipping_state = shippingAddressValue.state as string;\n\t\t\t\t\t\t\tbody.shipping_postal_code = shippingAddressValue.postalCode as string;\n\t\t\t\t\t\t\tbody.shipping_country_id = parseInt(shippingAddressValue.countryCode as string, 10);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst billingAddressValue = (\n\t\t\t\t\t\t\tthis.getNodeParameter('billingAddressUi', i) as IDataObject\n\t\t\t\t\t\t).billingAddressValue as IDataObject;\n\t\t\t\t\t\tif (billingAddressValue) {\n\t\t\t\t\t\t\tbody.address1 = billingAddressValue.streetAddress as string;\n\t\t\t\t\t\t\tbody.address2 = billingAddressValue.aptSuite as string;\n\t\t\t\t\t\t\tbody.city = billingAddressValue.city as string;\n\t\t\t\t\t\t\tbody.state = billingAddressValue.state as string;\n\t\t\t\t\t\t\tbody.postal_code = billingAddressValue.postalCode as string;\n\t\t\t\t\t\t\tbody.country_id = parseInt(billingAddressValue.countryCode as string, 10);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/clients',\n\t\t\t\t\t\t\tbody as IDataObject,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst clientId = this.getNodeParameter('clientId', i) as string;\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tif (options.include) {\n\t\t\t\t\t\t\tqs.include = options.include as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/clients/${clientId}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', 0);\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tif (options.include) {\n\t\t\t\t\t\t\tqs.include = options.include as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.status) {\n\t\t\t\t\t\t\tqs.status = options.status as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.createdAt) {\n\t\t\t\t\t\t\tqs.created_at = options.createdAt as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.updatedAt) {\n\t\t\t\t\t\t\tqs.updated_at = options.updatedAt as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.isDeleted) {\n\t\t\t\t\t\t\tqs.is_deleted = options.isDeleted as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'data',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/clients',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.per_page = this.getNodeParameter('limit', 0);\n\t\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequest.call(this, 'GET', '/clients', {}, qs);\n\t\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst clientId = this.getNodeParameter('clientId', i) as string;\n\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/clients/${clientId}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'invoice') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst body: IInvoice = {};\n\t\t\t\t\t\tif (additionalFields.email) {\n\t\t\t\t\t\t\tbody.email = additionalFields.email as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.client) {\n\t\t\t\t\t\t\tbody.client_id = additionalFields.client as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.autoBill) {\n\t\t\t\t\t\t\tbody.auto_bill = additionalFields.autoBill as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.customValue1) {\n\t\t\t\t\t\t\tbody.custom_value1 = additionalFields.customValue1 as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.customValue2) {\n\t\t\t\t\t\t\tbody.custom_value2 = additionalFields.customValue2 as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.dueDate) {\n\t\t\t\t\t\t\tbody.due_date = additionalFields.dueDate as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.invoiceDate) {\n\t\t\t\t\t\t\tbody.invoice_date = additionalFields.invoiceDate as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.invoiceNumber) {\n\t\t\t\t\t\t\tif (apiVersion === 'v4') {\n\t\t\t\t\t\t\t\tbody.invoice_number = additionalFields.invoiceNumber as string;\n\t\t\t\t\t\t\t} else if (apiVersion === 'v5') {\n\t\t\t\t\t\t\t\tbody.number = additionalFields.invoiceNumber as string;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.invoiceStatus) {\n\t\t\t\t\t\t\tbody.invoice_status_id = additionalFields.invoiceStatus as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.isAmountDiscount) {\n\t\t\t\t\t\t\tbody.is_amount_discount = additionalFields.isAmountDiscount as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.partial) {\n\t\t\t\t\t\t\tbody.partial = additionalFields.partial as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.partialDueDate) {\n\t\t\t\t\t\t\tbody.partial_due_date = additionalFields.partialDueDate as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.poNumber) {\n\t\t\t\t\t\t\tbody.po_number = additionalFields.poNumber as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.privateNotes) {\n\t\t\t\t\t\t\tbody.private_notes = additionalFields.privateNotes as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.publicNotes) {\n\t\t\t\t\t\t\tbody.public_notes = additionalFields.publicNotes as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.taxName1) {\n\t\t\t\t\t\t\tbody.tax_name1 = additionalFields.taxName1 as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.taxName2) {\n\t\t\t\t\t\t\tbody.tax_name2 = additionalFields.taxName2 as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.taxRate1) {\n\t\t\t\t\t\t\tbody.tax_rate1 = additionalFields.taxRate1 as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.taxRate2) {\n\t\t\t\t\t\t\tbody.tax_rate2 = additionalFields.taxRate2 as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.discount) {\n\t\t\t\t\t\t\tbody.discount = additionalFields.discount as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.paid) {\n\t\t\t\t\t\t\tif (apiVersion === 'v4') {\n\t\t\t\t\t\t\t\tbody.paid = additionalFields.paid as number;\n\t\t\t\t\t\t\t} else if (apiVersion === 'v5') {\n\t\t\t\t\t\t\t\tqs.amount_paid = additionalFields.paid as number;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.emailInvoice) {\n\t\t\t\t\t\t\tif (apiVersion === 'v4') {\n\t\t\t\t\t\t\t\tbody.email_invoice = additionalFields.emailInvoice as boolean;\n\t\t\t\t\t\t\t} else if (apiVersion === 'v5') {\n\t\t\t\t\t\t\t\tqs.send_email = additionalFields.emailInvoice as boolean;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.markSent) {\n\t\t\t\t\t\t\tqs.mark_sent = additionalFields.markSent as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst invoiceItemsValues = (this.getNodeParameter('invoiceItemsUi', i) as IDataObject)\n\t\t\t\t\t\t\t.invoiceItemsValues as IDataObject[];\n\t\t\t\t\t\tif (invoiceItemsValues) {\n\t\t\t\t\t\t\tconst invoiceItems: IItem[] = [];\n\t\t\t\t\t\t\tfor (const itemValue of invoiceItemsValues) {\n\t\t\t\t\t\t\t\tconst item: IItem = {\n\t\t\t\t\t\t\t\t\tcost: itemValue.cost as number,\n\t\t\t\t\t\t\t\t\tnotes: itemValue.description as string,\n\t\t\t\t\t\t\t\t\tproduct_key: itemValue.service as string,\n\t\t\t\t\t\t\t\t\ttax_rate1: itemValue.taxRate1 as number,\n\t\t\t\t\t\t\t\t\ttax_rate2: itemValue.taxRate2 as number,\n\t\t\t\t\t\t\t\t\ttax_name1: itemValue.taxName1 as string,\n\t\t\t\t\t\t\t\t\ttax_name2: itemValue.taxName2 as string,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tif (apiVersion === 'v4') {\n\t\t\t\t\t\t\t\t\titem.qty = itemValue.hours as number;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (apiVersion === 'v5') {\n\t\t\t\t\t\t\t\t\titem.quantity = itemValue.hours as number;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tinvoiceItems.push(item);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (apiVersion === 'v4') {\n\t\t\t\t\t\t\t\tbody.invoice_items = invoiceItems;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (apiVersion === 'v5') {\n\t\t\t\t\t\t\t\tbody.line_items = invoiceItems;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/invoices',\n\t\t\t\t\t\t\tbody as IDataObject,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'email') {\n\t\t\t\t\t\tconst invoiceId = this.getNodeParameter('invoiceId', i) as string;\n\t\t\t\t\t\tif (apiVersion === 'v4') {\n\t\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequest.call(this, 'POST', '/email_invoice', {\n\t\t\t\t\t\t\t\tid: invoiceId,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (apiVersion === 'v5') {\n\t\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/invoices/${invoiceId}/email`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst invoiceId = this.getNodeParameter('invoiceId', i) as string;\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tif (options.include) {\n\t\t\t\t\t\t\tqs.include = options.include as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/invoices/${invoiceId}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', 0);\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tif (options.include) {\n\t\t\t\t\t\t\tqs.include = options.include as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.invoiceNumber) {\n\t\t\t\t\t\t\tif (apiVersion === 'v4') {\n\t\t\t\t\t\t\t\tqs.invoice_number = options.invoiceNumber as string;\n\t\t\t\t\t\t\t} else if (apiVersion === 'v5') {\n\t\t\t\t\t\t\t\t// eslint-disable-next-line id-denylist\n\t\t\t\t\t\t\t\tqs.number = options.invoiceNumber as string;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.status) {\n\t\t\t\t\t\t\tqs.status = options.status as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.createdAt) {\n\t\t\t\t\t\t\tqs.created_at = options.createdAt as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.updatedAt) {\n\t\t\t\t\t\t\tqs.updated_at = options.updatedAt as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.isDeleted) {\n\t\t\t\t\t\t\tqs.is_deleted = options.isDeleted as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.clientStatus) {\n\t\t\t\t\t\t\tqs.client_status = options.clientStatus as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'data',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/invoices',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.per_page = this.getNodeParameter('limit', 0);\n\t\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequest.call(this, 'GET', '/invoices', {}, qs);\n\t\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst invoiceId = this.getNodeParameter('invoiceId', i) as string;\n\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/invoices/${invoiceId}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'task') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst body: ITask = {};\n\t\t\t\t\t\tif (additionalFields.client) {\n\t\t\t\t\t\t\tbody.client_id = additionalFields.client as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.project) {\n\t\t\t\t\t\t\tbody.project_id = additionalFields.project as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.customValue1) {\n\t\t\t\t\t\t\tbody.custom_value1 = additionalFields.customValue1 as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.customValue2) {\n\t\t\t\t\t\t\tbody.custom_value2 = additionalFields.customValue2 as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.description) {\n\t\t\t\t\t\t\tbody.description = additionalFields.description as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst timeLogsValues = (this.getNodeParameter('timeLogsUi', i) as IDataObject)\n\t\t\t\t\t\t\t.timeLogsValues as IDataObject[];\n\t\t\t\t\t\tif (timeLogsValues) {\n\t\t\t\t\t\t\tconst logs: number[][] = [];\n\t\t\t\t\t\t\tfor (const logValue of timeLogsValues) {\n\t\t\t\t\t\t\t\tlet from = 0,\n\t\t\t\t\t\t\t\t\tto;\n\t\t\t\t\t\t\t\tif (logValue.startDate) {\n\t\t\t\t\t\t\t\t\tfrom = new Date(logValue.startDate as string).getTime() / 1000;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (logValue.endDate) {\n\t\t\t\t\t\t\t\t\tto = new Date(logValue.endDate as string).getTime() / 1000;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (logValue.duration) {\n\t\t\t\t\t\t\t\t\tto = from + (logValue.duration as number) * 3600;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tlogs.push([from, to as number]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbody.time_log = JSON.stringify(logs);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/tasks',\n\t\t\t\t\t\t\tbody as IDataObject,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst taskId = this.getNodeParameter('taskId', i) as string;\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tif (options.include) {\n\t\t\t\t\t\t\tqs.include = options.include as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/tasks/${taskId}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', 0);\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tif (options.include) {\n\t\t\t\t\t\t\tqs.include = options.include as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'data',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/tasks',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.per_page = this.getNodeParameter('limit', 0);\n\t\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequest.call(this, 'GET', '/tasks', {}, qs);\n\t\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst taskId = this.getNodeParameter('taskId', i) as string;\n\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequest.call(this, 'DELETE', `/tasks/${taskId}`);\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'payment') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst invoice = this.getNodeParameter('invoice', i) as number | string;\n\t\t\t\t\t\tconst client = (\n\t\t\t\t\t\t\tawait invoiceNinjaApiRequest.call(this, 'GET', `/invoices/${invoice}`, {}, qs)\n\t\t\t\t\t\t).data?.client_id as string;\n\t\t\t\t\t\tconst amount = this.getNodeParameter('amount', i) as number;\n\t\t\t\t\t\tconst body: IPayment = {\n\t\t\t\t\t\t\tamount,\n\t\t\t\t\t\t\tclient_id: client,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (apiVersion === 'v4') {\n\t\t\t\t\t\t\tbody.invoice_id = invoice as number;\n\t\t\t\t\t\t} else if (apiVersion === 'v5') {\n\t\t\t\t\t\t\tbody.invoices = [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tinvoice_id: invoice as string,\n\t\t\t\t\t\t\t\t\tamount,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.paymentType) {\n\t\t\t\t\t\t\tif (apiVersion === 'v4') {\n\t\t\t\t\t\t\t\tbody.payment_type_id = additionalFields.paymentType as number;\n\t\t\t\t\t\t\t} else if (apiVersion == 'v5') {\n\t\t\t\t\t\t\t\tbody.type_id = additionalFields.paymentType as number;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.transferReference) {\n\t\t\t\t\t\t\tbody.transaction_reference = additionalFields.transferReference as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.privateNotes) {\n\t\t\t\t\t\t\tbody.private_notes = additionalFields.privateNotes as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/payments',\n\t\t\t\t\t\t\tbody as IDataObject,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst paymentId = this.getNodeParameter('paymentId', i) as string;\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tif (options.include) {\n\t\t\t\t\t\t\tqs.include = options.include as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/payments/${paymentId}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', 0);\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tif (options.include) {\n\t\t\t\t\t\t\tqs.include = options.include as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.status) {\n\t\t\t\t\t\t\tqs.status = options.status as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.createdAt) {\n\t\t\t\t\t\t\tqs.created_at = options.createdAt as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.updatedAt) {\n\t\t\t\t\t\t\tqs.updated_at = options.updatedAt as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.isDeleted) {\n\t\t\t\t\t\t\tqs.is_deleted = options.isDeleted as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'data',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/payments',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.per_page = this.getNodeParameter('limit', 0);\n\t\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequest.call(this, 'GET', '/payments', {}, qs);\n\t\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst paymentId = this.getNodeParameter('paymentId', i) as string;\n\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/payments/${paymentId}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'expense') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst body: IExpense = {};\n\t\t\t\t\t\tif (additionalFields.amount) {\n\t\t\t\t\t\t\tbody.amount = additionalFields.amount as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.billable) {\n\t\t\t\t\t\t\tbody.should_be_invoiced = additionalFields.billable as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.client) {\n\t\t\t\t\t\t\tbody.client_id = additionalFields.client as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.customValue1) {\n\t\t\t\t\t\t\tbody.custom_value1 = additionalFields.customValue1 as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.customValue2) {\n\t\t\t\t\t\t\tbody.custom_value2 = additionalFields.customValue2 as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.category) {\n\t\t\t\t\t\t\tbody.expense_category_id = additionalFields.category as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.expenseDate) {\n\t\t\t\t\t\t\tbody.expense_date = additionalFields.expenseDate as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.paymentDate) {\n\t\t\t\t\t\t\tbody.payment_date = additionalFields.paymentDate as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.paymentType) {\n\t\t\t\t\t\t\tbody.payment_type_id = additionalFields.paymentType as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.publicNotes) {\n\t\t\t\t\t\t\tbody.public_notes = additionalFields.publicNotes as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.privateNotes) {\n\t\t\t\t\t\t\tbody.private_notes = additionalFields.privateNotes as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.taxName1) {\n\t\t\t\t\t\t\tbody.tax_name1 = additionalFields.taxName1 as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.taxName2) {\n\t\t\t\t\t\t\tbody.tax_name2 = additionalFields.taxName2 as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.taxRate1) {\n\t\t\t\t\t\t\tbody.tax_rate1 = additionalFields.taxRate1 as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.taxRate2) {\n\t\t\t\t\t\t\tbody.tax_rate2 = additionalFields.taxRate2 as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.transactionReference) {\n\t\t\t\t\t\t\tbody.transaction_reference = additionalFields.transactionReference as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.vendor) {\n\t\t\t\t\t\t\tbody.vendor_id = additionalFields.vendor as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/expenses',\n\t\t\t\t\t\t\tbody as IDataObject,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst expenseId = this.getNodeParameter('expenseId', i) as string;\n\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/expenses/${expenseId}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', 0);\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'data',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/expenses',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.per_page = this.getNodeParameter('limit', 0);\n\t\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequest.call(this, 'GET', '/expenses', {}, qs);\n\t\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst expenseId = this.getNodeParameter('expenseId', i) as string;\n\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/expenses/${expenseId}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'bank_transaction') {\n\t\t\t\t\tconst resourceEndpoint = '/bank_transactions';\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst body: IBankTransaction = {};\n\t\t\t\t\t\tif (additionalFields.amount) {\n\t\t\t\t\t\t\tbody.amount = additionalFields.amount as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.baseType) {\n\t\t\t\t\t\t\tbody.base_type = additionalFields.baseType as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.bankIntegrationId) {\n\t\t\t\t\t\t\tbody.bank_integration_id = additionalFields.bankIntegrationId as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.client) {\n\t\t\t\t\t\t\tbody.date = additionalFields.date as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.currencyId) {\n\t\t\t\t\t\t\tbody.currency_id = additionalFields.currencyId as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.email) {\n\t\t\t\t\t\t\tbody.description = additionalFields.description as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\tresourceEndpoint,\n\t\t\t\t\t\t\tbody as IDataObject,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst bankTransactionId = this.getNodeParameter('bankTransactionId', i) as string;\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tif (options.include) {\n\t\t\t\t\t\t\tqs.include = options.include as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`${resourceEndpoint}/${bankTransactionId}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', 0);\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tif (options.include) {\n\t\t\t\t\t\t\tqs.include = options.include as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.invoiceNumber) {\n\t\t\t\t\t\t\tqs.invoice_number = options.invoiceNumber as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'data',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\tresourceEndpoint,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.per_page = this.getNodeParameter('limit', 0);\n\t\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\tresourceEndpoint,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst bankTransactionId = this.getNodeParameter('bankTransactionId', i) as string;\n\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`${resourceEndpoint}/${bankTransactionId}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'matchPayment') {\n\t\t\t\t\t\tconst bankTransactionId = this.getNodeParameter('bankTransactionId', i) as string;\n\t\t\t\t\t\tconst paymentId = this.getNodeParameter('paymentId', i) as string;\n\t\t\t\t\t\tconst body: IBankTransactions = { transactions: [] };\n\t\t\t\t\t\tconst bankTransaction: IBankTransaction = {};\n\t\t\t\t\t\tif (bankTransactionId) {\n\t\t\t\t\t\t\tbankTransaction.id = bankTransactionId;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (paymentId) {\n\t\t\t\t\t\t\tbankTransaction.payment_id = paymentId;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbody.transactions.push(bankTransaction);\n\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`${resourceEndpoint}/match`,\n\t\t\t\t\t\t\tbody as unknown as IDataObject,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'quote') {\n\t\t\t\t\tconst resourceEndpoint = apiVersion === 'v4' ? '/invoices' : '/quotes';\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst body: IQuote = {\n\t\t\t\t\t\t\tis_quote: true,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (additionalFields.client) {\n\t\t\t\t\t\t\tbody.client_id = additionalFields.client as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.email) {\n\t\t\t\t\t\t\tbody.email = additionalFields.email as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.autoBill) {\n\t\t\t\t\t\t\tbody.auto_bill = additionalFields.autoBill as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.customValue1) {\n\t\t\t\t\t\t\tbody.custom_value1 = additionalFields.customValue1 as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.customValue2) {\n\t\t\t\t\t\t\tbody.custom_value2 = additionalFields.customValue2 as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.dueDate) {\n\t\t\t\t\t\t\tbody.due_date = additionalFields.dueDate as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.quoteDate) {\n\t\t\t\t\t\t\tbody.invoice_date = additionalFields.quoteDate as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.quoteNumber) {\n\t\t\t\t\t\t\tif (apiVersion === 'v4') {\n\t\t\t\t\t\t\t\tbody.invoice_number = additionalFields.quoteNumber as string;\n\t\t\t\t\t\t\t} else if (apiVersion === 'v5') {\n\t\t\t\t\t\t\t\tbody.number = additionalFields.quoteNumber as string;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.invoiceStatus) {\n\t\t\t\t\t\t\tbody.invoice_status_id = additionalFields.invoiceStatus as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.isAmountDiscount) {\n\t\t\t\t\t\t\tbody.is_amount_discount = additionalFields.isAmountDiscount as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.partial) {\n\t\t\t\t\t\t\tbody.partial = additionalFields.partial as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.partialDueDate) {\n\t\t\t\t\t\t\tbody.partial_due_date = additionalFields.partialDueDate as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.poNumber) {\n\t\t\t\t\t\t\tbody.po_number = additionalFields.poNumber as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.privateNotes) {\n\t\t\t\t\t\t\tbody.private_notes = additionalFields.privateNotes as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.publicNotes) {\n\t\t\t\t\t\t\tbody.public_notes = additionalFields.publicNotes as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.taxName1) {\n\t\t\t\t\t\t\tbody.tax_name1 = additionalFields.taxName1 as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.taxName2) {\n\t\t\t\t\t\t\tbody.tax_name2 = additionalFields.taxName2 as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.taxRate1) {\n\t\t\t\t\t\t\tbody.tax_rate1 = additionalFields.taxRate1 as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.taxRate2) {\n\t\t\t\t\t\t\tbody.tax_rate2 = additionalFields.taxRate2 as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.discount) {\n\t\t\t\t\t\t\tbody.discount = additionalFields.discount as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.paid) {\n\t\t\t\t\t\t\tbody.paid = additionalFields.paid as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.emailQuote) {\n\t\t\t\t\t\t\tbody.email_invoice = additionalFields.emailQuote as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst invoiceItemsValues = (this.getNodeParameter('invoiceItemsUi', i) as IDataObject)\n\t\t\t\t\t\t\t.invoiceItemsValues as IDataObject[];\n\t\t\t\t\t\tif (invoiceItemsValues) {\n\t\t\t\t\t\t\tconst invoiceItems: IItem[] = [];\n\t\t\t\t\t\t\tfor (const itemValue of invoiceItemsValues) {\n\t\t\t\t\t\t\t\tconst item: IItem = {\n\t\t\t\t\t\t\t\t\tcost: itemValue.cost as number,\n\t\t\t\t\t\t\t\t\tnotes: itemValue.description as string,\n\t\t\t\t\t\t\t\t\tproduct_key: itemValue.service as string,\n\t\t\t\t\t\t\t\t\ttax_rate1: itemValue.taxRate1 as number,\n\t\t\t\t\t\t\t\t\ttax_rate2: itemValue.taxRate2 as number,\n\t\t\t\t\t\t\t\t\ttax_name1: itemValue.taxName1 as string,\n\t\t\t\t\t\t\t\t\ttax_name2: itemValue.taxName2 as string,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tif (apiVersion === 'v4') {\n\t\t\t\t\t\t\t\t\titem.qty = itemValue.hours as number;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (apiVersion === 'v5') {\n\t\t\t\t\t\t\t\t\titem.quantity = itemValue.hours as number;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tinvoiceItems.push(item);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (apiVersion === 'v4') {\n\t\t\t\t\t\t\t\tbody.invoice_items = invoiceItems;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (apiVersion === 'v5') {\n\t\t\t\t\t\t\t\tbody.line_items = invoiceItems;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\tresourceEndpoint,\n\t\t\t\t\t\t\tbody as IDataObject,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'email') {\n\t\t\t\t\t\tconst quoteId = this.getNodeParameter('quoteId', i) as string;\n\t\t\t\t\t\tif (apiVersion === 'v4') {\n\t\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequest.call(this, 'POST', '/email_invoice', {\n\t\t\t\t\t\t\t\tid: quoteId,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (apiVersion === 'v5') {\n\t\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`${resourceEndpoint}/${quoteId}/email`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst quoteId = this.getNodeParameter('quoteId', i) as string;\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tif (options.include) {\n\t\t\t\t\t\t\tqs.include = options.include as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`${resourceEndpoint}/${quoteId}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', 0);\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tif (options.include) {\n\t\t\t\t\t\t\tqs.include = options.include as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.invoiceNumber) {\n\t\t\t\t\t\t\tqs.invoice_number = options.invoiceNumber as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.status) {\n\t\t\t\t\t\t\tqs.status = options.status as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.createdAt) {\n\t\t\t\t\t\t\tqs.created_at = options.createdAt as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.updatedAt) {\n\t\t\t\t\t\t\tqs.updated_at = options.updatedAt as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.isDeleted) {\n\t\t\t\t\t\t\tqs.is_deleted = options.isDeleted as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'data',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\tresourceEndpoint,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.per_page = this.getNodeParameter('limit', 0);\n\t\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\tresourceEndpoint,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst quoteId = this.getNodeParameter('quoteId', i) as string;\n\t\t\t\t\t\tresponseData = await invoiceNinjaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`${resourceEndpoint}/${quoteId}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t);\n\n\t\t\t\treturnData.push(...executionData);\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":[]}