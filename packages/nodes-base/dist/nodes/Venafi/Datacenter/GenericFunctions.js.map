{"version":3,"sources":["../../../../nodes/Venafi/Datacenter/GenericFunctions.ts"],"sourcesContent":["import get from 'lodash/get';\nimport { ApplicationError } from 'n8n-workflow';\nimport type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHttpRequestMethods,\n\tILoadOptionsFunctions,\n\tIPollFunctions,\n\tIRequestOptions,\n} from 'n8n-workflow';\n\nexport async function venafiApiRequest(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions | IPollFunctions,\n\tmethod: IHttpRequestMethods,\n\tresource: string,\n\tbody: IDataObject = {},\n\tqs: IDataObject = {},\n\turi?: string,\n\theaders: IDataObject = {},\n): Promise<any> {\n\tconst credentials = await this.getCredentials('venafiTlsProtectDatacenterApi');\n\n\tconst options: IRequestOptions = {\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tmethod,\n\t\tbody,\n\t\tqs,\n\t\trejectUnauthorized: !credentials.allowUnauthorizedCerts,\n\t\turi: uri || `${credentials.domain}${resource}`,\n\t\tjson: true,\n\t};\n\n\ttry {\n\t\tif (Object.keys(headers).length !== 0) {\n\t\t\toptions.headers = Object.assign({}, options.headers, headers);\n\t\t}\n\t\tif (Object.keys(body).length === 0) {\n\t\t\tdelete options.body;\n\t\t}\n\t\treturn await this.helpers.requestWithAuthentication.call(\n\t\t\tthis,\n\t\t\t'venafiTlsProtectDatacenterApi',\n\t\t\toptions,\n\t\t);\n\t} catch (error) {\n\t\tif (error.response?.body?.error) {\n\t\t\tlet errors = error.response.body.error.errors;\n\n\t\t\terrors = errors.map((e: IDataObject) => e.message);\n\t\t\t// Try to return the error prettier\n\t\t\tthrow new ApplicationError(\n\t\t\t\t`Venafi error response [${error.statusCode}]: ${errors.join('|')}`,\n\t\t\t\t{ level: 'warning' },\n\t\t\t);\n\t\t}\n\t\tthrow error;\n\t}\n}\n\nexport async function venafiApiRequestAllItems(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions,\n\tpropertyName: string,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\tbody: IDataObject = {},\n\tquery: IDataObject = {},\n): Promise<any> {\n\tconst returnData: IDataObject[] = [];\n\n\tlet responseData;\n\n\tdo {\n\t\tresponseData = await venafiApiRequest.call(this, method, endpoint, body, query);\n\t\tendpoint = get(responseData, '_links[0].Next');\n\t\treturnData.push.apply(returnData, responseData[propertyName] as IDataObject[]);\n\t} while (responseData._links?.[0].Next);\n\n\treturn returnData;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAgB;AAChB,0BAAiC;AAUjC,eAAsB,iBAErB,QACA,UACA,OAAoB,CAAC,GACrB,KAAkB,CAAC,GACnB,KACA,UAAuB,CAAC,GACT;AACf,QAAM,cAAc,MAAM,KAAK,eAAe,+BAA+B;AAE7E,QAAM,UAA2B;AAAA,IAChC,SAAS;AAAA,MACR,gBAAgB;AAAA,IACjB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,oBAAoB,CAAC,YAAY;AAAA,IACjC,KAAK,OAAO,GAAG,YAAY,MAAM,GAAG,QAAQ;AAAA,IAC5C,MAAM;AAAA,EACP;AAEA,MAAI;AACH,QAAI,OAAO,KAAK,OAAO,EAAE,WAAW,GAAG;AACtC,cAAQ,UAAU,OAAO,OAAO,CAAC,GAAG,QAAQ,SAAS,OAAO;AAAA,IAC7D;AACA,QAAI,OAAO,KAAK,IAAI,EAAE,WAAW,GAAG;AACnC,aAAO,QAAQ;AAAA,IAChB;AACA,WAAO,MAAM,KAAK,QAAQ,0BAA0B;AAAA,MACnD;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACD,SAAS,OAAO;AACf,QAAI,MAAM,UAAU,MAAM,OAAO;AAChC,UAAI,SAAS,MAAM,SAAS,KAAK,MAAM;AAEvC,eAAS,OAAO,IAAI,CAAC,MAAmB,EAAE,OAAO;AAEjD,YAAM,IAAI;AAAA,QACT,0BAA0B,MAAM,UAAU,MAAM,OAAO,KAAK,GAAG,CAAC;AAAA,QAChE,EAAE,OAAO,UAAU;AAAA,MACpB;AAAA,IACD;AACA,UAAM;AAAA,EACP;AACD;AAEA,eAAsB,yBAErB,cACA,QACA,UACA,OAAoB,CAAC,GACrB,QAAqB,CAAC,GACP;AACf,QAAM,aAA4B,CAAC;AAEnC,MAAI;AAEJ,KAAG;AACF,mBAAe,MAAM,iBAAiB,KAAK,MAAM,QAAQ,UAAU,MAAM,KAAK;AAC9E,mBAAW,WAAAA,SAAI,cAAc,gBAAgB;AAC7C,eAAW,KAAK,MAAM,YAAY,aAAa,YAAY,CAAkB;AAAA,EAC9E,SAAS,aAAa,SAAS,CAAC,EAAE;AAElC,SAAO;AACR;","names":["get"]}