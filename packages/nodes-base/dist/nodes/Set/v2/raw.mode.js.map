{"version":3,"sources":["../../../../nodes/Set/v2/raw.mode.ts"],"sourcesContent":["import type {\n\tINodeExecutionData,\n\tIExecuteFunctions,\n\tINodeProperties,\n\tIDataObject,\n\tINode,\n} from 'n8n-workflow';\nimport { NodeOperationError } from 'n8n-workflow';\n\nimport type { SetNodeOptions } from './helpers/interfaces';\nimport { parseJsonParameter, composeReturnItem, resolveRawData } from './helpers/utils';\nimport { updateDisplayOptions } from '../../../utils/utilities';\n\nconst properties: INodeProperties[] = [\n\t{\n\t\tdisplayName: 'JSON',\n\t\tname: 'jsonOutput',\n\t\ttype: 'json',\n\t\ttypeOptions: {\n\t\t\trows: 5,\n\t\t},\n\t\tdefault: '{\\n  \"my_field_1\": \"value\",\\n  \"my_field_2\": 1\\n}\\n',\n\t\tvalidateType: 'object',\n\t\tignoreValidationDuringExecution: true,\n\t},\n];\n\nconst displayOptions = {\n\tshow: {\n\t\tmode: ['raw'],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n\nexport async function execute(\n\tthis: IExecuteFunctions,\n\titem: INodeExecutionData,\n\ti: number,\n\toptions: SetNodeOptions,\n\trawData: IDataObject,\n\tnode: INode,\n) {\n\ttry {\n\t\tlet newData: IDataObject;\n\t\tif (rawData.jsonOutput === undefined) {\n\t\t\tconst json = this.getNodeParameter('jsonOutput', i) as string;\n\t\t\tnewData = parseJsonParameter(json, node, i);\n\t\t} else {\n\t\t\tnewData = parseJsonParameter(\n\t\t\t\tresolveRawData.call(this, rawData.jsonOutput as string, i),\n\t\t\t\tnode,\n\t\t\t\ti,\n\t\t\t);\n\t\t}\n\n\t\treturn composeReturnItem.call(this, i, item, newData, options, node.typeVersion);\n\t} catch (error) {\n\t\tif (this.continueOnFail()) {\n\t\t\treturn { json: { error: (error as Error).message }, pairedItem: { item: i } };\n\t\t}\n\t\tthrow new NodeOperationError(node, error as Error, {\n\t\t\titemIndex: i,\n\t\t\tdescription: error.description,\n\t\t});\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,0BAAmC;AAGnC,mBAAsE;AACtE,uBAAqC;AAErC,MAAM,aAAgC;AAAA,EACrC;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,MACZ,MAAM;AAAA,IACP;AAAA,IACA,SAAS;AAAA,IACT,cAAc;AAAA,IACd,iCAAiC;AAAA,EAClC;AACD;AAEA,MAAM,iBAAiB;AAAA,EACtB,MAAM;AAAA,IACL,MAAM,CAAC,KAAK;AAAA,EACb;AACD;AAEO,MAAM,kBAAc,uCAAqB,gBAAgB,UAAU;AAE1E,eAAsB,QAErB,MACA,GACA,SACA,SACA,MACC;AACD,MAAI;AACH,QAAI;AACJ,QAAI,QAAQ,eAAe,QAAW;AACrC,YAAM,OAAO,KAAK,iBAAiB,cAAc,CAAC;AAClD,oBAAU,iCAAmB,MAAM,MAAM,CAAC;AAAA,IAC3C,OAAO;AACN,oBAAU;AAAA,QACT,4BAAe,KAAK,MAAM,QAAQ,YAAsB,CAAC;AAAA,QACzD;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAEA,WAAO,+BAAkB,KAAK,MAAM,GAAG,MAAM,SAAS,SAAS,KAAK,WAAW;AAAA,EAChF,SAAS,OAAO;AACf,QAAI,KAAK,eAAe,GAAG;AAC1B,aAAO,EAAE,MAAM,EAAE,OAAQ,MAAgB,QAAQ,GAAG,YAAY,EAAE,MAAM,EAAE,EAAE;AAAA,IAC7E;AACA,UAAM,IAAI,uCAAmB,MAAM,OAAgB;AAAA,MAClD,WAAW;AAAA,MACX,aAAa,MAAM;AAAA,IACpB,CAAC;AAAA,EACF;AACD;","names":[]}