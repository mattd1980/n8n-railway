{"version":3,"sources":["../../../nodes/Adalo/Adalo.node.ts"],"sourcesContent":["import {\n\tNodeConnectionTypes,\n\ttype IDataObject,\n\ttype IExecuteSingleFunctions,\n\ttype IHttpRequestOptions,\n\ttype INodeType,\n\ttype INodeTypeDescription,\n} from 'n8n-workflow';\n\nimport { collectionFields } from './CollectionDescription';\nimport type { FieldsUiValues } from './types';\n\nexport class Adalo implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Adalo',\n\t\tname: 'adalo',\n\t\ticon: 'file:adalo.svg',\n\t\tgroup: ['transform'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"collectionId\"]}}',\n\t\tdescription: 'Consume Adalo API',\n\t\tdefaults: {\n\t\t\tname: 'Adalo',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'adaloApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\trequestDefaults: {\n\t\t\tbaseURL: '=https://api.adalo.com/v0/apps/{{$credentials.appId}}',\n\t\t},\n\t\trequestOperations: {\n\t\t\tpagination: {\n\t\t\t\ttype: 'offset',\n\t\t\t\tproperties: {\n\t\t\t\t\tlimitParameter: 'limit',\n\t\t\t\t\toffsetParameter: 'offset',\n\t\t\t\t\tpageSize: 100,\n\t\t\t\t\ttype: 'query',\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\tdefault: 'collection',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Collection',\n\t\t\t\t\t\tvalue: 'collection',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Create',\n\t\t\t\t\t\tvalue: 'create',\n\t\t\t\t\t\tdescription: 'Create a row',\n\t\t\t\t\t\trouting: {\n\t\t\t\t\t\t\tsend: {\n\t\t\t\t\t\t\t\tpreSend: [this.presendCreateUpdate],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\trequest: {\n\t\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\t\turl: '=/collections/{{$parameter[\"collectionId\"]}}',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\taction: 'Create a row',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Delete',\n\t\t\t\t\t\tvalue: 'delete',\n\t\t\t\t\t\tdescription: 'Delete a row',\n\t\t\t\t\t\trouting: {\n\t\t\t\t\t\t\trequest: {\n\t\t\t\t\t\t\t\tmethod: 'DELETE',\n\t\t\t\t\t\t\t\turl: '=/collections/{{$parameter[\"collectionId\"]}}/{{$parameter[\"rowId\"]}}',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\toutput: {\n\t\t\t\t\t\t\t\tpostReceive: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: 'set',\n\t\t\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\t\t\tvalue: '={{ { \"success\": true } }}',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\taction: 'Delete a row',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get',\n\t\t\t\t\t\tvalue: 'get',\n\t\t\t\t\t\tdescription: 'Retrieve a row',\n\t\t\t\t\t\trouting: {\n\t\t\t\t\t\t\trequest: {\n\t\t\t\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\t\t\t\turl: '=/collections/{{$parameter[\"collectionId\"]}}/{{$parameter[\"rowId\"]}}',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\taction: 'Retrieve a row',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get Many',\n\t\t\t\t\t\tvalue: 'getAll',\n\t\t\t\t\t\tdescription: 'Retrieve many rows',\n\t\t\t\t\t\trouting: {\n\t\t\t\t\t\t\trequest: {\n\t\t\t\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\t\t\t\turl: '=/collections/{{$parameter[\"collectionId\"]}}',\n\t\t\t\t\t\t\t\tqs: {\n\t\t\t\t\t\t\t\t\tlimit: '={{$parameter[\"limit\"]}}',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tsend: {\n\t\t\t\t\t\t\t\tpaginate: '={{$parameter[\"returnAll\"]}}',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\toutput: {\n\t\t\t\t\t\t\t\tpostReceive: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: 'rootProperty',\n\t\t\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\t\t\tproperty: 'records',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\taction: 'Retrieve all rows',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Update',\n\t\t\t\t\t\tvalue: 'update',\n\t\t\t\t\t\tdescription: 'Update a row',\n\t\t\t\t\t\trouting: {\n\t\t\t\t\t\t\tsend: {\n\t\t\t\t\t\t\t\tpreSend: [this.presendCreateUpdate],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\trequest: {\n\t\t\t\t\t\t\t\tmethod: 'PUT',\n\t\t\t\t\t\t\t\turl: '=/collections/{{$parameter[\"collectionId\"]}}/{{$parameter[\"rowId\"]}}',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\taction: 'Update a row',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'getAll',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Collection ID',\n\t\t\t\tname: 'collectionId',\n\t\t\t\ttype: 'string',\n\t\t\t\trequired: true,\n\t\t\t\tdefault: '',\n\t\t\t\tdescription:\n\t\t\t\t\t'Open your Adalo application and click on the three buttons beside the collection name, then select API Documentation',\n\t\t\t\thint: \"You can find information about app's collections on https://app.adalo.com/apps/<strong>your-app-id</strong>/api-docs\",\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['collection'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t...collectionFields,\n\t\t],\n\t};\n\n\tasync presendCreateUpdate(\n\t\tthis: IExecuteSingleFunctions,\n\t\trequestOptions: IHttpRequestOptions,\n\t): Promise<IHttpRequestOptions> {\n\t\tconst dataToSend = this.getNodeParameter('dataToSend', 0) as 'defineBelow' | 'autoMapInputData';\n\n\t\trequestOptions.body = {};\n\n\t\tif (dataToSend === 'autoMapInputData') {\n\t\t\tconst inputData = this.getInputData();\n\t\t\tconst rawInputsToIgnore = this.getNodeParameter('inputsToIgnore') as string;\n\n\t\t\tconst inputKeysToIgnore = rawInputsToIgnore.split(',').map((c) => c.trim());\n\t\t\tconst inputKeys = Object.keys(inputData.json).filter(\n\t\t\t\t(key) => !inputKeysToIgnore.includes(key),\n\t\t\t);\n\n\t\t\tfor (const key of inputKeys) {\n\t\t\t\t(requestOptions.body as IDataObject)[key] = inputData.json[key];\n\t\t\t}\n\t\t} else {\n\t\t\tconst fields = this.getNodeParameter('fieldsUi.fieldValues') as FieldsUiValues;\n\n\t\t\tfor (const field of fields) {\n\t\t\t\t(requestOptions.body as IDataObject)[field.fieldId] = field.fieldValue;\n\t\t\t}\n\t\t}\n\n\t\treturn requestOptions;\n\t}\n}\n"],"mappings":"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","names":[]}