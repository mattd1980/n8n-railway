{"version":3,"sources":["../../../nodes/Mocean/Mocean.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tICredentialsDecrypted,\n\tICredentialTestFunctions,\n\tIDataObject,\n\tINodeCredentialTestResult,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n\tJsonObject,\n\tIHttpRequestMethods,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport { moceanApiRequest } from './GenericFunctions';\n\nexport class Mocean implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Mocean',\n\t\tname: 'mocean',\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\ticon: { light: 'file:mocean.svg', dark: 'file:mocean.dark.svg' },\n\t\tgroup: ['transform'],\n\t\tversion: 1,\n\t\tdescription: 'Send SMS and voice messages via Mocean',\n\t\tdefaults: {\n\t\t\tname: 'Mocean',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'moceanApi',\n\t\t\t\trequired: true,\n\t\t\t\ttestedBy: 'moceanApiTest',\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t// Node properties which the user gets displayed and\n\t\t\t// can change on the node.\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'SMS',\n\t\t\t\t\t\tvalue: 'sms',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Voice',\n\t\t\t\t\t\tvalue: 'voice',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'sms',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['sms', 'voice'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Send',\n\t\t\t\t\t\tvalue: 'send',\n\t\t\t\t\t\tdescription: 'Send SMS/Voice message',\n\t\t\t\t\t\taction: 'Send an SMS',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'send',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'From',\n\t\t\t\tname: 'from',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tplaceholder: 'Sender Number',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['send'],\n\t\t\t\t\t\tresource: ['sms', 'voice'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'Number to which to send the message',\n\t\t\t},\n\n\t\t\t{\n\t\t\t\tdisplayName: 'To',\n\t\t\t\tname: 'to',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tplaceholder: 'Receipient number',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['send'],\n\t\t\t\t\t\tresource: ['sms', 'voice'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'Number from which to send the message',\n\t\t\t},\n\n\t\t\t{\n\t\t\t\tdisplayName: 'Language',\n\t\t\t\tname: 'language',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Chinese Mandarin (China)',\n\t\t\t\t\t\tvalue: 'cmn-CN',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'English (United Kingdom)',\n\t\t\t\t\t\tvalue: 'en-GB',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'English (United States)',\n\t\t\t\t\t\tvalue: 'en-US',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Japanese (Japan)',\n\t\t\t\t\t\tvalue: 'ja-JP',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Korean (Korea)',\n\t\t\t\t\t\tvalue: 'ko-KR',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['send'],\n\t\t\t\t\t\tresource: ['voice'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: 'en-US',\n\t\t\t},\n\n\t\t\t{\n\t\t\t\tdisplayName: 'Message',\n\t\t\t\tname: 'message',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tplaceholder: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['send'],\n\t\t\t\t\t\tresource: ['sms', 'voice'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'Message to send',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Options',\n\t\t\t\tname: 'options',\n\t\t\t\ttype: 'collection',\n\t\t\t\tplaceholder: 'Add Field',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['send'],\n\t\t\t\t\t\tresource: ['sms'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: {},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Delivery Report URL',\n\t\t\t\t\t\tname: 'dlrUrl',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tplaceholder: '',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t};\n\n\tmethods = {\n\t\tcredentialTest: {\n\t\t\tasync moceanApiTest(\n\t\t\t\tthis: ICredentialTestFunctions,\n\t\t\t\tcredential: ICredentialsDecrypted,\n\t\t\t): Promise<INodeCredentialTestResult> {\n\t\t\t\tconst credentials = credential.data;\n\t\t\t\tconst query: IDataObject = {};\n\t\t\t\tquery['mocean-api-key'] = credentials!['mocean-api-key'];\n\t\t\t\tquery['mocean-api-secret'] = credentials!['mocean-api-secret'];\n\n\t\t\t\tconst options = {\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\tqs: query,\n\t\t\t\t\turi: 'https://rest.moceanapi.com/rest/2/account/balance',\n\t\t\t\t\tjson: true,\n\t\t\t\t};\n\t\t\t\ttry {\n\t\t\t\t\tawait this.helpers.request(options);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tstatus: 'Error',\n\t\t\t\t\t\tmessage: `Connection details not valid: ${(error as JsonObject).message}`,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tstatus: 'OK',\n\t\t\t\t\tmessage: 'Authentication successful!',\n\t\t\t\t};\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: IDataObject[] = [];\n\n\t\tlet endpoint: string;\n\t\tlet operation: string;\n\t\tlet requestMethod: IHttpRequestMethods;\n\t\tlet resource: string;\n\t\tlet text: string;\n\t\tlet dlrUrl: string;\n\t\tlet dataKey: string;\n\t\t// For Post\n\t\tlet body: IDataObject;\n\t\t// For Query string\n\t\tlet qs: IDataObject;\n\n\t\tfor (let itemIndex = 0; itemIndex < items.length; itemIndex++) {\n\t\t\tbody = {};\n\t\t\tqs = {};\n\t\t\ttry {\n\t\t\t\tresource = this.getNodeParameter('resource', itemIndex, '');\n\t\t\t\toperation = this.getNodeParameter('operation', itemIndex, '');\n\t\t\t\ttext = this.getNodeParameter('message', itemIndex, '') as string;\n\t\t\t\trequestMethod = 'POST';\n\t\t\t\tbody['mocean-from'] = this.getNodeParameter('from', itemIndex, '') as string;\n\t\t\t\tbody['mocean-to'] = this.getNodeParameter('to', itemIndex, '') as string;\n\n\t\t\t\tif (resource === 'voice') {\n\t\t\t\t\tconst language: string = this.getNodeParameter('language', itemIndex) as string;\n\t\t\t\t\tconst command = [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taction: 'say',\n\t\t\t\t\t\t\tlanguage,\n\t\t\t\t\t\t\ttext,\n\t\t\t\t\t\t},\n\t\t\t\t\t];\n\n\t\t\t\t\tdataKey = 'voice';\n\t\t\t\t\tbody['mocean-command'] = JSON.stringify(command);\n\t\t\t\t\tendpoint = '/rest/2/voice/dial';\n\t\t\t\t} else if (resource === 'sms') {\n\t\t\t\t\tdlrUrl = this.getNodeParameter('options.dlrUrl', itemIndex, '') as string;\n\t\t\t\t\tdataKey = 'messages';\n\t\t\t\t\tbody['mocean-text'] = text;\n\t\t\t\t\tif (dlrUrl !== '') {\n\t\t\t\t\t\tbody['mocean-dlr-url'] = dlrUrl;\n\t\t\t\t\t\tbody['mocean-dlr-mask'] = '1';\n\t\t\t\t\t}\n\t\t\t\t\tendpoint = '/rest/2/sms';\n\t\t\t\t} else {\n\t\t\t\t\tthrow new NodeOperationError(this.getNode(), `Unknown resource ${resource}`, {\n\t\t\t\t\t\titemIndex,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (operation === 'send') {\n\t\t\t\t\tconst responseData = await moceanApiRequest.call(this, requestMethod, endpoint, body, qs);\n\n\t\t\t\t\tfor (const item of responseData[dataKey] as IDataObject[]) {\n\t\t\t\t\t\titem.type = resource;\n\t\t\t\t\t\treturnData.push(item);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new NodeOperationError(this.getNode(), `Unknown operation ${operation}`, {\n\t\t\t\t\t\titemIndex,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\treturnData.push({ error: (error as JsonObject).message });\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn [this.helpers.returnJsonArray(returnData)];\n\t}\n}\n"],"mappings":"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","names":[]}