{"version":3,"sources":["../../../nodes/Mocean/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIHookFunctions,\n\tIDataObject,\n\tJsonObject,\n\tIHttpRequestMethods,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\n/**\n * Make an API request to Twilio\n *\n */\nexport async function moceanApiRequest(\n\tthis: IHookFunctions | IExecuteFunctions,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\tbody: IDataObject,\n\tquery?: IDataObject,\n): Promise<any> {\n\tconst credentials = await this.getCredentials('moceanApi');\n\n\tif (query === undefined) {\n\t\tquery = {};\n\t}\n\n\tif (method === 'POST') {\n\t\tbody['mocean-api-key'] = credentials['mocean-api-key'];\n\t\tbody['mocean-api-secret'] = credentials['mocean-api-secret'];\n\t\tbody['mocean-resp-format'] = 'JSON';\n\t} else if (method === 'GET') {\n\t\tquery['mocean-api-key'] = credentials['mocean-api-key'];\n\t\tquery['mocean-api-secret'] = credentials['mocean-api-secret'];\n\t\tquery['mocean-resp-format'] = 'JSON';\n\t}\n\n\tconst options = {\n\t\tmethod,\n\t\tform: body,\n\t\tqs: query,\n\t\turi: `https://rest.moceanapi.com${endpoint}`,\n\t\tjson: true,\n\t};\n\n\ttry {\n\t\treturn await this.helpers.request(options);\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,0BAA6B;AAM7B,eAAsB,iBAErB,QACA,UACA,MACA,OACe;AACf,QAAM,cAAc,MAAM,KAAK,eAAe,WAAW;AAEzD,MAAI,UAAU,QAAW;AACxB,YAAQ,CAAC;AAAA,EACV;AAEA,MAAI,WAAW,QAAQ;AACtB,SAAK,gBAAgB,IAAI,YAAY,gBAAgB;AACrD,SAAK,mBAAmB,IAAI,YAAY,mBAAmB;AAC3D,SAAK,oBAAoB,IAAI;AAAA,EAC9B,WAAW,WAAW,OAAO;AAC5B,UAAM,gBAAgB,IAAI,YAAY,gBAAgB;AACtD,UAAM,mBAAmB,IAAI,YAAY,mBAAmB;AAC5D,UAAM,oBAAoB,IAAI;AAAA,EAC/B;AAEA,QAAM,UAAU;AAAA,IACf;AAAA,IACA,MAAM;AAAA,IACN,IAAI;AAAA,IACJ,KAAK,6BAA6B,QAAQ;AAAA,IAC1C,MAAM;AAAA,EACP;AAEA,MAAI;AACH,WAAO,MAAM,KAAK,QAAQ,QAAQ,OAAO;AAAA,EAC1C,SAAS,OAAO;AACf,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,KAAmB;AAAA,EAC3D;AACD;","names":[]}