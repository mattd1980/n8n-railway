{"version":3,"sources":["../../../nodes/Bitbucket/BitbucketTrigger.node.ts"],"sourcesContent":["import {\n\ttype IHookFunctions,\n\ttype IWebhookFunctions,\n\ttype ICredentialsDecrypted,\n\ttype ICredentialTestFunctions,\n\ttype IDataObject,\n\ttype ILoadOptionsFunctions,\n\ttype INodeCredentialTestResult,\n\ttype INodePropertyOptions,\n\ttype INodeType,\n\ttype INodeTypeDescription,\n\ttype IWebhookResponseData,\n\ttype IRequestOptions,\n\tNodeConnectionTypes,\n} from 'n8n-workflow';\n\nimport { bitbucketApiRequest, bitbucketApiRequestAllItems } from './GenericFunctions';\n\nexport class BitbucketTrigger implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Bitbucket Trigger',\n\t\tname: 'bitbucketTrigger',\n\t\ticon: 'file:bitbucket.svg',\n\t\tgroup: ['trigger'],\n\t\tversion: 1,\n\t\tdescription: 'Handle Bitbucket events via webhooks',\n\t\tdefaults: {\n\t\t\tname: 'Bitbucket Trigger',\n\t\t},\n\t\tinputs: [],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'bitbucketApi',\n\t\t\t\trequired: true,\n\t\t\t\ttestedBy: 'bitbucketApiTest',\n\t\t\t},\n\t\t],\n\t\twebhooks: [\n\t\t\t{\n\t\t\t\tname: 'default',\n\t\t\t\thttpMethod: 'POST',\n\t\t\t\tresponseMode: 'onReceived',\n\t\t\t\tpath: 'webhook',\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\trequired: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Repository',\n\t\t\t\t\t\tvalue: 'repository',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Workspace',\n\t\t\t\t\t\tvalue: 'workspace',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'workspace',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Workspace Name or ID',\n\t\t\t\tname: 'workspace',\n\t\t\t\ttype: 'options',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['workspace', 'repository'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getWorkspaces',\n\t\t\t\t},\n\t\t\t\trequired: true,\n\t\t\t\tdefault: '',\n\t\t\t\tdescription:\n\t\t\t\t\t'The repository of which to listen to the events. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Event Names or IDs',\n\t\t\t\tname: 'events',\n\t\t\t\ttype: 'multiOptions',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['workspace'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getWorkspaceEvents',\n\t\t\t\t},\n\t\t\t\toptions: [],\n\t\t\t\trequired: true,\n\t\t\t\tdefault: [],\n\t\t\t\tdescription:\n\t\t\t\t\t'The events to listen to. Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Repository Name or ID',\n\t\t\t\tname: 'repository',\n\t\t\t\ttype: 'options',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['repository'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getRepositories',\n\t\t\t\t\tloadOptionsDependsOn: ['workspace'],\n\t\t\t\t},\n\t\t\t\trequired: true,\n\t\t\t\tdefault: '',\n\t\t\t\tdescription:\n\t\t\t\t\t'The repository of which to listen to the events. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Event Names or IDs',\n\t\t\t\tname: 'events',\n\t\t\t\ttype: 'multiOptions',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['repository'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getRepositoriesEvents',\n\t\t\t\t},\n\t\t\t\toptions: [],\n\t\t\t\trequired: true,\n\t\t\t\tdefault: [],\n\t\t\t\tdescription:\n\t\t\t\t\t'The events to listen to. Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t},\n\t\t],\n\t};\n\n\tmethods = {\n\t\tcredentialTest: {\n\t\t\tasync bitbucketApiTest(\n\t\t\t\tthis: ICredentialTestFunctions,\n\t\t\t\tcredential: ICredentialsDecrypted,\n\t\t\t): Promise<INodeCredentialTestResult> {\n\t\t\t\tconst credentials = credential.data;\n\n\t\t\t\tconst options: IRequestOptions = {\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\tauth: {\n\t\t\t\t\t\tuser: credentials!.username as string,\n\t\t\t\t\t\tpassword: credentials!.appPassword as string,\n\t\t\t\t\t},\n\t\t\t\t\turi: 'https://api.bitbucket.org/2.0/user',\n\t\t\t\t\tjson: true,\n\t\t\t\t\ttimeout: 5000,\n\t\t\t\t};\n\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await this.helpers.request(options);\n\t\t\t\t\tif (!response.username) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tstatus: 'Error',\n\t\t\t\t\t\t\tmessage: `Token is not valid: ${response.error}`,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tstatus: 'Error',\n\t\t\t\t\t\tmessage: `Settings are not valid: ${error}`,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tstatus: 'OK',\n\t\t\t\t\tmessage: 'Authentication successful!',\n\t\t\t\t};\n\t\t\t},\n\t\t},\n\t\tloadOptions: {\n\t\t\tasync getWorkspaceEvents(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst events = await bitbucketApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'values',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/hook_events/workspace',\n\t\t\t\t);\n\t\t\t\tfor (const event of events) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: event.event,\n\t\t\t\t\t\tvalue: event.event,\n\t\t\t\t\t\tdescription: event.description,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\tasync getRepositoriesEvents(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst events = await bitbucketApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'values',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/hook_events/repository',\n\t\t\t\t);\n\t\t\t\tfor (const event of events) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: event.event,\n\t\t\t\t\t\tvalue: event.event,\n\t\t\t\t\t\tdescription: event.description,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\tasync getRepositories(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst workspace = this.getCurrentNodeParameter('workspace') as string;\n\t\t\t\tconst repositories = await bitbucketApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'values',\n\t\t\t\t\t'GET',\n\t\t\t\t\t`/repositories/${workspace}`,\n\t\t\t\t);\n\t\t\t\tfor (const repository of repositories) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: repository.slug,\n\t\t\t\t\t\tvalue: repository.slug,\n\t\t\t\t\t\tdescription: repository.description,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\tasync getWorkspaces(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst workspaces = await bitbucketApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'values',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/workspaces',\n\t\t\t\t);\n\t\t\t\tfor (const workspace of workspaces) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: workspace.name,\n\t\t\t\t\t\tvalue: workspace.slug,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\twebhookMethods = {\n\t\tdefault: {\n\t\t\tasync checkExists(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tlet endpoint = '';\n\t\t\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\t\t\tconst workspace = this.getNodeParameter('workspace', 0) as string;\n\t\t\t\tconst webhookUrl = this.getNodeWebhookUrl('default');\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tif (resource === 'workspace') {\n\t\t\t\t\tendpoint = `/workspaces/${workspace}/hooks`;\n\t\t\t\t}\n\t\t\t\tif (resource === 'repository') {\n\t\t\t\t\tconst repository = this.getNodeParameter('repository', 0) as string;\n\t\t\t\t\tendpoint = `/repositories/${workspace}/${repository}/hooks`;\n\t\t\t\t}\n\t\t\t\tconst { values: hooks } = await bitbucketApiRequest.call(this, 'GET', endpoint);\n\t\t\t\tfor (const hook of hooks) {\n\t\t\t\t\tif (webhookUrl === hook.url && hook.active === true) {\n\t\t\t\t\t\twebhookData.webhookId = hook.uuid.replace('{', '').replace('}', '');\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tasync create(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tlet endpoint = '';\n\t\t\t\tconst webhookUrl = this.getNodeWebhookUrl('default');\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tconst events = this.getNodeParameter('events') as string[];\n\t\t\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\t\t\tconst workspace = this.getNodeParameter('workspace', 0) as string;\n\n\t\t\t\tif (resource === 'workspace') {\n\t\t\t\t\tendpoint = `/workspaces/${workspace}/hooks`;\n\t\t\t\t}\n\t\t\t\tif (resource === 'repository') {\n\t\t\t\t\tconst repository = this.getNodeParameter('repository', 0) as string;\n\t\t\t\t\tendpoint = `/repositories/${workspace}/${repository}/hooks`;\n\t\t\t\t}\n\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\tdescription: 'n8n webhook',\n\t\t\t\t\turl: webhookUrl,\n\t\t\t\t\tactive: true,\n\t\t\t\t\tevents,\n\t\t\t\t};\n\t\t\t\tconst responseData = await bitbucketApiRequest.call(this, 'POST', endpoint, body);\n\t\t\t\twebhookData.webhookId = responseData.uuid.replace('{', '').replace('}', '');\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tasync delete(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tlet endpoint = '';\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tconst workspace = this.getNodeParameter('workspace', 0) as string;\n\t\t\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\t\t\tif (resource === 'workspace') {\n\t\t\t\t\tendpoint = `/workspaces/${workspace}/hooks/${webhookData.webhookId}`;\n\t\t\t\t}\n\t\t\t\tif (resource === 'repository') {\n\t\t\t\t\tconst repository = this.getNodeParameter('repository', 0) as string;\n\t\t\t\t\tendpoint = `/repositories/${workspace}/${repository}/hooks/${webhookData.webhookId}`;\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tawait bitbucketApiRequest.call(this, 'DELETE', endpoint);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tdelete webhookData.webhookId;\n\t\t\t\treturn true;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync webhook(this: IWebhookFunctions): Promise<IWebhookResponseData> {\n\t\tconst req = this.getRequestObject();\n\t\tconst headerData = this.getHeaderData() as IDataObject;\n\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\tif (headerData['x-hook-uuid'] !== webhookData.webhookId) {\n\t\t\treturn {};\n\t\t}\n\t\treturn {\n\t\t\tworkflowData: [this.helpers.returnJsonArray(req.body as IDataObject[])],\n\t\t};\n\t}\n}\n"],"mappings":"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","names":[]}