{"version":3,"sources":["../../../nodes/MonicaCrm/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tJsonObject,\n\tIHttpRequestMethods,\n\tIRequestOptions,\n} from 'n8n-workflow';\nimport { NodeApiError, NodeOperationError } from 'n8n-workflow';\n\nimport type { LoaderGetResponse } from './types';\n\nexport async function monicaCrmApiRequest(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\tbody: IDataObject = {},\n\tqs: IDataObject = {},\n) {\n\tconst credentials = await this.getCredentials<{\n\t\tapiToken: string;\n\t\tenvironment: string;\n\t\tdomain: string;\n\t}>('monicaCrmApi');\n\n\tif (credentials === undefined) {\n\t\tthrow new NodeOperationError(this.getNode(), 'No credentials got returned!');\n\t}\n\n\tlet baseUrl = 'https://app.monicahq.com';\n\n\tif (credentials.environment === 'selfHosted') {\n\t\tbaseUrl = credentials.domain;\n\t}\n\n\tconst options: IRequestOptions = {\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${credentials.apiToken}`,\n\t\t},\n\t\tmethod,\n\t\tbody,\n\t\tqs,\n\t\turi: `${baseUrl}/api${endpoint}`,\n\t\tjson: true,\n\t};\n\n\tif (!Object.keys(body).length) {\n\t\tdelete options.body;\n\t}\n\n\tif (!Object.keys(qs).length) {\n\t\tdelete options.qs;\n\t}\n\n\ttry {\n\t\treturn await this.helpers.request(options);\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\nexport async function monicaCrmApiRequestAllItems(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\tbody: IDataObject = {},\n\tqs: IDataObject = {},\n\t{ forLoader }: { forLoader: boolean } = { forLoader: false },\n) {\n\tconst returnAll = this.getNodeParameter('returnAll', 0, false) as boolean;\n\tconst limit = this.getNodeParameter('limit', 0, 0) as number;\n\n\tlet totalItems = 0;\n\tqs.page = 1;\n\tqs.limit = 100;\n\n\tlet responseData;\n\tconst returnData: IDataObject[] = [];\n\n\tdo {\n\t\tresponseData = await monicaCrmApiRequest.call(this, method, endpoint, body, qs);\n\t\treturnData.push(...(responseData.data as IDataObject[]));\n\n\t\tif (!forLoader && !returnAll && returnData.length > limit) {\n\t\t\treturn returnData.slice(0, limit);\n\t\t}\n\t\tqs.page++;\n\t\ttotalItems = responseData.meta.total;\n\t} while (totalItems > returnData.length);\n\n\treturn returnData;\n}\n\n/**\n * Get day, month, and year from the n8n UI datepicker.\n */\nexport const getDateParts = (date: string) => date.split('T')[0].split('-').map(Number).reverse();\n\nexport const toOptions = (response: LoaderGetResponse) =>\n\tresponse.data.map(({ id, name }) => ({ value: id, name }));\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,0BAAiD;AAIjD,eAAsB,oBAErB,QACA,UACA,OAAoB,CAAC,GACrB,KAAkB,CAAC,GAClB;AACD,QAAM,cAAc,MAAM,KAAK,eAI5B,cAAc;AAEjB,MAAI,gBAAgB,QAAW;AAC9B,UAAM,IAAI,uCAAmB,KAAK,QAAQ,GAAG,8BAA8B;AAAA,EAC5E;AAEA,MAAI,UAAU;AAEd,MAAI,YAAY,gBAAgB,cAAc;AAC7C,cAAU,YAAY;AAAA,EACvB;AAEA,QAAM,UAA2B;AAAA,IAChC,SAAS;AAAA,MACR,eAAe,UAAU,YAAY,QAAQ;AAAA,IAC9C;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,KAAK,GAAG,OAAO,OAAO,QAAQ;AAAA,IAC9B,MAAM;AAAA,EACP;AAEA,MAAI,CAAC,OAAO,KAAK,IAAI,EAAE,QAAQ;AAC9B,WAAO,QAAQ;AAAA,EAChB;AAEA,MAAI,CAAC,OAAO,KAAK,EAAE,EAAE,QAAQ;AAC5B,WAAO,QAAQ;AAAA,EAChB;AAEA,MAAI;AACH,WAAO,MAAM,KAAK,QAAQ,QAAQ,OAAO;AAAA,EAC1C,SAAS,OAAO;AACf,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,KAAmB;AAAA,EAC3D;AACD;AAEA,eAAsB,4BAErB,QACA,UACA,OAAoB,CAAC,GACrB,KAAkB,CAAC,GACnB,EAAE,UAAU,IAA4B,EAAE,WAAW,MAAM,GAC1D;AACD,QAAM,YAAY,KAAK,iBAAiB,aAAa,GAAG,KAAK;AAC7D,QAAM,QAAQ,KAAK,iBAAiB,SAAS,GAAG,CAAC;AAEjD,MAAI,aAAa;AACjB,KAAG,OAAO;AACV,KAAG,QAAQ;AAEX,MAAI;AACJ,QAAM,aAA4B,CAAC;AAEnC,KAAG;AACF,mBAAe,MAAM,oBAAoB,KAAK,MAAM,QAAQ,UAAU,MAAM,EAAE;AAC9E,eAAW,KAAK,GAAI,aAAa,IAAsB;AAEvD,QAAI,CAAC,aAAa,CAAC,aAAa,WAAW,SAAS,OAAO;AAC1D,aAAO,WAAW,MAAM,GAAG,KAAK;AAAA,IACjC;AACA,OAAG;AACH,iBAAa,aAAa,KAAK;AAAA,EAChC,SAAS,aAAa,WAAW;AAEjC,SAAO;AACR;AAKO,MAAM,eAAe,CAAC,SAAiB,KAAK,MAAM,GAAG,EAAE,CAAC,EAAE,MAAM,GAAG,EAAE,IAAI,MAAM,EAAE,QAAQ;AAEzF,MAAM,YAAY,CAAC,aACzB,SAAS,KAAK,IAAI,CAAC,EAAE,IAAI,KAAK,OAAO,EAAE,OAAO,IAAI,KAAK,EAAE;","names":[]}