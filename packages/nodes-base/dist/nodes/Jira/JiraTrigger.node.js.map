{"version":3,"sources":["../../../nodes/Jira/JiraTrigger.node.ts"],"sourcesContent":["import type {\n\tICredentialDataDecryptedObject,\n\tIDataObject,\n\tIHookFunctions,\n\tIWebhookFunctions,\n\tINodeType,\n\tINodeTypeDescription,\n\tIWebhookResponseData,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport {\n\tallEvents,\n\teventExists,\n\tgetWebhookId,\n\tgetWebhookEndpoint,\n\tjiraSoftwareCloudApiRequest,\n} from './GenericFunctions';\nimport type { JiraWebhook } from './types';\n\nexport class JiraTrigger implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Jira Trigger',\n\t\tname: 'jiraTrigger',\n\t\ticon: 'file:jira.svg',\n\t\tgroup: ['trigger'],\n\t\tversion: [1, 1.1],\n\t\tdescription: 'Starts the workflow when Jira events occur',\n\t\tdefaults: {\n\t\t\tname: 'Jira Trigger',\n\t\t},\n\t\tinputs: [],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Credentials to Connect to Jira',\n\t\t\t\tname: 'jiraSoftwareCloudApi',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tjiraVersion: ['cloud'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Credentials to Connect to Jira',\n\t\t\t\tname: 'jiraSoftwareServerApi',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tjiraVersion: ['server'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Credentials to Connect to Jira',\n\t\t\t\tname: 'jiraSoftwareServerPatApi',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tjiraVersion: ['serverPat'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-class-description-credentials-name-unsuffixed\n\t\t\t\tname: 'httpQueryAuth',\n\t\t\t\tdisplayName: 'Credentials to Authenticate Webhook',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthenticateWebhook: [true],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'httpQueryAuth',\n\t\t\t\tdisplayName: 'Credentials to Authenticate Webhook',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tincomingAuthentication: ['queryAuth'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\twebhooks: [\n\t\t\t{\n\t\t\t\tname: 'default',\n\t\t\t\thttpMethod: 'POST',\n\t\t\t\tresponseMode: 'onReceived',\n\t\t\t\tpath: 'webhook',\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Jira Version',\n\t\t\t\tname: 'jiraVersion',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Cloud',\n\t\t\t\t\t\tvalue: 'cloud',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Server (Self Hosted)',\n\t\t\t\t\t\tvalue: 'server',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Server (Pat) (Self Hosted)',\n\t\t\t\t\t\tvalue: 'serverPat',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'cloud',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Authenticate Incoming Webhook',\n\t\t\t\tname: 'authenticateWebhook',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\tdescription:\n\t\t\t\t\t'Whether authentication should be activated for the incoming webhooks (makes it more secure)',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\t'@version': [{ _cnd: { gte: 1.1 } }],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Authenticate Webhook With',\n\t\t\t\tname: 'incomingAuthentication',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Query Auth',\n\t\t\t\t\t\tvalue: 'queryAuth',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'None',\n\t\t\t\t\t\tvalue: 'none',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'none',\n\t\t\t\tdescription: 'If authentication should be activated for the webhook (makes it more secure)',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\t'@version': [1],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Events',\n\t\t\t\tname: 'events',\n\t\t\t\ttype: 'multiOptions',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: '*',\n\t\t\t\t\t\tvalue: '*',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Board Configuration Changed',\n\t\t\t\t\t\tvalue: 'board_configuration_changed',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Board Created',\n\t\t\t\t\t\tvalue: 'board_created',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Board Deleted',\n\t\t\t\t\t\tvalue: 'board_deleted',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Board Updated',\n\t\t\t\t\t\tvalue: 'board_updated',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Comment Created',\n\t\t\t\t\t\tvalue: 'comment_created',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Comment Deleted',\n\t\t\t\t\t\tvalue: 'comment_deleted',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Comment Updated',\n\t\t\t\t\t\tvalue: 'comment_updated',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Issue Created',\n\t\t\t\t\t\tvalue: 'jira:issue_created',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Issue Deleted',\n\t\t\t\t\t\tvalue: 'jira:issue_deleted',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Issue Link Created',\n\t\t\t\t\t\tvalue: 'issuelink_created',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Issue Link Deleted',\n\t\t\t\t\t\tvalue: 'issuelink_deleted',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Issue Updated',\n\t\t\t\t\t\tvalue: 'jira:issue_updated',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Option Attachments Changed',\n\t\t\t\t\t\tvalue: 'option_attachments_changed',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Option Issue Links Changed',\n\t\t\t\t\t\tvalue: 'option_issuelinks_changed',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Option Subtasks Changed',\n\t\t\t\t\t\tvalue: 'option_subtasks_changed',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Option Timetracking Changed',\n\t\t\t\t\t\tvalue: 'option_timetracking_changed',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Option Unassigned Issues Changed',\n\t\t\t\t\t\tvalue: 'option_unassigned_issues_changed',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Option Voting Changed',\n\t\t\t\t\t\tvalue: 'option_voting_changed',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Option Watching Changed',\n\t\t\t\t\t\tvalue: 'option_watching_changed',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Project Created',\n\t\t\t\t\t\tvalue: 'project_created',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Project Deleted',\n\t\t\t\t\t\tvalue: 'project_deleted',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Project Updated',\n\t\t\t\t\t\tvalue: 'project_updated',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Sprint Closed',\n\t\t\t\t\t\tvalue: 'sprint_closed',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Sprint Created',\n\t\t\t\t\t\tvalue: 'sprint_created',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Sprint Deleted',\n\t\t\t\t\t\tvalue: 'sprint_deleted',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Sprint Started',\n\t\t\t\t\t\tvalue: 'sprint_started',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Sprint Updated',\n\t\t\t\t\t\tvalue: 'sprint_updated',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'User Created',\n\t\t\t\t\t\tvalue: 'user_created',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'User Deleted',\n\t\t\t\t\t\tvalue: 'user_deleted',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'User Updated',\n\t\t\t\t\t\tvalue: 'user_updated',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Version Created',\n\t\t\t\t\t\tvalue: 'jira:version_created',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Version Deleted',\n\t\t\t\t\t\tvalue: 'jira:version_deleted',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Version Moved',\n\t\t\t\t\t\tvalue: 'jira:version_moved',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Version Released',\n\t\t\t\t\t\tvalue: 'jira:version_released',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Version Unreleased',\n\t\t\t\t\t\tvalue: 'jira:version_unreleased',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Version Updated',\n\t\t\t\t\t\tvalue: 'jira:version_updated',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Worklog Created',\n\t\t\t\t\t\tvalue: 'worklog_created',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Worklog Deleted',\n\t\t\t\t\t\tvalue: 'worklog_deleted',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Worklog Updated',\n\t\t\t\t\t\tvalue: 'worklog_updated',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\trequired: true,\n\t\t\t\tdefault: [],\n\t\t\t\tdescription: 'The events to listen to',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Additional Fields',\n\t\t\t\tname: 'additionalFields',\n\t\t\t\ttype: 'collection',\n\t\t\t\tplaceholder: 'Add Field',\n\t\t\t\tdefault: {},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Exclude Body',\n\t\t\t\t\t\tname: 'excludeBody',\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Whether a request with empty body will be sent to the URL. Leave unchecked if you want to receive JSON.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Filter',\n\t\t\t\t\t\tname: 'filter',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tplaceholder: 'Project = JRA AND resolution = Fixed',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'You can specify a JQL query to send only events triggered by matching issues. The JQL filter only applies to events under the Issue and Comment columns.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Include Fields',\n\t\t\t\t\t\tname: 'includeFields',\n\t\t\t\t\t\ttype: 'multiOptions',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Attachment ID',\n\t\t\t\t\t\t\t\tvalue: 'attachment.id',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Board ID',\n\t\t\t\t\t\t\t\tvalue: 'board.id',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Comment ID',\n\t\t\t\t\t\t\t\tvalue: 'comment.id',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Issue ID',\n\t\t\t\t\t\t\t\tvalue: 'issue.id',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Merge Version ID',\n\t\t\t\t\t\t\t\tvalue: 'mergeVersion.id',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Modified User Account ID',\n\t\t\t\t\t\t\t\tvalue: 'modifiedUser.accountId',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Modified User Key',\n\t\t\t\t\t\t\t\tvalue: 'modifiedUser.key',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Modified User Name',\n\t\t\t\t\t\t\t\tvalue: 'modifiedUser.name',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Project ID',\n\t\t\t\t\t\t\t\tvalue: 'project.id',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Project Key',\n\t\t\t\t\t\t\t\tvalue: 'project.key',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Propery Key',\n\t\t\t\t\t\t\t\tvalue: 'property.key',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Sprint ID',\n\t\t\t\t\t\t\t\tvalue: 'sprint.id',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Version ID',\n\t\t\t\t\t\t\t\tvalue: 'version.id',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Worklog ID',\n\t\t\t\t\t\t\t\tvalue: 'worklog.id',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: [],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t};\n\n\twebhookMethods = {\n\t\tdefault: {\n\t\t\tasync checkExists(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookUrl = this.getNodeWebhookUrl('default') as string;\n\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\n\t\t\t\tconst events = this.getNodeParameter('events') as string[];\n\n\t\t\t\tconst endpoint = await getWebhookEndpoint.call(this);\n\t\t\t\twebhookData.endpoint = endpoint;\n\n\t\t\t\tconst webhooks: JiraWebhook[] = await jiraSoftwareCloudApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\tendpoint,\n\t\t\t\t\t'GET',\n\t\t\t\t\t{},\n\t\t\t\t);\n\n\t\t\t\tfor (const webhook of webhooks) {\n\t\t\t\t\tif (webhook.url === webhookUrl && eventExists(events, webhook.events)) {\n\t\t\t\t\t\twebhookData.webhookId = getWebhookId(webhook);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tasync create(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst nodeVersion = this.getNode().typeVersion;\n\t\t\t\tconst webhookUrl = this.getNodeWebhookUrl('default') as string;\n\t\t\t\tlet events = this.getNodeParameter('events', []) as string[];\n\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields') as IDataObject;\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tconst endpoint = webhookData.endpoint as string;\n\n\t\t\t\tlet authenticateWebhook = false;\n\n\t\t\t\tif (nodeVersion === 1) {\n\t\t\t\t\tconst incomingAuthentication = this.getNodeParameter('incomingAuthentication') as string;\n\n\t\t\t\t\tif (incomingAuthentication === 'queryAuth') {\n\t\t\t\t\t\tauthenticateWebhook = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tauthenticateWebhook = this.getNodeParameter('authenticateWebhook') as boolean;\n\t\t\t\t}\n\n\t\t\t\tif (events.includes('*')) {\n\t\t\t\t\tevents = allEvents;\n\t\t\t\t}\n\n\t\t\t\tconst body = {\n\t\t\t\t\tname: `n8n-webhook:${webhookUrl}`,\n\t\t\t\t\turl: webhookUrl,\n\t\t\t\t\tevents,\n\t\t\t\t\tfilters: {},\n\t\t\t\t\texcludeBody: false,\n\t\t\t\t};\n\n\t\t\t\tif (additionalFields.filter) {\n\t\t\t\t\tbody.filters = {\n\t\t\t\t\t\t'issue-related-events-section': additionalFields.filter,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (additionalFields.excludeBody) {\n\t\t\t\t\tbody.excludeBody = additionalFields.excludeBody as boolean;\n\t\t\t\t}\n\n\t\t\t\tconst parameters: Record<string, string> = {};\n\n\t\t\t\tif (authenticateWebhook) {\n\t\t\t\t\tlet httpQueryAuth;\n\t\t\t\t\ttry {\n\t\t\t\t\t\thttpQueryAuth = await this.getCredentials('httpQueryAuth');\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\tnew Error('Could not retrieve HTTP Query Auth credentials', { cause: e }),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (!httpQueryAuth.name && !httpQueryAuth.value) {\n\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'HTTP Query Auth credentials are empty');\n\t\t\t\t\t}\n\t\t\t\t\tparameters[encodeURIComponent(httpQueryAuth.name as string)] = Buffer.from(\n\t\t\t\t\t\thttpQueryAuth.value as string,\n\t\t\t\t\t).toString('base64');\n\t\t\t\t}\n\n\t\t\t\tif (additionalFields.includeFields) {\n\t\t\t\t\tfor (const field of additionalFields.includeFields as string[]) {\n\t\t\t\t\t\t// eslint-disable-next-line n8n-local-rules/no-interpolation-in-regular-string\n\t\t\t\t\t\tparameters[field] = '${' + field + '}';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (Object.keys(parameters as IDataObject).length) {\n\t\t\t\t\tconst params = new URLSearchParams(parameters).toString();\n\t\t\t\t\tbody.url = `${body.url}?${decodeURIComponent(params)}`;\n\t\t\t\t}\n\n\t\t\t\tconst responseData: JiraWebhook = await jiraSoftwareCloudApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\tendpoint,\n\t\t\t\t\t'POST',\n\t\t\t\t\tbody,\n\t\t\t\t);\n\n\t\t\t\twebhookData.webhookId = getWebhookId(responseData);\n\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tasync delete(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\n\t\t\t\tif (webhookData.webhookId !== undefined) {\n\t\t\t\t\tconst baseUrl = webhookData.endpoint as string;\n\t\t\t\t\tconst webhookId = webhookData.webhookId as string;\n\t\t\t\t\tconst endpoint = `${baseUrl}/${webhookId}`;\n\t\t\t\t\tconst body = {};\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait jiraSoftwareCloudApiRequest.call(this, endpoint, 'DELETE', body);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t// Remove from the static workflow data so that it is clear\n\t\t\t\t\t// that no webhooks are registered anymore\n\t\t\t\t\tdelete webhookData.webhookId;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync webhook(this: IWebhookFunctions): Promise<IWebhookResponseData> {\n\t\tconst nodeVersion = this.getNode().typeVersion;\n\t\tconst bodyData = this.getBodyData();\n\t\tconst queryData = this.getQueryData() as IDataObject;\n\t\tconst response = this.getResponseObject();\n\n\t\tlet authenticateWebhook = false;\n\n\t\tif (nodeVersion === 1) {\n\t\t\tconst incomingAuthentication = this.getNodeParameter('incomingAuthentication') as string;\n\n\t\t\tif (incomingAuthentication === 'queryAuth') {\n\t\t\t\tauthenticateWebhook = true;\n\t\t\t}\n\t\t} else {\n\t\t\tauthenticateWebhook = this.getNodeParameter('authenticateWebhook') as boolean;\n\t\t}\n\n\t\tif (authenticateWebhook) {\n\t\t\tlet httpQueryAuth: ICredentialDataDecryptedObject | undefined;\n\n\t\t\ttry {\n\t\t\t\thttpQueryAuth = await this.getCredentials<ICredentialDataDecryptedObject>('httpQueryAuth');\n\t\t\t} catch (error) {}\n\n\t\t\tif (httpQueryAuth === undefined || !httpQueryAuth.name || !httpQueryAuth.value) {\n\t\t\t\tresponse\n\t\t\t\t\t.status(403)\n\t\t\t\t\t.json({ message: 'Auth settings are not valid, some data are missing' });\n\n\t\t\t\treturn {\n\t\t\t\t\tnoWebhookResponse: true,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst paramName = httpQueryAuth.name as string;\n\t\t\tconst paramValue = Buffer.from(httpQueryAuth.value as string).toString('base64');\n\n\t\t\tif (!queryData.hasOwnProperty(paramName) || queryData[paramName] !== paramValue) {\n\t\t\t\tresponse.status(403).json({ message: 'Provided authentication data is not valid' });\n\n\t\t\t\treturn {\n\t\t\t\t\tnoWebhookResponse: true,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tdelete queryData[paramName];\n\n\t\t\tObject.assign(bodyData, queryData);\n\t\t} else {\n\t\t\tObject.assign(bodyData, queryData);\n\t\t}\n\n\t\treturn {\n\t\t\tworkflowData: [this.helpers.returnJsonArray(bodyData)],\n\t\t};\n\t}\n}\n"],"mappings":"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,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC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","names":[]}