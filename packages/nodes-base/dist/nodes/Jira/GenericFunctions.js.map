{"version":3,"sources":["../../../nodes/Jira/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHookFunctions,\n\tIHttpRequestMethods,\n\tILoadOptionsFunctions,\n\tINodeListSearchItems,\n\tINodePropertyOptions,\n\tIRequestOptions,\n\tJsonObject,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\nimport type { JiraServerInfo, JiraWebhook } from './types';\n\nexport async function jiraSoftwareCloudApiRequest(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tendpoint: string,\n\tmethod: IHttpRequestMethods,\n\tbody: any = {},\n\tquery?: IDataObject,\n\turi?: string,\n\toption: IDataObject = {},\n): Promise<any> {\n\tconst jiraVersion = this.getNodeParameter('jiraVersion', 0) as string;\n\n\tlet domain = '';\n\tlet credentialType: string;\n\n\tif (jiraVersion === 'server') {\n\t\tdomain = (await this.getCredentials('jiraSoftwareServerApi')).domain as string;\n\t\tcredentialType = 'jiraSoftwareServerApi';\n\t} else if (jiraVersion === 'serverPat') {\n\t\tdomain = (await this.getCredentials('jiraSoftwareServerPatApi')).domain as string;\n\t\tcredentialType = 'jiraSoftwareServerPatApi';\n\t} else {\n\t\tdomain = (await this.getCredentials('jiraSoftwareCloudApi')).domain as string;\n\t\tcredentialType = 'jiraSoftwareCloudApi';\n\t}\n\n\tconst options: IRequestOptions = {\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\t'X-Atlassian-Token': 'no-check',\n\t\t},\n\t\tmethod,\n\t\tqs: query,\n\t\turi: uri || `${domain}/rest${endpoint}`,\n\t\tbody,\n\t\tjson: true,\n\t};\n\n\tif (Object.keys(option).length !== 0) {\n\t\tObject.assign(options, option);\n\t}\n\n\tif (Object.keys(body as IDataObject).length === 0) {\n\t\tdelete options.body;\n\t}\n\n\tif (Object.keys(query || {}).length === 0) {\n\t\tdelete options.qs;\n\t}\n\ttry {\n\t\treturn await this.helpers.requestWithAuthentication.call(this, credentialType, options);\n\t} catch (error) {\n\t\tif (error.description?.includes?.(\"Field 'priority' cannot be set\")) {\n\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject, {\n\t\t\t\tmessage:\n\t\t\t\t\t\"Field 'priority' cannot be set. You need to add the Priority field to your Jira Project's Issue Types.\",\n\t\t\t});\n\t\t}\n\t\tthrow error;\n\t}\n}\n\nexport function handlePagination(\n\tbody: any,\n\tquery: IDataObject,\n\tpaginationType: 'offset' | 'token',\n\tresponseData?: any,\n): boolean {\n\tif (!responseData) {\n\t\tif (paginationType === 'offset') {\n\t\t\tquery.startAt = 0;\n\t\t\tquery.maxResults = 100;\n\t\t} else {\n\t\t\tbody.maxResults = 100;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tif (paginationType === 'offset') {\n\t\tconst nextStartAt = (responseData.startAt as number) + (responseData.maxResults as number);\n\t\tquery.startAt = nextStartAt;\n\t\treturn nextStartAt < responseData.total;\n\t} else {\n\t\tbody.nextPageToken = responseData.nextPageToken as string;\n\t\treturn !!responseData.nextPageToken;\n\t}\n}\n\nexport async function jiraSoftwareCloudApiRequestAllItems(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tpropertyName: string,\n\tendpoint: string,\n\tmethod: IHttpRequestMethods,\n\tbody: any = {},\n\tquery: IDataObject = {},\n\tpaginationType: 'offset' | 'token' = 'offset',\n): Promise<any> {\n\tconst returnData: IDataObject[] = [];\n\n\tlet responseData;\n\tlet hasNextPage = handlePagination(body, query, paginationType);\n\tdo {\n\t\tresponseData = await jiraSoftwareCloudApiRequest.call(this, endpoint, method, body, query);\n\t\treturnData.push.apply(returnData, responseData[propertyName] as IDataObject[]);\n\t\thasNextPage = handlePagination(body, query, paginationType, responseData);\n\t} while (hasNextPage);\n\n\treturn returnData;\n}\n\nexport function validateJSON(json: string | undefined): any {\n\tlet result;\n\ttry {\n\t\tresult = JSON.parse(json!);\n\t} catch (exception) {\n\t\tresult = '';\n\t}\n\treturn result;\n}\n\nexport function eventExists(currentEvents: string[], webhookEvents: string[]) {\n\tfor (const currentEvent of currentEvents) {\n\t\tif (!webhookEvents.includes(currentEvent)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nexport function getWebhookId(webhook: JiraWebhook) {\n\tif (webhook.id) return webhook.id.toString();\n\treturn webhook.self?.split('/').pop();\n}\n\nexport function simplifyIssueOutput(responseData: {\n\tnames: { [key: string]: string };\n\tfields: IDataObject;\n\tid: string;\n\tkey: string;\n\tself: string;\n}) {\n\tconst mappedFields: IDataObject = {\n\t\tid: responseData.id,\n\t\tkey: responseData.key,\n\t\tself: responseData.self,\n\t};\n\t// Sort custom fields last so we map them last\n\tconst customField = /^customfield_\\d+$/;\n\tconst sortedFields: string[] = Object.keys(responseData.fields).sort((a, b) => {\n\t\tif (customField.test(a) && customField.test(b)) {\n\t\t\treturn a > b ? 1 : -1;\n\t\t}\n\t\tif (customField.test(a)) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (customField.test(b)) {\n\t\t\treturn -1;\n\t\t}\n\t\treturn a > b ? 1 : -1;\n\t});\n\tfor (const field of sortedFields) {\n\t\tif (responseData.names[field] in mappedFields) {\n\t\t\tlet newField: string = responseData.names[field];\n\t\t\tlet counter = 0;\n\t\t\twhile (newField in mappedFields) {\n\t\t\t\tcounter++;\n\t\t\t\tnewField = `${responseData.names[field]}_${counter}`;\n\t\t\t}\n\t\t\tmappedFields[newField] = responseData.fields[field];\n\t\t} else {\n\t\t\tmappedFields[responseData.names[field] || field] = responseData.fields[field];\n\t\t}\n\t}\n\n\treturn mappedFields;\n}\n\nexport const allEvents = [\n\t'board_created',\n\t'board_updated',\n\t'board_deleted',\n\t'board_configuration_changed',\n\t'comment_created',\n\t'comment_updated',\n\t'comment_deleted',\n\t'jira:issue_created',\n\t'jira:issue_updated',\n\t'jira:issue_deleted',\n\t'option_voting_changed',\n\t'option_watching_changed',\n\t'option_unassigned_issues_changed',\n\t'option_subtasks_changed',\n\t'option_attachments_changed',\n\t'option_issuelinks_changed',\n\t'option_timetracking_changed',\n\t'project_created',\n\t'project_updated',\n\t'project_deleted',\n\t'sprint_created',\n\t'sprint_deleted',\n\t'sprint_updated',\n\t'sprint_started',\n\t'sprint_closed',\n\t'user_created',\n\t'user_updated',\n\t'user_deleted',\n\t'jira:version_released',\n\t'jira:version_unreleased',\n\t'jira:version_created',\n\t'jira:version_moved',\n\t'jira:version_updated',\n\t'jira:version_deleted',\n\t'issuelink_created',\n\t'issuelink_deleted',\n\t'worklog_created',\n\t'worklog_updated',\n\t'worklog_deleted',\n];\n\nexport function filterSortSearchListItems(items: INodeListSearchItems[], filter?: string) {\n\treturn items\n\t\t.filter(\n\t\t\t(item) =>\n\t\t\t\t!filter ||\n\t\t\t\titem.name.toLowerCase().includes(filter.toLowerCase()) ||\n\t\t\t\titem.value.toString().toLowerCase().includes(filter.toLowerCase()),\n\t\t)\n\t\t.sort((a, b) => {\n\t\t\tif (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn 0;\n\t\t});\n}\n\nexport async function getUsers(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\tconst jiraVersion = this.getCurrentNodeParameter('jiraVersion') as string;\n\tconst maxResults = 1000;\n\tconst query: IDataObject = { maxResults };\n\tlet endpoint = '/api/2/users/search';\n\n\tif (jiraVersion === 'server' || jiraVersion === 'serverPat') {\n\t\tendpoint = '/api/2/user/search';\n\t\tquery.username = \"'\";\n\t}\n\n\tconst users = [];\n\tlet hasNextPage: boolean;\n\n\tdo {\n\t\tconst usersPage = (await jiraSoftwareCloudApiRequest.call(\n\t\t\tthis,\n\t\t\tendpoint,\n\t\t\t'GET',\n\t\t\t{},\n\t\t\t{ ...query, startAt: users.length },\n\t\t)) as IDataObject[];\n\t\tusers.push(...usersPage);\n\t\thasNextPage = usersPage.length === maxResults;\n\t} while (hasNextPage);\n\n\treturn users\n\t\t.filter((user) => user.active)\n\t\t.map((user) => ({\n\t\t\tname: user.displayName as string,\n\t\t\tvalue: (user.accountId ?? user.name) as string,\n\t\t}))\n\t\t.sort((a: INodePropertyOptions, b: INodePropertyOptions) => {\n\t\t\treturn a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1;\n\t\t});\n}\n\nexport async function getServerInfo(this: IHookFunctions) {\n\treturn await (jiraSoftwareCloudApiRequest.call(\n\t\tthis,\n\t\t'/api/2/serverInfo',\n\t\t'GET',\n\t) as Promise<JiraServerInfo>);\n}\n\nexport async function getWebhookEndpoint(this: IHookFunctions) {\n\tconst serverInfo = await getServerInfo.call(this).catch(() => null);\n\n\tif (!serverInfo || serverInfo.deploymentType === 'Cloud') return '/webhooks/1.0/webhook';\n\n\t// Assume old version when versionNumbers is not set\n\tconst majorVersion = serverInfo.versionNumbers?.[0] ?? 1;\n\n\treturn majorVersion >= 10 ? '/jira-webhook/1.0/webhooks' : '/webhooks/1.0/webhook';\n}\n"],"mappings":"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","names":[]}