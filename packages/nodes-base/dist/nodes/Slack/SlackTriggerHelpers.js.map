{"version":3,"sources":["../../../nodes/Slack/SlackTriggerHelpers.ts"],"sourcesContent":["import type { IHttpRequestOptions, IWebhookFunctions } from 'n8n-workflow';\nimport { NodeOperationError } from 'n8n-workflow';\n\nimport { slackApiRequest } from './V2/GenericFunctions';\n\nexport async function getUserInfo(this: IWebhookFunctions, userId: string): Promise<any> {\n\tconst user = await slackApiRequest.call(\n\t\tthis,\n\t\t'GET',\n\t\t'/users.info',\n\t\t{},\n\t\t{\n\t\t\tuser: userId,\n\t\t},\n\t);\n\n\treturn user.user.name;\n}\n\nexport async function getChannelInfo(this: IWebhookFunctions, channelId: string): Promise<any> {\n\tconst channel = await slackApiRequest.call(\n\t\tthis,\n\t\t'GET',\n\t\t'/conversations.info',\n\t\t{},\n\t\t{\n\t\t\tchannel: channelId,\n\t\t},\n\t);\n\n\treturn channel.channel.name;\n}\n\nexport async function downloadFile(this: IWebhookFunctions, url: string): Promise<any> {\n\tlet options: IHttpRequestOptions = {\n\t\tmethod: 'GET',\n\t\turl,\n\t};\n\n\tconst requestOptions = {\n\t\tencoding: 'arraybuffer',\n\t\treturnFullResponse: true,\n\t\tjson: false,\n\t\tuseStream: true,\n\t};\n\n\toptions = Object.assign({}, options, requestOptions);\n\n\tconst response = await this.helpers.requestWithAuthentication.call(this, 'slackApi', options);\n\n\tif (response.ok === false) {\n\t\tif (response.error === 'paid_teams_only') {\n\t\t\tthrow new NodeOperationError(\n\t\t\t\tthis.getNode(),\n\t\t\t\t`Your current Slack plan does not include the resource '${\n\t\t\t\t\tthis.getNodeParameter('resource', 0) as string\n\t\t\t\t}'`,\n\t\t\t\t{\n\t\t\t\t\tdescription:\n\t\t\t\t\t\t'Hint: Upgrade to a Slack plan that includes the functionality you want to use.',\n\t\t\t\t\tlevel: 'warning',\n\t\t\t\t},\n\t\t\t);\n\t\t} else if (response.error === 'missing_scope') {\n\t\t\tthrow new NodeOperationError(\n\t\t\t\tthis.getNode(),\n\t\t\t\t'Your Slack credential is missing required Oauth Scopes',\n\t\t\t\t{\n\t\t\t\t\tdescription: `Add the following scope(s) to your Slack App: ${response.needed}`,\n\t\t\t\t\tlevel: 'warning',\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\t\tthrow new NodeOperationError(\n\t\t\tthis.getNode(),\n\t\t\t'Slack error response: ' + JSON.stringify(response.error),\n\t\t);\n\t}\n\treturn response;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,0BAAmC;AAEnC,8BAAgC;AAEhC,eAAsB,YAAqC,QAA8B;AACxF,QAAM,OAAO,MAAM,wCAAgB;AAAA,IAClC;AAAA,IACA;AAAA,IACA;AAAA,IACA,CAAC;AAAA,IACD;AAAA,MACC,MAAM;AAAA,IACP;AAAA,EACD;AAEA,SAAO,KAAK,KAAK;AAClB;AAEA,eAAsB,eAAwC,WAAiC;AAC9F,QAAM,UAAU,MAAM,wCAAgB;AAAA,IACrC;AAAA,IACA;AAAA,IACA;AAAA,IACA,CAAC;AAAA,IACD;AAAA,MACC,SAAS;AAAA,IACV;AAAA,EACD;AAEA,SAAO,QAAQ,QAAQ;AACxB;AAEA,eAAsB,aAAsC,KAA2B;AACtF,MAAI,UAA+B;AAAA,IAClC,QAAQ;AAAA,IACR;AAAA,EACD;AAEA,QAAM,iBAAiB;AAAA,IACtB,UAAU;AAAA,IACV,oBAAoB;AAAA,IACpB,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAEA,YAAU,OAAO,OAAO,CAAC,GAAG,SAAS,cAAc;AAEnD,QAAM,WAAW,MAAM,KAAK,QAAQ,0BAA0B,KAAK,MAAM,YAAY,OAAO;AAE5F,MAAI,SAAS,OAAO,OAAO;AAC1B,QAAI,SAAS,UAAU,mBAAmB;AACzC,YAAM,IAAI;AAAA,QACT,KAAK,QAAQ;AAAA,QACb,0DACC,KAAK,iBAAiB,YAAY,CAAC,CACpC;AAAA,QACA;AAAA,UACC,aACC;AAAA,UACD,OAAO;AAAA,QACR;AAAA,MACD;AAAA,IACD,WAAW,SAAS,UAAU,iBAAiB;AAC9C,YAAM,IAAI;AAAA,QACT,KAAK,QAAQ;AAAA,QACb;AAAA,QACA;AAAA,UACC,aAAa,iDAAiD,SAAS,MAAM;AAAA,UAC7E,OAAO;AAAA,QACR;AAAA,MACD;AAAA,IACD;AACA,UAAM,IAAI;AAAA,MACT,KAAK,QAAQ;AAAA,MACb,2BAA2B,KAAK,UAAU,SAAS,KAAK;AAAA,IACzD;AAAA,EACD;AACA,SAAO;AACR;","names":[]}