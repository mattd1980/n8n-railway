{"version":3,"sources":["../../../nodes/Slack/SlackTrigger.node.ts"],"sourcesContent":["import {\n\ttype INodeListSearchItems,\n\ttype ILoadOptionsFunctions,\n\ttype INodeListSearchResult,\n\ttype INodePropertyOptions,\n\ttype IHookFunctions,\n\ttype IWebhookFunctions,\n\ttype IDataObject,\n\ttype INodeType,\n\ttype INodeTypeDescription,\n\ttype IWebhookResponseData,\n\ttype IBinaryKeyData,\n\tNodeConnectionTypes,\n} from 'n8n-workflow';\n\nimport { downloadFile, getChannelInfo, getUserInfo } from './SlackTriggerHelpers';\nimport { slackApiRequestAllItems } from './V2/GenericFunctions';\n\nexport class SlackTrigger implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Slack Trigger',\n\t\tname: 'slackTrigger',\n\t\ticon: 'file:slack.svg',\n\t\tgroup: ['trigger'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"eventFilter\"].join(\", \")}}',\n\t\tdescription: 'Handle Slack events via webhooks',\n\t\tdefaults: {\n\t\t\tname: 'Slack Trigger',\n\t\t},\n\t\tinputs: [],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\twebhooks: [\n\t\t\t{\n\t\t\t\tname: 'default',\n\t\t\t\thttpMethod: 'POST',\n\t\t\t\tresponseMode: 'onReceived',\n\t\t\t\tpath: 'webhook',\n\t\t\t},\n\t\t],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'slackApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Authentication',\n\t\t\t\tname: 'authentication',\n\t\t\t\ttype: 'hidden',\n\t\t\t\tdefault: 'accessToken',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName:\n\t\t\t\t\t'Set up a webhook in your Slack app to enable this node. <a href=\"https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.slacktrigger/#configure-a-webhook-in-slack\" target=\"_blank\">More info</a>',\n\t\t\t\tname: 'notice',\n\t\t\t\ttype: 'notice',\n\t\t\t\tdefault: '',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Trigger On',\n\t\t\t\tname: 'trigger',\n\t\t\t\ttype: 'multiOptions',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Any Event',\n\t\t\t\t\t\tvalue: 'any_event',\n\t\t\t\t\t\tdescription: 'Triggers on any event',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Bot / App Mention',\n\t\t\t\t\t\tvalue: 'app_mention',\n\t\t\t\t\t\tdescription: 'When your bot or app is mentioned in a channel the app is added to',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'File Made Public',\n\t\t\t\t\t\tvalue: 'file_public',\n\t\t\t\t\t\tdescription: 'When a file is made public',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'File Shared',\n\t\t\t\t\t\tvalue: 'file_share',\n\t\t\t\t\t\tdescription: 'When a file is shared in a channel the app is added to',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'New Message Posted to Channel',\n\t\t\t\t\t\tvalue: 'message',\n\t\t\t\t\t\tdescription: 'When a message is posted to a channel the app is added to',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'New Public Channel Created',\n\t\t\t\t\t\tvalue: 'channel_created',\n\t\t\t\t\t\tdescription: 'When a new public channel is created',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'New User',\n\t\t\t\t\t\tvalue: 'team_join',\n\t\t\t\t\t\tdescription: 'When a new user is added to Slack',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Reaction Added',\n\t\t\t\t\t\tvalue: 'reaction_added',\n\t\t\t\t\t\tdescription: 'When a reaction is added to a message the app is added to',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: [],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Watch Whole Workspace',\n\t\t\t\tname: 'watchWorkspace',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\tdescription:\n\t\t\t\t\t'Whether to watch for the event in the whole workspace, rather than a specific channel',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\ttrigger: ['any_event', 'message', 'reaction_added', 'file_share', 'app_mention'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName:\n\t\t\t\t\t'This will use one execution for every event in any channel your bot is in, use with caution',\n\t\t\t\tname: 'notice',\n\t\t\t\ttype: 'notice',\n\t\t\t\tdefault: '',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\ttrigger: ['any_event', 'message', 'reaction_added', 'file_share', 'app_mention'],\n\t\t\t\t\t\twatchWorkspace: [true],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Channel to Watch',\n\t\t\t\tname: 'channelId',\n\t\t\t\ttype: 'resourceLocator',\n\t\t\t\trequired: true,\n\t\t\t\tdefault: { mode: 'list', value: '' },\n\t\t\t\tplaceholder: 'Select a channel...',\n\t\t\t\tdescription:\n\t\t\t\t\t'The Slack channel to listen to events from. Applies to events: Bot/App mention, File Shared, New Message Posted on Channel, Reaction Added.',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\twatchWorkspace: [false],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmodes: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'From List',\n\t\t\t\t\t\tname: 'list',\n\t\t\t\t\t\ttype: 'list',\n\t\t\t\t\t\tplaceholder: 'Select a channel...',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tsearchListMethod: 'getChannels',\n\t\t\t\t\t\t\tsearchable: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'By ID',\n\t\t\t\t\t\tname: 'id',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tvalidation: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'regex',\n\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\tregex: '[a-zA-Z0-9]{2,}',\n\t\t\t\t\t\t\t\t\terrorMessage: 'Not a valid Slack Channel ID',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tplaceholder: 'C0122KQ70S7E',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'By URL',\n\t\t\t\t\t\tname: 'url',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tplaceholder: 'https://app.slack.com/client/TS9594PZK/B0556F47Z3A',\n\t\t\t\t\t\tvalidation: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'regex',\n\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\tregex: 'http(s)?://app.slack.com/client/.*/([a-zA-Z0-9]{2,})',\n\t\t\t\t\t\t\t\t\terrorMessage: 'Not a valid Slack Channel URL',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\textractValue: {\n\t\t\t\t\t\t\ttype: 'regex',\n\t\t\t\t\t\t\tregex: 'https://app.slack.com/client/.*/([a-zA-Z0-9]{2,})',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Download Files',\n\t\t\t\tname: 'downloadFiles',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: 'Whether to download the files and add it to the output',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\ttrigger: ['any_event', 'file_share'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Options',\n\t\t\t\tname: 'options',\n\t\t\t\ttype: 'collection',\n\t\t\t\tplaceholder: 'Add Field',\n\t\t\t\tdefault: {},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Resolve IDs',\n\t\t\t\t\t\tname: 'resolveIds',\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\tdescription: 'Whether to resolve the IDs to their respective names and return them',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Usernames or IDs to Ignore',\n\t\t\t\t\t\tname: 'userIds',\n\t\t\t\t\t\ttype: 'multiOptions',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tloadOptionsMethod: 'getUsers',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefault: [],\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'A comma-separated string of encoded user IDs. Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t};\n\n\tmethods = {\n\t\tlistSearch: {\n\t\t\tasync getChannels(\n\t\t\t\tthis: ILoadOptionsFunctions,\n\t\t\t\tfilter?: string,\n\t\t\t): Promise<INodeListSearchResult> {\n\t\t\t\tconst qs = { types: 'public_channel,private_channel' };\n\t\t\t\tconst channels = (await slackApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'channels',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/conversations.list',\n\t\t\t\t\t{},\n\t\t\t\t\tqs,\n\t\t\t\t)) as Array<{ id: string; name: string }>;\n\t\t\t\tconst results: INodeListSearchItems[] = channels\n\t\t\t\t\t.map((c) => ({\n\t\t\t\t\t\tname: c.name,\n\t\t\t\t\t\tvalue: c.id,\n\t\t\t\t\t}))\n\t\t\t\t\t.filter(\n\t\t\t\t\t\t(c) =>\n\t\t\t\t\t\t\t!filter ||\n\t\t\t\t\t\t\tc.name.toLowerCase().includes(filter.toLowerCase()) ||\n\t\t\t\t\t\t\tc.value?.toString() === filter,\n\t\t\t\t\t)\n\t\t\t\t\t.sort((a, b) => {\n\t\t\t\t\t\tif (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n\t\t\t\t\t\tif (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t});\n\t\t\t\treturn { results };\n\t\t\t},\n\t\t},\n\t\tloadOptions: {\n\t\t\tasync getUsers(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst users = (await slackApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'members',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/users.list',\n\t\t\t\t)) as Array<{ id: string; name: string }>;\n\t\t\t\tfor (const user of users) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: user.name,\n\t\t\t\t\t\tvalue: user.id,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturnData.sort((a, b) => {\n\t\t\t\t\tif (a.name < b.name) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t\tif (a.name > b.name) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t});\n\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\twebhookMethods = {\n\t\tdefault: {\n\t\t\tasync checkExists(this: IHookFunctions): Promise<boolean> {\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tasync create(this: IHookFunctions): Promise<boolean> {\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tasync delete(this: IHookFunctions): Promise<boolean> {\n\t\t\t\treturn true;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync webhook(this: IWebhookFunctions): Promise<IWebhookResponseData> {\n\t\tconst filters = this.getNodeParameter('trigger', []) as string[];\n\t\tconst req = this.getRequestObject();\n\t\tconst options = this.getNodeParameter('options', {}) as IDataObject;\n\t\tconst binaryData: IBinaryKeyData = {};\n\t\tconst watchWorkspace = this.getNodeParameter('watchWorkspace', false) as boolean;\n\t\tlet eventChannel: string = '';\n\t\t// Check if the request is a challenge request\n\t\tif (req.body.type === 'url_verification') {\n\t\t\tconst res = this.getResponseObject();\n\t\t\tres.status(200).json({ challenge: req.body.challenge }).end();\n\n\t\t\treturn {\n\t\t\t\tnoWebhookResponse: true,\n\t\t\t};\n\t\t}\n\n\t\t// Check if the event type is in the filters\n\t\tconst eventType = req.body.event.type as string;\n\n\t\tif (\n\t\t\t!filters.includes('file_share') &&\n\t\t\t!filters.includes('any_event') &&\n\t\t\t!filters.includes(eventType)\n\t\t) {\n\t\t\treturn {};\n\t\t}\n\n\t\tif (eventType !== 'team_join') {\n\t\t\teventChannel = req.body.event.channel ?? req.body.event.item.channel;\n\n\t\t\t// Check for single channel\n\t\t\tif (!watchWorkspace) {\n\t\t\t\tif (\n\t\t\t\t\teventChannel !==\n\t\t\t\t\t(this.getNodeParameter('channelId', {}, { extractValue: true }) as string)\n\t\t\t\t) {\n\t\t\t\t\treturn {};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Check if user should be ignored\n\t\tif (options.userIds) {\n\t\t\tconst userIds = options.userIds as string[];\n\t\t\tif (userIds.includes(req.body.event.user)) {\n\t\t\t\treturn {};\n\t\t\t}\n\t\t}\n\n\t\tif (options.resolveIds) {\n\t\t\tif (req.body.event.user) {\n\t\t\t\tif (req.body.event.type === 'reaction_added') {\n\t\t\t\t\treq.body.event.user_resolved = await getUserInfo.call(this, req.body.event.user);\n\t\t\t\t\treq.body.event.item_user_resolved = await getUserInfo.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\treq.body.event.item_user,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\treq.body.event.user_resolved = await getUserInfo.call(this, req.body.event.user);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (eventChannel) {\n\t\t\t\tconst channel = await getChannelInfo.call(this, eventChannel);\n\t\t\t\tconst channelResolved = channel;\n\t\t\t\treq.body.event.channel_resolved = channelResolved;\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\treq.body.event.subtype === 'file_share' &&\n\t\t\t(filters.includes('file_share') || filters.includes('any_event'))\n\t\t) {\n\t\t\tif (this.getNodeParameter('downloadFiles', false) as boolean) {\n\t\t\t\tfor (let i = 0; i < req.body.event.files.length; i++) {\n\t\t\t\t\tconst file = (await downloadFile.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\treq.body.event.files[i].url_private_download,\n\t\t\t\t\t)) as Buffer;\n\n\t\t\t\t\tbinaryData[`file_${i}`] = await this.helpers.prepareBinaryData(\n\t\t\t\t\t\tfile,\n\t\t\t\t\t\treq.body.event.files[i].name,\n\t\t\t\t\t\treq.body.event.files[i].mimetype,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tworkflowData: [\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tjson: req.body.event,\n\t\t\t\t\t\tbinary: Object.keys(binaryData).length ? binaryData : undefined,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t],\n\t\t};\n\t}\n}\n"],"mappings":"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","names":[]}