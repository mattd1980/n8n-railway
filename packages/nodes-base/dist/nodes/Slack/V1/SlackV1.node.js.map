{"version":3,"sources":["../../../../nodes/Slack/V1/SlackV1.node.ts"],"sourcesContent":["import moment from 'moment-timezone';\nimport type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeBaseDescription,\n\tINodeTypeDescription,\n\tJsonObject,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport { oldVersionNotice } from '@utils/descriptions';\n\nimport { channelFields, channelOperations } from './ChannelDescription';\nimport { fileFields, fileOperations } from './FileDescription';\nimport { slackApiRequest, slackApiRequestAllItems, validateJSON } from './GenericFunctions';\nimport { messageFields, messageOperations } from './MessageDescription';\nimport type { IAttachment } from './MessageInterface';\nimport { reactionFields, reactionOperations } from './ReactionDescription';\nimport { starFields, starOperations } from './StarDescription';\nimport { userFields, userOperations } from './UserDescription';\nimport { userGroupFields, userGroupOperations } from './UserGroupDescription';\nimport { userProfileFields, userProfileOperations } from './UserProfileDescription';\n\ninterface Attachment {\n\tfields: {\n\t\titem?: object[];\n\t};\n}\n\ninterface Text {\n\ttype?: string;\n\ttext?: string;\n\temoji?: boolean;\n\tverbatim?: boolean;\n}\n\ninterface Confirm {\n\ttitle?: Text;\n\ttext?: Text;\n\tconfirm?: Text;\n\tdeny?: Text;\n\tstyle?: string;\n}\n\ninterface Element {\n\ttype?: string;\n\ttext?: Text;\n\taction_id?: string;\n\turl?: string;\n\tvalue?: string;\n\tstyle?: string;\n\tconfirm?: Confirm;\n}\n\ninterface Block {\n\ttype?: string;\n\telements?: Element[];\n\tblock_id?: string;\n\ttext?: Text;\n\tfields?: Text[];\n\taccessory?: Element;\n}\n\nexport class SlackV1 implements INodeType {\n\tdescription: INodeTypeDescription;\n\n\tconstructor(baseDescription: INodeTypeBaseDescription) {\n\t\tthis.description = {\n\t\t\t...baseDescription,\n\t\t\tversion: 1,\n\t\t\tdefaults: {\n\t\t\t\tname: 'Slack',\n\t\t\t},\n\t\t\tinputs: [NodeConnectionTypes.Main],\n\t\t\toutputs: [NodeConnectionTypes.Main],\n\t\t\tcredentials: [\n\t\t\t\t{\n\t\t\t\t\tname: 'slackApi',\n\t\t\t\t\trequired: true,\n\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\tauthentication: ['accessToken'],\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'slackOAuth2Api',\n\t\t\t\t\trequired: true,\n\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\tauthentication: ['oAuth2'],\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\tproperties: [\n\t\t\t\toldVersionNotice,\n\t\t\t\t{\n\t\t\t\t\tdisplayName: 'Authentication',\n\t\t\t\t\tname: 'authentication',\n\t\t\t\t\ttype: 'options',\n\t\t\t\t\toptions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'Access Token',\n\t\t\t\t\t\t\tvalue: 'accessToken',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'OAuth2',\n\t\t\t\t\t\t\tvalue: 'oAuth2',\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\tdefault: 'accessToken',\n\t\t\t\t},\n\n\t\t\t\t{\n\t\t\t\t\tdisplayName: 'Resource',\n\t\t\t\t\tname: 'resource',\n\t\t\t\t\ttype: 'options',\n\t\t\t\t\tnoDataExpression: true,\n\t\t\t\t\toptions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'Channel',\n\t\t\t\t\t\t\tvalue: 'channel',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'File',\n\t\t\t\t\t\t\tvalue: 'file',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'Message',\n\t\t\t\t\t\t\tvalue: 'message',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'Reaction',\n\t\t\t\t\t\t\tvalue: 'reaction',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'Star',\n\t\t\t\t\t\t\tvalue: 'star',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'User',\n\t\t\t\t\t\t\tvalue: 'user',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'User Group',\n\t\t\t\t\t\t\tvalue: 'userGroup',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'User Profile',\n\t\t\t\t\t\t\tvalue: 'userProfile',\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\tdefault: 'message',\n\t\t\t\t},\n\n\t\t\t\t...channelOperations,\n\t\t\t\t...channelFields,\n\t\t\t\t...messageOperations,\n\t\t\t\t...messageFields,\n\t\t\t\t...starOperations,\n\t\t\t\t...starFields,\n\t\t\t\t...fileOperations,\n\t\t\t\t...fileFields,\n\t\t\t\t...reactionOperations,\n\t\t\t\t...reactionFields,\n\t\t\t\t...userOperations,\n\t\t\t\t...userFields,\n\t\t\t\t...userGroupOperations,\n\t\t\t\t...userGroupFields,\n\t\t\t\t...userProfileOperations,\n\t\t\t\t...userProfileFields,\n\t\t\t],\n\t\t};\n\t}\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get all the users to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getUsers(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst users = await slackApiRequestAllItems.call(this, 'members', 'GET', '/users.list');\n\t\t\t\tfor (const user of users) {\n\t\t\t\t\tconst userName = user.name;\n\t\t\t\t\tconst userId = user.id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: userName,\n\t\t\t\t\t\tvalue: userId,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturnData.sort((a, b) => {\n\t\t\t\t\tif (a.name < b.name) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t\tif (a.name > b.name) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t});\n\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the users to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getChannels(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst qs = { types: 'public_channel,private_channel', limit: 1000 };\n\t\t\t\tconst channels = await slackApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'channels',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/conversations.list',\n\t\t\t\t\t{},\n\t\t\t\t\tqs,\n\t\t\t\t);\n\t\t\t\tfor (const channel of channels) {\n\t\t\t\t\tconst channelName = channel.name;\n\t\t\t\t\tconst channelId = channel.id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: channelName,\n\t\t\t\t\t\tvalue: channelId,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturnData.sort((a, b) => {\n\t\t\t\t\tif (a.name < b.name) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t\tif (a.name > b.name) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t});\n\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the team fields to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getTeamFields(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst {\n\t\t\t\t\tprofile: { fields },\n\t\t\t\t} = await slackApiRequest.call(this, 'GET', '/team.profile.get');\n\t\t\t\tfor (const field of fields) {\n\t\t\t\t\tconst fieldName = field.label;\n\t\t\t\t\tconst fieldId = field.id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: fieldName,\n\t\t\t\t\t\tvalue: fieldId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst length = items.length;\n\t\tlet qs: IDataObject;\n\t\tlet responseData;\n\t\tconst authentication = this.getNodeParameter('authentication', 0) as string;\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\ttry {\n\t\t\t\tresponseData = {\n\t\t\t\t\terror: 'Resource ' + resource + ' / operation ' + operation + ' not found!',\n\t\t\t\t};\n\t\t\t\tqs = {};\n\t\t\t\tif (resource === 'channel') {\n\t\t\t\t\t//https://api.slack.com/methods/conversations.archive\n\t\t\t\t\tif (operation === 'archive') {\n\t\t\t\t\t\tconst channel = this.getNodeParameter('channelId', i) as string;\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tchannel,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tresponseData = await slackApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/conversations.archive',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://api.slack.com/methods/conversations.close\n\t\t\t\t\tif (operation === 'close') {\n\t\t\t\t\t\tconst channel = this.getNodeParameter('channelId', i) as string;\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tchannel,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tresponseData = await slackApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/conversations.close',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://api.slack.com/methods/conversations.create\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst channel = this.getNodeParameter('channelId', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tname: channel,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (additionalFields.isPrivate) {\n\t\t\t\t\t\t\tbody.is_private = additionalFields.isPrivate as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await slackApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/conversations.create',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.channel;\n\t\t\t\t\t}\n\t\t\t\t\t//https://api.slack.com/methods/conversations.kick\n\t\t\t\t\tif (operation === 'kick') {\n\t\t\t\t\t\tconst channel = this.getNodeParameter('channelId', i) as string;\n\t\t\t\t\t\tconst userId = this.getNodeParameter('userId', i) as string;\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tchannel,\n\t\t\t\t\t\t\tuser: userId,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tresponseData = await slackApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/conversations.kick',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://api.slack.com/methods/conversations.join\n\t\t\t\t\tif (operation === 'join') {\n\t\t\t\t\t\tconst channel = this.getNodeParameter('channelId', i) as string;\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tchannel,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tresponseData = await slackApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/conversations.join',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.channel;\n\t\t\t\t\t}\n\t\t\t\t\t//https://api.slack.com/methods/conversations.info\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst channel = this.getNodeParameter('channelId', i) as string;\n\t\t\t\t\t\tqs.channel = channel;\n\t\t\t\t\t\tresponseData = await slackApiRequest.call(this, 'POST', '/conversations.info', {}, qs);\n\t\t\t\t\t\tresponseData = responseData.channel;\n\t\t\t\t\t}\n\t\t\t\t\t//https://api.slack.com/methods/conversations.list\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\t\t\t\t\t\tif (filters.types) {\n\t\t\t\t\t\t\tqs.types = (filters.types as string[]).join(',');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (filters.excludeArchived) {\n\t\t\t\t\t\t\tqs.exclude_archived = filters.excludeArchived as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await slackApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'channels',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/conversations.list',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await slackApiRequest.call(this, 'GET', '/conversations.list', {}, qs);\n\t\t\t\t\t\t\tresponseData = responseData.channels;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://api.slack.com/methods/conversations.history\n\t\t\t\t\tif (operation === 'history') {\n\t\t\t\t\t\tconst channel = this.getNodeParameter('channelId', i) as string;\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\t\t\t\t\t\tqs.channel = channel;\n\t\t\t\t\t\tif (filters.inclusive) {\n\t\t\t\t\t\t\tqs.inclusive = filters.inclusive as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (filters.latest) {\n\t\t\t\t\t\t\tqs.latest = new Date(filters.latest as string).getTime() / 1000;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (filters.oldest) {\n\t\t\t\t\t\t\tqs.oldest = new Date(filters.oldest as string).getTime() / 1000;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await slackApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'messages',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/conversations.history',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await slackApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/conversations.history',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.messages;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://api.slack.com/methods/conversations.invite\n\t\t\t\t\tif (operation === 'invite') {\n\t\t\t\t\t\tconst channel = this.getNodeParameter('channelId', i) as string;\n\t\t\t\t\t\tconst userIds = (this.getNodeParameter('userIds', i) as string[]).join(',');\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tchannel,\n\t\t\t\t\t\t\tusers: userIds,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tresponseData = await slackApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/conversations.invite',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.channel;\n\t\t\t\t\t}\n\t\t\t\t\t//https://api.slack.com/methods/conversations.leave\n\t\t\t\t\tif (operation === 'leave') {\n\t\t\t\t\t\tconst channel = this.getNodeParameter('channelId', i) as string;\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tchannel,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tresponseData = await slackApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/conversations.leave',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://api.slack.com/methods/conversations.members\n\t\t\t\t\tif (operation === 'member') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', 0);\n\t\t\t\t\t\tconst resolveData = this.getNodeParameter('resolveData', 0);\n\t\t\t\t\t\tqs.channel = this.getNodeParameter('channelId', i) as string;\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await slackApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'members',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/conversations.members',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.map((member: string) => ({ member }));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await slackApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/conversations.members',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.members.map((member: string) => ({ member }));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (resolveData) {\n\t\t\t\t\t\t\tconst data: IDataObject[] = [];\n\t\t\t\t\t\t\tfor (const { member } of responseData) {\n\t\t\t\t\t\t\t\tconst { user } = await slackApiRequest.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t'/users.info',\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\t{ user: member },\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tdata.push(user as IDataObject);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tresponseData = data;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://api.slack.com/methods/conversations.open\n\t\t\t\t\tif (operation === 'open') {\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tconst body: IDataObject = {};\n\t\t\t\t\t\tif (options.channelId) {\n\t\t\t\t\t\t\tbody.channel = options.channelId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.returnIm) {\n\t\t\t\t\t\t\tbody.return_im = options.returnIm as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.users) {\n\t\t\t\t\t\t\tbody.users = (options.users as string[]).join(',');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await slackApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/conversations.open',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.channel;\n\t\t\t\t\t}\n\t\t\t\t\t//https://api.slack.com/methods/conversations.rename\n\t\t\t\t\tif (operation === 'rename') {\n\t\t\t\t\t\tconst channel = this.getNodeParameter('channelId', i) as IDataObject;\n\t\t\t\t\t\tconst name = this.getNodeParameter('name', i) as IDataObject;\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tchannel,\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tresponseData = await slackApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/conversations.rename',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.channel;\n\t\t\t\t\t}\n\t\t\t\t\t//https://api.slack.com/methods/conversations.replies\n\t\t\t\t\tif (operation === 'replies') {\n\t\t\t\t\t\tconst channel = this.getNodeParameter('channelId', i) as string;\n\t\t\t\t\t\tconst ts = this.getNodeParameter('ts', i) as string;\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\t\t\t\t\t\tqs.channel = channel;\n\t\t\t\t\t\tqs.ts = ts;\n\t\t\t\t\t\tif (filters.inclusive) {\n\t\t\t\t\t\t\tqs.inclusive = filters.inclusive as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (filters.latest) {\n\t\t\t\t\t\t\tqs.latest = new Date(filters.latest as string).getTime() / 1000;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (filters.oldest) {\n\t\t\t\t\t\t\tqs.oldest = new Date(filters.oldest as string).getTime() / 1000;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await slackApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'messages',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/conversations.replies',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await slackApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/conversations.replies',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.messages;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://api.slack.com/methods/conversations.setPurpose\n\t\t\t\t\tif (operation === 'setPurpose') {\n\t\t\t\t\t\tconst channel = this.getNodeParameter('channelId', i) as IDataObject;\n\t\t\t\t\t\tconst purpose = this.getNodeParameter('purpose', i) as IDataObject;\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tchannel,\n\t\t\t\t\t\t\tpurpose,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tresponseData = await slackApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/conversations.setPurpose',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.channel;\n\t\t\t\t\t}\n\t\t\t\t\t//https://api.slack.com/methods/conversations.setTopic\n\t\t\t\t\tif (operation === 'setTopic') {\n\t\t\t\t\t\tconst channel = this.getNodeParameter('channelId', i) as IDataObject;\n\t\t\t\t\t\tconst topic = this.getNodeParameter('topic', i) as IDataObject;\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tchannel,\n\t\t\t\t\t\t\ttopic,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tresponseData = await slackApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/conversations.setTopic',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.channel;\n\t\t\t\t\t}\n\t\t\t\t\t//https://api.slack.com/methods/conversations.unarchive\n\t\t\t\t\tif (operation === 'unarchive') {\n\t\t\t\t\t\tconst channel = this.getNodeParameter('channelId', i) as string;\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tchannel,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tresponseData = await slackApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/conversations.unarchive',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'message') {\n\t\t\t\t\t//https://api.slack.com/methods/chat.postMessage\n\t\t\t\t\tif (['post', 'postEphemeral'].includes(operation)) {\n\t\t\t\t\t\tconst channel = this.getNodeParameter('channel', i) as string;\n\t\t\t\t\t\tconst { sendAsUser } = this.getNodeParameter('otherOptions', i) as IDataObject;\n\t\t\t\t\t\tconst text = this.getNodeParameter('text', i) as string;\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tchannel,\n\t\t\t\t\t\t\ttext,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tlet action = 'postMessage';\n\n\t\t\t\t\t\tif (operation === 'postEphemeral') {\n\t\t\t\t\t\t\tbody.user = this.getNodeParameter('user', i) as string;\n\t\t\t\t\t\t\taction = 'postEphemeral';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst jsonParameters = this.getNodeParameter('jsonParameters', i);\n\n\t\t\t\t\t\tif (authentication === 'accessToken' && sendAsUser !== '') {\n\t\t\t\t\t\t\tbody.username = sendAsUser;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!jsonParameters) {\n\t\t\t\t\t\t\tconst attachments = this.getNodeParameter(\n\t\t\t\t\t\t\t\t'attachments',\n\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t\t[],\n\t\t\t\t\t\t\t) as unknown as Attachment[];\n\t\t\t\t\t\t\tconst blocksUi = (this.getNodeParameter('blocksUi', i, []) as IDataObject)\n\t\t\t\t\t\t\t\t.blocksValues as IDataObject[];\n\n\t\t\t\t\t\t\t// The node does save the fields data differently than the API\n\t\t\t\t\t\t\t// expects so fix the data befre we send the request\n\t\t\t\t\t\t\tfor (const attachment of attachments) {\n\t\t\t\t\t\t\t\tif (attachment.fields !== undefined) {\n\t\t\t\t\t\t\t\t\tif (attachment.fields.item !== undefined) {\n\t\t\t\t\t\t\t\t\t\t// Move the field-content up\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\t\tattachment.fields = attachment.fields.item;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t// If it does not have any items set remove it\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\t\tdelete attachment.fields;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbody.attachments = attachments;\n\n\t\t\t\t\t\t\tif (blocksUi) {\n\t\t\t\t\t\t\t\tconst blocks: Block[] = [];\n\t\t\t\t\t\t\t\tfor (const blockUi of blocksUi) {\n\t\t\t\t\t\t\t\t\tconst block: Block = {};\n\t\t\t\t\t\t\t\t\tconst elements: Element[] = [];\n\t\t\t\t\t\t\t\t\tblock.block_id = blockUi.blockId as string;\n\t\t\t\t\t\t\t\t\tblock.type = blockUi.type as string;\n\t\t\t\t\t\t\t\t\tif (block.type === 'actions') {\n\t\t\t\t\t\t\t\t\t\tconst elementsUi = (blockUi.elementsUi as IDataObject)\n\t\t\t\t\t\t\t\t\t\t\t.elementsValues as IDataObject[];\n\t\t\t\t\t\t\t\t\t\tif (elementsUi) {\n\t\t\t\t\t\t\t\t\t\t\tfor (const elementUi of elementsUi) {\n\t\t\t\t\t\t\t\t\t\t\t\tconst element: Element = {};\n\t\t\t\t\t\t\t\t\t\t\t\tif (elementUi.actionId === '') {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'Action ID must be set', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tif (elementUi.text === '') {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'Text must be set', {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\telement.action_id = elementUi.actionId as string;\n\t\t\t\t\t\t\t\t\t\t\t\telement.type = elementUi.type as string;\n\t\t\t\t\t\t\t\t\t\t\t\telement.text = {\n\t\t\t\t\t\t\t\t\t\t\t\t\ttext: elementUi.text as string,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'plain_text',\n\t\t\t\t\t\t\t\t\t\t\t\t\temoji: elementUi.emoji as boolean,\n\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t\tif (elementUi.url) {\n\t\t\t\t\t\t\t\t\t\t\t\t\telement.url = elementUi.url as string;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tif (elementUi.value) {\n\t\t\t\t\t\t\t\t\t\t\t\t\telement.value = elementUi.value as string;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tif (elementUi.style !== 'default') {\n\t\t\t\t\t\t\t\t\t\t\t\t\telement.style = elementUi.style as string;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tconst confirmUi = (elementUi.confirmUi as IDataObject)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.confirmValue as IDataObject;\n\t\t\t\t\t\t\t\t\t\t\t\tif (confirmUi) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst confirm: Confirm = {};\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst titleUi = (confirmUi.titleUi as IDataObject)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.titleValue as IDataObject;\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst textUi = (confirmUi.textUi as IDataObject).textValue as IDataObject;\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst confirmTextUi = (confirmUi.confirmTextUi as IDataObject)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.confirmValue as IDataObject;\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst denyUi = (confirmUi.denyUi as IDataObject).denyValue as IDataObject;\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst style = confirmUi.style as string;\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (titleUi) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconfirm.title = {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'plain_text',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext: titleUi.text as string,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temoji: titleUi.emoji as boolean,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (textUi) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconfirm.text = {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'plain_text',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext: textUi.text as string,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temoji: textUi.emoji as boolean,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (confirmTextUi) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconfirm.confirm = {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'plain_text',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext: confirmTextUi.text as string,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temoji: confirmTextUi.emoji as boolean,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (denyUi) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconfirm.deny = {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'plain_text',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext: denyUi.text as string,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temoji: denyUi.emoji as boolean,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (style !== 'default') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconfirm.style = style;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\telement.confirm = confirm;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\telements.push(element);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tblock.elements = elements;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else if (block.type === 'section') {\n\t\t\t\t\t\t\t\t\t\tconst textUi = (blockUi.textUi as IDataObject).textValue as IDataObject;\n\t\t\t\t\t\t\t\t\t\tif (textUi) {\n\t\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-shadow\n\t\t\t\t\t\t\t\t\t\t\tconst text: Text = {};\n\t\t\t\t\t\t\t\t\t\t\tif (textUi.type === 'plainText') {\n\t\t\t\t\t\t\t\t\t\t\t\ttext.type = 'plain_text';\n\t\t\t\t\t\t\t\t\t\t\t\ttext.emoji = textUi.emoji as boolean;\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\ttext.type = 'mrkdwn';\n\t\t\t\t\t\t\t\t\t\t\t\ttext.verbatim = textUi.verbatim as boolean;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\ttext.text = textUi.text as string;\n\t\t\t\t\t\t\t\t\t\t\tblock.text = text;\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t\t\t\t\t'Property text must be defined',\n\t\t\t\t\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tconst fieldsUi = (blockUi.fieldsUi as IDataObject)\n\t\t\t\t\t\t\t\t\t\t\t.fieldsValues as IDataObject[];\n\t\t\t\t\t\t\t\t\t\tif (fieldsUi) {\n\t\t\t\t\t\t\t\t\t\t\tconst fields: Text[] = [];\n\t\t\t\t\t\t\t\t\t\t\tfor (const fieldUi of fieldsUi) {\n\t\t\t\t\t\t\t\t\t\t\t\tconst field: Text = {};\n\t\t\t\t\t\t\t\t\t\t\t\tif (fieldUi.type === 'plainText') {\n\t\t\t\t\t\t\t\t\t\t\t\t\tfield.type = 'plain_text';\n\t\t\t\t\t\t\t\t\t\t\t\t\tfield.emoji = fieldUi.emoji as boolean;\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\tfield.type = 'mrkdwn';\n\t\t\t\t\t\t\t\t\t\t\t\t\tfield.verbatim = fieldUi.verbatim as boolean;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tfield.text = fieldUi.text as string;\n\t\t\t\t\t\t\t\t\t\t\t\tfields.push(field);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t// If not fields were added then it's not needed to send the property\n\t\t\t\t\t\t\t\t\t\t\tif (fields.length > 0) {\n\t\t\t\t\t\t\t\t\t\t\t\tblock.fields = fields;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tconst accessoryUi = (blockUi.accessoryUi as IDataObject)\n\t\t\t\t\t\t\t\t\t\t\t.accessoriesValues as IDataObject;\n\t\t\t\t\t\t\t\t\t\tif (accessoryUi) {\n\t\t\t\t\t\t\t\t\t\t\tconst accessory: Element = {};\n\t\t\t\t\t\t\t\t\t\t\tif (accessoryUi.type === 'button') {\n\t\t\t\t\t\t\t\t\t\t\t\taccessory.type = 'button';\n\t\t\t\t\t\t\t\t\t\t\t\taccessory.text = {\n\t\t\t\t\t\t\t\t\t\t\t\t\ttext: accessoryUi.text as string,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'plain_text',\n\t\t\t\t\t\t\t\t\t\t\t\t\temoji: accessoryUi.emoji as boolean,\n\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t\tif (accessoryUi.url) {\n\t\t\t\t\t\t\t\t\t\t\t\t\taccessory.url = accessoryUi.url as string;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tif (accessoryUi.value) {\n\t\t\t\t\t\t\t\t\t\t\t\t\taccessory.value = accessoryUi.value as string;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tif (accessoryUi.style !== 'default') {\n\t\t\t\t\t\t\t\t\t\t\t\t\taccessory.style = accessoryUi.style as string;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tconst confirmUi = (accessoryUi.confirmUi as IDataObject)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.confirmValue as IDataObject;\n\t\t\t\t\t\t\t\t\t\t\t\tif (confirmUi) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst confirm: Confirm = {};\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst titleUi = (confirmUi.titleUi as IDataObject)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.titleValue as IDataObject;\n\t\t\t\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-shadow\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst textUi = (confirmUi.textUi as IDataObject).textValue as IDataObject;\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst confirmTextUi = (confirmUi.confirmTextUi as IDataObject)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.confirmValue as IDataObject;\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst denyUi = (confirmUi.denyUi as IDataObject).denyValue as IDataObject;\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst style = confirmUi.style as string;\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (titleUi) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconfirm.title = {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'plain_text',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext: titleUi.text as string,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temoji: titleUi.emoji as boolean,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (textUi) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconfirm.text = {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'plain_text',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext: textUi.text as string,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temoji: textUi.emoji as boolean,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (confirmTextUi) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconfirm.confirm = {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'plain_text',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext: confirmTextUi.text as string,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temoji: confirmTextUi.emoji as boolean,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (denyUi) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconfirm.deny = {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'plain_text',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext: denyUi.text as string,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temoji: denyUi.emoji as boolean,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (style !== 'default') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconfirm.style = style;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\taccessory.confirm = confirm;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tblock.accessory = accessory;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tblocks.push(block);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbody.blocks = blocks;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst attachmentsJson = this.getNodeParameter('attachmentsJson', i, '') as string;\n\t\t\t\t\t\t\tconst blocksJson = this.getNodeParameter('blocksJson', i, []) as string;\n\t\t\t\t\t\t\tif (attachmentsJson !== '' && validateJSON(attachmentsJson) === undefined) {\n\t\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'Attachments it is not a valid json', {\n\t\t\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (blocksJson !== '' && validateJSON(blocksJson) === undefined) {\n\t\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'Blocks it is not a valid json', {\n\t\t\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (attachmentsJson !== '') {\n\t\t\t\t\t\t\t\tbody.attachments = attachmentsJson;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (blocksJson !== '') {\n\t\t\t\t\t\t\t\tbody.blocks = blocksJson;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Add all the other options to the request\n\t\t\t\t\t\tconst otherOptions = this.getNodeParameter('otherOptions', i) as IDataObject;\n\t\t\t\t\t\tObject.assign(body, otherOptions);\n\t\t\t\t\t\tresponseData = await slackApiRequest.call(this, 'POST', `/chat.${action}`, body, qs);\n\t\t\t\t\t}\n\t\t\t\t\t//https://api.slack.com/methods/chat.update\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst channel = this.getNodeParameter('channelId', i) as string;\n\t\t\t\t\t\tconst text = this.getNodeParameter('text', i) as string;\n\t\t\t\t\t\tconst ts = this.getNodeParameter('ts', i) as string;\n\t\t\t\t\t\tconst attachments = this.getNodeParameter(\n\t\t\t\t\t\t\t'attachments',\n\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t[],\n\t\t\t\t\t\t) as unknown as IAttachment[];\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tchannel,\n\t\t\t\t\t\t\ttext,\n\t\t\t\t\t\t\tts,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// The node does save the fields data differently than the API\n\t\t\t\t\t\t// expects so fix the data befre we send the request\n\t\t\t\t\t\tfor (const attachment of attachments) {\n\t\t\t\t\t\t\tif (attachment.fields !== undefined) {\n\t\t\t\t\t\t\t\tif (attachment.fields.item !== undefined) {\n\t\t\t\t\t\t\t\t\t// Move the field-content up\n\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\tattachment.fields = attachment.fields.item;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// If it does not have any items set remove it\n\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\tdelete attachment.fields;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbody.attachments = attachments;\n\n\t\t\t\t\t\tconst jsonParameters = this.getNodeParameter('jsonParameters', i, false);\n\t\t\t\t\t\tif (jsonParameters) {\n\t\t\t\t\t\t\tconst blocksJson = this.getNodeParameter('blocksJson', i, []) as string;\n\n\t\t\t\t\t\t\tif (blocksJson !== '' && validateJSON(blocksJson) === undefined) {\n\t\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'Blocks it is not a valid json', {\n\t\t\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (blocksJson !== '') {\n\t\t\t\t\t\t\t\tbody.blocks = blocksJson;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst attachmentsJson = this.getNodeParameter('attachmentsJson', i, '') as string;\n\n\t\t\t\t\t\t\tif (attachmentsJson !== '' && validateJSON(attachmentsJson) === undefined) {\n\t\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'Attachments it is not a valid json', {\n\t\t\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (attachmentsJson !== '') {\n\t\t\t\t\t\t\t\tbody.attachments = attachmentsJson;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Add all the other options to the request\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\tObject.assign(body, updateFields);\n\t\t\t\t\t\tresponseData = await slackApiRequest.call(this, 'POST', '/chat.update', body, qs);\n\t\t\t\t\t}\n\t\t\t\t\t//https://api.slack.com/methods/chat.delete\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst channel = this.getNodeParameter('channelId', i) as string;\n\t\t\t\t\t\tconst timestamp = this.getNodeParameter('timestamp', i) as string;\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tchannel,\n\t\t\t\t\t\t\tts: timestamp,\n\t\t\t\t\t\t};\n\t\t\t\t\t\t// Add all the other options to the request\n\t\t\t\t\t\tresponseData = await slackApiRequest.call(this, 'POST', '/chat.delete', body, qs);\n\t\t\t\t\t}\n\t\t\t\t\t//https://api.slack.com/methods/chat.getPermalink\n\t\t\t\t\tif (operation === 'getPermalink') {\n\t\t\t\t\t\tconst channel = this.getNodeParameter('channelId', i) as string;\n\t\t\t\t\t\tconst timestamp = this.getNodeParameter('timestamp', i) as string;\n\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-shadow\n\t\t\t\t\t\tconst qs = {\n\t\t\t\t\t\t\tchannel,\n\t\t\t\t\t\t\tmessage_ts: timestamp,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tresponseData = await slackApiRequest.call(this, 'GET', '/chat.getPermalink', {}, qs);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'reaction') {\n\t\t\t\t\tconst channel = this.getNodeParameter('channelId', i) as string;\n\t\t\t\t\tconst timestamp = this.getNodeParameter('timestamp', i) as string;\n\t\t\t\t\t//https://api.slack.com/methods/reactions.add\n\t\t\t\t\tif (operation === 'add') {\n\t\t\t\t\t\tconst name = this.getNodeParameter('name', i) as string;\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tchannel,\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\ttimestamp,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tresponseData = await slackApiRequest.call(this, 'POST', '/reactions.add', body, qs);\n\t\t\t\t\t}\n\t\t\t\t\t//https://api.slack.com/methods/reactions.remove\n\t\t\t\t\tif (operation === 'remove') {\n\t\t\t\t\t\tconst name = this.getNodeParameter('name', i) as string;\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tchannel,\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\ttimestamp,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tresponseData = await slackApiRequest.call(this, 'POST', '/reactions.remove', body, qs);\n\t\t\t\t\t}\n\t\t\t\t\t//https://api.slack.com/methods/reactions.get\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tqs.channel = channel;\n\t\t\t\t\t\tqs.timestamp = timestamp;\n\t\t\t\t\t\tresponseData = await slackApiRequest.call(this, 'GET', '/reactions.get', {}, qs);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'star') {\n\t\t\t\t\t//https://api.slack.com/methods/stars.add\n\t\t\t\t\tif (operation === 'add') {\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tconst body: IDataObject = {};\n\t\t\t\t\t\tif (options.channelId) {\n\t\t\t\t\t\t\tbody.channel = options.channelId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.fileId) {\n\t\t\t\t\t\t\tbody.file = options.fileId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.fileComment) {\n\t\t\t\t\t\t\tbody.file_comment = options.fileComment as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.timestamp) {\n\t\t\t\t\t\t\tbody.timestamp = options.timestamp as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await slackApiRequest.call(this, 'POST', '/stars.add', body, qs);\n\t\t\t\t\t}\n\t\t\t\t\t//https://api.slack.com/methods/stars.remove\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tconst body: IDataObject = {};\n\t\t\t\t\t\tif (options.channelId) {\n\t\t\t\t\t\t\tbody.channel = options.channelId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.fileId) {\n\t\t\t\t\t\t\tbody.file = options.fileId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.fileComment) {\n\t\t\t\t\t\t\tbody.file_comment = options.fileComment as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.timestamp) {\n\t\t\t\t\t\t\tbody.timestamp = options.timestamp as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await slackApiRequest.call(this, 'POST', '/stars.remove', body, qs);\n\t\t\t\t\t}\n\t\t\t\t\t//https://api.slack.com/methods/stars.list\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await slackApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'items',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/stars.list',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await slackApiRequest.call(this, 'GET', '/stars.list', {}, qs);\n\t\t\t\t\t\t\tresponseData = responseData.items;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'file') {\n\t\t\t\t\t//https://api.slack.com/methods/files.upload\n\t\t\t\t\tif (operation === 'upload') {\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tconst body: IDataObject = {};\n\t\t\t\t\t\tif (options.channelIds) {\n\t\t\t\t\t\t\tbody.channels = (options.channelIds as string[]).join(',');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.fileName) {\n\t\t\t\t\t\t\tbody.filename = options.fileName as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.initialComment) {\n\t\t\t\t\t\t\tbody.initial_comment = options.initialComment as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.threadTs) {\n\t\t\t\t\t\t\tbody.thread_ts = options.threadTs as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.title) {\n\t\t\t\t\t\t\tbody.title = options.title as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this.getNodeParameter('binaryData', i)) {\n\t\t\t\t\t\t\tconst binaryPropertyName = this.getNodeParameter('binaryPropertyName', i);\n\t\t\t\t\t\t\tconst binaryData = this.helpers.assertBinaryData(i, binaryPropertyName);\n\t\t\t\t\t\t\tconst binaryDataBuffer = await this.helpers.getBinaryDataBuffer(\n\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t\tbinaryPropertyName,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbody.file = {\n\t\t\t\t\t\t\t\tvalue: binaryDataBuffer,\n\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\tfilename: binaryData.fileName,\n\t\t\t\t\t\t\t\t\tcontentType: binaryData.mimeType,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tresponseData = await slackApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t\t'/files.upload',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t{ 'Content-Type': 'multipart/form-data' },\n\t\t\t\t\t\t\t\t{ formData: body },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.file;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst fileContent = this.getNodeParameter('fileContent', i) as string;\n\t\t\t\t\t\t\tbody.content = fileContent;\n\t\t\t\t\t\t\tresponseData = await slackApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t\t'/files.upload',\n\t\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t{ 'Content-Type': 'application/x-www-form-urlencoded' },\n\t\t\t\t\t\t\t\t{ form: body },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.file;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://api.slack.com/methods/files.list\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\t\t\t\t\t\tif (filters.channelId) {\n\t\t\t\t\t\t\tqs.channel = filters.channelId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (filters.showFilesHidden) {\n\t\t\t\t\t\t\tqs.show_files_hidden_by_limit = filters.showFilesHidden as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (filters.tsFrom) {\n\t\t\t\t\t\t\tqs.ts_from = filters.tsFrom as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (filters.tsTo) {\n\t\t\t\t\t\t\tqs.ts_to = filters.tsTo as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (filters.types) {\n\t\t\t\t\t\t\tqs.types = (filters.types as string[]).join(',');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (filters.userId) {\n\t\t\t\t\t\t\tqs.user = filters.userId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await slackApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'files',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/files.list',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.count = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await slackApiRequest.call(this, 'GET', '/files.list', {}, qs);\n\t\t\t\t\t\t\tresponseData = responseData.files;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://api.slack.com/methods/files.info\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst fileId = this.getNodeParameter('fileId', i) as string;\n\t\t\t\t\t\tqs.file = fileId;\n\t\t\t\t\t\tresponseData = await slackApiRequest.call(this, 'GET', '/files.info', {}, qs);\n\t\t\t\t\t\tresponseData = responseData.file;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'user') {\n\t\t\t\t\t//https://api.slack.com/methods/users.info\n\t\t\t\t\tif (operation === 'info') {\n\t\t\t\t\t\tqs.user = this.getNodeParameter('user', i) as string;\n\t\t\t\t\t\tresponseData = await slackApiRequest.call(this, 'GET', '/users.info', {}, qs);\n\t\t\t\t\t\tresponseData = responseData.user;\n\t\t\t\t\t}\n\t\t\t\t\t//https://api.slack.com/methods/users.list\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await slackApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'members',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/users.list',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await slackApiRequest.call(this, 'GET', '/users.list', {}, qs);\n\t\t\t\t\t\t\tresponseData = responseData.members;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://api.slack.com/methods/users.getPresence\n\t\t\t\t\tif (operation === 'getPresence') {\n\t\t\t\t\t\tqs.user = this.getNodeParameter('user', i) as string;\n\t\t\t\t\t\tresponseData = await slackApiRequest.call(this, 'GET', '/users.getPresence', {}, qs);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'userGroup') {\n\t\t\t\t\t//https://api.slack.com/methods/usergroups.create\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst name = this.getNodeParameter('name', i) as string;\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tObject.assign(body, additionalFields);\n\n\t\t\t\t\t\tresponseData = await slackApiRequest.call(this, 'POST', '/usergroups.create', body, qs);\n\n\t\t\t\t\t\tresponseData = responseData.usergroup;\n\t\t\t\t\t}\n\t\t\t\t\t//https://api.slack.com/methods/usergroups.enable\n\t\t\t\t\tif (operation === 'enable') {\n\t\t\t\t\t\tconst userGroupId = this.getNodeParameter('userGroupId', i) as string;\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tusergroup: userGroupId,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tObject.assign(body, additionalFields);\n\n\t\t\t\t\t\tresponseData = await slackApiRequest.call(this, 'POST', '/usergroups.enable', body, qs);\n\n\t\t\t\t\t\tresponseData = responseData.usergroup;\n\t\t\t\t\t}\n\t\t\t\t\t//https://api.slack.com/methods/usergroups.disable\n\t\t\t\t\tif (operation === 'disable') {\n\t\t\t\t\t\tconst userGroupId = this.getNodeParameter('userGroupId', i) as string;\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tusergroup: userGroupId,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tObject.assign(body, additionalFields);\n\n\t\t\t\t\t\tresponseData = await slackApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/usergroups.disable',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData = responseData.usergroup;\n\t\t\t\t\t}\n\n\t\t\t\t\t//https://api.slack.com/methods/usergroups.list\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-shadow\n\t\t\t\t\t\tconst qs: IDataObject = {};\n\n\t\t\t\t\t\tObject.assign(qs, additionalFields);\n\n\t\t\t\t\t\tresponseData = await slackApiRequest.call(this, 'GET', '/usergroups.list', {}, qs);\n\n\t\t\t\t\t\tresponseData = responseData.usergroups;\n\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\n\t\t\t\t\t\t\tresponseData = responseData.slice(0, limit);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t//https://api.slack.com/methods/usergroups.update\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst userGroupId = this.getNodeParameter('userGroupId', i) as string;\n\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tusergroup: userGroupId,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tObject.assign(body, updateFields);\n\n\t\t\t\t\t\tresponseData = await slackApiRequest.call(this, 'POST', '/usergroups.update', body, qs);\n\n\t\t\t\t\t\tresponseData = responseData.usergroup;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'userProfile') {\n\t\t\t\t\t//https://api.slack.com/methods/users.profile.set\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tconst timezone = this.getTimezone();\n\n\t\t\t\t\t\tconst body: IDataObject = {};\n\n\t\t\t\t\t\tObject.assign(body, additionalFields);\n\n\t\t\t\t\t\tif (body.status_expiration === undefined) {\n\t\t\t\t\t\t\tbody.status_expiration = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbody.status_expiration = moment.tz(body.status_expiration as string, timezone).unix();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (body.customFieldUi) {\n\t\t\t\t\t\t\tconst customFields = (body.customFieldUi as IDataObject)\n\t\t\t\t\t\t\t\t.customFieldValues as IDataObject[];\n\n\t\t\t\t\t\t\tbody.fields = {};\n\n\t\t\t\t\t\t\tfor (const customField of customFields) {\n\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\tbody.fields[customField.id] = {\n\t\t\t\t\t\t\t\t\tvalue: customField.value,\n\t\t\t\t\t\t\t\t\talt: customField.alt,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await slackApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/users.profile.set',\n\t\t\t\t\t\t\t{ profile: body },\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData = responseData.profile;\n\t\t\t\t\t}\n\t\t\t\t\t//https://api.slack.com/methods/users.profile.get\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-shadow\n\t\t\t\t\t\tconst qs: IDataObject = {};\n\n\t\t\t\t\t\tObject.assign(qs, additionalFields);\n\n\t\t\t\t\t\tresponseData = await slackApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/users.profile.get',\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData = responseData.profile;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t);\n\t\t\t\treturnData.push(...executionData);\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\treturnData.push({ json: { error: (error as JsonObject).message } });\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":["text","textUi","qs","moment"]}