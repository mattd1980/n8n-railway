{"version":3,"sources":["../../../../nodes/Slack/V2/GenericFunctions.ts"],"sourcesContent":["import get from 'lodash/get';\nimport type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tILoadOptionsFunctions,\n\tIOAuth2Options,\n\tIHttpRequestMethods,\n\tIRequestOptions,\n\tIWebhookFunctions,\n} from 'n8n-workflow';\nimport { NodeOperationError } from 'n8n-workflow';\n\nimport type { SendAndWaitMessageBody } from './MessageInterface';\nimport { getSendAndWaitConfig } from '../../../utils/sendAndWait/utils';\nimport { createUtmCampaignLink } from '../../../utils/utilities';\n\nexport async function slackApiRequest(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions | IWebhookFunctions,\n\tmethod: IHttpRequestMethods,\n\tresource: string,\n\tbody: object = {},\n\tquery: IDataObject = {},\n\theaders: {} | undefined = undefined,\n\toption: {} = {},\n\t// tslint:disable-next-line:no-any\n): Promise<any> {\n\tconst authenticationMethod = this.getNodeParameter('authentication', 0, 'accessToken') as string;\n\tlet options: IRequestOptions = {\n\t\tmethod,\n\t\theaders: headers ?? {\n\t\t\t'Content-Type': 'application/json; charset=utf-8',\n\t\t},\n\t\tbody,\n\t\tqs: query,\n\t\turi: resource.startsWith('https') ? resource : `https://slack.com/api${resource}`,\n\t\tjson: true,\n\t};\n\toptions = Object.assign({}, options, option);\n\tif (Object.keys(body).length === 0) {\n\t\tdelete options.body;\n\t}\n\tif (Object.keys(query).length === 0) {\n\t\tdelete options.qs;\n\t}\n\n\tconst oAuth2Options: IOAuth2Options = {\n\t\ttokenType: 'Bearer',\n\t\tproperty: 'authed_user.access_token',\n\t};\n\n\tconst credentialType = authenticationMethod === 'accessToken' ? 'slackApi' : 'slackOAuth2Api';\n\tconst response = await this.helpers.requestWithAuthentication.call(\n\t\tthis,\n\t\tcredentialType,\n\t\toptions,\n\t\t{\n\t\t\toauth2: oAuth2Options,\n\t\t},\n\t);\n\n\tif (response.ok === false) {\n\t\tif (response.error === 'paid_teams_only') {\n\t\t\tthrow new NodeOperationError(\n\t\t\t\tthis.getNode(),\n\t\t\t\t`Your current Slack plan does not include the resource '${\n\t\t\t\t\tthis.getNodeParameter('resource', 0) as string\n\t\t\t\t}'`,\n\t\t\t\t{\n\t\t\t\t\tdescription:\n\t\t\t\t\t\t'Hint: Upgrade to a Slack plan that includes the functionality you want to use.',\n\t\t\t\t\tlevel: 'warning',\n\t\t\t\t},\n\t\t\t);\n\t\t} else if (response.error === 'missing_scope') {\n\t\t\tthrow new NodeOperationError(\n\t\t\t\tthis.getNode(),\n\t\t\t\t'Your Slack credential is missing required Oauth Scopes',\n\t\t\t\t{\n\t\t\t\t\tdescription: `Add the following scope(s) to your Slack App: ${response.needed}`,\n\t\t\t\t\tlevel: 'warning',\n\t\t\t\t},\n\t\t\t);\n\t\t} else if (response.error === 'not_admin') {\n\t\t\tthrow new NodeOperationError(\n\t\t\t\tthis.getNode(),\n\t\t\t\t'Need higher Role Level for this Operation (e.g. Owner or Admin Rights)',\n\t\t\t\t{\n\t\t\t\t\tdescription:\n\t\t\t\t\t\t'Hint: Check the Role of your Slack App Integration. For more information see the Slack Documentation - https://slack.com/help/articles/360018112273-Types-of-roles-in-Slack',\n\t\t\t\t\tlevel: 'warning',\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\n\t\tthrow new NodeOperationError(\n\t\t\tthis.getNode(),\n\t\t\t'Slack error response: ' + JSON.stringify(response.error),\n\t\t);\n\t}\n\n\tif (response.ts !== undefined) {\n\t\tObject.assign(response, { message_timestamp: response.ts });\n\t\tdelete response.ts;\n\t}\n\n\treturn response;\n}\n\nexport async function slackApiRequestAllItems(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions,\n\tpropertyName: string,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\t// tslint:disable-next-line:no-any\n\tbody: any = {},\n\tquery: IDataObject = {},\n\t// tslint:disable-next-line:no-any\n): Promise<any> {\n\tconst returnData: IDataObject[] = [];\n\tlet responseData;\n\tquery.page = 1;\n\t//if the endpoint uses legacy pagination use count\n\t//https://api.slack.com/docs/pagination#classic\n\tif (endpoint.includes('files.list')) {\n\t\tquery.count = 100;\n\t} else {\n\t\tquery.limit = query.limit ?? 100;\n\t}\n\tdo {\n\t\tresponseData = await slackApiRequest.call(this, method, endpoint, body as IDataObject, query);\n\t\tquery.cursor = get(responseData, 'response_metadata.next_cursor');\n\t\tquery.page++;\n\t\treturnData.push.apply(\n\t\t\treturnData,\n\t\t\t(responseData[propertyName].matches as IDataObject[]) ?? responseData[propertyName],\n\t\t);\n\t} while (\n\t\t(responseData.response_metadata?.next_cursor !== undefined &&\n\t\t\tresponseData.response_metadata.next_cursor !== '' &&\n\t\t\tresponseData.response_metadata.next_cursor !== null) ||\n\t\t(responseData.paging?.pages !== undefined &&\n\t\t\tresponseData.paging.page !== undefined &&\n\t\t\tresponseData.paging.page < responseData.paging.pages) ||\n\t\t(responseData[propertyName].paging?.pages !== undefined &&\n\t\t\tresponseData[propertyName].paging.page !== undefined &&\n\t\t\tresponseData[propertyName].paging.page < responseData[propertyName].paging.pages)\n\t);\n\treturn returnData;\n}\n\nexport function getMessageContent(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions,\n\ti: number,\n\tnodeVersion: number,\n\tinstanceId?: string,\n) {\n\tconst includeLinkToWorkflow = this.getNodeParameter(\n\t\t'otherOptions.includeLinkToWorkflow',\n\t\ti,\n\t\tnodeVersion >= 2.1 ? true : false,\n\t) as IDataObject;\n\n\tconst { id } = this.getWorkflow();\n\tconst automatedMessage = `_Automated with this <${this.getInstanceBaseUrl()}workflow/${id}?utm_source=n8n-internal&utm_medium=powered_by&utm_campaign=${encodeURIComponent(\n\t\t'n8n-nodes-base.slack',\n\t)}${instanceId ? '_' + instanceId : ''}|n8n workflow>_`;\n\tconst messageType = this.getNodeParameter('messageType', i) as string;\n\n\tlet content: IDataObject = {};\n\tconst text = this.getNodeParameter('text', i, '') as string;\n\tswitch (messageType) {\n\t\tcase 'text':\n\t\t\tcontent = {\n\t\t\t\ttext: includeLinkToWorkflow ? `${text}\\n${automatedMessage}` : text,\n\t\t\t};\n\t\t\tbreak;\n\t\tcase 'block':\n\t\t\tcontent = this.getNodeParameter('blocksUi', i, {}, { ensureType: 'object' }) as IDataObject;\n\n\t\t\tif (includeLinkToWorkflow && Array.isArray(content.blocks)) {\n\t\t\t\tcontent.blocks.push({\n\t\t\t\t\ttype: 'section',\n\t\t\t\t\ttext: {\n\t\t\t\t\t\ttype: 'mrkdwn',\n\t\t\t\t\t\ttext: automatedMessage,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (text) {\n\t\t\t\tcontent.text = text;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'attachment':\n\t\t\tconst attachmentsUI = this.getNodeParameter('attachments', i) as IDataObject[];\n\n\t\t\tconst attachments: IDataObject[] = [];\n\n\t\t\tfor (const attachment of attachmentsUI) {\n\t\t\t\tif (attachment.fields !== undefined) {\n\t\t\t\t\tif ((attachment?.fields as IDataObject)?.item) {\n\t\t\t\t\t\tattachment.fields = (attachment?.fields as IDataObject)?.item as IDataObject[];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tattachments.push(attachment);\n\t\t\t}\n\n\t\t\tcontent = { attachments } as IDataObject;\n\n\t\t\tif (includeLinkToWorkflow && Array.isArray(content.attachments)) {\n\t\t\t\tcontent.attachments.push({\n\t\t\t\t\ttext: automatedMessage,\n\t\t\t\t});\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new NodeOperationError(\n\t\t\t\tthis.getNode(),\n\t\t\t\t`The message type \"${messageType}\" is not known!`,\n\t\t\t);\n\t}\n\n\treturn content;\n}\n\n// tslint:disable-next-line:no-any\nexport function validateJSON(json: string | undefined): any {\n\tlet result;\n\ttry {\n\t\tresult = JSON.parse(json!);\n\t} catch (exception) {\n\t\tresult = undefined;\n\t}\n\treturn result;\n}\n\nexport function getTarget(\n\tcontext: IExecuteFunctions,\n\titemIndex: number,\n\tidType: 'user' | 'channel',\n): string {\n\tlet target = '';\n\n\tif (idType === 'channel') {\n\t\ttarget = context.getNodeParameter('channelId', itemIndex, undefined, {\n\t\t\textractValue: true,\n\t\t}) as string;\n\t} else {\n\t\ttarget = context.getNodeParameter('user', itemIndex, undefined, {\n\t\t\textractValue: true,\n\t\t}) as string;\n\t}\n\n\tif (\n\t\tidType === 'user' &&\n\t\t(context.getNodeParameter('user', itemIndex) as IDataObject).mode === 'username'\n\t) {\n\t\ttarget = target.slice(0, 1) === '@' ? target : `@${target}`;\n\t}\n\n\treturn target;\n}\n\nexport function createSendAndWaitMessageBody(context: IExecuteFunctions) {\n\tconst select = context.getNodeParameter('select', 0) as 'user' | 'channel';\n\tconst target = getTarget(context, 0, select);\n\n\tconst config = getSendAndWaitConfig(context);\n\n\tconst body: SendAndWaitMessageBody = {\n\t\tchannel: target,\n\t\tblocks: [\n\t\t\t{\n\t\t\t\ttype: 'divider',\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'section',\n\t\t\t\ttext: {\n\t\t\t\t\ttype: context.getNode().typeVersion > 2.2 ? 'mrkdwn' : 'plain_text',\n\t\t\t\t\ttext: config.message,\n\t\t\t\t\temoji: true,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'section',\n\t\t\t\ttext: {\n\t\t\t\t\ttype: 'plain_text',\n\t\t\t\t\ttext: ' ',\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'divider',\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'actions',\n\t\t\t\telements: config.options.map((option) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'button',\n\t\t\t\t\t\tstyle: option.style === 'primary' ? 'primary' : undefined,\n\t\t\t\t\t\ttext: {\n\t\t\t\t\t\t\ttype: 'plain_text',\n\t\t\t\t\t\t\ttext: option.label,\n\t\t\t\t\t\t\temoji: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\turl: `${config.url}?approved=${option.value}`,\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t},\n\t\t],\n\t};\n\n\tif (config.appendAttribution) {\n\t\tconst instanceId = context.getInstanceId();\n\t\tconst attributionText = 'This message was sent automatically with ';\n\t\tconst link = createUtmCampaignLink('n8n-nodes-base.slack', instanceId);\n\t\tbody.blocks.push({\n\t\t\ttype: 'section',\n\t\t\ttext: {\n\t\t\t\ttype: 'mrkdwn',\n\t\t\t\ttext: `${attributionText} _<${link}|n8n>_`,\n\t\t\t},\n\t\t});\n\t}\n\n\tif (context.getNode().typeVersion > 2.2 && body.blocks?.[1]?.type === 'section') {\n\t\tdelete body.blocks[1].text.emoji;\n\t}\n\n\treturn body;\n}\n"],"mappings":"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","names":["get"]}