{"version":3,"sources":["../../../../nodes/If/V2/IfV2.node.ts"],"sourcesContent":["import set from 'lodash/set';\nimport {\n\tApplicationError,\n\tNodeOperationError,\n\ttype IExecuteFunctions,\n\ttype INodeExecutionData,\n\ttype INodeType,\n\ttype INodeTypeBaseDescription,\n\ttype INodeTypeDescription,\n\tNodeConnectionTypes,\n} from 'n8n-workflow';\n\nimport { getTypeValidationParameter, getTypeValidationStrictness } from './utils';\nimport { ENABLE_LESS_STRICT_TYPE_VALIDATION } from '../../../utils/constants';\nimport { looseTypeValidationProperty } from '../../../utils/descriptions';\n\nexport class IfV2 implements INodeType {\n\tdescription: INodeTypeDescription;\n\n\tconstructor(baseDescription: INodeTypeBaseDescription) {\n\t\tthis.description = {\n\t\t\t...baseDescription,\n\t\t\tversion: [2, 2.1, 2.2],\n\t\t\tdefaults: {\n\t\t\t\tname: 'If',\n\t\t\t\tcolor: '#408000',\n\t\t\t},\n\t\t\tinputs: [NodeConnectionTypes.Main],\n\t\t\toutputs: [NodeConnectionTypes.Main, NodeConnectionTypes.Main],\n\t\t\toutputNames: ['true', 'false'],\n\t\t\tparameterPane: 'wide',\n\t\t\tproperties: [\n\t\t\t\t{\n\t\t\t\t\tdisplayName: 'Conditions',\n\t\t\t\t\tname: 'conditions',\n\t\t\t\t\tplaceholder: 'Add Condition',\n\t\t\t\t\ttype: 'filter',\n\t\t\t\t\tdefault: {},\n\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\tfilter: {\n\t\t\t\t\t\t\tcaseSensitive: '={{!$parameter.options.ignoreCase}}',\n\t\t\t\t\t\t\ttypeValidation: getTypeValidationStrictness(2.1),\n\t\t\t\t\t\t\tversion: '={{ $nodeVersion >= 2.2 ? 2 : 1 }}',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t...looseTypeValidationProperty,\n\t\t\t\t\tdefault: false,\n\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\t'@version': [{ _cnd: { gte: 2.1 } }],\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdisplayName: 'Options',\n\t\t\t\t\tname: 'options',\n\t\t\t\t\ttype: 'collection',\n\t\t\t\t\tplaceholder: 'Add option',\n\t\t\t\t\tdefault: {},\n\t\t\t\t\toptions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdisplayName: 'Ignore Case',\n\t\t\t\t\t\t\tdescription: 'Whether to ignore letter case when evaluating conditions',\n\t\t\t\t\t\t\tname: 'ignoreCase',\n\t\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\t\tdefault: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...looseTypeValidationProperty,\n\t\t\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\t\t\t'@version': [{ _cnd: { lt: 2.1 } }],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t}\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst trueItems: INodeExecutionData[] = [];\n\t\tconst falseItems: INodeExecutionData[] = [];\n\n\t\tthis.getInputData().forEach((item, itemIndex) => {\n\t\t\ttry {\n\t\t\t\tconst options = this.getNodeParameter('options', itemIndex) as {\n\t\t\t\t\tignoreCase?: boolean;\n\t\t\t\t\tlooseTypeValidation?: boolean;\n\t\t\t\t};\n\t\t\t\tlet pass = false;\n\t\t\t\ttry {\n\t\t\t\t\tpass = this.getNodeParameter('conditions', itemIndex, false, {\n\t\t\t\t\t\textractValue: true,\n\t\t\t\t\t}) as boolean;\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!getTypeValidationParameter(2.1)(this, itemIndex, options.looseTypeValidation) &&\n\t\t\t\t\t\t!error.description\n\t\t\t\t\t) {\n\t\t\t\t\t\tset(error, 'description', ENABLE_LESS_STRICT_TYPE_VALIDATION);\n\t\t\t\t\t}\n\t\t\t\t\tset(error, 'context.itemIndex', itemIndex);\n\t\t\t\t\tset(error, 'node', this.getNode());\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\tif (item.pairedItem === undefined) {\n\t\t\t\t\titem.pairedItem = { item: itemIndex };\n\t\t\t\t}\n\n\t\t\t\tif (pass) {\n\t\t\t\t\ttrueItems.push(item);\n\t\t\t\t} else {\n\t\t\t\t\tfalseItems.push(item);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tfalseItems.push(item);\n\t\t\t\t} else {\n\t\t\t\t\tif (error instanceof NodeOperationError) {\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (error instanceof ApplicationError) {\n\t\t\t\t\t\tset(error, 'context.itemIndex', itemIndex);\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow new NodeOperationError(this.getNode(), error, {\n\t\t\t\t\t\titemIndex,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn [trueItems, falseItems];\n\t}\n}\n"],"mappings":"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","names":["set"]}