{"version":3,"sources":["../../../nodes/FileMaker/FileMaker.node.ts"],"sourcesContent":["/* eslint-disable n8n-nodes-base/node-filename-against-convention */\nimport type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n\tIRequestOptions,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport {\n\tgetFields,\n\tgetPortals,\n\tgetScripts,\n\tgetToken,\n\tlayoutsApiRequest,\n\tlogout,\n\tparseFields,\n\tparsePortals,\n\tparseQuery,\n\tparseScripts,\n\tparseSort,\n} from './GenericFunctions';\n\nexport class FileMaker implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'FileMaker',\n\t\tname: 'filemaker',\n\t\t// eslint-disable-next-line n8n-nodes-base/node-class-description-icon-not-svg\n\t\ticon: 'file:filemaker.png',\n\t\tgroup: ['input'],\n\t\tversion: 1,\n\t\tdescription: 'Retrieve data from the FileMaker data API',\n\t\tdefaults: {\n\t\t\tname: 'FileMaker',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'fileMaker',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Action',\n\t\t\t\tname: 'action',\n\t\t\t\ttype: 'options',\n\t\t\t\tdefault: 'record',\n\t\t\t\toptions: [\n\t\t\t\t\t/*{\n\t\t\t\t\t\tname: 'Login',\n\t\t\t\t\t\tvalue: 'login',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Logout',\n\t\t\t\t\t\tvalue: 'logout',\n\t\t\t\t\t},*/\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Create Record',\n\t\t\t\t\t\tvalue: 'create',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Delete Record',\n\t\t\t\t\t\tvalue: 'delete',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Duplicate Record',\n\t\t\t\t\t\tvalue: 'duplicate',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Edit Record',\n\t\t\t\t\t\tvalue: 'edit',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Find Records',\n\t\t\t\t\t\tvalue: 'find',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get Records',\n\t\t\t\t\t\tvalue: 'records',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get Records By ID',\n\t\t\t\t\t\tvalue: 'record',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Perform Script',\n\t\t\t\t\t\tvalue: 'performscript',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         shared\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Layout Name or ID',\n\t\t\t\tname: 'layout',\n\t\t\t\ttype: 'options',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getLayouts',\n\t\t\t\t},\n\t\t\t\toptions: [],\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {},\n\t\t\t\tplaceholder: 'Layout Name',\n\t\t\t\tdescription:\n\t\t\t\t\t'FileMaker Layout Name. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Record ID',\n\t\t\t\tname: 'recid',\n\t\t\t\ttype: 'number',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\taction: ['record', 'edit', 'delete', 'duplicate'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplaceholder: 'Record ID',\n\t\t\t\tdescription: 'Internal Record ID returned by get (recordid)',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Offset',\n\t\t\t\tname: 'offset',\n\t\t\t\tplaceholder: '0',\n\t\t\t\tdescription: 'The record number of the first record in the range of records',\n\t\t\t\ttype: 'number',\n\t\t\t\tdefault: 1,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\taction: ['find', 'records'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Limit',\n\t\t\t\tname: 'limit',\n\t\t\t\tplaceholder: '100',\n\t\t\t\tdescription: 'Max number of results to return',\n\t\t\t\ttype: 'number',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tminValue: 1,\n\t\t\t\t},\n\t\t\t\tdefault: 100,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\taction: ['find', 'records'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Get Portals',\n\t\t\t\tname: 'getPortals',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: 'Whether to get portal data as well',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\taction: ['record', 'records', 'find'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Portals Name or ID',\n\t\t\t\tname: 'portals',\n\t\t\t\ttype: 'options',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tmultipleValues: true,\n\t\t\t\t\tmultipleValueButtonText: 'Add portal',\n\t\t\t\t\tloadOptionsMethod: 'getPortals',\n\t\t\t\t},\n\t\t\t\toptions: [],\n\t\t\t\tdefault: [],\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\taction: ['record', 'records', 'find'],\n\t\t\t\t\t\tgetPortals: [true],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplaceholder: 'Portals',\n\t\t\t\tdescription:\n\t\t\t\t\t'The portal result set to return. Use the portal object name or portal table name. If this parameter is omitted, the API will return all portal objects and records in the layout. For best performance, pass the portal object name or portal table name. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t},\n\t\t\t// ----------------------------------\n\t\t\t//         find/records\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Response Layout Name or ID',\n\t\t\t\tname: 'responseLayout',\n\t\t\t\ttype: 'options',\n\t\t\t\tdescription:\n\t\t\t\t\t'Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getResponseLayouts',\n\t\t\t\t},\n\t\t\t\toptions: [],\n\t\t\t\tdefault: '',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\taction: ['find'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Queries',\n\t\t\t\tname: 'queries',\n\t\t\t\tplaceholder: 'Add query',\n\t\t\t\ttype: 'fixedCollection',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tmultipleValues: true,\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\taction: ['find'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: {},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'query',\n\t\t\t\t\t\tdisplayName: 'Query',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Fields',\n\t\t\t\t\t\t\t\tname: 'fields',\n\t\t\t\t\t\t\t\tplaceholder: 'Add field',\n\t\t\t\t\t\t\t\ttype: 'fixedCollection',\n\t\t\t\t\t\t\t\tdefault: {},\n\t\t\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\t\t\tmultipleValues: true,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'field',\n\t\t\t\t\t\t\t\t\t\tdisplayName: 'Field',\n\t\t\t\t\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tdisplayName: 'Field Name or ID',\n\t\t\t\t\t\t\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\t\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tloadOptionsMethod: 'getFields',\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\toptions: [],\n\t\t\t\t\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t\t\t\t\t'Search Field. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tdisplayName: 'Value',\n\t\t\t\t\t\t\t\t\t\t\t\tname: 'value',\n\t\t\t\t\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\t\t\t\t\tdescription: 'Value to search',\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tdescription: 'Field Name',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Omit',\n\t\t\t\t\t\t\t\tname: 'omit',\n\t\t\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Sort Data?',\n\t\t\t\tname: 'setSort',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: 'Whether to sort data',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\taction: ['find', 'record', 'records'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Sort',\n\t\t\t\tname: 'sortParametersUi',\n\t\t\t\tplaceholder: 'Add Sort Rules',\n\t\t\t\ttype: 'fixedCollection',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tmultipleValues: true,\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tsetSort: [true],\n\t\t\t\t\t\taction: ['find', 'records'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'Sort rules',\n\t\t\t\tdefault: {},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'rules',\n\t\t\t\t\t\tdisplayName: 'Rules',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Field Name or ID',\n\t\t\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\t\t\tloadOptionsMethod: 'getFields',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\toptions: [],\n\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t'Field Name. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Order',\n\t\t\t\t\t\t\t\tname: 'value',\n\t\t\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\t\t\tdefault: 'ascend',\n\t\t\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'Ascend',\n\t\t\t\t\t\t\t\t\t\tvalue: 'ascend',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'Descend',\n\t\t\t\t\t\t\t\t\t\tvalue: 'descend',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tdescription: 'Sort order',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Before Find Script',\n\t\t\t\tname: 'setScriptBefore',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\tdescription:\n\t\t\t\t\t'Whether to define a script to be run before the action specified by the API call and after the subsequent sort',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\taction: ['find', 'record', 'records'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Script Name or ID',\n\t\t\t\tname: 'scriptBefore',\n\t\t\t\ttype: 'options',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getScripts',\n\t\t\t\t},\n\t\t\t\toptions: [],\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\taction: ['find', 'record', 'records'],\n\t\t\t\t\t\tsetScriptBefore: [true],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplaceholder: 'Script Name',\n\t\t\t\tdescription:\n\t\t\t\t\t'The name of the FileMaker script to be run after the action specified by the API call and after the subsequent sort. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Script Parameter',\n\t\t\t\tname: 'scriptBeforeParam',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\taction: ['find', 'record', 'records'],\n\t\t\t\t\t\tsetScriptBefore: [true],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplaceholder: 'Script Parameters',\n\t\t\t\tdescription: 'A parameter for the FileMaker script',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Before Sort Script',\n\t\t\t\tname: 'setScriptSort',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\tdescription:\n\t\t\t\t\t'Whether to define a script to be run after the action specified by the API call but before the subsequent sort',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\taction: ['find', 'record', 'records'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Script Name or ID',\n\t\t\t\tname: 'scriptSort',\n\t\t\t\ttype: 'options',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getScripts',\n\t\t\t\t},\n\t\t\t\toptions: [],\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\taction: ['find', 'record', 'records'],\n\t\t\t\t\t\tsetScriptSort: [true],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplaceholder: 'Script Name',\n\t\t\t\tdescription:\n\t\t\t\t\t'The name of the FileMaker script to be run after the action specified by the API call but before the subsequent sort. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Script Parameter',\n\t\t\t\tname: 'scriptSortParam',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\taction: ['find', 'record', 'records'],\n\t\t\t\t\t\tsetScriptSort: [true],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplaceholder: 'Script Parameters',\n\t\t\t\tdescription: 'A parameter for the FileMaker script',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'After Sort Script',\n\t\t\t\tname: 'setScriptAfter',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\tdescription:\n\t\t\t\t\t'Whether to define a script to be run after the action specified by the API call but before the subsequent sort',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\taction: ['find', 'record', 'records'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Script Name or ID',\n\t\t\t\tname: 'scriptAfter',\n\t\t\t\ttype: 'options',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getScripts',\n\t\t\t\t},\n\t\t\t\toptions: [],\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\taction: ['find', 'record', 'records'],\n\t\t\t\t\t\tsetScriptAfter: [true],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplaceholder: 'Script Name',\n\t\t\t\tdescription:\n\t\t\t\t\t'The name of the FileMaker script to be run after the action specified by the API call and after the subsequent sort. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Script Parameter',\n\t\t\t\tname: 'scriptAfterParam',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\taction: ['find', 'record', 'records'],\n\t\t\t\t\t\tsetScriptAfter: [true],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplaceholder: 'Script Parameters',\n\t\t\t\tdescription: 'A parameter for the FileMaker script',\n\t\t\t},\n\t\t\t// ----------------------------------\n\t\t\t//         create/edit\n\t\t\t// ----------------------------------\n\t\t\t/*{\n\t\t\t\tdisplayName: 'fieldData',\n\t\t\t\tname: 'fieldData',\n\t\t\t\tplaceholder: '{\"field1\": \"value\", \"field2\": \"value\", ...}',\n\t\t\t\tdescription: 'Additional fields to add.',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '{}',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\taction: [\n\t\t\t\t\t\t\t'create',\n\t\t\t\t\t\t\t'edit',\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t},*/\n\t\t\t{\n\t\t\t\tdisplayName: 'Mod ID',\n\t\t\t\tname: 'modId',\n\t\t\t\tdescription:\n\t\t\t\t\t'The last modification ID. When you use modId, a record is edited only when the modId matches.',\n\t\t\t\ttype: 'number',\n\t\t\t\tdefault: '',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\taction: ['edit'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Fields',\n\t\t\t\tname: 'fieldsParametersUi',\n\t\t\t\tplaceholder: 'Add field',\n\t\t\t\ttype: 'fixedCollection',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tmultipleValues: true,\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\taction: ['create', 'edit'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'Fields to define',\n\t\t\t\tdefault: {},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'fields',\n\t\t\t\t\t\tdisplayName: 'Fields',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Field Name or ID',\n\t\t\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\t\t\tloadOptionsMethod: 'getFields',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\toptions: [],\n\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t'Field Name. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Value',\n\t\t\t\t\t\t\t\tname: 'value',\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t// ----------------------------------\n\t\t\t//         performscript\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Script Name or ID',\n\t\t\t\tname: 'script',\n\t\t\t\ttype: 'options',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getScripts',\n\t\t\t\t},\n\t\t\t\toptions: [],\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\taction: ['performscript'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplaceholder: 'Script Name',\n\t\t\t\tdescription:\n\t\t\t\t\t'The name of the FileMaker script to be run. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Script Parameter',\n\t\t\t\tname: 'scriptParam',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\taction: ['performscript'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplaceholder: 'Script Parameters',\n\t\t\t\tdescription: 'A parameter for the FileMaker script',\n\t\t\t},\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get all the available topics to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getLayouts(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\treturn await layoutsApiRequest.call(this);\n\t\t\t},\n\t\t\tasync getResponseLayouts(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\treturnData.push({\n\t\t\t\t\tname: 'Use main layout',\n\t\t\t\t\tvalue: '',\n\t\t\t\t});\n\n\t\t\t\tconst layouts = await layoutsApiRequest.call(this);\n\n\t\t\t\tfor (const layout of layouts) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: layout.name,\n\t\t\t\t\t\tvalue: layout.name,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\n\t\t\tasync getFields(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\n\t\t\t\tconst fields = await getFields.call(this);\n\n\t\t\t\tif (!Array.isArray(fields)) return [];\n\n\t\t\t\tfor (const field of fields) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: field.name,\n\t\t\t\t\t\tvalue: field.name,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\n\t\t\tasync getScripts(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\n\t\t\t\tconst scripts = await getScripts.call(this);\n\n\t\t\t\tfor (const script of scripts) {\n\t\t\t\t\tif (!script.isFolder) {\n\t\t\t\t\t\treturnData.push({\n\t\t\t\t\t\t\tname: script.name,\n\t\t\t\t\t\t\tvalue: script.name,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\n\t\t\tasync getPortals(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\n\t\t\t\tconst portals = await getPortals.call(this);\n\n\t\t\t\tObject.keys(portals as IDataObject).forEach((portal) => {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: portal,\n\t\t\t\t\t\tvalue: portal,\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\n\t\tconst credentials = await this.getCredentials('fileMaker');\n\n\t\tlet token;\n\n\t\ttry {\n\t\t\ttoken = await getToken.call(this);\n\t\t} catch (error) {\n\t\t\tthrow new NodeOperationError(this.getNode(), error as string);\n\t\t}\n\n\t\tlet requestOptions: IRequestOptions;\n\n\t\tconst host = credentials.host as string;\n\t\tconst database = credentials.db as string;\n\n\t\tconst url = `https://${host}/fmi/data/v1`;\n\n\t\tconst action = this.getNodeParameter('action', 0) as string;\n\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\ttry {\n\t\t\t\t// Reset all values\n\t\t\t\trequestOptions = {\n\t\t\t\t\turi: '',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t\t\t},\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\tjson: true,\n\t\t\t\t};\n\n\t\t\t\tconst layout = this.getNodeParameter('layout', i) as string;\n\n\t\t\t\tif (action === 'record') {\n\t\t\t\t\tconst recid = this.getNodeParameter('recid', i) as string;\n\t\t\t\t\trequestOptions.uri = url + `/databases/${database}/layouts/${layout}/records/${recid}`;\n\t\t\t\t\trequestOptions.qs = {\n\t\t\t\t\t\tportal: JSON.stringify(parsePortals.call(this, i)),\n\t\t\t\t\t\t...parseScripts.call(this, i),\n\t\t\t\t\t};\n\t\t\t\t} else if (action === 'records') {\n\t\t\t\t\trequestOptions.uri = url + `/databases/${database}/layouts/${layout}/records`;\n\t\t\t\t\trequestOptions.qs = {\n\t\t\t\t\t\t_offset: this.getNodeParameter('offset', i),\n\t\t\t\t\t\t_limit: this.getNodeParameter('limit', i),\n\t\t\t\t\t\tportal: JSON.stringify(parsePortals.call(this, i)),\n\t\t\t\t\t\t...parseScripts.call(this, i),\n\t\t\t\t\t};\n\t\t\t\t\tconst sort = parseSort.call(this, i);\n\t\t\t\t\tif (sort) {\n\t\t\t\t\t\trequestOptions.body.sort = sort;\n\t\t\t\t\t}\n\t\t\t\t} else if (action === 'find') {\n\t\t\t\t\trequestOptions.uri = url + `/databases/${database}/layouts/${layout}/_find`;\n\t\t\t\t\trequestOptions.method = 'POST';\n\t\t\t\t\trequestOptions.body = {\n\t\t\t\t\t\tquery: parseQuery.call(this, i),\n\t\t\t\t\t\toffset: this.getNodeParameter('offset', i),\n\t\t\t\t\t\tlimit: this.getNodeParameter('limit', i),\n\t\t\t\t\t\t'layout.response': this.getNodeParameter('responseLayout', i),\n\t\t\t\t\t\t...parseScripts.call(this, i),\n\t\t\t\t\t};\n\t\t\t\t\tconst sort = parseSort.call(this, i);\n\t\t\t\t\tif (sort) {\n\t\t\t\t\t\trequestOptions.body.sort = sort;\n\t\t\t\t\t}\n\t\t\t\t} else if (action === 'create') {\n\t\t\t\t\trequestOptions.uri = url + `/databases/${database}/layouts/${layout}/records`;\n\t\t\t\t\trequestOptions.method = 'POST';\n\t\t\t\t\trequestOptions.headers!['Content-Type'] = 'application/json';\n\n\t\t\t\t\t//TODO: handle portalData\n\t\t\t\t\trequestOptions.body = {\n\t\t\t\t\t\tfieldData: { ...parseFields.call(this, i) },\n\t\t\t\t\t\tportalData: {},\n\t\t\t\t\t\t...parseScripts.call(this, i),\n\t\t\t\t\t};\n\t\t\t\t} else if (action === 'edit') {\n\t\t\t\t\tconst recid = this.getNodeParameter('recid', i) as string;\n\t\t\t\t\trequestOptions.uri = url + `/databases/${database}/layouts/${layout}/records/${recid}`;\n\t\t\t\t\trequestOptions.method = 'PATCH';\n\t\t\t\t\trequestOptions.headers!['Content-Type'] = 'application/json';\n\n\t\t\t\t\t//TODO: handle portalData\n\t\t\t\t\trequestOptions.body = {\n\t\t\t\t\t\tfieldData: { ...parseFields.call(this, i) },\n\t\t\t\t\t\tportalData: {},\n\t\t\t\t\t\t...parseScripts.call(this, i),\n\t\t\t\t\t};\n\t\t\t\t} else if (action === 'performscript') {\n\t\t\t\t\tconst scriptName = this.getNodeParameter('script', i) as string;\n\t\t\t\t\trequestOptions.uri =\n\t\t\t\t\t\turl + `/databases/${database}/layouts/${layout}/script/${scriptName}`;\n\t\t\t\t\trequestOptions.qs = {\n\t\t\t\t\t\t'script.param': this.getNodeParameter('scriptParam', i),\n\t\t\t\t\t};\n\t\t\t\t} else if (action === 'duplicate') {\n\t\t\t\t\tconst recid = this.getNodeParameter('recid', i) as string;\n\t\t\t\t\trequestOptions.uri = url + `/databases/${database}/layouts/${layout}/records/${recid}`;\n\t\t\t\t\trequestOptions.method = 'POST';\n\t\t\t\t\trequestOptions.headers!['Content-Type'] = 'application/json';\n\t\t\t\t\trequestOptions.qs = {\n\t\t\t\t\t\t...parseScripts.call(this, i),\n\t\t\t\t\t};\n\t\t\t\t} else if (action === 'delete') {\n\t\t\t\t\tconst recid = this.getNodeParameter('recid', i) as string;\n\t\t\t\t\trequestOptions.uri = url + `/databases/${database}/layouts/${layout}/records/${recid}`;\n\t\t\t\t\trequestOptions.method = 'DELETE';\n\t\t\t\t\trequestOptions.qs = {\n\t\t\t\t\t\t...parseScripts.call(this, i),\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t`The action \"${action}\" is not implemented yet!`,\n\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// Now that the options are all set make the actual http request\n\t\t\t\tlet response;\n\t\t\t\ttry {\n\t\t\t\t\tresponse = await this.helpers.request(requestOptions);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tresponse = error.error;\n\t\t\t\t}\n\n\t\t\t\tif (typeof response === 'string') {\n\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t'DataAPI response body is not valid JSON. Is the DataAPI enabled?',\n\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturnData.push({ json: response, pairedItem: { item: i } });\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tjson: { error: error.message },\n\t\t\t\t\t\tpairedItem: { item: i },\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tif (error.node) {\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t`The action \"${error.message}\" is not implemented yet!`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tawait logout.call(this, token as string);\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":[]}