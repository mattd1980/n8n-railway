{"version":3,"sources":["../../../nodes/LoneScale/LoneScaleTrigger.node.ts"],"sourcesContent":["import {\n\tNodeConnectionTypes,\n\ttype IDataObject,\n\ttype IHookFunctions,\n\ttype ILoadOptionsFunctions,\n\ttype INodePropertyOptions,\n\ttype INodeType,\n\ttype INodeTypeDescription,\n\ttype IWebhookFunctions,\n\ttype IWebhookResponseData,\n} from 'n8n-workflow';\n\nimport { lonescaleApiRequest } from './GenericFunctions';\n\nexport class LoneScaleTrigger implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'LoneScale Trigger',\n\t\tname: 'loneScaleTrigger',\n\t\ticon: { light: 'file:loneScale.svg', dark: 'file:loneScale.dark.svg' },\n\t\tgroup: ['trigger'],\n\t\tversion: 1,\n\t\tdescription: 'Trigger LoneScale Workflow',\n\t\tdefaults: {\n\t\t\tname: 'LoneScale Trigger',\n\t\t},\n\t\tinputs: [],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'loneScaleApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\twebhooks: [\n\t\t\t{\n\t\t\t\tname: 'default',\n\t\t\t\thttpMethod: 'POST',\n\t\t\t\tresponseMode: 'onReceived',\n\t\t\t\tpath: 'webhook',\n\t\t\t},\n\t\t],\n\n\t\tproperties: [\n\t\t\t{\n\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-display-name-wrong-for-dynamic-options\n\t\t\t\tdisplayName: 'Workflow Name',\n\t\t\t\tname: 'workflow',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getWorkflows',\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-description-missing-final-period, n8n-nodes-base/node-param-description-wrong-for-dynamic-options\n\t\t\t\tdescription: 'Select one workflow. Choose from the list',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\tasync getWorkflows(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst data = await lonescaleApiRequest.call(this, 'GET', '/workflows');\n\t\t\t\treturn (data as Array<{ title: string; id: string }>)?.map((d) => ({\n\t\t\t\t\tname: d.title,\n\t\t\t\t\tvalue: d.id,\n\t\t\t\t}));\n\t\t\t},\n\t\t},\n\t};\n\n\twebhookMethods = {\n\t\tdefault: {\n\t\t\tasync checkExists(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tconst webhookUrl = this.getNodeWebhookUrl('default');\n\t\t\t\tconst workflowId = this.getNodeParameter('workflow') as string;\n\t\t\t\tconst webhook = await lonescaleApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t`/workflows/${workflowId}/hook?type=n8n`,\n\t\t\t\t);\n\t\t\t\tif (webhook.target_url === webhookUrl) {\n\t\t\t\t\twebhookData.webhookId = webhook.webhook_id;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tasync create(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookUrl = this.getNodeWebhookUrl('default');\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tconst workflowId = this.getNodeParameter('workflow') as string;\n\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\ttype: 'n8n',\n\t\t\t\t\ttarget_url: webhookUrl,\n\t\t\t\t};\n\t\t\t\tconst webhook = await lonescaleApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'POST',\n\t\t\t\t\t`/workflows/${workflowId}/hook`,\n\t\t\t\t\tbody,\n\t\t\t\t);\n\t\t\t\twebhookData.webhookId = webhook.webhook_id;\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tasync delete(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\ttry {\n\t\t\t\t\tawait lonescaleApiRequest.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t`/workflows/${webhookData.webhookId}/hook?type=n8n`,\n\t\t\t\t\t);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tdelete webhookData.webhookId;\n\t\t\t\treturn true;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync webhook(this: IWebhookFunctions): Promise<IWebhookResponseData> {\n\t\tconst req = this.getRequestObject();\n\n\t\treturn {\n\t\t\tworkflowData: [this.helpers.returnJsonArray(req.body)],\n\t\t};\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAUO;AAEP,8BAAoC;AAE7B,MAAM,iBAAsC;AAAA,EAA5C;AACN,uBAAoC;AAAA,MACnC,aAAa;AAAA,MACb,MAAM;AAAA,MACN,MAAM,EAAE,OAAO,sBAAsB,MAAM,0BAA0B;AAAA,MACrE,OAAO,CAAC,SAAS;AAAA,MACjB,SAAS;AAAA,MACT,aAAa;AAAA,MACb,UAAU;AAAA,QACT,MAAM;AAAA,MACP;AAAA,MACA,QAAQ,CAAC;AAAA,MACT,SAAS,CAAC,wCAAoB,IAAI;AAAA,MAClC,aAAa;AAAA,QACZ;AAAA,UACC,MAAM;AAAA,UACN,UAAU;AAAA,QACX;AAAA,MACD;AAAA,MACA,UAAU;AAAA,QACT;AAAA,UACC,MAAM;AAAA,UACN,YAAY;AAAA,UACZ,cAAc;AAAA,UACd,MAAM;AAAA,QACP;AAAA,MACD;AAAA,MAEA,YAAY;AAAA,QACX;AAAA;AAAA,UAEC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,kBAAkB;AAAA,UAClB,aAAa;AAAA,YACZ,mBAAmB;AAAA,UACpB;AAAA,UACA,SAAS;AAAA;AAAA,UAET,aAAa;AAAA,UACb,UAAU;AAAA,QACX;AAAA,MACD;AAAA,IACD;AAEA,mBAAU;AAAA,MACT,aAAa;AAAA,QACZ,MAAM,eAA2E;AAChF,gBAAM,OAAO,MAAM,4CAAoB,KAAK,MAAM,OAAO,YAAY;AACrE,iBAAQ,MAA+C,IAAI,CAAC,OAAO;AAAA,YAClE,MAAM,EAAE;AAAA,YACR,OAAO,EAAE;AAAA,UACV,EAAE;AAAA,QACH;AAAA,MACD;AAAA,IACD;AAEA,0BAAiB;AAAA,MAChB,SAAS;AAAA,QACR,MAAM,cAAoD;AACzD,gBAAM,cAAc,KAAK,sBAAsB,MAAM;AACrD,gBAAM,aAAa,KAAK,kBAAkB,SAAS;AACnD,gBAAM,aAAa,KAAK,iBAAiB,UAAU;AACnD,gBAAM,UAAU,MAAM,4CAAoB;AAAA,YACzC;AAAA,YACA;AAAA,YACA,cAAc,UAAU;AAAA,UACzB;AACA,cAAI,QAAQ,eAAe,YAAY;AACtC,wBAAY,YAAY,QAAQ;AAChC,mBAAO;AAAA,UACR;AACA,iBAAO;AAAA,QACR;AAAA,QACA,MAAM,SAA+C;AACpD,gBAAM,aAAa,KAAK,kBAAkB,SAAS;AACnD,gBAAM,cAAc,KAAK,sBAAsB,MAAM;AACrD,gBAAM,aAAa,KAAK,iBAAiB,UAAU;AACnD,gBAAM,OAAoB;AAAA,YACzB,MAAM;AAAA,YACN,YAAY;AAAA,UACb;AACA,gBAAM,UAAU,MAAM,4CAAoB;AAAA,YACzC;AAAA,YACA;AAAA,YACA,cAAc,UAAU;AAAA,YACxB;AAAA,UACD;AACA,sBAAY,YAAY,QAAQ;AAChC,iBAAO;AAAA,QACR;AAAA,QACA,MAAM,SAA+C;AACpD,gBAAM,cAAc,KAAK,sBAAsB,MAAM;AACrD,cAAI;AACH,kBAAM,4CAAoB;AAAA,cACzB;AAAA,cACA;AAAA,cACA,cAAc,YAAY,SAAS;AAAA,YACpC;AAAA,UACD,SAAS,OAAO;AACf,mBAAO;AAAA,UACR;AACA,iBAAO,YAAY;AACnB,iBAAO;AAAA,QACR;AAAA,MACD;AAAA,IACD;AAAA;AAAA,EAEA,MAAM,UAAgE;AACrE,UAAM,MAAM,KAAK,iBAAiB;AAElC,WAAO;AAAA,MACN,cAAc,CAAC,KAAK,QAAQ,gBAAgB,IAAI,IAAI,CAAC;AAAA,IACtD;AAAA,EACD;AACD;","names":[]}