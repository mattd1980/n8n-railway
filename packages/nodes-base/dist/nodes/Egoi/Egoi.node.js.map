{"version":3,"sources":["../../../nodes/Egoi/Egoi.node.ts"],"sourcesContent":["import moment from 'moment-timezone';\nimport type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes } from 'n8n-workflow';\n\nimport { egoiApiRequest, egoiApiRequestAllItems, simplify } from './GenericFunctions';\nimport type { ICreateMemberBody } from './Interfaces';\n\nexport class Egoi implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'E-goi',\n\t\tname: 'egoi',\n\n\t\ticon: 'file:egoi.svg',\n\t\tgroup: ['output'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume E-goi API',\n\t\tdefaults: {\n\t\t\tname: 'E-goi',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'egoiApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\trequired: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Contact',\n\t\t\t\t\t\tvalue: 'contact',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'contact',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\trequired: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Create',\n\t\t\t\t\t\tvalue: 'create',\n\t\t\t\t\t\tdescription: 'Create a member',\n\t\t\t\t\t\taction: 'Create a member',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get',\n\t\t\t\t\t\tvalue: 'get',\n\t\t\t\t\t\tdescription: 'Get a member',\n\t\t\t\t\t\taction: 'Get a member',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get Many',\n\t\t\t\t\t\tvalue: 'getAll',\n\t\t\t\t\t\tdescription: 'Get many members',\n\t\t\t\t\t\taction: 'Get many members',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Update',\n\t\t\t\t\t\tvalue: 'update',\n\t\t\t\t\t\tdescription: 'Update a member',\n\t\t\t\t\t\taction: 'Update a member',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'create',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'List Name or ID',\n\t\t\t\tname: 'list',\n\t\t\t\ttype: 'options',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getLists',\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['getAll', 'create', 'update', 'get'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\tdescription:\n\t\t\t\t\t'ID of list to operate on. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Email',\n\t\t\t\tname: 'email',\n\t\t\t\ttype: 'string',\n\t\t\t\tplaceholder: 'name@email.com',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\tdescription: 'Email address for a subscriber',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Contact ID',\n\t\t\t\tname: 'contactId',\n\t\t\t\ttype: 'string',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['contact'],\n\t\t\t\t\t\toperation: ['update'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\tdescription: 'Contact ID of the subscriber',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Resolve Data',\n\t\t\t\tname: 'resolveData',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['create', 'update'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: true,\n\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-description-boolean-without-whether\n\t\t\t\tdescription:\n\t\t\t\t\t'By default the response just includes the contact ID. If this option gets activated, it will resolve the data automatically.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Additional Fields',\n\t\t\t\tname: 'additionalFields',\n\t\t\t\ttype: 'collection',\n\t\t\t\tplaceholder: 'Add Field',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t\tresource: ['contact'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: {},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Birth Date',\n\t\t\t\t\t\tname: 'birth_date',\n\t\t\t\t\t\ttype: 'dateTime',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Birth date of a subscriber',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Cellphone',\n\t\t\t\t\t\tname: 'cellphone',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Cellphone of a subscriber',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Extra Fields',\n\t\t\t\t\t\tname: 'extraFieldsUi',\n\t\t\t\t\t\ttype: 'fixedCollection',\n\t\t\t\t\t\tplaceholder: 'Add Field',\n\t\t\t\t\t\tdefault: {},\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tmultipleValues: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Extra Field',\n\t\t\t\t\t\t\t\tname: 'extraFieldValues',\n\t\t\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\t\t\tmultipleValueButtonText: 'Add Field',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tdisplayName: 'Field Name or ID',\n\t\t\t\t\t\t\t\t\t\tname: 'field_id',\n\t\t\t\t\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t\t\t'Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>',\n\t\t\t\t\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\t\t\t\t\tloadOptionsMethod: 'getExtraFields',\n\t\t\t\t\t\t\t\t\t\t\tloadOptionsDependsOn: ['list'],\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tdisplayName: 'Value',\n\t\t\t\t\t\t\t\t\t\tname: 'value',\n\t\t\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'First Name',\n\t\t\t\t\t\tname: 'first_name',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Name of a subscriber',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Last Name',\n\t\t\t\t\t\tname: 'last_name',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Name of a subscriber',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Status',\n\t\t\t\t\t\tname: 'status',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Unconfirmed',\n\t\t\t\t\t\t\t\tvalue: 'unconfirmed',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Active',\n\t\t\t\t\t\t\t\tvalue: 'active',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Inactive',\n\t\t\t\t\t\t\t\tvalue: 'inactive',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Removed',\n\t\t\t\t\t\t\t\tvalue: 'removed',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: 'active',\n\t\t\t\t\t\tdescription: \"Subscriber's current status\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Tag Names or IDs',\n\t\t\t\t\t\tname: 'tagIds',\n\t\t\t\t\t\ttype: 'multiOptions',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tloadOptionsMethod: 'getListTags',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefault: [],\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'List of tag IDs to be added. Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t//--------------------\n\t\t\t//----UPDATE MEMBER---\n\t\t\t//--------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Update Fields',\n\t\t\t\tname: 'updateFields',\n\t\t\t\ttype: 'collection',\n\t\t\t\tplaceholder: 'Add Field',\n\t\t\t\tdefault: {},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['update'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Birth Date',\n\t\t\t\t\t\tname: 'birth_date',\n\t\t\t\t\t\ttype: 'dateTime',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Birth date of subscriber',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Cellphone',\n\t\t\t\t\t\tname: 'cellphone',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Cellphone of subscriber',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Email',\n\t\t\t\t\t\tname: 'email',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tplaceholder: 'name@email.com',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Email address for subscriber',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Extra Fields',\n\t\t\t\t\t\tname: 'extraFieldsUi',\n\t\t\t\t\t\ttype: 'fixedCollection',\n\t\t\t\t\t\tplaceholder: 'Add Field',\n\t\t\t\t\t\tdefault: {},\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tmultipleValues: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Extra Field',\n\t\t\t\t\t\t\t\tname: 'extraFieldValues',\n\t\t\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\t\t\tmultipleValueButtonText: 'Add Field',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tdisplayName: 'Field Name or ID',\n\t\t\t\t\t\t\t\t\t\tname: 'field_id',\n\t\t\t\t\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t\t\t'Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>',\n\t\t\t\t\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\t\t\t\t\tloadOptionsMethod: 'getExtraFields',\n\t\t\t\t\t\t\t\t\t\t\tloadOptionsDependsOn: ['list'],\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tdisplayName: 'Value',\n\t\t\t\t\t\t\t\t\t\tname: 'value',\n\t\t\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'First Name',\n\t\t\t\t\t\tname: 'first_name',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Name of subscriber',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Last Name',\n\t\t\t\t\t\tname: 'last_name',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Name of subscriber',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Status',\n\t\t\t\t\t\tname: 'status',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Unconfirmed',\n\t\t\t\t\t\t\t\tvalue: 'unconfirmed',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Active',\n\t\t\t\t\t\t\t\tvalue: 'active',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Inactive',\n\t\t\t\t\t\t\t\tvalue: 'inactive',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Removed',\n\t\t\t\t\t\t\t\tvalue: 'removed',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: 'active',\n\t\t\t\t\t\tdescription: \"Subscriber's current status\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Tag Names or IDs',\n\t\t\t\t\t\tname: 'tagIds',\n\t\t\t\t\t\ttype: 'multiOptions',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tloadOptionsMethod: 'getListTags',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefault: [],\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'List of tag IDs to be added. Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'By',\n\t\t\t\tname: 'by',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Contact ID',\n\t\t\t\t\t\tvalue: 'id',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Email',\n\t\t\t\t\t\tvalue: 'email',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['get'],\n\t\t\t\t\t\tresource: ['contact'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: 'id',\n\t\t\t\tdescription: 'Search by',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Contact ID',\n\t\t\t\tname: 'contactId',\n\t\t\t\ttype: 'string',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['contact'],\n\t\t\t\t\t\toperation: ['get'],\n\t\t\t\t\t\tby: ['id'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\tdescription: 'Contact ID of the subscriber',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Email',\n\t\t\t\tname: 'email',\n\t\t\t\ttype: 'string',\n\t\t\t\tplaceholder: 'name@email.com',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['contact'],\n\t\t\t\t\t\toperation: ['get'],\n\t\t\t\t\t\tby: ['email'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\tdescription: 'Email address for subscriber',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Return All',\n\t\t\t\tname: 'returnAll',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t\tresource: ['contact'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: 'Whether to return all results or only up to a given limit',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Limit',\n\t\t\t\tname: 'limit',\n\t\t\t\ttype: 'number',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t\tresource: ['contact'],\n\t\t\t\t\t\treturnAll: [false],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tminValue: 1,\n\t\t\t\t\tmaxValue: 500,\n\t\t\t\t},\n\t\t\t\tdefault: 100,\n\t\t\t\tdescription: 'Max number of results to return',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Simplify',\n\t\t\t\tname: 'simple',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['get', 'getAll'],\n\t\t\t\t\t\tresource: ['contact'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: true,\n\t\t\t\tdescription:\n\t\t\t\t\t'Whether to return a simplified version of the response instead of the raw data',\n\t\t\t},\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\tasync getLists(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst lists = await egoiApiRequestAllItems.call(this, 'items', 'GET', '/lists');\n\t\t\t\tfor (const list of lists) {\n\t\t\t\t\tconst listName = list.internal_name;\n\t\t\t\t\tconst listId = list.list_id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: listName,\n\t\t\t\t\t\tvalue: listId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\n\t\t\tasync getExtraFields(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst listId = this.getCurrentNodeParameter('list');\n\t\t\t\tconst extraFields = await egoiApiRequest.call(this, 'GET', `/lists/${listId}/fields`);\n\t\t\t\tfor (const field of extraFields) {\n\t\t\t\t\tif (field.type === 'extra') {\n\t\t\t\t\t\tconst fieldName = field.name;\n\t\t\t\t\t\tconst fieldId = field.field_id;\n\t\t\t\t\t\treturnData.push({\n\t\t\t\t\t\t\tname: fieldName,\n\t\t\t\t\t\t\tvalue: fieldId,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\n\t\t\tasync getListTags(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst tagList = await egoiApiRequestAllItems.call(this, 'items', 'GET', '/tags');\n\t\t\t\tfor (const tag of tagList) {\n\t\t\t\t\tconst tagName = tag.name;\n\t\t\t\t\tconst tagId = tag.tag_id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: tagName,\n\t\t\t\t\t\tvalue: tagId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tlet responseData;\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst items = this.getInputData();\n\t\tconst length = items.length;\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'contact') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst listId = this.getNodeParameter('list', i) as string;\n\n\t\t\t\t\t\tconst email = this.getNodeParameter('email', i) as string;\n\n\t\t\t\t\t\tconst resolveData = this.getNodeParameter('resolveData', i);\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tconst body: ICreateMemberBody = {\n\t\t\t\t\t\t\tbase: {\n\t\t\t\t\t\t\t\temail,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\textra: [],\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (additionalFields.birth_date) {\n\t\t\t\t\t\t\tadditionalFields.birth_date = moment(additionalFields.birth_date as string).format(\n\t\t\t\t\t\t\t\t'YYYY-MM-DD',\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.extraFieldsUi) {\n\t\t\t\t\t\t\tconst extraFields = (additionalFields.extraFieldsUi as IDataObject)\n\t\t\t\t\t\t\t\t.extraFieldValues as IDataObject[];\n\t\t\t\t\t\t\tif (extraFields) {\n\t\t\t\t\t\t\t\tbody.extra = extraFields as unknown as [];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tObject.assign(body.base, additionalFields);\n\n\t\t\t\t\t\tresponseData = await egoiApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/lists/${listId}/contacts`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst contactId = responseData.contact_id;\n\n\t\t\t\t\t\tif (additionalFields.tagIds) {\n\t\t\t\t\t\t\tconst tags = additionalFields.tagIds as string[];\n\t\t\t\t\t\t\tfor (const tag of tags) {\n\t\t\t\t\t\t\t\tawait egoiApiRequest.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t\t\t`/lists/${listId}/contacts/actions/attach-tag`,\n\t\t\t\t\t\t\t\t\t{ tag_id: tag, contacts: [contactId] },\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (resolveData) {\n\t\t\t\t\t\t\tresponseData = await egoiApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/lists/${listId}/contacts/${contactId}`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst listId = this.getNodeParameter('list', i) as string;\n\n\t\t\t\t\t\tconst simple = this.getNodeParameter('simple', i) as boolean;\n\n\t\t\t\t\t\tconst by = this.getNodeParameter('by', 0) as string;\n\n\t\t\t\t\t\tlet endpoint = '';\n\n\t\t\t\t\t\tif (by === 'id') {\n\t\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i) as string;\n\t\t\t\t\t\t\tendpoint = `/lists/${listId}/contacts/${contactId}`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst email = this.getNodeParameter('email', i) as string;\n\t\t\t\t\t\t\tendpoint = `/lists/${listId}/contacts?email=${email}`;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await egoiApiRequest.call(this, 'GET', endpoint, {});\n\n\t\t\t\t\t\tif (responseData.items) {\n\t\t\t\t\t\t\tresponseData = responseData.items;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (simple) {\n\t\t\t\t\t\t\tconst data = (await simplify.call(this, [responseData], listId))[0];\n\n\t\t\t\t\t\t\tresponseData = {\n\t\t\t\t\t\t\t\t...data,\n\t\t\t\t\t\t\t\temail_stats: responseData.email_stats,\n\t\t\t\t\t\t\t\tsms_stats: responseData.sms_stats,\n\t\t\t\t\t\t\t\tpush_stats: responseData.push_stats,\n\t\t\t\t\t\t\t\twebpush_stats: responseData.webpush_stats,\n\t\t\t\t\t\t\t\tvoice_stats: responseData.voice_stats,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst listId = this.getNodeParameter('list', i) as string;\n\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', 0);\n\n\t\t\t\t\t\tconst simple = this.getNodeParameter('simple', i) as boolean;\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await egoiApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'items',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/lists/${listId}/contacts`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\n\t\t\t\t\t\t\tresponseData = await egoiApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/lists/${listId}/contacts`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t{ limit },\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tresponseData = responseData.items;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (simple) {\n\t\t\t\t\t\t\tresponseData = await simplify.call(this, responseData, listId);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst listId = this.getNodeParameter('list', i) as string;\n\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i) as string;\n\t\t\t\t\t\tconst resolveData = this.getNodeParameter('resolveData', i);\n\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\tconst body: ICreateMemberBody = {\n\t\t\t\t\t\t\tbase: {},\n\t\t\t\t\t\t\textra: [],\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (updateFields.birth_date) {\n\t\t\t\t\t\t\tupdateFields.birth_date = moment(updateFields.birth_date as string).format(\n\t\t\t\t\t\t\t\t'YYYY-MM-DD',\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateFields.extraFieldsUi) {\n\t\t\t\t\t\t\tconst extraFields = (updateFields.extraFieldsUi as IDataObject)\n\t\t\t\t\t\t\t\t.extraFieldValues as IDataObject[];\n\t\t\t\t\t\t\tif (extraFields) {\n\t\t\t\t\t\t\t\tbody.extra = extraFields as unknown as [];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tObject.assign(body.base, updateFields);\n\n\t\t\t\t\t\tresponseData = await egoiApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PATCH',\n\t\t\t\t\t\t\t`/lists/${listId}/contacts/${contactId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (updateFields.tagIds) {\n\t\t\t\t\t\t\tconst tags = updateFields.tagIds as string[];\n\t\t\t\t\t\t\tfor (const tag of tags) {\n\t\t\t\t\t\t\t\tawait egoiApiRequest.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t\t\t`/lists/${listId}/contacts/actions/attach-tag`,\n\t\t\t\t\t\t\t\t\t{ tag_id: tag, contacts: [contactId] },\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (resolveData) {\n\t\t\t\t\t\t\tresponseData = await egoiApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/lists/${listId}/contacts/${contactId}`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (!this.continueOnFail()) {\n\t\t\t\t\tthrow error;\n\t\t\t\t} else {\n\t\t\t\t\t// Return the actual reason as error\n\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t{ itemData: { item: i } },\n\t\t\t);\n\t\t\treturnData.push(...executionData);\n\t\t}\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":["moment"]}