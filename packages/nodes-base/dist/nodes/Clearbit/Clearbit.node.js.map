{"version":3,"sources":["../../../nodes/Clearbit/Clearbit.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes } from 'n8n-workflow';\n\nimport { companyFields, companyOperations } from './CompanyDescription';\nimport { clearbitApiRequest } from './GenericFunctions';\nimport { personFields, personOperations } from './PersonDescription';\n\nexport class Clearbit implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Clearbit',\n\t\tname: 'clearbit',\n\t\ticon: 'file:clearbit.svg',\n\t\tgroup: ['output'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \":\" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume Clearbit API',\n\t\tdefaults: {\n\t\t\tname: 'Clearbit',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'clearbitApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Company',\n\t\t\t\t\t\tvalue: 'company',\n\t\t\t\t\t\tdescription: 'The Company API allows you to look up a company by their domain',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Person',\n\t\t\t\t\t\tvalue: 'person',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'The Person API lets you retrieve social information associated with an email address, such as a personâ€™s name, location and Twitter handle',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'company',\n\t\t\t},\n\t\t\t...companyOperations,\n\t\t\t...companyFields,\n\t\t\t...personOperations,\n\t\t\t...personFields,\n\t\t],\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst length = items.length;\n\t\tconst qs: IDataObject = {};\n\t\tlet responseData;\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'person') {\n\t\t\t\t\tif (operation === 'enrich') {\n\t\t\t\t\t\tconst email = this.getNodeParameter('email', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tqs.email = email;\n\t\t\t\t\t\tif (additionalFields.givenName) {\n\t\t\t\t\t\t\tqs.given_name = additionalFields.givenName as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.familyName) {\n\t\t\t\t\t\t\tqs.family_name = additionalFields.familyName as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.ipAddress) {\n\t\t\t\t\t\t\tqs.ip_address = additionalFields.ipAddress as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.location) {\n\t\t\t\t\t\t\tqs.location = additionalFields.location as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.company) {\n\t\t\t\t\t\t\tqs.company = additionalFields.company as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.companyDomain) {\n\t\t\t\t\t\t\tqs.company_domain = additionalFields.companyDomain as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.linkedIn) {\n\t\t\t\t\t\t\tqs.linkedin = additionalFields.linkedIn as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.twitter) {\n\t\t\t\t\t\t\tqs.twitter = additionalFields.twitter as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.facebook) {\n\t\t\t\t\t\t\tqs.facebook = additionalFields.facebook as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await clearbitApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`${resource}-stream`,\n\t\t\t\t\t\t\t'/v2/people/find',\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'company') {\n\t\t\t\t\tif (operation === 'enrich') {\n\t\t\t\t\t\tconst domain = this.getNodeParameter('domain', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tqs.domain = domain;\n\t\t\t\t\t\tif (additionalFields.companyName) {\n\t\t\t\t\t\t\tqs.company_name = additionalFields.companyName as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.linkedin) {\n\t\t\t\t\t\t\tqs.linkedin = additionalFields.linkedin as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.twitter) {\n\t\t\t\t\t\t\tqs.twitter = additionalFields.twitter as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.facebook) {\n\t\t\t\t\t\t\tqs.facebook = additionalFields.facebook as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await clearbitApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`${resource}-stream`,\n\t\t\t\t\t\t\t'/v2/companies/find',\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'autocomplete') {\n\t\t\t\t\t\tconst name = this.getNodeParameter('name', i) as string;\n\t\t\t\t\t\tqs.query = name;\n\t\t\t\t\t\tresponseData = await clearbitApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t'autocomplete',\n\t\t\t\t\t\t\t'/v1/companies/suggest',\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject),\n\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t);\n\t\t\t\treturnData.push(...executionData);\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\treturnData.push({ error: error.message, json: {} });\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":[]}