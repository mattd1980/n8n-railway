{"version":3,"sources":["../../../nodes/Strava/Strava.node.ts"],"sourcesContent":["import moment from 'moment-timezone';\nimport type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes } from 'n8n-workflow';\n\nimport { activityFields, activityOperations } from './ActivityDescription';\nimport { stravaApiRequest, stravaApiRequestAllItems } from './GenericFunctions';\n\nexport class Strava implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Strava',\n\t\tname: 'strava',\n\t\ticon: 'file:strava.svg',\n\t\tgroup: ['input'],\n\t\tversion: [1, 1.1],\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume Strava API',\n\t\tdefaults: {\n\t\t\tname: 'Strava',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'stravaOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Activity',\n\t\t\t\t\t\tvalue: 'activity',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'activity',\n\t\t\t},\n\t\t\t...activityOperations,\n\t\t\t...activityFields,\n\t\t],\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst length = items.length;\n\t\tconst qs: IDataObject = {};\n\t\tlet responseData;\n\t\tconst nodeVersion = this.getNode().typeVersion;\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'activity') {\n\t\t\t\t\t//https://developers.strava.com/docs/reference/#api-Activities-createActivity\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst name = this.getNodeParameter('name', i) as string;\n\n\t\t\t\t\t\tconst startDate = this.getNodeParameter('startDate', i) as string;\n\n\t\t\t\t\t\tconst elapsedTime = this.getNodeParameter('elapsedTime', i) as number;\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tif (additionalFields.trainer === true) {\n\t\t\t\t\t\t\tadditionalFields.trainer = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.commute === true) {\n\t\t\t\t\t\t\tadditionalFields.commute = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tstart_date_local: moment(startDate).toISOString(),\n\t\t\t\t\t\t\telapsed_time: elapsedTime,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (nodeVersion === 1) {\n\t\t\t\t\t\t\tconst type = this.getNodeParameter('type', i) as string;\n\t\t\t\t\t\t\tbody.type = type;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst sportType = this.getNodeParameter('sport_type', i) as string;\n\t\t\t\t\t\t\tbody.sport_type = sportType;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tObject.assign(body, additionalFields);\n\n\t\t\t\t\t\tresponseData = await stravaApiRequest.call(this, 'POST', '/activities', body);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developers.strava.com/docs/reference/#api-Activities-getActivityById\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst activityId = this.getNodeParameter('activityId', i) as string;\n\n\t\t\t\t\t\tresponseData = await stravaApiRequest.call(this, 'GET', `/activities/${activityId}`);\n\t\t\t\t\t}\n\t\t\t\t\tif (['getLaps', 'getZones', 'getKudos', 'getComments'].includes(operation)) {\n\t\t\t\t\t\tconst path: IDataObject = {\n\t\t\t\t\t\t\tgetComments: 'comments',\n\t\t\t\t\t\t\tgetZones: 'zones',\n\t\t\t\t\t\t\tgetKudos: 'kudos',\n\t\t\t\t\t\t\tgetLaps: 'laps',\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tconst activityId = this.getNodeParameter('activityId', i) as string;\n\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\n\t\t\t\t\t\tresponseData = await stravaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/activities/${activityId}/${path[operation]}`,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = responseData.splice(0, limit);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://developers.strava.com/docs/reference/#api-Streams-getActivityStreams\n\t\t\t\t\tif (operation === 'getStreams') {\n\t\t\t\t\t\tconst activityId = this.getNodeParameter('activityId', i) as string;\n\t\t\t\t\t\tconst keys = this.getNodeParameter('keys', i) as string[];\n\t\t\t\t\t\tqs.keys = keys.toString();\n\t\t\t\t\t\tqs.key_by_type = true;\n\n\t\t\t\t\t\tresponseData = await stravaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/activities/${activityId}/streams`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developers.mailerlite.com/reference#subscribers\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await stravaApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/activities',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.per_page = this.getNodeParameter('limit', i);\n\n\t\t\t\t\t\t\tresponseData = await stravaApiRequest.call(this, 'GET', '/activities', {}, qs);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://developers.strava.com/docs/reference/#api-Activities-updateActivityById\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst activityId = this.getNodeParameter('activityId', i) as string;\n\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\n\t\t\t\t\t\tconst body: IDataObject = {};\n\n\t\t\t\t\t\tObject.assign(body, updateFields);\n\n\t\t\t\t\t\tresponseData = await stravaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t\t`/activities/${activityId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t);\n\n\t\t\t\treturnData.push(...executionData);\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":["moment"]}