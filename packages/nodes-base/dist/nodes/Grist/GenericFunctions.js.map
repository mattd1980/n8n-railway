{"version":3,"sources":["../../../nodes/Grist/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHttpRequestMethods,\n\tILoadOptionsFunctions,\n\tIRequestOptions,\n\tJsonObject,\n} from 'n8n-workflow';\nimport { NodeApiError, NodeOperationError } from 'n8n-workflow';\n\nimport type {\n\tGristCredentials,\n\tGristDefinedFields,\n\tGristFilterProperties,\n\tGristSortProperties,\n} from './types';\n\nexport async function gristApiRequest(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\tbody: IDataObject | number[] = {},\n\tqs: IDataObject = {},\n) {\n\tconst { apiKey, planType, customSubdomain, selfHostedUrl } =\n\t\tawait this.getCredentials<GristCredentials>('gristApi');\n\n\tconst gristapiurl =\n\t\tplanType === 'free'\n\t\t\t? `https://docs.getgrist.com/api${endpoint}`\n\t\t\t: planType === 'paid'\n\t\t\t\t? `https://${customSubdomain}.getgrist.com/api${endpoint}`\n\t\t\t\t: `${selfHostedUrl}/api${endpoint}`;\n\n\tconst options: IRequestOptions = {\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${apiKey}`,\n\t\t},\n\t\tmethod,\n\t\turi: gristapiurl,\n\t\tqs,\n\t\tbody,\n\t\tjson: true,\n\t};\n\n\tif (!Object.keys(body).length) {\n\t\tdelete options.body;\n\t}\n\n\tif (!Object.keys(qs).length) {\n\t\tdelete options.qs;\n\t}\n\n\ttry {\n\t\treturn await this.helpers.request(options);\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\nexport function parseSortProperties(sortProperties: GristSortProperties) {\n\treturn sortProperties.reduce((acc, cur, curIdx) => {\n\t\tif (cur.direction === 'desc') acc += '-';\n\t\tacc += cur.field;\n\t\tif (curIdx !== sortProperties.length - 1) acc += ',';\n\t\treturn acc;\n\t}, '');\n}\n\nexport function parseFilterProperties(filterProperties: GristFilterProperties) {\n\treturn filterProperties.reduce<{ [key: string]: Array<string | number> }>((acc, cur) => {\n\t\tacc[cur.field] = acc[cur.field] ?? [];\n\t\tconst values = isNaN(Number(cur.values)) ? cur.values : Number(cur.values);\n\t\tacc[cur.field].push(values);\n\t\treturn acc;\n\t}, {});\n}\n\nexport function parseDefinedFields(fieldsToSendProperties: GristDefinedFields) {\n\treturn fieldsToSendProperties.reduce<{ [key: string]: string }>((acc, cur) => {\n\t\tacc[cur.fieldId] = cur.fieldValue;\n\t\treturn acc;\n\t}, {});\n}\n\nexport function parseAutoMappedInputs(incomingKeys: string[], inputsToIgnore: string[], item: any) {\n\treturn incomingKeys.reduce<{ [key: string]: any }>((acc, curKey) => {\n\t\tif (inputsToIgnore.includes(curKey)) return acc;\n\t\tacc = { ...acc, [curKey]: item[curKey] };\n\t\treturn acc;\n\t}, {});\n}\n\nexport function throwOnZeroDefinedFields(this: IExecuteFunctions, fields: GristDefinedFields) {\n\tif (!fields?.length) {\n\t\tthrow new NodeOperationError(\n\t\t\tthis.getNode(),\n\t\t\t\"No defined data found. Please specify the data to send in 'Fields to Send'.\",\n\t\t);\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,0BAAiD;AASjD,eAAsB,gBAErB,QACA,UACA,OAA+B,CAAC,GAChC,KAAkB,CAAC,GAClB;AACD,QAAM,EAAE,QAAQ,UAAU,iBAAiB,cAAc,IACxD,MAAM,KAAK,eAAiC,UAAU;AAEvD,QAAM,cACL,aAAa,SACV,gCAAgC,QAAQ,KACxC,aAAa,SACZ,WAAW,eAAe,oBAAoB,QAAQ,KACtD,GAAG,aAAa,OAAO,QAAQ;AAEpC,QAAM,UAA2B;AAAA,IAChC,SAAS;AAAA,MACR,eAAe,UAAU,MAAM;AAAA,IAChC;AAAA,IACA;AAAA,IACA,KAAK;AAAA,IACL;AAAA,IACA;AAAA,IACA,MAAM;AAAA,EACP;AAEA,MAAI,CAAC,OAAO,KAAK,IAAI,EAAE,QAAQ;AAC9B,WAAO,QAAQ;AAAA,EAChB;AAEA,MAAI,CAAC,OAAO,KAAK,EAAE,EAAE,QAAQ;AAC5B,WAAO,QAAQ;AAAA,EAChB;AAEA,MAAI;AACH,WAAO,MAAM,KAAK,QAAQ,QAAQ,OAAO;AAAA,EAC1C,SAAS,OAAO;AACf,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,KAAmB;AAAA,EAC3D;AACD;AAEO,SAAS,oBAAoB,gBAAqC;AACxE,SAAO,eAAe,OAAO,CAAC,KAAK,KAAK,WAAW;AAClD,QAAI,IAAI,cAAc,OAAQ,QAAO;AACrC,WAAO,IAAI;AACX,QAAI,WAAW,eAAe,SAAS,EAAG,QAAO;AACjD,WAAO;AAAA,EACR,GAAG,EAAE;AACN;AAEO,SAAS,sBAAsB,kBAAyC;AAC9E,SAAO,iBAAiB,OAAkD,CAAC,KAAK,QAAQ;AACvF,QAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,CAAC;AACpC,UAAM,SAAS,MAAM,OAAO,IAAI,MAAM,CAAC,IAAI,IAAI,SAAS,OAAO,IAAI,MAAM;AACzE,QAAI,IAAI,KAAK,EAAE,KAAK,MAAM;AAC1B,WAAO;AAAA,EACR,GAAG,CAAC,CAAC;AACN;AAEO,SAAS,mBAAmB,wBAA4C;AAC9E,SAAO,uBAAuB,OAAkC,CAAC,KAAK,QAAQ;AAC7E,QAAI,IAAI,OAAO,IAAI,IAAI;AACvB,WAAO;AAAA,EACR,GAAG,CAAC,CAAC;AACN;AAEO,SAAS,sBAAsB,cAAwB,gBAA0B,MAAW;AAClG,SAAO,aAAa,OAA+B,CAAC,KAAK,WAAW;AACnE,QAAI,eAAe,SAAS,MAAM,EAAG,QAAO;AAC5C,UAAM,EAAE,GAAG,KAAK,CAAC,MAAM,GAAG,KAAK,MAAM,EAAE;AACvC,WAAO;AAAA,EACR,GAAG,CAAC,CAAC;AACN;AAEO,SAAS,yBAAkD,QAA4B;AAC7F,MAAI,CAAC,QAAQ,QAAQ;AACpB,UAAM,IAAI;AAAA,MACT,KAAK,QAAQ;AAAA,MACb;AAAA,IACD;AAAA,EACD;AACD;","names":[]}