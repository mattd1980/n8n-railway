{"version":3,"sources":["../../../../../nodes/MySql/v2/transport/index.ts"],"sourcesContent":["import mysql2 from 'mysql2/promise';\nimport type {\n\tICredentialTestFunctions,\n\tIDataObject,\n\tIExecuteFunctions,\n\tILoadOptionsFunctions,\n} from 'n8n-workflow';\nimport { createServer, type AddressInfo } from 'node:net';\n\nimport { LOCALHOST } from '@utils/constants';\nimport { formatPrivateKey } from '@utils/utilities';\n\nimport type { Mysql2Pool, MysqlNodeCredentials } from '../helpers/interfaces';\n\nexport async function createPool(\n\tthis: IExecuteFunctions | ICredentialTestFunctions | ILoadOptionsFunctions,\n\tcredentials: MysqlNodeCredentials,\n\toptions?: IDataObject,\n): Promise<Mysql2Pool> {\n\tconst connectionOptions: mysql2.ConnectionOptions = {\n\t\thost: credentials.host,\n\t\tport: credentials.port,\n\t\tdatabase: credentials.database,\n\t\tuser: credentials.user,\n\t\tpassword: credentials.password,\n\t\tmultipleStatements: true,\n\t\tsupportBigNumbers: true,\n\t\tdecimalNumbers: false,\n\t};\n\n\tif (credentials.ssl) {\n\t\tconnectionOptions.ssl = {};\n\n\t\tif (credentials.caCertificate) {\n\t\t\tconnectionOptions.ssl.ca = formatPrivateKey(credentials.caCertificate);\n\t\t}\n\n\t\tif (credentials.clientCertificate || credentials.clientPrivateKey) {\n\t\t\tconnectionOptions.ssl.cert = formatPrivateKey(credentials.clientCertificate);\n\t\t\tconnectionOptions.ssl.key = formatPrivateKey(credentials.clientPrivateKey);\n\t\t}\n\t}\n\n\tif (options?.nodeVersion && (options.nodeVersion as number) >= 2.1) {\n\t\tconnectionOptions.dateStrings = true;\n\t}\n\n\tif (options?.connectionLimit) {\n\t\tconnectionOptions.connectionLimit = options.connectionLimit as number;\n\t}\n\n\tif (options?.connectTimeout) {\n\t\tconnectionOptions.connectTimeout = options.connectTimeout as number;\n\t}\n\n\tif (options?.largeNumbersOutput === 'text') {\n\t\tconnectionOptions.bigNumberStrings = true;\n\t}\n\n\tif (options?.decimalNumbers === true) {\n\t\tconnectionOptions.decimalNumbers = true;\n\t}\n\n\tif (!credentials.sshTunnel) {\n\t\treturn mysql2.createPool(connectionOptions);\n\t} else {\n\t\tif (credentials.sshAuthenticateWith === 'privateKey' && credentials.privateKey) {\n\t\t\tcredentials.privateKey = formatPrivateKey(credentials.privateKey);\n\t\t}\n\t\tconst sshClient = await this.helpers.getSSHClient(credentials);\n\n\t\t// Find a free TCP port\n\t\tconst localPort = await new Promise<number>((resolve) => {\n\t\t\tconst tempServer = createServer();\n\t\t\ttempServer.listen(0, LOCALHOST, () => {\n\t\t\t\tresolve((tempServer.address() as AddressInfo).port);\n\t\t\t\ttempServer.close();\n\t\t\t});\n\t\t});\n\n\t\tconst stream = await new Promise((resolve, reject) => {\n\t\t\tsshClient.forwardOut(\n\t\t\t\tLOCALHOST,\n\t\t\t\tlocalPort,\n\t\t\t\tcredentials.host,\n\t\t\t\tcredentials.port,\n\t\t\t\t(err, clientChannel) => {\n\t\t\t\t\tif (err) return reject(err);\n\t\t\t\t\tresolve(clientChannel);\n\t\t\t\t},\n\t\t\t);\n\t\t});\n\n\t\treturn mysql2.createPool({\n\t\t\t...connectionOptions,\n\t\t\tstream,\n\t\t});\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAmB;AAOnB,sBAA+C;AAE/C,uBAA0B;AAC1B,uBAAiC;AAIjC,eAAsB,WAErB,aACA,SACsB;AACtB,QAAM,oBAA8C;AAAA,IACnD,MAAM,YAAY;AAAA,IAClB,MAAM,YAAY;AAAA,IAClB,UAAU,YAAY;AAAA,IACtB,MAAM,YAAY;AAAA,IAClB,UAAU,YAAY;AAAA,IACtB,oBAAoB;AAAA,IACpB,mBAAmB;AAAA,IACnB,gBAAgB;AAAA,EACjB;AAEA,MAAI,YAAY,KAAK;AACpB,sBAAkB,MAAM,CAAC;AAEzB,QAAI,YAAY,eAAe;AAC9B,wBAAkB,IAAI,SAAK,mCAAiB,YAAY,aAAa;AAAA,IACtE;AAEA,QAAI,YAAY,qBAAqB,YAAY,kBAAkB;AAClE,wBAAkB,IAAI,WAAO,mCAAiB,YAAY,iBAAiB;AAC3E,wBAAkB,IAAI,UAAM,mCAAiB,YAAY,gBAAgB;AAAA,IAC1E;AAAA,EACD;AAEA,MAAI,SAAS,eAAgB,QAAQ,eAA0B,KAAK;AACnE,sBAAkB,cAAc;AAAA,EACjC;AAEA,MAAI,SAAS,iBAAiB;AAC7B,sBAAkB,kBAAkB,QAAQ;AAAA,EAC7C;AAEA,MAAI,SAAS,gBAAgB;AAC5B,sBAAkB,iBAAiB,QAAQ;AAAA,EAC5C;AAEA,MAAI,SAAS,uBAAuB,QAAQ;AAC3C,sBAAkB,mBAAmB;AAAA,EACtC;AAEA,MAAI,SAAS,mBAAmB,MAAM;AACrC,sBAAkB,iBAAiB;AAAA,EACpC;AAEA,MAAI,CAAC,YAAY,WAAW;AAC3B,WAAO,eAAAA,QAAO,WAAW,iBAAiB;AAAA,EAC3C,OAAO;AACN,QAAI,YAAY,wBAAwB,gBAAgB,YAAY,YAAY;AAC/E,kBAAY,iBAAa,mCAAiB,YAAY,UAAU;AAAA,IACjE;AACA,UAAM,YAAY,MAAM,KAAK,QAAQ,aAAa,WAAW;AAG7D,UAAM,YAAY,MAAM,IAAI,QAAgB,CAAC,YAAY;AACxD,YAAM,iBAAa,8BAAa;AAChC,iBAAW,OAAO,GAAG,4BAAW,MAAM;AACrC,gBAAS,WAAW,QAAQ,EAAkB,IAAI;AAClD,mBAAW,MAAM;AAAA,MAClB,CAAC;AAAA,IACF,CAAC;AAED,UAAM,SAAS,MAAM,IAAI,QAAQ,CAAC,SAAS,WAAW;AACrD,gBAAU;AAAA,QACT;AAAA,QACA;AAAA,QACA,YAAY;AAAA,QACZ,YAAY;AAAA,QACZ,CAAC,KAAK,kBAAkB;AACvB,cAAI,IAAK,QAAO,OAAO,GAAG;AAC1B,kBAAQ,aAAa;AAAA,QACtB;AAAA,MACD;AAAA,IACD,CAAC;AAED,WAAO,eAAAA,QAAO,WAAW;AAAA,MACxB,GAAG;AAAA,MACH;AAAA,IACD,CAAC;AAAA,EACF;AACD;","names":["mysql2"]}