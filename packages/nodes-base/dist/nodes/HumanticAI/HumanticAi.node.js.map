{"version":3,"sources":["../../../nodes/HumanticAI/HumanticAi.node.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes } from 'n8n-workflow';\n\nimport { humanticAiApiRequest } from './GenericFunctions';\nimport { profileFields, profileOperations } from './ProfileDescription';\n\nexport class HumanticAi implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Humantic AI',\n\t\tname: 'humanticAi',\n\n\t\ticon: 'file:humanticai.svg',\n\t\tgroup: ['output'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume Humantic AI API',\n\t\tdefaults: {\n\t\t\tname: 'Humantic AI',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'humanticAiApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Profile',\n\t\t\t\t\t\tvalue: 'profile',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'profile',\n\t\t\t},\n\t\t\t// PROFILE\n\t\t\t...profileOperations,\n\t\t\t...profileFields,\n\t\t],\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: IDataObject[] = [];\n\t\tconst length = items.length;\n\t\tconst qs: IDataObject = {};\n\t\tlet responseData;\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tif (resource === 'profile') {\n\t\t\t\tif (operation === 'create') {\n\t\t\t\t\tconst userId = this.getNodeParameter('userId', i) as string;\n\t\t\t\t\tconst sendResume = this.getNodeParameter('sendResume', i) as boolean;\n\t\t\t\t\tqs.userid = userId;\n\n\t\t\t\t\tif (sendResume) {\n\t\t\t\t\t\tconst binaryPropertyName = this.getNodeParameter('binaryPropertyName', i);\n\t\t\t\t\t\tconst binaryData = this.helpers.assertBinaryData(i, binaryPropertyName);\n\t\t\t\t\t\tconst binaryDataBuffer = await this.helpers.getBinaryDataBuffer(i, binaryPropertyName);\n\n\t\t\t\t\t\tresponseData = await humanticAiApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/user-profile/create',\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tformData: {\n\t\t\t\t\t\t\t\t\tresume: {\n\t\t\t\t\t\t\t\t\t\tvalue: binaryDataBuffer,\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\tfilename: binaryData.fileName,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresponseData = await humanticAiApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t'/user-profile/create',\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (responseData.data !== undefined) {\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelete responseData.usage_stats;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (operation === 'get') {\n\t\t\t\t\tconst userId = this.getNodeParameter('userId', i) as string;\n\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\n\t\t\t\t\tqs.userid = userId;\n\n\t\t\t\t\tif (options.persona) {\n\t\t\t\t\t\tqs.persona = (options.persona as string[]).join(',');\n\t\t\t\t\t}\n\n\t\t\t\t\tresponseData = await humanticAiApiRequest.call(this, 'GET', '/user-profile', {}, qs);\n\t\t\t\t\tresponseData = responseData.results;\n\t\t\t\t}\n\t\t\t\tif (operation === 'update') {\n\t\t\t\t\tconst userId = this.getNodeParameter('userId', i) as string;\n\t\t\t\t\tconst sendResume = this.getNodeParameter('sendResume', i) as string;\n\t\t\t\t\tqs.userid = userId;\n\n\t\t\t\t\tif (sendResume) {\n\t\t\t\t\t\tconst binaryPropertyName = this.getNodeParameter('binaryPropertyName', i);\n\t\t\t\t\t\tconst binaryData = this.helpers.assertBinaryData(i, binaryPropertyName);\n\t\t\t\t\t\tconst binaryDataBuffer = await this.helpers.getBinaryDataBuffer(i, binaryPropertyName);\n\n\t\t\t\t\t\tresponseData = await humanticAiApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/user-profile/create',\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tformData: {\n\t\t\t\t\t\t\t\t\tresume: {\n\t\t\t\t\t\t\t\t\t\tvalue: binaryDataBuffer,\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\tfilename: binaryData.fileName,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst text = this.getNodeParameter('text', i) as string;\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\ttext,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tqs.userid = userId;\n\n\t\t\t\t\t\tresponseData = await humanticAiApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/user-profile/create',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (Array.isArray(responseData)) {\n\t\t\t\treturnData.push.apply(returnData, responseData as IDataObject[]);\n\t\t\t} else {\n\t\t\t\treturnData.push(responseData as IDataObject);\n\t\t\t}\n\t\t}\n\t\treturn [this.helpers.returnJsonArray(returnData)];\n\t}\n}\n"],"mappings":"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","names":[]}