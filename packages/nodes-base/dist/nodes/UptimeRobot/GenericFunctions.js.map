{"version":3,"sources":["../../../nodes/UptimeRobot/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tJsonObject,\n\tIHttpRequestMethods,\n\tIRequestOptions,\n} from 'n8n-workflow';\nimport { NodeApiError, NodeOperationError } from 'n8n-workflow';\n\nexport async function uptimeRobotApiRequest(\n\tthis: IExecuteFunctions,\n\tmethod: IHttpRequestMethods,\n\tresource: string,\n\tbody: IDataObject = {},\n\tqs: IDataObject = {},\n\turi?: string,\n\toption: IDataObject = {},\n) {\n\tconst credentials = await this.getCredentials('uptimeRobotApi');\n\n\tlet options: IRequestOptions = {\n\t\tmethod,\n\t\tqs,\n\t\tform: {\n\t\t\tapi_key: credentials.apiKey,\n\t\t\t...body,\n\t\t},\n\t\turi: uri || `https://api.uptimerobot.com/v2${resource}`,\n\t\tjson: true,\n\t};\n\toptions = Object.assign({}, options, option);\n\ttry {\n\t\tconst responseData = await this.helpers.request(options);\n\t\tif (responseData.stat !== 'ok') {\n\t\t\tthrow new NodeOperationError(this.getNode(), responseData as Error);\n\t\t}\n\t\treturn responseData;\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,0BAAiD;AAEjD,eAAsB,sBAErB,QACA,UACA,OAAoB,CAAC,GACrB,KAAkB,CAAC,GACnB,KACA,SAAsB,CAAC,GACtB;AACD,QAAM,cAAc,MAAM,KAAK,eAAe,gBAAgB;AAE9D,MAAI,UAA2B;AAAA,IAC9B;AAAA,IACA;AAAA,IACA,MAAM;AAAA,MACL,SAAS,YAAY;AAAA,MACrB,GAAG;AAAA,IACJ;AAAA,IACA,KAAK,OAAO,iCAAiC,QAAQ;AAAA,IACrD,MAAM;AAAA,EACP;AACA,YAAU,OAAO,OAAO,CAAC,GAAG,SAAS,MAAM;AAC3C,MAAI;AACH,UAAM,eAAe,MAAM,KAAK,QAAQ,QAAQ,OAAO;AACvD,QAAI,aAAa,SAAS,MAAM;AAC/B,YAAM,IAAI,uCAAmB,KAAK,QAAQ,GAAG,YAAqB;AAAA,IACnE;AACA,WAAO;AAAA,EACR,SAAS,OAAO;AACf,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,KAAmB;AAAA,EAC3D;AACD;","names":[]}