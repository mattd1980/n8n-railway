{"version":3,"sources":["../../../nodes/SecurityScorecard/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIHookFunctions,\n\tILoadOptionsFunctions,\n\tIDataObject,\n\tJsonObject,\n\tIHttpRequestMethods,\n\tIRequestOptions,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\nexport async function scorecardApiRequest(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tresource: string,\n\n\tbody: any = {},\n\tquery: IDataObject = {},\n\turi?: string,\n\toption: IDataObject = {},\n): Promise<any> {\n\tconst credentials = await this.getCredentials('securityScorecardApi');\n\n\tconst headerWithAuthentication = { Authorization: `Token ${credentials.apiKey}` };\n\n\tlet options: IRequestOptions = {\n\t\theaders: headerWithAuthentication,\n\t\tmethod,\n\t\tqs: query,\n\t\turi: uri || `https://api.securityscorecard.io/${resource}`,\n\t\tbody,\n\t\tjson: true,\n\t};\n\n\tif (Object.keys(option).length !== 0) {\n\t\toptions = Object.assign({}, options, option);\n\t}\n\n\tif (Object.keys(body as IDataObject).length === 0) {\n\t\tdelete options.body;\n\t}\n\n\tif (Object.keys(query).length === 0) {\n\t\tdelete options.qs;\n\t}\n\ttry {\n\t\treturn await this.helpers.request(options);\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\nexport function simplify(data: IDataObject[]) {\n\tconst results = [];\n\tfor (const record of data) {\n\t\tconst newRecord: IDataObject = { date: record.date };\n\t\tfor (const factor of record.factors as IDataObject[]) {\n\t\t\tnewRecord[factor.name as string] = factor.score;\n\t\t}\n\t\tresults.push(newRecord);\n\t}\n\treturn results;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,0BAA6B;AAE7B,eAAsB,oBAErB,QACA,UAEA,OAAY,CAAC,GACb,QAAqB,CAAC,GACtB,KACA,SAAsB,CAAC,GACR;AACf,QAAM,cAAc,MAAM,KAAK,eAAe,sBAAsB;AAEpE,QAAM,2BAA2B,EAAE,eAAe,SAAS,YAAY,MAAM,GAAG;AAEhF,MAAI,UAA2B;AAAA,IAC9B,SAAS;AAAA,IACT;AAAA,IACA,IAAI;AAAA,IACJ,KAAK,OAAO,oCAAoC,QAAQ;AAAA,IACxD;AAAA,IACA,MAAM;AAAA,EACP;AAEA,MAAI,OAAO,KAAK,MAAM,EAAE,WAAW,GAAG;AACrC,cAAU,OAAO,OAAO,CAAC,GAAG,SAAS,MAAM;AAAA,EAC5C;AAEA,MAAI,OAAO,KAAK,IAAmB,EAAE,WAAW,GAAG;AAClD,WAAO,QAAQ;AAAA,EAChB;AAEA,MAAI,OAAO,KAAK,KAAK,EAAE,WAAW,GAAG;AACpC,WAAO,QAAQ;AAAA,EAChB;AACA,MAAI;AACH,WAAO,MAAM,KAAK,QAAQ,QAAQ,OAAO;AAAA,EAC1C,SAAS,OAAO;AACf,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,KAAmB;AAAA,EAC3D;AACD;AAEO,SAAS,SAAS,MAAqB;AAC7C,QAAM,UAAU,CAAC;AACjB,aAAW,UAAU,MAAM;AAC1B,UAAM,YAAyB,EAAE,MAAM,OAAO,KAAK;AACnD,eAAW,UAAU,OAAO,SAA0B;AACrD,gBAAU,OAAO,IAAc,IAAI,OAAO;AAAA,IAC3C;AACA,YAAQ,KAAK,SAAS;AAAA,EACvB;AACA,SAAO;AACR;","names":[]}