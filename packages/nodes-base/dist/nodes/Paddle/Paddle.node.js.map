{"version":3,"sources":["../../../nodes/Paddle/Paddle.node.ts"],"sourcesContent":["import moment from 'moment-timezone';\nimport type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n\tJsonObject,\n} from 'n8n-workflow';\nimport { NodeApiError, NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport { couponFields, couponOperations } from './CouponDescription';\nimport { paddleApiRequest, paddleApiRequestAllItems, validateJSON } from './GenericFunctions';\nimport { paymentFields, paymentOperations } from './PaymentDescription';\nimport { planFields, planOperations } from './PlanDescription';\nimport { productFields, productOperations } from './ProductDescription';\nimport { userFields, userOperations } from './UserDescription';\n\n// import {\n// \torderOperations,\n// \torderFields,\n// } from './OrderDescription';\n\nexport class Paddle implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Paddle',\n\t\tname: 'paddle',\n\t\t// eslint-disable-next-line n8n-nodes-base/node-class-description-icon-not-svg\n\t\ticon: 'file:paddle.png',\n\t\tgroup: ['output'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume Paddle API',\n\t\tdefaults: {\n\t\t\tname: 'Paddle',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'paddleApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Coupon',\n\t\t\t\t\t\tvalue: 'coupon',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Payment',\n\t\t\t\t\t\tvalue: 'payment',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Plan',\n\t\t\t\t\t\tvalue: 'plan',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Product',\n\t\t\t\t\t\tvalue: 'product',\n\t\t\t\t\t},\n\t\t\t\t\t// {\n\t\t\t\t\t// \tname: 'Order',\n\t\t\t\t\t// \tvalue: 'order',\n\t\t\t\t\t// },\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'User',\n\t\t\t\t\t\tvalue: 'user',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'coupon',\n\t\t\t},\n\t\t\t// COUPON\n\t\t\t...couponOperations,\n\t\t\t...couponFields,\n\t\t\t// PAYMENT\n\t\t\t...paymentOperations,\n\t\t\t...paymentFields,\n\t\t\t// PLAN\n\t\t\t...planOperations,\n\t\t\t...planFields,\n\t\t\t// PRODUCT\n\t\t\t...productOperations,\n\t\t\t...productFields,\n\t\t\t// ORDER\n\t\t\t// ...orderOperations,\n\t\t\t// ...orderFields,\n\t\t\t// USER\n\t\t\t...userOperations,\n\t\t\t...userFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t/* -------------------------------------------------------------------------- */\n\t\t\t/*                                 PAYMENT                                    */\n\t\t\t/* -------------------------------------------------------------------------- */\n\n\t\t\t// Get all payment so they can be selected in payment rescheduling\n\t\t\tasync getPayments(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst endpoint = '/2.0/subscription/payments';\n\t\t\t\tconst paymentResponse = await paddleApiRequest.call(this, endpoint, 'POST', {});\n\n\t\t\t\t// Alert user if there's no payments present to be loaded into payments property\n\t\t\t\tif (paymentResponse.response === undefined || paymentResponse.response.length === 0) {\n\t\t\t\t\tthrow new NodeApiError(this.getNode(), paymentResponse as JsonObject, {\n\t\t\t\t\t\tmessage: 'No payments on account.',\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tfor (const payment of paymentResponse.response) {\n\t\t\t\t\tconst id = payment.id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: id,\n\t\t\t\t\t\tvalue: id,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\n\t\t\t/* -------------------------------------------------------------------------- */\n\t\t\t/*                                 PRODUCTS                                   */\n\t\t\t/* -------------------------------------------------------------------------- */\n\n\t\t\t// Get all Products so they can be selected in coupon creation when assigning products\n\t\t\tasync getProducts(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst endpoint = '/2.0/product/get_products';\n\t\t\t\tconst products = await paddleApiRequest.call(this, endpoint, 'POST', {});\n\n\t\t\t\t// Alert user if there's no products present to be loaded into payments property\n\t\t\t\tif (products.length === 0) {\n\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'No products on account.');\n\t\t\t\t}\n\n\t\t\t\tfor (const product of products) {\n\t\t\t\t\tconst name = product.name;\n\t\t\t\t\tconst id = product.id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tvalue: id,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst length = items.length;\n\t\tlet responseData;\n\t\tconst body: IDataObject = {};\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'coupon') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst jsonParameters = this.getNodeParameter('jsonParameters', i);\n\n\t\t\t\t\t\tif (jsonParameters) {\n\t\t\t\t\t\t\tconst additionalFieldsJson = this.getNodeParameter(\n\t\t\t\t\t\t\t\t'additionalFieldsJson',\n\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t) as string;\n\n\t\t\t\t\t\t\tif (additionalFieldsJson !== '') {\n\t\t\t\t\t\t\t\tif (validateJSON(additionalFieldsJson) !== undefined) {\n\t\t\t\t\t\t\t\t\tObject.assign(body, JSON.parse(additionalFieldsJson));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t\t\t'Additional fields must be a valid JSON',\n\t\t\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst discountType = this.getNodeParameter('discountType', i) as string;\n\t\t\t\t\t\t\tconst couponType = this.getNodeParameter('couponType', i) as string;\n\t\t\t\t\t\t\tconst discountAmount = this.getNodeParameter('discountAmount', i) as number;\n\n\t\t\t\t\t\t\tif (couponType === 'product') {\n\t\t\t\t\t\t\t\tbody.product_ids = this.getNodeParameter('productIds', i) as string;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (discountType === 'flat') {\n\t\t\t\t\t\t\t\tbody.currency = this.getNodeParameter('currency', i) as string;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbody.coupon_type = couponType;\n\t\t\t\t\t\t\tbody.discount_type = discountType;\n\t\t\t\t\t\t\tbody.discount_amount = discountAmount;\n\n\t\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\t\tif (additionalFields.allowedUses) {\n\t\t\t\t\t\t\t\tbody.allowed_uses = additionalFields.allowedUses as number;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.couponCode) {\n\t\t\t\t\t\t\t\tbody.coupon_code = additionalFields.couponCode as string;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.couponPrefix) {\n\t\t\t\t\t\t\t\tbody.coupon_prefix = additionalFields.couponPrefix as string;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.expires) {\n\t\t\t\t\t\t\t\tbody.expires = moment(additionalFields.expires as Date).format('YYYY-MM-DD');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.group) {\n\t\t\t\t\t\t\t\tbody.group = additionalFields.group as string;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.recurring) {\n\t\t\t\t\t\t\t\tbody.recurring = 1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbody.recurring = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.numberOfCoupons) {\n\t\t\t\t\t\t\t\tbody.num_coupons = additionalFields.numberOfCoupons as number;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.description) {\n\t\t\t\t\t\t\t\tbody.description = additionalFields.description as string;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst endpoint = '/2.1/product/create_coupon';\n\n\t\t\t\t\t\t\tresponseData = await paddleApiRequest.call(this, endpoint, 'POST', body);\n\t\t\t\t\t\t\tresponseData = responseData.response.coupon_codes.map((coupon: string) => ({\n\t\t\t\t\t\t\t\tcoupon,\n\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst productId = this.getNodeParameter('productId', i) as string;\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst endpoint = '/2.0/product/list_coupons';\n\n\t\t\t\t\t\tbody.product_id = productId;\n\n\t\t\t\t\t\tresponseData = await paddleApiRequest.call(this, endpoint, 'POST', body);\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = responseData.response;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = responseData.response.splice(0, limit);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst jsonParameters = this.getNodeParameter('jsonParameters', i);\n\n\t\t\t\t\t\tif (jsonParameters) {\n\t\t\t\t\t\t\tconst additionalFieldsJson = this.getNodeParameter(\n\t\t\t\t\t\t\t\t'additionalFieldsJson',\n\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t) as string;\n\n\t\t\t\t\t\t\tif (additionalFieldsJson !== '') {\n\t\t\t\t\t\t\t\tif (validateJSON(additionalFieldsJson) !== undefined) {\n\t\t\t\t\t\t\t\t\tObject.assign(body, JSON.parse(additionalFieldsJson));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t\t\t'Additional fields must be a valid JSON',\n\t\t\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst updateBy = this.getNodeParameter('updateBy', i) as string;\n\n\t\t\t\t\t\t\tif (updateBy === 'group') {\n\t\t\t\t\t\t\t\tbody.group = this.getNodeParameter('group', i) as string;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbody.coupon_code = this.getNodeParameter('couponCode', i) as string;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\t\tif (additionalFields.allowedUses) {\n\t\t\t\t\t\t\t\tbody.allowed_uses = additionalFields.allowedUses as number;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.currency) {\n\t\t\t\t\t\t\t\tbody.currency = additionalFields.currency as string;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.newCouponCode) {\n\t\t\t\t\t\t\t\tbody.new_coupon_code = additionalFields.newCouponCode as string;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.expires) {\n\t\t\t\t\t\t\t\tbody.expires = moment(additionalFields.expires as Date).format('YYYY-MM-DD');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.newGroup) {\n\t\t\t\t\t\t\t\tbody.new_group = additionalFields.newGroup as string;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.recurring === true) {\n\t\t\t\t\t\t\t\tbody.recurring = 1;\n\t\t\t\t\t\t\t} else if (additionalFields.recurring === false) {\n\t\t\t\t\t\t\t\tbody.recurring = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.productIds) {\n\t\t\t\t\t\t\t\tbody.product_ids = additionalFields.productIds as number;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.discountAmount) {\n\t\t\t\t\t\t\t\tbody.discount_amount = additionalFields.discountAmount as number;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.discount) {\n\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\tif (additionalFields.discount.discountProperties.discountType === 'percentage') {\n\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\tbody.discount_amount = additionalFields.discount.discountProperties\n\t\t\t\t\t\t\t\t\t\t.discountAmount as number;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\t\tbody.currency = additionalFields.discount.discountProperties.currency as string;\n\t\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\t\tbody.discount_amount = additionalFields.discount.discountProperties\n\t\t\t\t\t\t\t\t\t\t.discountAmount as number;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst endpoint = '/2.1/product/update_coupon';\n\n\t\t\t\t\t\tresponseData = await paddleApiRequest.call(this, endpoint, 'POST', body);\n\t\t\t\t\t\tresponseData = responseData.response;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'payment') {\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst jsonParameters = this.getNodeParameter('jsonParameters', i);\n\n\t\t\t\t\t\tif (jsonParameters) {\n\t\t\t\t\t\t\tconst additionalFieldsJson = this.getNodeParameter(\n\t\t\t\t\t\t\t\t'additionalFieldsJson',\n\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t) as string;\n\n\t\t\t\t\t\t\tif (additionalFieldsJson !== '') {\n\t\t\t\t\t\t\t\tif (validateJSON(additionalFieldsJson) !== undefined) {\n\t\t\t\t\t\t\t\t\tObject.assign(body, JSON.parse(additionalFieldsJson));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t\t\t'Additional fields must be a valid JSON',\n\t\t\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\t\tif (additionalFields.subscriptionId) {\n\t\t\t\t\t\t\t\tbody.subscription_id = additionalFields.subscriptionId as number;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.plan) {\n\t\t\t\t\t\t\t\tbody.plan = additionalFields.plan as string;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.state) {\n\t\t\t\t\t\t\t\tbody.state = additionalFields.state as string;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.isPaid) {\n\t\t\t\t\t\t\t\tbody.is_paid = 1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbody.is_paid = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.from) {\n\t\t\t\t\t\t\t\tbody.from = moment(additionalFields.from as Date).format('YYYY-MM-DD');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.to) {\n\t\t\t\t\t\t\t\tbody.to = moment(additionalFields.to as Date).format('YYYY-MM-DD');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.isOneOffCharge) {\n\t\t\t\t\t\t\t\tbody.is_one_off_charge = additionalFields.isOneOffCharge as boolean;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst endpoint = '/2.0/subscription/payments';\n\n\t\t\t\t\t\tresponseData = await paddleApiRequest.call(this, endpoint, 'POST', body);\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = responseData.response;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = responseData.response.splice(0, limit);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'reschedule') {\n\t\t\t\t\t\tconst paymentId = this.getNodeParameter('paymentId', i) as number;\n\t\t\t\t\t\tconst date = this.getNodeParameter('date', i) as Date;\n\n\t\t\t\t\t\tbody.payment_id = paymentId;\n\t\t\t\t\t\tbody.date = body.to = moment(date).format('YYYY-MM-DD');\n\n\t\t\t\t\t\tconst endpoint = '/2.0/subscription/payments_reschedule';\n\n\t\t\t\t\t\tresponseData = await paddleApiRequest.call(this, endpoint, 'POST', body);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'plan') {\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst endpoint = '/2.0/subscription/plans';\n\n\t\t\t\t\t\tresponseData = await paddleApiRequest.call(this, endpoint, 'POST', body);\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = responseData.response;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = responseData.response.splice(0, limit);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst planId = this.getNodeParameter('planId', i) as string;\n\n\t\t\t\t\t\tbody.plan = planId;\n\n\t\t\t\t\t\tconst endpoint = '/2.0/subscription/plans';\n\n\t\t\t\t\t\tresponseData = await paddleApiRequest.call(this, endpoint, 'POST', body);\n\t\t\t\t\t\tresponseData = responseData.response;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'product') {\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst endpoint = '/2.0/product/get_products';\n\n\t\t\t\t\t\tresponseData = await paddleApiRequest.call(this, endpoint, 'POST', body);\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = responseData.response.products;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = responseData.response.products.splice(0, limit);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'order') {\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst endpoint = '/1.0/order';\n\t\t\t\t\t\tconst checkoutId = this.getNodeParameter('checkoutId', i) as string;\n\n\t\t\t\t\t\tbody.checkout_id = checkoutId;\n\n\t\t\t\t\t\tresponseData = await paddleApiRequest.call(this, endpoint, 'GET', body);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'user') {\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\n\t\t\t\t\t\tconst jsonParameters = this.getNodeParameter('jsonParameters', i);\n\n\t\t\t\t\t\tif (jsonParameters) {\n\t\t\t\t\t\t\tconst additionalFieldsJson = this.getNodeParameter(\n\t\t\t\t\t\t\t\t'additionalFieldsJson',\n\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t) as string;\n\n\t\t\t\t\t\t\tif (additionalFieldsJson !== '') {\n\t\t\t\t\t\t\t\tif (validateJSON(additionalFieldsJson) !== undefined) {\n\t\t\t\t\t\t\t\t\tObject.assign(body, JSON.parse(additionalFieldsJson));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t\t\t'Additional fields must be a valid JSON',\n\t\t\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\t\tif (additionalFields.state) {\n\t\t\t\t\t\t\t\tbody.state = additionalFields.state as string;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.planId) {\n\t\t\t\t\t\t\t\tbody.plan_id = additionalFields.planId as string;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.subscriptionId) {\n\t\t\t\t\t\t\t\tbody.subscription_id = additionalFields.subscriptionId as string;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst endpoint = '/2.0/subscription/users';\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await paddleApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'response',\n\t\t\t\t\t\t\t\tendpoint,\n\t\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbody.results_per_page = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await paddleApiRequest.call(this, endpoint, 'POST', body);\n\t\t\t\t\t\t\tresponseData = responseData.response;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject),\n\t\t\t\t{ itemData: { item: i } },\n\t\t\t);\n\n\t\t\treturnData.push(...executionData);\n\t\t}\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":["moment"]}