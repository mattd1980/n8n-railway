{"version":3,"sources":["../../../../../nodes/SyncroMSP/v1/methods/loadOptions.ts"],"sourcesContent":["import type { ILoadOptionsFunctions, INodePropertyOptions } from 'n8n-workflow';\nimport { NodeOperationError } from 'n8n-workflow';\n\nimport { apiRequestAllItems } from '../transport';\n\n// Get all the available channels\n\nexport async function getCustomers(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\tconst endpoint = 'customers';\n\tconst responseData = await apiRequestAllItems.call(this, 'GET', endpoint, {});\n\n\tif (responseData === undefined) {\n\t\tthrow new NodeOperationError(this.getNode(), 'No data got returned');\n\t}\n\n\tconst returnData: INodePropertyOptions[] = [];\n\tfor (const data of responseData) {\n\t\treturnData.push({\n\t\t\tname: data.fullname as string,\n\t\t\tvalue: data.id as number,\n\t\t});\n\t}\n\n\treturnData.sort((a, b) => {\n\t\tif (a.name < b.name) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (a.name > b.name) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t});\n\n\treturn returnData;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,0BAAmC;AAEnC,uBAAmC;AAInC,eAAsB,eAA2E;AAChG,QAAM,WAAW;AACjB,QAAM,eAAe,MAAM,oCAAmB,KAAK,MAAM,OAAO,UAAU,CAAC,CAAC;AAE5E,MAAI,iBAAiB,QAAW;AAC/B,UAAM,IAAI,uCAAmB,KAAK,QAAQ,GAAG,sBAAsB;AAAA,EACpE;AAEA,QAAM,aAAqC,CAAC;AAC5C,aAAW,QAAQ,cAAc;AAChC,eAAW,KAAK;AAAA,MACf,MAAM,KAAK;AAAA,MACX,OAAO,KAAK;AAAA,IACb,CAAC;AAAA,EACF;AAEA,aAAW,KAAK,CAAC,GAAG,MAAM;AACzB,QAAI,EAAE,OAAO,EAAE,MAAM;AACpB,aAAO;AAAA,IACR;AACA,QAAI,EAAE,OAAO,EAAE,MAAM;AACpB,aAAO;AAAA,IACR;AACA,WAAO;AAAA,EACR,CAAC;AAED,SAAO;AACR;","names":[]}