{"version":3,"sources":["../../../../../../../nodes/SyncroMSP/v1/actions/customer/get/execute.ts"],"sourcesContent":["import type { IExecuteFunctions, IDataObject, INodeExecutionData } from 'n8n-workflow';\n\nimport { apiRequest } from '../../../transport';\n\nexport async function getCustomer(\n\tthis: IExecuteFunctions,\n\tindex: number,\n): Promise<INodeExecutionData[]> {\n\tconst id = this.getNodeParameter('customerId', index) as string;\n\n\tconst qs = {} as IDataObject;\n\tconst requestMethod = 'GET';\n\tconst endpoint = `customers/${id}`;\n\tconst body = {} as IDataObject;\n\n\tconst responseData = await apiRequest.call(this, requestMethod, endpoint, body, qs);\n\treturn this.helpers.returnJsonArray(responseData.customer as IDataObject);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,uBAA2B;AAE3B,eAAsB,YAErB,OACgC;AAChC,QAAM,KAAK,KAAK,iBAAiB,cAAc,KAAK;AAEpD,QAAM,KAAK,CAAC;AACZ,QAAM,gBAAgB;AACtB,QAAM,WAAW,aAAa,EAAE;AAChC,QAAM,OAAO,CAAC;AAEd,QAAM,eAAe,MAAM,4BAAW,KAAK,MAAM,eAAe,UAAU,MAAM,EAAE;AAClF,SAAO,KAAK,QAAQ,gBAAgB,aAAa,QAAuB;AACzE;","names":[]}