{"version":3,"sources":["../../../../../nodes/SyncroMSP/v1/transport/index.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIHookFunctions,\n\tILoadOptionsFunctions,\n\tGenericValue,\n\tICredentialDataDecryptedObject,\n\tICredentialTestFunctions,\n\tIDataObject,\n\tIHttpRequestOptions,\n\tJsonObject,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\n/**\n * Make an API request to Mattermost\n */\nexport async function apiRequest(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: 'GET' | 'POST' | 'PUT' | 'DELETE' | 'HEAD',\n\tendpoint: string,\n\tbody: IDataObject | GenericValue | GenericValue[] = {},\n\tquery: IDataObject = {},\n) {\n\tconst credentials = await this.getCredentials('syncroMspApi');\n\n\tquery.api_key = credentials.apiKey;\n\n\tconst options: IHttpRequestOptions = {\n\t\tmethod,\n\t\tbody,\n\t\tqs: query,\n\t\turl: `https://${credentials.subdomain}.syncromsp.com/api/v1/${endpoint}`,\n\t\theaders: {},\n\t};\n\n\ttry {\n\t\treturn await this.helpers.httpRequest(options);\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\nexport async function apiRequestAllItems(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: 'GET' | 'POST' | 'PUT' | 'DELETE' | 'HEAD',\n\tendpoint: string,\n\tbody: IDataObject = {},\n\tquery: IDataObject = {},\n) {\n\tlet returnData: IDataObject[] = [];\n\n\tlet responseData;\n\tquery.page = 1;\n\n\tdo {\n\t\tresponseData = await apiRequest.call(this, method, endpoint, body, query);\n\t\tquery.page++;\n\t\treturnData = returnData.concat(responseData[endpoint] as IDataObject[]);\n\t} while (responseData[endpoint].length !== 0);\n\treturn returnData;\n}\n\nexport async function validateCredentials(\n\tthis: ICredentialTestFunctions,\n\tdecryptedCredentials: ICredentialDataDecryptedObject,\n): Promise<any> {\n\tconst credentials = decryptedCredentials;\n\n\tconst { subdomain, apiKey } = credentials as {\n\t\tsubdomain: string;\n\t\tapiKey: string;\n\t};\n\n\tconst options: IHttpRequestOptions = {\n\t\tmethod: 'GET',\n\t\tqs: {\n\t\t\tapi_key: apiKey,\n\t\t},\n\t\turl: `https://${subdomain}.syncromsp.com/api/v1//me`,\n\t};\n\n\treturn await this.helpers.request(options);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA,0BAA6B;AAK7B,eAAsB,WAErB,QACA,UACA,OAAoD,CAAC,GACrD,QAAqB,CAAC,GACrB;AACD,QAAM,cAAc,MAAM,KAAK,eAAe,cAAc;AAE5D,QAAM,UAAU,YAAY;AAE5B,QAAM,UAA+B;AAAA,IACpC;AAAA,IACA;AAAA,IACA,IAAI;AAAA,IACJ,KAAK,WAAW,YAAY,SAAS,yBAAyB,QAAQ;AAAA,IACtE,SAAS,CAAC;AAAA,EACX;AAEA,MAAI;AACH,WAAO,MAAM,KAAK,QAAQ,YAAY,OAAO;AAAA,EAC9C,SAAS,OAAO;AACf,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,KAAmB;AAAA,EAC3D;AACD;AAEA,eAAsB,mBAErB,QACA,UACA,OAAoB,CAAC,GACrB,QAAqB,CAAC,GACrB;AACD,MAAI,aAA4B,CAAC;AAEjC,MAAI;AACJ,QAAM,OAAO;AAEb,KAAG;AACF,mBAAe,MAAM,WAAW,KAAK,MAAM,QAAQ,UAAU,MAAM,KAAK;AACxE,UAAM;AACN,iBAAa,WAAW,OAAO,aAAa,QAAQ,CAAkB;AAAA,EACvE,SAAS,aAAa,QAAQ,EAAE,WAAW;AAC3C,SAAO;AACR;AAEA,eAAsB,oBAErB,sBACe;AACf,QAAM,cAAc;AAEpB,QAAM,EAAE,WAAW,OAAO,IAAI;AAK9B,QAAM,UAA+B;AAAA,IACpC,QAAQ;AAAA,IACR,IAAI;AAAA,MACH,SAAS;AAAA,IACV;AAAA,IACA,KAAK,WAAW,SAAS;AAAA,EAC1B;AAEA,SAAO,MAAM,KAAK,QAAQ,QAAQ,OAAO;AAC1C;","names":[]}