{"version":3,"sources":["../../../nodes/Kitemaker/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tILoadOptionsFunctions,\n\tIDataObject,\n\tIHookFunctions,\n\tJsonObject,\n\tIRequestOptions,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\nexport async function kitemakerRequest(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions | IHookFunctions,\n\tbody: IDataObject = {},\n) {\n\tconst { personalAccessToken } = await this.getCredentials<{\n\t\tpersonalAccessToken: string;\n\t}>('kitemakerApi');\n\n\tconst options = {\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${personalAccessToken}`,\n\t\t},\n\t\tmethod: 'POST',\n\t\tbody,\n\t\turi: 'https://toil.kitemaker.co/developers/graphql',\n\t\tjson: true,\n\t} satisfies IRequestOptions;\n\n\tconst responseData = await this.helpers.request.call(this, options);\n\n\tif (responseData.errors) {\n\t\tthrow new NodeApiError(this.getNode(), responseData as JsonObject);\n\t}\n\n\treturn responseData;\n}\n\nfunction getGroupAndItems(resource: 'space' | 'user' | 'workItem') {\n\tconst map: { [key: string]: { [key: string]: string } } = {\n\t\tspace: { group: 'organization', items: 'spaces' },\n\t\tuser: { group: 'organization', items: 'users' },\n\t\tworkItem: { group: 'workItems', items: 'workItems' },\n\t};\n\n\treturn [map[resource].group, map[resource].items];\n}\n\nexport async function kitemakerRequestAllItems(\n\tthis: IExecuteFunctions,\n\tbody: { query: string; variables: { [key: string]: string } },\n) {\n\tconst resource = this.getNodeParameter('resource', 0) as 'space' | 'user' | 'workItem';\n\tconst [group, items] = getGroupAndItems(resource);\n\n\tconst returnAll = this.getNodeParameter('returnAll', 0, false);\n\tconst limit = this.getNodeParameter('limit', 0, 0);\n\n\tconst returnData: IDataObject[] = [];\n\tlet responseData;\n\n\tdo {\n\t\tresponseData = await kitemakerRequest.call(this, body);\n\t\tbody.variables.cursor = responseData.data[group].cursor;\n\t\treturnData.push(...(responseData.data[group][items] as IDataObject[]));\n\n\t\tif (!returnAll && returnData.length > limit) {\n\t\t\treturn returnData.slice(0, limit);\n\t\t}\n\t} while (responseData.data[group].hasMore);\n\n\treturn returnData;\n}\n\nexport type LoadOptions = { name?: string; username?: string; title?: string; id: string };\nexport function createLoadOptions(\n\tresources: LoadOptions[],\n): Array<{ name: string; value: string }> {\n\treturn resources.map((option) => {\n\t\tif (option.username) return { name: option.username, value: option.id };\n\t\tif (option.title) return { name: option.title, value: option.id };\n\t\treturn { name: option.name ?? 'Unnamed', value: option.id };\n\t});\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,0BAA6B;AAE7B,eAAsB,iBAErB,OAAoB,CAAC,GACpB;AACD,QAAM,EAAE,oBAAoB,IAAI,MAAM,KAAK,eAExC,cAAc;AAEjB,QAAM,UAAU;AAAA,IACf,SAAS;AAAA,MACR,eAAe,UAAU,mBAAmB;AAAA,IAC7C;AAAA,IACA,QAAQ;AAAA,IACR;AAAA,IACA,KAAK;AAAA,IACL,MAAM;AAAA,EACP;AAEA,QAAM,eAAe,MAAM,KAAK,QAAQ,QAAQ,KAAK,MAAM,OAAO;AAElE,MAAI,aAAa,QAAQ;AACxB,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,YAA0B;AAAA,EAClE;AAEA,SAAO;AACR;AAEA,SAAS,iBAAiB,UAAyC;AAClE,QAAM,MAAoD;AAAA,IACzD,OAAO,EAAE,OAAO,gBAAgB,OAAO,SAAS;AAAA,IAChD,MAAM,EAAE,OAAO,gBAAgB,OAAO,QAAQ;AAAA,IAC9C,UAAU,EAAE,OAAO,aAAa,OAAO,YAAY;AAAA,EACpD;AAEA,SAAO,CAAC,IAAI,QAAQ,EAAE,OAAO,IAAI,QAAQ,EAAE,KAAK;AACjD;AAEA,eAAsB,yBAErB,MACC;AACD,QAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AACpD,QAAM,CAAC,OAAO,KAAK,IAAI,iBAAiB,QAAQ;AAEhD,QAAM,YAAY,KAAK,iBAAiB,aAAa,GAAG,KAAK;AAC7D,QAAM,QAAQ,KAAK,iBAAiB,SAAS,GAAG,CAAC;AAEjD,QAAM,aAA4B,CAAC;AACnC,MAAI;AAEJ,KAAG;AACF,mBAAe,MAAM,iBAAiB,KAAK,MAAM,IAAI;AACrD,SAAK,UAAU,SAAS,aAAa,KAAK,KAAK,EAAE;AACjD,eAAW,KAAK,GAAI,aAAa,KAAK,KAAK,EAAE,KAAK,CAAmB;AAErE,QAAI,CAAC,aAAa,WAAW,SAAS,OAAO;AAC5C,aAAO,WAAW,MAAM,GAAG,KAAK;AAAA,IACjC;AAAA,EACD,SAAS,aAAa,KAAK,KAAK,EAAE;AAElC,SAAO;AACR;AAGO,SAAS,kBACf,WACyC;AACzC,SAAO,UAAU,IAAI,CAAC,WAAW;AAChC,QAAI,OAAO,SAAU,QAAO,EAAE,MAAM,OAAO,UAAU,OAAO,OAAO,GAAG;AACtE,QAAI,OAAO,MAAO,QAAO,EAAE,MAAM,OAAO,OAAO,OAAO,OAAO,GAAG;AAChE,WAAO,EAAE,MAAM,OAAO,QAAQ,WAAW,OAAO,OAAO,GAAG;AAAA,EAC3D,CAAC;AACF;","names":[]}