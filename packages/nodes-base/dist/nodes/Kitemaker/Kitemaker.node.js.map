{"version":3,"sources":["../../../nodes/Kitemaker/Kitemaker.node.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport {\n\torganizationOperations,\n\tspaceFields,\n\tspaceOperations,\n\tuserFields,\n\tuserOperations,\n\tworkItemFields,\n\tworkItemOperations,\n} from './descriptions';\nimport type { LoadOptions } from './GenericFunctions';\nimport { createLoadOptions, kitemakerRequest, kitemakerRequestAllItems } from './GenericFunctions';\nimport { createWorkItem, editWorkItem } from './mutations';\nimport {\n\tgetAllSpaces,\n\tgetAllUsers,\n\tgetAllWorkItems,\n\tgetLabels,\n\tgetOrganization,\n\tgetSpaces,\n\tgetStatuses,\n\tgetUsers,\n\tgetWorkItem,\n\tgetWorkItems,\n} from './queries';\n\nexport class Kitemaker implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Kitemaker',\n\t\tname: 'kitemaker',\n\t\ticon: { light: 'file:kitemaker.svg', dark: 'file:kitemaker.dark.svg' },\n\t\tgroup: ['input'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"resource\"] + \": \" + $parameter[\"operation\"]}}',\n\t\tdescription: 'Consume the Kitemaker GraphQL API',\n\t\tdefaults: {\n\t\t\tname: 'Kitemaker',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'kitemakerApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Organization',\n\t\t\t\t\t\tvalue: 'organization',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Space',\n\t\t\t\t\t\tvalue: 'space',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'User',\n\t\t\t\t\t\tvalue: 'user',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Work Item',\n\t\t\t\t\t\tvalue: 'workItem',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'workItem',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t\t...organizationOperations,\n\t\t\t...spaceOperations,\n\t\t\t...spaceFields,\n\t\t\t...userOperations,\n\t\t\t...userFields,\n\t\t\t...workItemOperations,\n\t\t\t...workItemFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\tasync getLabels(this: ILoadOptionsFunctions) {\n\t\t\t\tconst responseData = await kitemakerRequest.call(this, { query: getLabels });\n\t\t\t\tconst {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\torganization: { spaces },\n\t\t\t\t\t},\n\t\t\t\t} = responseData;\n\n\t\t\t\treturn createLoadOptions(spaces[0].labels as LoadOptions[]);\n\t\t\t},\n\n\t\t\tasync getSpaces(this: ILoadOptionsFunctions) {\n\t\t\t\tconst responseData = await kitemakerRequest.call(this, { query: getSpaces });\n\t\t\t\tconst {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\torganization: { spaces },\n\t\t\t\t\t},\n\t\t\t\t} = responseData;\n\n\t\t\t\treturn createLoadOptions(spaces as LoadOptions[]);\n\t\t\t},\n\n\t\t\tasync getStatuses(this: ILoadOptionsFunctions) {\n\t\t\t\tconst spaceId = this.getNodeParameter('spaceId', 0) as string;\n\t\t\t\tif (!spaceId.length) {\n\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t'Please choose a space to set for the work item to create.',\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst responseData = await kitemakerRequest.call(this, { query: getStatuses });\n\t\t\t\tconst {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\torganization: { spaces },\n\t\t\t\t\t},\n\t\t\t\t} = responseData;\n\t\t\t\tconst space = spaces.find((e: { [x: string]: string }) => e.id === spaceId);\n\n\t\t\t\treturn createLoadOptions(space.statuses as LoadOptions[]);\n\t\t\t},\n\n\t\t\tasync getUsers(this: ILoadOptionsFunctions) {\n\t\t\t\tconst responseData = await kitemakerRequest.call(this, { query: getUsers });\n\t\t\t\tconst {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\torganization: { users },\n\t\t\t\t\t},\n\t\t\t\t} = responseData;\n\n\t\t\t\treturn createLoadOptions(users as LoadOptions[]);\n\t\t\t},\n\n\t\t\tasync getWorkItems(this: ILoadOptionsFunctions) {\n\t\t\t\tconst spaceId = this.getNodeParameter('spaceId', 0) as string;\n\n\t\t\t\tconst responseData = await kitemakerRequest.call(this, {\n\t\t\t\t\tquery: getWorkItems,\n\t\t\t\t\tvariables: { spaceId },\n\t\t\t\t});\n\n\t\t\t\tconst {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tworkItems: { workItems },\n\t\t\t\t\t},\n\t\t\t\t} = responseData;\n\n\t\t\t\treturn createLoadOptions(workItems as LoadOptions[]);\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\tlet responseData;\n\t\tconst returnData: INodeExecutionData[] = [];\n\n\t\t// https://github.com/kitemakerhq/docs/blob/main/kitemaker.graphql\n\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\tif (resource === 'organization') {\n\t\t\t\t// *********************************************************************\n\t\t\t\t//                           organization\n\t\t\t\t// *********************************************************************\n\n\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t//         organization: get\n\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\tresponseData = await kitemakerRequest.call(this, {\n\t\t\t\t\t\tquery: getOrganization,\n\t\t\t\t\t});\n\n\t\t\t\t\tresponseData = responseData.data.organization;\n\t\t\t\t}\n\t\t\t} else if (resource === 'space') {\n\t\t\t\t// *********************************************************************\n\t\t\t\t//                             space\n\t\t\t\t// *********************************************************************\n\n\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t//          space: getAll\n\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\tconst allItems = await kitemakerRequestAllItems.call(this, {\n\t\t\t\t\t\tquery: getAllSpaces,\n\t\t\t\t\t\tvariables: {},\n\t\t\t\t\t});\n\n\t\t\t\t\tresponseData = allItems;\n\t\t\t\t}\n\t\t\t} else if (resource === 'user') {\n\t\t\t\t// *********************************************************************\n\t\t\t\t//                             user\n\t\t\t\t// *********************************************************************\n\n\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t//          user: getAll\n\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\tconst allItems = await kitemakerRequestAllItems.call(this, {\n\t\t\t\t\t\tquery: getAllUsers,\n\t\t\t\t\t\tvariables: {},\n\t\t\t\t\t});\n\n\t\t\t\t\tresponseData = allItems;\n\t\t\t\t}\n\t\t\t} else if (resource === 'workItem') {\n\t\t\t\t// *********************************************************************\n\t\t\t\t//                             workItem\n\t\t\t\t// *********************************************************************\n\n\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t//         workItem: create\n\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\tconst input = {\n\t\t\t\t\t\ttitle: this.getNodeParameter('title', i) as string,\n\t\t\t\t\t\tstatusId: this.getNodeParameter('statusId', i) as string[],\n\t\t\t\t\t};\n\n\t\t\t\t\tif (!input.statusId.length) {\n\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t'Please enter a status to set for the work item to create.',\n\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\tif (Object.keys(additionalFields).length) {\n\t\t\t\t\t\tObject.assign(input, additionalFields);\n\t\t\t\t\t}\n\n\t\t\t\t\tresponseData = await kitemakerRequest.call(this, {\n\t\t\t\t\t\tquery: createWorkItem,\n\t\t\t\t\t\tvariables: { input },\n\t\t\t\t\t});\n\n\t\t\t\t\tresponseData = responseData.data.createWorkItem.workItem;\n\t\t\t\t} else if (operation === 'get') {\n\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t//         workItem: get\n\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\tconst workItemId = this.getNodeParameter('workItemId', i) as string;\n\n\t\t\t\t\tresponseData = await kitemakerRequest.call(this, {\n\t\t\t\t\t\tquery: getWorkItem,\n\t\t\t\t\t\tvariables: { workItemId },\n\t\t\t\t\t});\n\n\t\t\t\t\tresponseData = responseData.data.workItem;\n\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t//         workItem: getAll\n\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\tconst allItems = await kitemakerRequestAllItems.call(this, {\n\t\t\t\t\t\tquery: getAllWorkItems,\n\t\t\t\t\t\tvariables: {\n\t\t\t\t\t\t\tspaceId: this.getNodeParameter('spaceId', i) as string,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\n\t\t\t\t\tresponseData = allItems;\n\t\t\t\t} else if (operation === 'update') {\n\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t//         workItem: update\n\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\tconst input = {\n\t\t\t\t\t\tid: this.getNodeParameter('workItemId', i),\n\t\t\t\t\t};\n\n\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\n\t\t\t\t\tif (!Object.keys(updateFields).length) {\n\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t'Please enter at least one field to update for the work item.',\n\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tObject.assign(input, updateFields);\n\n\t\t\t\t\tresponseData = await kitemakerRequest.call(this, {\n\t\t\t\t\t\tquery: editWorkItem,\n\t\t\t\t\t\tvariables: { input },\n\t\t\t\t\t});\n\n\t\t\t\t\tresponseData = responseData.data.editWorkItem.workItem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject),\n\t\t\t\t{ itemData: { item: i } },\n\t\t\t);\n\n\t\t\treturnData.push(...executionData);\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":[]}