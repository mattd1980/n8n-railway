{"version":3,"sources":["../../../nodes/E2eTest/E2eTest.node.ts"],"sourcesContent":["import {\n\tNodeConnectionTypes,\n\ttype IExecuteFunctions,\n\ttype ILoadOptionsFunctions,\n\ttype INodeExecutionData,\n\ttype INodeListSearchResult,\n\ttype INodePropertyOptions,\n\ttype INodeType,\n\ttype INodeTypeDescription,\n\ttype ResourceMapperFields,\n} from 'n8n-workflow';\n\nimport { remoteOptions, resourceMapperFields, returnData, searchOptions } from './mock';\n\nexport class E2eTest implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'E2E Test',\n\t\tname: 'e2eTest',\n\t\ticon: 'fa:play',\n\t\tgroup: ['output'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"]}}',\n\t\tdescription: 'Dummy node used for e2e testing',\n\t\tdefaults: {\n\t\t\tname: 'E2E Test',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Remote Options',\n\t\t\t\t\t\tvalue: 'remoteOptions',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Resource Locator',\n\t\t\t\t\t\tvalue: 'resourceLocator',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Resource Mapping Component',\n\t\t\t\t\t\tvalue: 'resourceMapper',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'remoteOptions',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Field ID',\n\t\t\t\tname: 'fieldId',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Remote Options Name or ID',\n\t\t\t\tname: 'remoteOptions',\n\t\t\t\tdescription:\n\t\t\t\t\t'Remote options to load. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\ttype: 'options',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsDependsOn: ['fieldId'],\n\t\t\t\t\tloadOptionsMethod: 'getOptions',\n\t\t\t\t},\n\t\t\t\trequired: true,\n\t\t\t\tdefault: [],\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['remoteOptions'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource Locator',\n\t\t\t\tname: 'rlc',\n\t\t\t\ttype: 'resourceLocator',\n\t\t\t\tdefault: { mode: 'list', value: '' },\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['resourceLocator'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmodes: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'From List',\n\t\t\t\t\t\tname: 'list',\n\t\t\t\t\t\ttype: 'list',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tsearchListMethod: 'optionsSearch',\n\t\t\t\t\t\t\tsearchable: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'By URL',\n\t\t\t\t\t\tname: 'url',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tplaceholder: 'https://example.com/user/a4071e98-7d40-41fb-8911-ce3e7bf94fb2',\n\t\t\t\t\t\tvalidation: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'regex',\n\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\tregex:\n\t\t\t\t\t\t\t\t\t\t'https://example.com/user/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}',\n\t\t\t\t\t\t\t\t\terrorMessage: 'Not a valid example URL',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\textractValue: {\n\t\t\t\t\t\t\ttype: 'regex',\n\t\t\t\t\t\t\tregex:\n\t\t\t\t\t\t\t\t'https://example.com/user/([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'ID',\n\t\t\t\t\t\tname: 'id',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tvalidation: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'regex',\n\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\tregex: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}',\n\t\t\t\t\t\t\t\t\terrorMessage: 'Not a valid UUI',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tplaceholder: 'a4071e98-7d40-41fb-8911-ce3e7bf94fb2',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource Mapping Component',\n\t\t\t\tname: 'resourceMapper',\n\t\t\t\ttype: 'resourceMapper',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\tdefault: {\n\t\t\t\t\tmappingMode: 'defineBelow',\n\t\t\t\t\tvalue: null,\n\t\t\t\t},\n\t\t\t\trequired: true,\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsDependsOn: ['fieldId'],\n\t\t\t\t\tresourceMapper: {\n\t\t\t\t\t\tresourceMapperMethod: 'getMappingColumns',\n\t\t\t\t\t\tmode: 'upsert',\n\t\t\t\t\t\tfieldWords: {\n\t\t\t\t\t\t\tsingular: 'column',\n\t\t\t\t\t\t\tplural: 'columns',\n\t\t\t\t\t\t},\n\t\t\t\t\t\taddAllFields: true,\n\t\t\t\t\t\tmultiKeyMatch: false,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['resourceMapper'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Other Non Important Field',\n\t\t\t\tname: 'otherField',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t},\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\tasync getOptions(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\treturn remoteOptions;\n\t\t\t},\n\t\t},\n\t\tlistSearch: {\n\t\t\tasync optionsSearch(\n\t\t\t\tthis: ILoadOptionsFunctions,\n\t\t\t\tfilter?: string,\n\t\t\t\tpaginationToken?: string,\n\t\t\t): Promise<INodeListSearchResult> {\n\t\t\t\tconst pageSize = 5;\n\t\t\t\tlet results = searchOptions;\n\t\t\t\tif (filter) {\n\t\t\t\t\tresults = results.filter((option) => option.name.includes(filter));\n\t\t\t\t}\n\n\t\t\t\tconst offset = paginationToken ? parseInt(paginationToken, 10) : 0;\n\t\t\t\tresults = results.slice(offset, offset + pageSize);\n\n\t\t\t\treturn {\n\t\t\t\t\tresults,\n\t\t\t\t\tpaginationToken: offset + pageSize,\n\t\t\t\t};\n\t\t\t},\n\t\t},\n\t\tresourceMapping: {\n\t\t\tasync getMappingColumns(this: ILoadOptionsFunctions): Promise<ResourceMapperFields> {\n\t\t\t\treturn resourceMapperFields;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\t\t// For resource mapper testing, return actual node values\n\t\tif (operation === 'resourceMapper') {\n\t\t\tconst rmValue = this.getNodeParameter('resourceMapper.value', 0);\n\t\t\tif (rmValue) {\n\t\t\t\treturn [[{ json: rmValue as INodeExecutionData }]];\n\t\t\t}\n\t\t}\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":[]}