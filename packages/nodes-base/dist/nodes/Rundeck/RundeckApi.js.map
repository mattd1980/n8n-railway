{"version":3,"sources":["../../../nodes/Rundeck/RundeckApi.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tJsonObject,\n\tIHttpRequestMethods,\n\tIRequestOptions,\n} from 'n8n-workflow';\nimport { NodeApiError, NodeOperationError } from 'n8n-workflow';\n\nexport interface RundeckCredentials {\n\turl: string;\n\ttoken: string;\n}\n\nexport class RundeckApi {\n\tprivate credentials?: RundeckCredentials;\n\n\tprivate executeFunctions: IExecuteFunctions;\n\n\tconstructor(executeFunctions: IExecuteFunctions) {\n\t\tthis.executeFunctions = executeFunctions;\n\t}\n\n\tprotected async request(\n\t\tmethod: IHttpRequestMethods,\n\t\tendpoint: string,\n\t\tbody: IDataObject,\n\t\tquery: IDataObject,\n\t) {\n\t\tconst credentialType = 'rundeckApi';\n\n\t\tconst options: IRequestOptions = {\n\t\t\trejectUnauthorized: false,\n\t\t\tmethod,\n\t\t\tqs: query,\n\t\t\turi: (this.credentials?.url as string) + endpoint,\n\t\t\tbody,\n\t\t\tjson: true,\n\t\t};\n\n\t\ttry {\n\t\t\treturn await this.executeFunctions.helpers.requestWithAuthentication.call(\n\t\t\t\tthis.executeFunctions,\n\t\t\t\tcredentialType,\n\t\t\t\toptions,\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tthrow new NodeApiError(this.executeFunctions.getNode(), error as JsonObject);\n\t\t}\n\t}\n\n\tasync init() {\n\t\tconst credentials = await this.executeFunctions.getCredentials('rundeckApi');\n\n\t\tif (credentials === undefined) {\n\t\t\tthrow new NodeOperationError(this.executeFunctions.getNode(), 'No credentials got returned!');\n\t\t}\n\n\t\tthis.credentials = credentials as unknown as RundeckCredentials;\n\t}\n\n\tasync executeJob(jobId: string, args: IDataObject[], filter?: string): Promise<IDataObject> {\n\t\tlet params = '';\n\n\t\tif (args) {\n\t\t\tfor (const arg of args) {\n\t\t\t\tparams += '-' + (arg.name as string) + ' ' + (arg.value as string) + ' ';\n\t\t\t}\n\t\t}\n\n\t\tconst body = {\n\t\t\targString: params,\n\t\t};\n\n\t\tconst query: IDataObject = {};\n\t\tif (filter) {\n\t\t\tquery.filter = filter;\n\t\t}\n\n\t\treturn await this.request('POST', `/api/14/job/${jobId}/run`, body, query);\n\t}\n\n\tasync getJobMetadata(jobId: string): Promise<IDataObject> {\n\t\treturn await this.request('GET', `/api/18/job/${jobId}/info`, {}, {});\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,0BAAiD;AAO1C,MAAM,WAAW;AAAA,EAKvB,YAAY,kBAAqC;AAChD,SAAK,mBAAmB;AAAA,EACzB;AAAA,EAEA,MAAgB,QACf,QACA,UACA,MACA,OACC;AACD,UAAM,iBAAiB;AAEvB,UAAM,UAA2B;AAAA,MAChC,oBAAoB;AAAA,MACpB;AAAA,MACA,IAAI;AAAA,MACJ,KAAM,KAAK,aAAa,MAAiB;AAAA,MACzC;AAAA,MACA,MAAM;AAAA,IACP;AAEA,QAAI;AACH,aAAO,MAAM,KAAK,iBAAiB,QAAQ,0BAA0B;AAAA,QACpE,KAAK;AAAA,QACL;AAAA,QACA;AAAA,MACD;AAAA,IACD,SAAS,OAAO;AACf,YAAM,IAAI,iCAAa,KAAK,iBAAiB,QAAQ,GAAG,KAAmB;AAAA,IAC5E;AAAA,EACD;AAAA,EAEA,MAAM,OAAO;AACZ,UAAM,cAAc,MAAM,KAAK,iBAAiB,eAAe,YAAY;AAE3E,QAAI,gBAAgB,QAAW;AAC9B,YAAM,IAAI,uCAAmB,KAAK,iBAAiB,QAAQ,GAAG,8BAA8B;AAAA,IAC7F;AAEA,SAAK,cAAc;AAAA,EACpB;AAAA,EAEA,MAAM,WAAW,OAAe,MAAqB,QAAuC;AAC3F,QAAI,SAAS;AAEb,QAAI,MAAM;AACT,iBAAW,OAAO,MAAM;AACvB,kBAAU,MAAO,IAAI,OAAkB,MAAO,IAAI,QAAmB;AAAA,MACtE;AAAA,IACD;AAEA,UAAM,OAAO;AAAA,MACZ,WAAW;AAAA,IACZ;AAEA,UAAM,QAAqB,CAAC;AAC5B,QAAI,QAAQ;AACX,YAAM,SAAS;AAAA,IAChB;AAEA,WAAO,MAAM,KAAK,QAAQ,QAAQ,eAAe,KAAK,QAAQ,MAAM,KAAK;AAAA,EAC1E;AAAA,EAEA,MAAM,eAAe,OAAqC;AACzD,WAAO,MAAM,KAAK,QAAQ,OAAO,eAAe,KAAK,SAAS,CAAC,GAAG,CAAC,CAAC;AAAA,EACrE;AACD;","names":[]}