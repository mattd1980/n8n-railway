{"version":3,"sources":["../../../../nodes/Google/Docs/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHttpRequestMethods,\n\tILoadOptionsFunctions,\n\tIRequestOptions,\n\tJsonObject,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\nimport { getGoogleAccessToken } from '../GenericFunctions';\n\nexport async function googleApiRequest(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\tbody: IDataObject = {},\n\tqs?: IDataObject,\n\turi?: string,\n) {\n\tconst authenticationMethod = this.getNodeParameter(\n\t\t'authentication',\n\t\t0,\n\t\t'serviceAccount',\n\t) as string;\n\n\tconst options: IRequestOptions = {\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tmethod,\n\t\tbody,\n\t\tqs,\n\t\turi: uri || `https://docs.googleapis.com/v1${endpoint}`,\n\t\tjson: true,\n\t};\n\n\tif (!Object.keys(body).length) {\n\t\tdelete options.body;\n\t}\n\ttry {\n\t\tif (authenticationMethod === 'serviceAccount') {\n\t\t\tconst credentials = await this.getCredentials('googleApi');\n\n\t\t\tconst { access_token } = await getGoogleAccessToken.call(this, credentials, 'docs');\n\n\t\t\toptions.headers!.Authorization = `Bearer ${access_token}`;\n\t\t\treturn await this.helpers.request(options);\n\t\t} else {\n\t\t\treturn await this.helpers.requestOAuth2.call(this, 'googleDocsOAuth2Api', options);\n\t\t}\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\nexport async function googleApiRequestAllItems(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions,\n\tpropertyName: string,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\tbody: IDataObject = {},\n\tqs?: IDataObject,\n\turi?: string,\n): Promise<any> {\n\tconst returnData: IDataObject[] = [];\n\n\tlet responseData;\n\tconst query: IDataObject = { ...qs };\n\tquery.maxResults = 100;\n\tquery.pageSize = 100;\n\n\tdo {\n\t\tresponseData = await googleApiRequest.call(this, method, endpoint, body, query, uri);\n\t\tquery.pageToken = responseData.nextPageToken;\n\t\treturnData.push.apply(returnData, responseData[propertyName] as IDataObject[]);\n\t} while (responseData.nextPageToken !== undefined && responseData.nextPageToken !== '');\n\n\treturn returnData;\n}\n\nexport const hasKeys = (obj = {}) => Object.keys(obj).length > 0;\nexport const extractID = (url: string) => {\n\tconst regex = new RegExp('https://docs.google.com/document/d/([a-zA-Z0-9-_]+)/');\n\tconst results = regex.exec(url);\n\treturn results ? results[1] : undefined;\n};\nexport const upperFirst = (str: string) => {\n\treturn str[0].toUpperCase() + str.substr(1);\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,0BAA6B;AAE7B,8BAAqC;AAErC,eAAsB,iBAErB,QACA,UACA,OAAoB,CAAC,GACrB,IACA,KACC;AACD,QAAM,uBAAuB,KAAK;AAAA,IACjC;AAAA,IACA;AAAA,IACA;AAAA,EACD;AAEA,QAAM,UAA2B;AAAA,IAChC,SAAS;AAAA,MACR,gBAAgB;AAAA,IACjB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,KAAK,OAAO,iCAAiC,QAAQ;AAAA,IACrD,MAAM;AAAA,EACP;AAEA,MAAI,CAAC,OAAO,KAAK,IAAI,EAAE,QAAQ;AAC9B,WAAO,QAAQ;AAAA,EAChB;AACA,MAAI;AACH,QAAI,yBAAyB,kBAAkB;AAC9C,YAAM,cAAc,MAAM,KAAK,eAAe,WAAW;AAEzD,YAAM,EAAE,aAAa,IAAI,MAAM,6CAAqB,KAAK,MAAM,aAAa,MAAM;AAElF,cAAQ,QAAS,gBAAgB,UAAU,YAAY;AACvD,aAAO,MAAM,KAAK,QAAQ,QAAQ,OAAO;AAAA,IAC1C,OAAO;AACN,aAAO,MAAM,KAAK,QAAQ,cAAc,KAAK,MAAM,uBAAuB,OAAO;AAAA,IAClF;AAAA,EACD,SAAS,OAAO;AACf,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,KAAmB;AAAA,EAC3D;AACD;AAEA,eAAsB,yBAErB,cACA,QACA,UACA,OAAoB,CAAC,GACrB,IACA,KACe;AACf,QAAM,aAA4B,CAAC;AAEnC,MAAI;AACJ,QAAM,QAAqB,EAAE,GAAG,GAAG;AACnC,QAAM,aAAa;AACnB,QAAM,WAAW;AAEjB,KAAG;AACF,mBAAe,MAAM,iBAAiB,KAAK,MAAM,QAAQ,UAAU,MAAM,OAAO,GAAG;AACnF,UAAM,YAAY,aAAa;AAC/B,eAAW,KAAK,MAAM,YAAY,aAAa,YAAY,CAAkB;AAAA,EAC9E,SAAS,aAAa,kBAAkB,UAAa,aAAa,kBAAkB;AAEpF,SAAO;AACR;AAEO,MAAM,UAAU,CAAC,MAAM,CAAC,MAAM,OAAO,KAAK,GAAG,EAAE,SAAS;AACxD,MAAM,YAAY,CAAC,QAAgB;AACzC,QAAM,QAAQ,IAAI,OAAO,sDAAsD;AAC/E,QAAM,UAAU,MAAM,KAAK,GAAG;AAC9B,SAAO,UAAU,QAAQ,CAAC,IAAI;AAC/B;AACO,MAAM,aAAa,CAAC,QAAgB;AAC1C,SAAO,IAAI,CAAC,EAAE,YAAY,IAAI,IAAI,OAAO,CAAC;AAC3C;","names":[]}