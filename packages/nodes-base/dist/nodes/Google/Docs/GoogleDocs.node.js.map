{"version":3,"sources":["../../../../nodes/Google/Docs/GoogleDocs.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tILoadOptionsFunctions,\n\tIDataObject,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n\tJsonObject,\n} from 'n8n-workflow';\nimport { NodeApiError, NodeConnectionTypes } from 'n8n-workflow';\n\nimport { documentFields, documentOperations } from './DocumentDescription';\nimport {\n\textractID,\n\tgoogleApiRequest,\n\tgoogleApiRequestAllItems,\n\thasKeys,\n\tupperFirst,\n} from './GenericFunctions';\nimport type { IUpdateBody, IUpdateFields } from './interfaces';\n\nexport class GoogleDocs implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Google Docs',\n\t\tname: 'googleDocs',\n\t\ticon: 'file:googleDocs.svg',\n\t\tgroup: ['input'],\n\t\tversion: [1, 2],\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume Google Docs API.',\n\t\tdefaults: {\n\t\t\tname: 'Google Docs',\n\t\t},\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tusableAsTool: true,\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'googleApi',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['serviceAccount'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'googleDocsOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['oAuth2'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Authentication',\n\t\t\t\tname: 'authentication',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Service Account',\n\t\t\t\t\t\tvalue: 'serviceAccount',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'OAuth2',\n\t\t\t\t\t\tvalue: 'oAuth2',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'serviceAccount',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\t'@version': [1],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Authentication',\n\t\t\t\tname: 'authentication',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-display-name-miscased\n\t\t\t\t\t\tname: 'OAuth2 (recommended)',\n\t\t\t\t\t\tvalue: 'oAuth2',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Service Account',\n\t\t\t\t\t\tvalue: 'serviceAccount',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'oAuth2',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\t'@version': [2],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Document',\n\t\t\t\t\t\tvalue: 'document',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'document',\n\t\t\t},\n\t\t\t...documentOperations,\n\t\t\t...documentFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get all the drives to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getDrives(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'My Drive',\n\t\t\t\t\t\tvalue: 'myDrive',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Shared with Me',\n\t\t\t\t\t\tvalue: 'sharedWithMe',\n\t\t\t\t\t},\n\t\t\t\t];\n\t\t\t\tlet drives;\n\t\t\t\ttry {\n\t\t\t\t\tdrives = await googleApiRequestAllItems.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t'drives',\n\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t'',\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t'https://www.googleapis.com/drive/v3/drives',\n\t\t\t\t\t);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject, {\n\t\t\t\t\t\tmessage: 'Error in loading Drives',\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tfor (const drive of drives) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: drive.name as string,\n\t\t\t\t\t\tvalue: drive.id as string,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\tasync getFolders(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: '/',\n\t\t\t\t\t\tvalue: 'default',\n\t\t\t\t\t},\n\t\t\t\t];\n\t\t\t\tconst driveId = this.getNodeParameter('driveId');\n\n\t\t\t\tconst qs = {\n\t\t\t\t\tq: `mimeType = \\'application/vnd.google-apps.folder\\' ${\n\t\t\t\t\t\tdriveId === 'sharedWithMe' ? 'and sharedWithMe = true' : \" and 'root' in parents\"\n\t\t\t\t\t}`,\n\t\t\t\t\t...(driveId && driveId !== 'myDrive' && driveId !== 'sharedWithMe' ? { driveId } : {}),\n\t\t\t\t};\n\t\t\t\tlet folders;\n\n\t\t\t\ttry {\n\t\t\t\t\tfolders = await googleApiRequestAllItems.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t'files',\n\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t'',\n\t\t\t\t\t\t{},\n\t\t\t\t\t\tqs,\n\t\t\t\t\t\t'https://www.googleapis.com/drive/v3/files',\n\t\t\t\t\t);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject, {\n\t\t\t\t\t\tmessage: 'Error in loading Folders',\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tfor (const folder of folders) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: folder.name as string,\n\t\t\t\t\t\tvalue: folder.id as string,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst length = items.length;\n\n\t\tlet responseData;\n\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'document') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// https://developers.google.com/docs/api/reference/rest/v1/documents/create\n\n\t\t\t\t\t\tconst folderId = this.getNodeParameter('folderId', i) as string;\n\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tname: this.getNodeParameter('title', i) as string,\n\t\t\t\t\t\t\tmimeType: 'application/vnd.google-apps.document',\n\t\t\t\t\t\t\t...(folderId && folderId !== 'default' ? { parents: [folderId] } : {}),\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t'https://www.googleapis.com/drive/v3/files',\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (operation === 'get') {\n\t\t\t\t\t\t// https://developers.google.com/docs/api/reference/rest/v1/documents/get\n\n\t\t\t\t\t\tconst documentURL = this.getNodeParameter('documentURL', i) as string;\n\t\t\t\t\t\tconst simple = this.getNodeParameter('simple', i) as boolean;\n\t\t\t\t\t\tlet documentId = extractID(documentURL);\n\n\t\t\t\t\t\tif (!documentId) {\n\t\t\t\t\t\t\tdocumentId = documentURL;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(this, 'GET', `/documents/${documentId}`);\n\t\t\t\t\t\tif (simple) {\n\t\t\t\t\t\t\tconst content = (responseData.body.content as IDataObject[])\n\t\t\t\t\t\t\t\t.reduce((arr: string[], contentItem) => {\n\t\t\t\t\t\t\t\t\tif (contentItem?.paragraph) {\n\t\t\t\t\t\t\t\t\t\tconst texts = (\n\t\t\t\t\t\t\t\t\t\t\t(contentItem.paragraph as IDataObject).elements as IDataObject[]\n\t\t\t\t\t\t\t\t\t\t).map((element) => {\n\t\t\t\t\t\t\t\t\t\t\tif (element?.textRun) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn (element.textRun as IDataObject).content as string;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}) as string[];\n\t\t\t\t\t\t\t\t\t\tarr = [...arr, ...texts];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn arr;\n\t\t\t\t\t\t\t\t}, [])\n\t\t\t\t\t\t\t\t.join('');\n\n\t\t\t\t\t\t\tresponseData = {\n\t\t\t\t\t\t\t\tdocumentId,\n\t\t\t\t\t\t\t\tcontent,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (operation === 'update') {\n\t\t\t\t\t\t// https://developers.google.com/docs/api/reference/rest/v1/documents/batchUpdate\n\n\t\t\t\t\t\tconst documentURL = this.getNodeParameter('documentURL', i) as string;\n\t\t\t\t\t\tlet documentId = extractID(documentURL);\n\t\t\t\t\t\tconst simple = this.getNodeParameter('simple', i) as boolean;\n\t\t\t\t\t\tconst actionsUi = this.getNodeParameter('actionsUi', i) as {\n\t\t\t\t\t\t\tactionFields: IDataObject[];\n\t\t\t\t\t\t};\n\t\t\t\t\t\tconst { writeControlObject } = this.getNodeParameter(\n\t\t\t\t\t\t\t'updateFields',\n\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t) as IUpdateFields;\n\n\t\t\t\t\t\tif (!documentId) {\n\t\t\t\t\t\t\tdocumentId = documentURL;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\trequests: [],\n\t\t\t\t\t\t} as IUpdateBody;\n\n\t\t\t\t\t\tif (hasKeys(writeControlObject)) {\n\t\t\t\t\t\t\tconst { control, value } = writeControlObject;\n\t\t\t\t\t\t\tbody.writeControl = {\n\t\t\t\t\t\t\t\t[control]: value,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (actionsUi) {\n\t\t\t\t\t\t\tlet requestBody: IDataObject;\n\t\t\t\t\t\t\tactionsUi.actionFields.forEach((actionField) => {\n\t\t\t\t\t\t\t\tconst { action, object } = actionField;\n\t\t\t\t\t\t\t\tif (object === 'positionedObject') {\n\t\t\t\t\t\t\t\t\tif (action === 'delete') {\n\t\t\t\t\t\t\t\t\t\trequestBody = {\n\t\t\t\t\t\t\t\t\t\t\tobjectId: actionField.objectId,\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else if (object === 'pageBreak') {\n\t\t\t\t\t\t\t\t\tif (action === 'insert') {\n\t\t\t\t\t\t\t\t\t\tconst { insertSegment, segmentId, locationChoice, index } = actionField;\n\t\t\t\t\t\t\t\t\t\trequestBody = {\n\t\t\t\t\t\t\t\t\t\t\t[locationChoice as string]: {\n\t\t\t\t\t\t\t\t\t\t\t\tsegmentId: insertSegment !== 'body' ? segmentId : '',\n\t\t\t\t\t\t\t\t\t\t\t\t...(locationChoice === 'location' ? { index } : {}),\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else if (object === 'table') {\n\t\t\t\t\t\t\t\t\tif (action === 'insert') {\n\t\t\t\t\t\t\t\t\t\tconst { rows, columns, insertSegment, locationChoice, segmentId, index } =\n\t\t\t\t\t\t\t\t\t\t\tactionField;\n\t\t\t\t\t\t\t\t\t\trequestBody = {\n\t\t\t\t\t\t\t\t\t\t\trows,\n\t\t\t\t\t\t\t\t\t\t\tcolumns,\n\t\t\t\t\t\t\t\t\t\t\t[locationChoice as string]: {\n\t\t\t\t\t\t\t\t\t\t\t\tsegmentId: insertSegment !== 'body' ? segmentId : '',\n\t\t\t\t\t\t\t\t\t\t\t\t...(locationChoice === 'location' ? { index } : {}),\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else if (object === 'footer') {\n\t\t\t\t\t\t\t\t\tif (action === 'create') {\n\t\t\t\t\t\t\t\t\t\tconst { insertSegment, locationChoice, segmentId, index } = actionField;\n\t\t\t\t\t\t\t\t\t\trequestBody = {\n\t\t\t\t\t\t\t\t\t\t\ttype: 'DEFAULT',\n\t\t\t\t\t\t\t\t\t\t\tsectionBreakLocation: {\n\t\t\t\t\t\t\t\t\t\t\t\tsegmentId: insertSegment !== 'body' ? segmentId : '',\n\t\t\t\t\t\t\t\t\t\t\t\t...(locationChoice === 'location' ? { index } : {}),\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t} else if (action === 'delete') {\n\t\t\t\t\t\t\t\t\t\trequestBody = {\n\t\t\t\t\t\t\t\t\t\t\tfooterId: actionField.footerId,\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else if (object === 'header') {\n\t\t\t\t\t\t\t\t\tif (action === 'create') {\n\t\t\t\t\t\t\t\t\t\tconst { insertSegment, locationChoice, segmentId, index } = actionField;\n\t\t\t\t\t\t\t\t\t\trequestBody = {\n\t\t\t\t\t\t\t\t\t\t\ttype: 'DEFAULT',\n\t\t\t\t\t\t\t\t\t\t\tsectionBreakLocation: {\n\t\t\t\t\t\t\t\t\t\t\t\tsegmentId: insertSegment !== 'body' ? segmentId : '',\n\t\t\t\t\t\t\t\t\t\t\t\t...(locationChoice === 'location' ? { index } : {}),\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t} else if (action === 'delete') {\n\t\t\t\t\t\t\t\t\t\trequestBody = {\n\t\t\t\t\t\t\t\t\t\t\theaderId: actionField.headerId,\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else if (object === 'tableColumn') {\n\t\t\t\t\t\t\t\t\tif (action === 'insert') {\n\t\t\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\t\t\tinsertPosition,\n\t\t\t\t\t\t\t\t\t\t\trowIndex,\n\t\t\t\t\t\t\t\t\t\t\tcolumnIndex,\n\t\t\t\t\t\t\t\t\t\t\tinsertSegment,\n\t\t\t\t\t\t\t\t\t\t\tsegmentId,\n\t\t\t\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\t\t\t} = actionField;\n\t\t\t\t\t\t\t\t\t\trequestBody = {\n\t\t\t\t\t\t\t\t\t\t\tinsertRight: insertPosition,\n\t\t\t\t\t\t\t\t\t\t\ttableCellLocation: {\n\t\t\t\t\t\t\t\t\t\t\t\trowIndex,\n\t\t\t\t\t\t\t\t\t\t\t\tcolumnIndex,\n\t\t\t\t\t\t\t\t\t\t\t\ttableStartLocation: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tsegmentId: insertSegment !== 'body' ? segmentId : '',\n\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t} else if (action === 'delete') {\n\t\t\t\t\t\t\t\t\t\tconst { rowIndex, columnIndex, insertSegment, segmentId, index } = actionField;\n\t\t\t\t\t\t\t\t\t\trequestBody = {\n\t\t\t\t\t\t\t\t\t\t\ttableCellLocation: {\n\t\t\t\t\t\t\t\t\t\t\t\trowIndex,\n\t\t\t\t\t\t\t\t\t\t\t\tcolumnIndex,\n\t\t\t\t\t\t\t\t\t\t\t\ttableStartLocation: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tsegmentId: insertSegment !== 'body' ? segmentId : '',\n\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else if (object === 'tableRow') {\n\t\t\t\t\t\t\t\t\tif (action === 'insert') {\n\t\t\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\t\t\tinsertPosition,\n\t\t\t\t\t\t\t\t\t\t\trowIndex,\n\t\t\t\t\t\t\t\t\t\t\tcolumnIndex,\n\t\t\t\t\t\t\t\t\t\t\tinsertSegment,\n\t\t\t\t\t\t\t\t\t\t\tsegmentId,\n\t\t\t\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\t\t\t} = actionField;\n\t\t\t\t\t\t\t\t\t\trequestBody = {\n\t\t\t\t\t\t\t\t\t\t\tinsertBelow: insertPosition,\n\t\t\t\t\t\t\t\t\t\t\ttableCellLocation: {\n\t\t\t\t\t\t\t\t\t\t\t\trowIndex,\n\t\t\t\t\t\t\t\t\t\t\t\tcolumnIndex,\n\t\t\t\t\t\t\t\t\t\t\t\ttableStartLocation: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tsegmentId: insertSegment !== 'body' ? segmentId : '',\n\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t} else if (action === 'delete') {\n\t\t\t\t\t\t\t\t\t\tconst { rowIndex, columnIndex, insertSegment, segmentId, index } = actionField;\n\t\t\t\t\t\t\t\t\t\trequestBody = {\n\t\t\t\t\t\t\t\t\t\t\ttableCellLocation: {\n\t\t\t\t\t\t\t\t\t\t\t\trowIndex,\n\t\t\t\t\t\t\t\t\t\t\t\tcolumnIndex,\n\t\t\t\t\t\t\t\t\t\t\t\ttableStartLocation: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tsegmentId: insertSegment !== 'body' ? segmentId : '',\n\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else if (object === 'text') {\n\t\t\t\t\t\t\t\t\tif (action === 'insert') {\n\t\t\t\t\t\t\t\t\t\tconst { text, locationChoice, insertSegment, segmentId, index } = actionField;\n\t\t\t\t\t\t\t\t\t\trequestBody = {\n\t\t\t\t\t\t\t\t\t\t\ttext,\n\t\t\t\t\t\t\t\t\t\t\t[locationChoice as string]: {\n\t\t\t\t\t\t\t\t\t\t\t\tsegmentId: insertSegment !== 'body' ? segmentId : '',\n\t\t\t\t\t\t\t\t\t\t\t\t...(locationChoice === 'location' ? { index } : {}),\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t} else if (action === 'replaceAll') {\n\t\t\t\t\t\t\t\t\t\tconst { text, replaceText, matchCase } = actionField;\n\t\t\t\t\t\t\t\t\t\trequestBody = {\n\t\t\t\t\t\t\t\t\t\t\treplaceText,\n\t\t\t\t\t\t\t\t\t\t\tcontainsText: { text, matchCase },\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else if (object === 'paragraphBullets') {\n\t\t\t\t\t\t\t\t\tif (action === 'create') {\n\t\t\t\t\t\t\t\t\t\tconst { bulletPreset, startIndex, insertSegment, segmentId, endIndex } =\n\t\t\t\t\t\t\t\t\t\t\tactionField;\n\t\t\t\t\t\t\t\t\t\trequestBody = {\n\t\t\t\t\t\t\t\t\t\t\tbulletPreset,\n\t\t\t\t\t\t\t\t\t\t\trange: {\n\t\t\t\t\t\t\t\t\t\t\t\tsegmentId: insertSegment !== 'body' ? segmentId : '',\n\t\t\t\t\t\t\t\t\t\t\t\tstartIndex,\n\t\t\t\t\t\t\t\t\t\t\t\tendIndex,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t} else if (action === 'delete') {\n\t\t\t\t\t\t\t\t\t\tconst { startIndex, insertSegment, segmentId, endIndex } = actionField;\n\t\t\t\t\t\t\t\t\t\trequestBody = {\n\t\t\t\t\t\t\t\t\t\t\trange: {\n\t\t\t\t\t\t\t\t\t\t\t\tsegmentId: insertSegment !== 'body' ? segmentId : '',\n\t\t\t\t\t\t\t\t\t\t\t\tstartIndex,\n\t\t\t\t\t\t\t\t\t\t\t\tendIndex,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else if (object === 'namedRange') {\n\t\t\t\t\t\t\t\t\tif (action === 'create') {\n\t\t\t\t\t\t\t\t\t\tconst { name, insertSegment, segmentId, startIndex, endIndex } = actionField;\n\t\t\t\t\t\t\t\t\t\trequestBody = {\n\t\t\t\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\t\t\t\trange: {\n\t\t\t\t\t\t\t\t\t\t\t\tsegmentId: insertSegment !== 'body' ? segmentId : '',\n\t\t\t\t\t\t\t\t\t\t\t\tstartIndex,\n\t\t\t\t\t\t\t\t\t\t\t\tendIndex,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t} else if (action === 'delete') {\n\t\t\t\t\t\t\t\t\t\tconst { namedRangeReference, value } = actionField;\n\t\t\t\t\t\t\t\t\t\trequestBody = {\n\t\t\t\t\t\t\t\t\t\t\t[namedRangeReference as string]: value,\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbody.requests.push({\n\t\t\t\t\t\t\t\t\t[`${action}${upperFirst(object as string)}`]: requestBody,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/documents/${documentId}:batchUpdate`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (simple) {\n\t\t\t\t\t\t\tif (Object.keys(responseData.replies[0] as IDataObject).length !== 0) {\n\t\t\t\t\t\t\t\tconst key = Object.keys(responseData.replies[0] as IDataObject)[0];\n\t\t\t\t\t\t\t\tresponseData = responseData.replies[0][key];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresponseData = {};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData.documentId = documentId;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t{ itemData: { item: i } },\n\t\t\t);\n\t\t\treturnData.push(...executionData);\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA,0BAAkD;AAElD,iCAAmD;AACnD,8BAMO;AAGA,MAAM,WAAgC;AAAA,EAAtC;AACN,uBAAoC;AAAA,MACnC,aAAa;AAAA,MACb,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO,CAAC,OAAO;AAAA,MACf,SAAS,CAAC,GAAG,CAAC;AAAA,MACd,UAAU;AAAA,MACV,aAAa;AAAA,MACb,UAAU;AAAA,QACT,MAAM;AAAA,MACP;AAAA,MACA,QAAQ,CAAC,wCAAoB,IAAI;AAAA,MACjC,SAAS,CAAC,wCAAoB,IAAI;AAAA,MAClC,cAAc;AAAA,MACd,aAAa;AAAA,QACZ;AAAA,UACC,MAAM;AAAA,UACN,UAAU;AAAA,UACV,gBAAgB;AAAA,YACf,MAAM;AAAA,cACL,gBAAgB,CAAC,gBAAgB;AAAA,YAClC;AAAA,UACD;AAAA,QACD;AAAA,QACA;AAAA,UACC,MAAM;AAAA,UACN,UAAU;AAAA,UACV,gBAAgB;AAAA,YACf,MAAM;AAAA,cACL,gBAAgB,CAAC,QAAQ;AAAA,YAC1B;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,MACA,YAAY;AAAA,QACX;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,SAAS;AAAA,YACR;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,UACD;AAAA,UACA,SAAS;AAAA,UACT,gBAAgB;AAAA,YACf,MAAM;AAAA,cACL,YAAY,CAAC,CAAC;AAAA,YACf;AAAA,UACD;AAAA,QACD;AAAA,QACA;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,SAAS;AAAA,YACR;AAAA;AAAA,cAEC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,UACD;AAAA,UACA,SAAS;AAAA,UACT,gBAAgB;AAAA,YACf,MAAM;AAAA,cACL,YAAY,CAAC,CAAC;AAAA,YACf;AAAA,UACD;AAAA,QACD;AAAA,QACA;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,kBAAkB;AAAA,UAClB,SAAS;AAAA,YACR;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,UACD;AAAA,UACA,SAAS;AAAA,QACV;AAAA,QACA,GAAG;AAAA,QACH,GAAG;AAAA,MACJ;AAAA,IACD;AAEA,mBAAU;AAAA,MACT,aAAa;AAAA;AAAA;AAAA,QAGZ,MAAM,YAAwE;AAC7E,gBAAM,aAAqC;AAAA,YAC1C;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,UACD;AACA,cAAI;AACJ,cAAI;AACH,qBAAS,MAAM,iDAAyB;AAAA,cACvC;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA,CAAC;AAAA,cACD,CAAC;AAAA,cACD;AAAA,YACD;AAAA,UACD,SAAS,OAAO;AACf,kBAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,OAAqB;AAAA,cAC3D,SAAS;AAAA,YACV,CAAC;AAAA,UACF;AAEA,qBAAW,SAAS,QAAQ;AAC3B,uBAAW,KAAK;AAAA,cACf,MAAM,MAAM;AAAA,cACZ,OAAO,MAAM;AAAA,YACd,CAAC;AAAA,UACF;AACA,iBAAO;AAAA,QACR;AAAA,QACA,MAAM,aAAyE;AAC9E,gBAAM,aAAqC;AAAA,YAC1C;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,UACD;AACA,gBAAM,UAAU,KAAK,iBAAiB,SAAS;AAE/C,gBAAM,KAAK;AAAA,YACV,GAAG,mDACF,YAAY,iBAAiB,4BAA4B,wBAC1D;AAAA,YACA,GAAI,WAAW,YAAY,aAAa,YAAY,iBAAiB,EAAE,QAAQ,IAAI,CAAC;AAAA,UACrF;AACA,cAAI;AAEJ,cAAI;AACH,sBAAU,MAAM,iDAAyB;AAAA,cACxC;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA,CAAC;AAAA,cACD;AAAA,cACA;AAAA,YACD;AAAA,UACD,SAAS,OAAO;AACf,kBAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,OAAqB;AAAA,cAC3D,SAAS;AAAA,YACV,CAAC;AAAA,UACF;AAEA,qBAAW,UAAU,SAAS;AAC7B,uBAAW,KAAK;AAAA,cACf,MAAM,OAAO;AAAA,cACb,OAAO,OAAO;AAAA,YACf,CAAC;AAAA,UACF;AACA,iBAAO;AAAA,QACR;AAAA,MACD;AAAA,IACD;AAAA;AAAA,EAEA,MAAM,UAAkE;AACvE,UAAM,QAAQ,KAAK,aAAa;AAChC,UAAM,aAAmC,CAAC;AAC1C,UAAM,SAAS,MAAM;AAErB,QAAI;AAEJ,UAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AACpD,UAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AAEtD,aAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAChC,UAAI;AACH,YAAI,aAAa,YAAY;AAC5B,cAAI,cAAc,UAAU;AAG3B,kBAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AAEpD,kBAAM,OAAoB;AAAA,cACzB,MAAM,KAAK,iBAAiB,SAAS,CAAC;AAAA,cACtC,UAAU;AAAA,cACV,GAAI,YAAY,aAAa,YAAY,EAAE,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC;AAAA,YACrE;AAEA,2BAAe,MAAM,yCAAiB;AAAA,cACrC;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA,CAAC;AAAA,cACD;AAAA,YACD;AAAA,UACD,WAAW,cAAc,OAAO;AAG/B,kBAAM,cAAc,KAAK,iBAAiB,eAAe,CAAC;AAC1D,kBAAM,SAAS,KAAK,iBAAiB,UAAU,CAAC;AAChD,gBAAI,iBAAa,mCAAU,WAAW;AAEtC,gBAAI,CAAC,YAAY;AAChB,2BAAa;AAAA,YACd;AACA,2BAAe,MAAM,yCAAiB,KAAK,MAAM,OAAO,cAAc,UAAU,EAAE;AAClF,gBAAI,QAAQ;AACX,oBAAM,UAAW,aAAa,KAAK,QACjC,OAAO,CAAC,KAAe,gBAAgB;AACvC,oBAAI,aAAa,WAAW;AAC3B,wBAAM,QACJ,YAAY,UAA0B,SACtC,IAAI,CAAC,YAAY;AAClB,wBAAI,SAAS,SAAS;AACrB,6BAAQ,QAAQ,QAAwB;AAAA,oBACzC;AAAA,kBACD,CAAC;AACD,wBAAM,CAAC,GAAG,KAAK,GAAG,KAAK;AAAA,gBACxB;AACA,uBAAO;AAAA,cACR,GAAG,CAAC,CAAC,EACJ,KAAK,EAAE;AAET,6BAAe;AAAA,gBACd;AAAA,gBACA;AAAA,cACD;AAAA,YACD;AAAA,UACD,WAAW,cAAc,UAAU;AAGlC,kBAAM,cAAc,KAAK,iBAAiB,eAAe,CAAC;AAC1D,gBAAI,iBAAa,mCAAU,WAAW;AACtC,kBAAM,SAAS,KAAK,iBAAiB,UAAU,CAAC;AAChD,kBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AAGtD,kBAAM,EAAE,mBAAmB,IAAI,KAAK;AAAA,cACnC;AAAA,cACA;AAAA,YACD;AAEA,gBAAI,CAAC,YAAY;AAChB,2BAAa;AAAA,YACd;AAEA,kBAAM,OAAO;AAAA,cACZ,UAAU,CAAC;AAAA,YACZ;AAEA,oBAAI,iCAAQ,kBAAkB,GAAG;AAChC,oBAAM,EAAE,SAAS,MAAM,IAAI;AAC3B,mBAAK,eAAe;AAAA,gBACnB,CAAC,OAAO,GAAG;AAAA,cACZ;AAAA,YACD;AAEA,gBAAI,WAAW;AACd,kBAAI;AACJ,wBAAU,aAAa,QAAQ,CAAC,gBAAgB;AAC/C,sBAAM,EAAE,QAAQ,OAAO,IAAI;AAC3B,oBAAI,WAAW,oBAAoB;AAClC,sBAAI,WAAW,UAAU;AACxB,kCAAc;AAAA,sBACb,UAAU,YAAY;AAAA,oBACvB;AAAA,kBACD;AAAA,gBACD,WAAW,WAAW,aAAa;AAClC,sBAAI,WAAW,UAAU;AACxB,0BAAM,EAAE,eAAe,WAAW,gBAAgB,MAAM,IAAI;AAC5D,kCAAc;AAAA,sBACb,CAAC,cAAwB,GAAG;AAAA,wBAC3B,WAAW,kBAAkB,SAAS,YAAY;AAAA,wBAClD,GAAI,mBAAmB,aAAa,EAAE,MAAM,IAAI,CAAC;AAAA,sBAClD;AAAA,oBACD;AAAA,kBACD;AAAA,gBACD,WAAW,WAAW,SAAS;AAC9B,sBAAI,WAAW,UAAU;AACxB,0BAAM,EAAE,MAAM,SAAS,eAAe,gBAAgB,WAAW,MAAM,IACtE;AACD,kCAAc;AAAA,sBACb;AAAA,sBACA;AAAA,sBACA,CAAC,cAAwB,GAAG;AAAA,wBAC3B,WAAW,kBAAkB,SAAS,YAAY;AAAA,wBAClD,GAAI,mBAAmB,aAAa,EAAE,MAAM,IAAI,CAAC;AAAA,sBAClD;AAAA,oBACD;AAAA,kBACD;AAAA,gBACD,WAAW,WAAW,UAAU;AAC/B,sBAAI,WAAW,UAAU;AACxB,0BAAM,EAAE,eAAe,gBAAgB,WAAW,MAAM,IAAI;AAC5D,kCAAc;AAAA,sBACb,MAAM;AAAA,sBACN,sBAAsB;AAAA,wBACrB,WAAW,kBAAkB,SAAS,YAAY;AAAA,wBAClD,GAAI,mBAAmB,aAAa,EAAE,MAAM,IAAI,CAAC;AAAA,sBAClD;AAAA,oBACD;AAAA,kBACD,WAAW,WAAW,UAAU;AAC/B,kCAAc;AAAA,sBACb,UAAU,YAAY;AAAA,oBACvB;AAAA,kBACD;AAAA,gBACD,WAAW,WAAW,UAAU;AAC/B,sBAAI,WAAW,UAAU;AACxB,0BAAM,EAAE,eAAe,gBAAgB,WAAW,MAAM,IAAI;AAC5D,kCAAc;AAAA,sBACb,MAAM;AAAA,sBACN,sBAAsB;AAAA,wBACrB,WAAW,kBAAkB,SAAS,YAAY;AAAA,wBAClD,GAAI,mBAAmB,aAAa,EAAE,MAAM,IAAI,CAAC;AAAA,sBAClD;AAAA,oBACD;AAAA,kBACD,WAAW,WAAW,UAAU;AAC/B,kCAAc;AAAA,sBACb,UAAU,YAAY;AAAA,oBACvB;AAAA,kBACD;AAAA,gBACD,WAAW,WAAW,eAAe;AACpC,sBAAI,WAAW,UAAU;AACxB,0BAAM;AAAA,sBACL;AAAA,sBACA;AAAA,sBACA;AAAA,sBACA;AAAA,sBACA;AAAA,sBACA;AAAA,oBACD,IAAI;AACJ,kCAAc;AAAA,sBACb,aAAa;AAAA,sBACb,mBAAmB;AAAA,wBAClB;AAAA,wBACA;AAAA,wBACA,oBAAoB;AAAA,0BACnB,WAAW,kBAAkB,SAAS,YAAY;AAAA,0BAClD;AAAA,wBACD;AAAA,sBACD;AAAA,oBACD;AAAA,kBACD,WAAW,WAAW,UAAU;AAC/B,0BAAM,EAAE,UAAU,aAAa,eAAe,WAAW,MAAM,IAAI;AACnE,kCAAc;AAAA,sBACb,mBAAmB;AAAA,wBAClB;AAAA,wBACA;AAAA,wBACA,oBAAoB;AAAA,0BACnB,WAAW,kBAAkB,SAAS,YAAY;AAAA,0BAClD;AAAA,wBACD;AAAA,sBACD;AAAA,oBACD;AAAA,kBACD;AAAA,gBACD,WAAW,WAAW,YAAY;AACjC,sBAAI,WAAW,UAAU;AACxB,0BAAM;AAAA,sBACL;AAAA,sBACA;AAAA,sBACA;AAAA,sBACA;AAAA,sBACA;AAAA,sBACA;AAAA,oBACD,IAAI;AACJ,kCAAc;AAAA,sBACb,aAAa;AAAA,sBACb,mBAAmB;AAAA,wBAClB;AAAA,wBACA;AAAA,wBACA,oBAAoB;AAAA,0BACnB,WAAW,kBAAkB,SAAS,YAAY;AAAA,0BAClD;AAAA,wBACD;AAAA,sBACD;AAAA,oBACD;AAAA,kBACD,WAAW,WAAW,UAAU;AAC/B,0BAAM,EAAE,UAAU,aAAa,eAAe,WAAW,MAAM,IAAI;AACnE,kCAAc;AAAA,sBACb,mBAAmB;AAAA,wBAClB;AAAA,wBACA;AAAA,wBACA,oBAAoB;AAAA,0BACnB,WAAW,kBAAkB,SAAS,YAAY;AAAA,0BAClD;AAAA,wBACD;AAAA,sBACD;AAAA,oBACD;AAAA,kBACD;AAAA,gBACD,WAAW,WAAW,QAAQ;AAC7B,sBAAI,WAAW,UAAU;AACxB,0BAAM,EAAE,MAAM,gBAAgB,eAAe,WAAW,MAAM,IAAI;AAClE,kCAAc;AAAA,sBACb;AAAA,sBACA,CAAC,cAAwB,GAAG;AAAA,wBAC3B,WAAW,kBAAkB,SAAS,YAAY;AAAA,wBAClD,GAAI,mBAAmB,aAAa,EAAE,MAAM,IAAI,CAAC;AAAA,sBAClD;AAAA,oBACD;AAAA,kBACD,WAAW,WAAW,cAAc;AACnC,0BAAM,EAAE,MAAM,aAAa,UAAU,IAAI;AACzC,kCAAc;AAAA,sBACb;AAAA,sBACA,cAAc,EAAE,MAAM,UAAU;AAAA,oBACjC;AAAA,kBACD;AAAA,gBACD,WAAW,WAAW,oBAAoB;AACzC,sBAAI,WAAW,UAAU;AACxB,0BAAM,EAAE,cAAc,YAAY,eAAe,WAAW,SAAS,IACpE;AACD,kCAAc;AAAA,sBACb;AAAA,sBACA,OAAO;AAAA,wBACN,WAAW,kBAAkB,SAAS,YAAY;AAAA,wBAClD;AAAA,wBACA;AAAA,sBACD;AAAA,oBACD;AAAA,kBACD,WAAW,WAAW,UAAU;AAC/B,0BAAM,EAAE,YAAY,eAAe,WAAW,SAAS,IAAI;AAC3D,kCAAc;AAAA,sBACb,OAAO;AAAA,wBACN,WAAW,kBAAkB,SAAS,YAAY;AAAA,wBAClD;AAAA,wBACA;AAAA,sBACD;AAAA,oBACD;AAAA,kBACD;AAAA,gBACD,WAAW,WAAW,cAAc;AACnC,sBAAI,WAAW,UAAU;AACxB,0BAAM,EAAE,MAAM,eAAe,WAAW,YAAY,SAAS,IAAI;AACjE,kCAAc;AAAA,sBACb;AAAA,sBACA,OAAO;AAAA,wBACN,WAAW,kBAAkB,SAAS,YAAY;AAAA,wBAClD;AAAA,wBACA;AAAA,sBACD;AAAA,oBACD;AAAA,kBACD,WAAW,WAAW,UAAU;AAC/B,0BAAM,EAAE,qBAAqB,MAAM,IAAI;AACvC,kCAAc;AAAA,sBACb,CAAC,mBAA6B,GAAG;AAAA,oBAClC;AAAA,kBACD;AAAA,gBACD;AAEA,qBAAK,SAAS,KAAK;AAAA,kBAClB,CAAC,GAAG,MAAM,OAAG,oCAAW,MAAgB,CAAC,EAAE,GAAG;AAAA,gBAC/C,CAAC;AAAA,cACF,CAAC;AAAA,YACF;AAEA,2BAAe,MAAM,yCAAiB;AAAA,cACrC;AAAA,cACA;AAAA,cACA,cAAc,UAAU;AAAA,cACxB;AAAA,YACD;AAEA,gBAAI,QAAQ;AACX,kBAAI,OAAO,KAAK,aAAa,QAAQ,CAAC,CAAgB,EAAE,WAAW,GAAG;AACrE,sBAAM,MAAM,OAAO,KAAK,aAAa,QAAQ,CAAC,CAAgB,EAAE,CAAC;AACjE,+BAAe,aAAa,QAAQ,CAAC,EAAE,GAAG;AAAA,cAC3C,OAAO;AACN,+BAAe,CAAC;AAAA,cACjB;AAAA,YACD;AACA,yBAAa,aAAa;AAAA,UAC3B;AAAA,QACD;AAAA,MACD,SAAS,OAAO;AACf,YAAI,KAAK,eAAe,GAAG;AAC1B,gBAAM,qBAAqB,KAAK,QAAQ;AAAA,YACvC,KAAK,QAAQ,gBAAgB,EAAE,OAAO,MAAM,QAAQ,CAAC;AAAA,YACrD,EAAE,UAAU,EAAE,MAAM,EAAE,EAAE;AAAA,UACzB;AACA,qBAAW,KAAK,GAAG,kBAAkB;AACrC;AAAA,QACD;AACA,cAAM;AAAA,MACP;AAEA,YAAM,gBAAgB,KAAK,QAAQ;AAAA,QAClC,KAAK,QAAQ,gBAAgB,YAA6B;AAAA,QAC1D,EAAE,UAAU,EAAE,MAAM,EAAE,EAAE;AAAA,MACzB;AACA,iBAAW,KAAK,GAAG,aAAa;AAAA,IACjC;AAEA,WAAO,CAAC,UAAU;AAAA,EACnB;AACD;","names":[]}