{"version":3,"sources":["../../../../../nodes/Google/Gmail/v2/GmailV2.node.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeBaseDescription,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeOperationError, SEND_AND_WAIT_OPERATION } from 'n8n-workflow';\n\nimport { draftFields, draftOperations } from './DraftDescription';\nimport { labelFields, labelOperations } from './LabelDescription';\nimport { getGmailAliases, getLabels, getThreadMessages } from './loadOptions';\nimport { messageFields, messageOperations } from './MessageDescription';\nimport { threadFields, threadOperations } from './ThreadDescription';\nimport { configureWaitTillDate } from '../../../../utils/sendAndWait/configureWaitTillDate.util';\nimport { sendAndWaitWebhooksDescription } from '../../../../utils/sendAndWait/descriptions';\nimport type { IEmail } from '../../../../utils/sendAndWait/interfaces';\nimport {\n\tcreateEmail,\n\tgetSendAndWaitProperties,\n\tsendAndWaitWebhook,\n} from '../../../../utils/sendAndWait/utils';\nimport {\n\tencodeEmail,\n\tgoogleApiRequest,\n\tgoogleApiRequestAllItems,\n\tparseRawEmail,\n\tprepareEmailAttachments,\n\tprepareEmailBody,\n\tprepareEmailsInput,\n\tprepareQuery,\n\treplyToEmail,\n\tsimplifyOutput,\n\tunescapeSnippets,\n} from '../GenericFunctions';\n\nconst versionDescription: INodeTypeDescription = {\n\tdisplayName: 'Gmail',\n\tname: 'gmail',\n\ticon: 'file:gmail.svg',\n\tgroup: ['transform'],\n\tversion: [2, 2.1],\n\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\tdescription: 'Consume the Gmail API',\n\tdefaults: {\n\t\tname: 'Gmail',\n\t},\n\tinputs: [NodeConnectionTypes.Main],\n\toutputs: [NodeConnectionTypes.Main],\n\tusableAsTool: true,\n\tcredentials: [\n\t\t{\n\t\t\tname: 'googleApi',\n\t\t\trequired: true,\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: {\n\t\t\t\t\tauthentication: ['serviceAccount'],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname: 'gmailOAuth2',\n\t\t\trequired: true,\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: {\n\t\t\t\t\tauthentication: ['oAuth2'],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n\twebhooks: sendAndWaitWebhooksDescription,\n\tproperties: [\n\t\t{\n\t\t\tdisplayName: 'Authentication',\n\t\t\tname: 'authentication',\n\t\t\ttype: 'options',\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-display-name-miscased\n\t\t\t\t\tname: 'OAuth2 (recommended)',\n\t\t\t\t\tvalue: 'oAuth2',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Service Account',\n\t\t\t\t\tvalue: 'serviceAccount',\n\t\t\t\t},\n\t\t\t],\n\t\t\tdefault: 'oAuth2',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Resource',\n\t\t\tname: 'resource',\n\t\t\ttype: 'options',\n\t\t\tnoDataExpression: true,\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\tname: 'Message',\n\t\t\t\t\tvalue: 'message',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Label',\n\t\t\t\t\tvalue: 'label',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Draft',\n\t\t\t\t\tvalue: 'draft',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Thread',\n\t\t\t\t\tvalue: 'thread',\n\t\t\t\t},\n\t\t\t],\n\t\t\tdefault: 'message',\n\t\t},\n\t\t//-------------------------------\n\t\t// Draft Operations\n\t\t//-------------------------------\n\t\t...draftOperations,\n\t\t...draftFields,\n\t\t//-------------------------------\n\t\t// Label Operations\n\t\t//-------------------------------\n\t\t...labelOperations,\n\t\t...labelFields,\n\t\t//-------------------------------\n\t\t// Message Operations\n\t\t//-------------------------------\n\t\t...messageOperations,\n\t\t...messageFields,\n\t\t...getSendAndWaitProperties([\n\t\t\t{\n\t\t\t\tdisplayName: 'To',\n\t\t\t\tname: 'sendTo',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tplaceholder: 'e.g. info@example.com',\n\t\t\t},\n\t\t]),\n\t\t//-------------------------------\n\t\t// Thread Operations\n\t\t//-------------------------------\n\t\t...threadOperations,\n\t\t...threadFields,\n\t\t//-------------------------------\n\t],\n};\n\nexport class GmailV2 implements INodeType {\n\tdescription: INodeTypeDescription;\n\n\tconstructor(baseDescription: INodeTypeBaseDescription) {\n\t\tthis.description = {\n\t\t\t...baseDescription,\n\t\t\t...versionDescription,\n\t\t};\n\t}\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\tgetLabels,\n\t\t\tgetThreadMessages,\n\t\t\tgetGmailAliases,\n\t\t},\n\t};\n\n\twebhook = sendAndWaitWebhook;\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\t\tconst nodeVersion = this.getNode().typeVersion;\n\t\tconst instanceId = this.getInstanceId();\n\n\t\tif (resource === 'message' && operation === SEND_AND_WAIT_OPERATION) {\n\t\t\tconst email: IEmail = createEmail(this);\n\n\t\t\tawait googleApiRequest.call(this, 'POST', '/gmail/v1/users/me/messages/send', {\n\t\t\t\traw: await encodeEmail(email),\n\t\t\t});\n\n\t\t\tconst waitTill = configureWaitTillDate(this);\n\n\t\t\tawait this.putExecutionToWait(waitTill);\n\t\t\treturn [this.getInputData()];\n\t\t}\n\n\t\tlet responseData;\n\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\ttry {\n\t\t\t\t//------------------------------------------------------------------//\n\t\t\t\t//                            labels                                //\n\t\t\t\t//------------------------------------------------------------------//\n\t\t\t\tif (resource === 'label') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t//https://developers.google.com/gmail/api/v1/reference/users/labels/create\n\t\t\t\t\t\tconst labelName = this.getNodeParameter('name', i) as string;\n\t\t\t\t\t\tconst labelListVisibility = this.getNodeParameter(\n\t\t\t\t\t\t\t'options.labelListVisibility',\n\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t'labelShow',\n\t\t\t\t\t\t) as string;\n\t\t\t\t\t\tconst messageListVisibility = this.getNodeParameter(\n\t\t\t\t\t\t\t'options.messageListVisibility',\n\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t'show',\n\t\t\t\t\t\t) as string;\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\tlabelListVisibility,\n\t\t\t\t\t\t\tmessageListVisibility,\n\t\t\t\t\t\t\tname: labelName,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/gmail/v1/users/me/labels',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\t//https://developers.google.com/gmail/api/v1/reference/users/labels/delete\n\t\t\t\t\t\tconst labelId = this.getNodeParameter('labelId', i) as string[];\n\t\t\t\t\t\tconst endpoint = `/gmail/v1/users/me/labels/${labelId}`;\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(this, 'DELETE', endpoint);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\t// https://developers.google.com/gmail/api/v1/reference/users/labels/get\n\t\t\t\t\t\tconst labelId = this.getNodeParameter('labelId', i);\n\t\t\t\t\t\tconst endpoint = `/gmail/v1/users/me/labels/${labelId}`;\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(this, 'GET', endpoint);\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(this, 'GET', '/gmail/v1/users/me/labels');\n\n\t\t\t\t\t\tresponseData = this.helpers.returnJsonArray(responseData.labels as IDataObject[]);\n\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = responseData.splice(0, limit);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//------------------------------------------------------------------//\n\t\t\t\t//                            messages                              //\n\t\t\t\t//------------------------------------------------------------------//\n\t\t\t\tif (resource === 'message') {\n\t\t\t\t\tif (operation === 'send') {\n\t\t\t\t\t\t// https://developers.google.com/gmail/api/v1/reference/users/messages/send\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tconst sendTo = this.getNodeParameter('sendTo', i) as string;\n\t\t\t\t\t\tlet qs: IDataObject = {};\n\n\t\t\t\t\t\tconst to = prepareEmailsInput.call(this, sendTo, 'To', i);\n\t\t\t\t\t\tlet cc = '';\n\t\t\t\t\t\tlet bcc = '';\n\t\t\t\t\t\tlet replyTo = '';\n\n\t\t\t\t\t\tif (options.ccList) {\n\t\t\t\t\t\t\tcc = prepareEmailsInput.call(this, options.ccList as string, 'CC', i);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (options.bccList) {\n\t\t\t\t\t\t\tbcc = prepareEmailsInput.call(this, options.bccList as string, 'BCC', i);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (options.replyTo) {\n\t\t\t\t\t\t\treplyTo = prepareEmailsInput.call(this, options.replyTo as string, 'ReplyTo', i);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet attachments: IDataObject[] = [];\n\n\t\t\t\t\t\tif (options.attachmentsUi) {\n\t\t\t\t\t\t\tattachments = await prepareEmailAttachments.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\toptions.attachmentsUi as IDataObject,\n\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attachments.length) {\n\t\t\t\t\t\t\t\tqs = {\n\t\t\t\t\t\t\t\t\tuserId: 'me',\n\t\t\t\t\t\t\t\t\tuploadType: 'media',\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet from = '';\n\t\t\t\t\t\tif (options.senderName) {\n\t\t\t\t\t\t\tconst { emailAddress } = await googleApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/gmail/v1/users/me/profile',\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tfrom = `${options.senderName as string} <${emailAddress}>`;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet appendAttribution = options.appendAttribution;\n\t\t\t\t\t\tif (appendAttribution === undefined) {\n\t\t\t\t\t\t\tappendAttribution = nodeVersion >= 2.1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst email: IEmail = {\n\t\t\t\t\t\t\tfrom,\n\t\t\t\t\t\t\tto,\n\t\t\t\t\t\t\tcc,\n\t\t\t\t\t\t\tbcc,\n\t\t\t\t\t\t\treplyTo,\n\t\t\t\t\t\t\tsubject: this.getNodeParameter('subject', i) as string,\n\t\t\t\t\t\t\t...prepareEmailBody.call(this, i, appendAttribution as boolean, instanceId),\n\t\t\t\t\t\t\tattachments,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tconst endpoint = '/gmail/v1/users/me/messages/send';\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\traw: await encodeEmail(email),\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(this, 'POST', endpoint, body, qs);\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'reply') {\n\t\t\t\t\t\tconst messageIdGmail = this.getNodeParameter('messageId', i) as string;\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\n\t\t\t\t\t\tresponseData = await replyToEmail.call(this, messageIdGmail, options, i);\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\t//https://developers.google.com/gmail/api/v1/reference/users/messages/get\n\t\t\t\t\t\tconst id = this.getNodeParameter('messageId', i);\n\t\t\t\t\t\tconst endpoint = `/gmail/v1/users/me/messages/${id}`;\n\t\t\t\t\t\tconst qs: IDataObject = {};\n\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i, {});\n\t\t\t\t\t\tconst simple = this.getNodeParameter('simple', i) as boolean;\n\n\t\t\t\t\t\tif (simple) {\n\t\t\t\t\t\t\tqs.format = 'metadata';\n\t\t\t\t\t\t\tqs.metadataHeaders = ['From', 'To', 'Cc', 'Bcc', 'Subject'];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.format = 'raw';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(this, 'GET', endpoint, {}, qs);\n\n\t\t\t\t\t\tlet nodeExecutionData: INodeExecutionData;\n\t\t\t\t\t\tif (!simple) {\n\t\t\t\t\t\t\tconst dataPropertyNameDownload =\n\t\t\t\t\t\t\t\t(options.dataPropertyAttachmentsPrefixName as string) || 'attachment_';\n\n\t\t\t\t\t\t\tnodeExecutionData = await parseRawEmail.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\tresponseData,\n\t\t\t\t\t\t\t\tdataPropertyNameDownload,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst [json, _] = await simplifyOutput.call(this, [responseData as IDataObject]);\n\t\t\t\t\t\t\tnodeExecutionData = { json };\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = [nodeExecutionData];\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i, {});\n\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i, {});\n\t\t\t\t\t\tconst qs: IDataObject = {};\n\t\t\t\t\t\tObject.assign(qs, prepareQuery.call(this, filters, i), options, i);\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await googleApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'messages',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/gmail/v1/users/me/messages',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.maxResults = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/gmail/v1/users/me/messages',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.messages;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (responseData === undefined) {\n\t\t\t\t\t\t\tresponseData = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst simple = this.getNodeParameter('simple', i) as boolean;\n\n\t\t\t\t\t\tif (simple) {\n\t\t\t\t\t\t\tqs.format = 'metadata';\n\t\t\t\t\t\t\tqs.metadataHeaders = ['From', 'To', 'Cc', 'Bcc', 'Subject'];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.format = 'raw';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let index = 0; index < responseData.length; index++) {\n\t\t\t\t\t\t\tresponseData[index] = await googleApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/gmail/v1/users/me/messages/${responseData[index].id}`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif (!simple) {\n\t\t\t\t\t\t\t\tconst dataPropertyNameDownload =\n\t\t\t\t\t\t\t\t\t(options.dataPropertyAttachmentsPrefixName as string) || 'attachment_';\n\n\t\t\t\t\t\t\t\tresponseData[index] = await parseRawEmail.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\tresponseData[index],\n\t\t\t\t\t\t\t\t\tdataPropertyNameDownload,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (simple) {\n\t\t\t\t\t\t\tresponseData = this.helpers.returnJsonArray(\n\t\t\t\t\t\t\t\tawait simplifyOutput.call(this, responseData as IDataObject[]),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\t// https://developers.google.com/gmail/api/v1/reference/users/messages/delete\n\t\t\t\t\t\tconst id = this.getNodeParameter('messageId', i);\n\t\t\t\t\t\tconst endpoint = `/gmail/v1/users/me/messages/${id}`;\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(this, 'DELETE', endpoint);\n\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'markAsRead') {\n\t\t\t\t\t\t// https://developers.google.com/gmail/api/reference/rest/v1/users.messages/modify\n\t\t\t\t\t\tconst id = this.getNodeParameter('messageId', i);\n\t\t\t\t\t\tconst endpoint = `/gmail/v1/users/me/messages/${id}/modify`;\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\tremoveLabelIds: ['UNREAD'],\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(this, 'POST', endpoint, body);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'markAsUnread') {\n\t\t\t\t\t\t// https://developers.google.com/gmail/api/reference/rest/v1/users.messages/modify\n\t\t\t\t\t\tconst id = this.getNodeParameter('messageId', i);\n\t\t\t\t\t\tconst endpoint = `/gmail/v1/users/me/messages/${id}/modify`;\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\taddLabelIds: ['UNREAD'],\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(this, 'POST', endpoint, body);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'addLabels') {\n\t\t\t\t\t\tconst id = this.getNodeParameter('messageId', i);\n\t\t\t\t\t\tconst labelIds = this.getNodeParameter('labelIds', i) as string[];\n\n\t\t\t\t\t\tconst endpoint = `/gmail/v1/users/me/messages/${id}/modify`;\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\taddLabelIds: labelIds,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(this, 'POST', endpoint, body);\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'removeLabels') {\n\t\t\t\t\t\tconst id = this.getNodeParameter('messageId', i);\n\t\t\t\t\t\tconst labelIds = this.getNodeParameter('labelIds', i) as string[];\n\n\t\t\t\t\t\tconst endpoint = `/gmail/v1/users/me/messages/${id}/modify`;\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\tremoveLabelIds: labelIds,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(this, 'POST', endpoint, body);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//------------------------------------------------------------------//\n\t\t\t\t//                            drafts                                //\n\t\t\t\t//------------------------------------------------------------------//\n\t\t\t\tif (resource === 'draft') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// https://developers.google.com/gmail/api/v1/reference/users/drafts/create\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tlet qs: IDataObject = {};\n\n\t\t\t\t\t\tlet to = '';\n\t\t\t\t\t\tlet cc = '';\n\t\t\t\t\t\tlet bcc = '';\n\t\t\t\t\t\tlet replyTo = '';\n\t\t\t\t\t\tlet fromAlias = '';\n\t\t\t\t\t\tlet threadId = null;\n\n\t\t\t\t\t\tif (options.sendTo) {\n\t\t\t\t\t\t\tto += prepareEmailsInput.call(this, options.sendTo as string, 'To', i);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (options.ccList) {\n\t\t\t\t\t\t\tcc = prepareEmailsInput.call(this, options.ccList as string, 'CC', i);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (options.bccList) {\n\t\t\t\t\t\t\tbcc = prepareEmailsInput.call(this, options.bccList as string, 'BCC', i);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (options.replyTo) {\n\t\t\t\t\t\t\treplyTo = prepareEmailsInput.call(this, options.replyTo as string, 'ReplyTo', i);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (options.fromAlias) {\n\t\t\t\t\t\t\tfromAlias = options.fromAlias as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (options.threadId && typeof options.threadId === 'string') {\n\t\t\t\t\t\t\tthreadId = options.threadId;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet attachments: IDataObject[] = [];\n\t\t\t\t\t\tif (options.attachmentsUi) {\n\t\t\t\t\t\t\tattachments = await prepareEmailAttachments.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\toptions.attachmentsUi as IDataObject,\n\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attachments.length) {\n\t\t\t\t\t\t\t\tqs = {\n\t\t\t\t\t\t\t\t\tuserId: 'me',\n\t\t\t\t\t\t\t\t\tuploadType: 'media',\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst email: IEmail = {\n\t\t\t\t\t\t\tfrom: fromAlias,\n\t\t\t\t\t\t\tto,\n\t\t\t\t\t\t\tcc,\n\t\t\t\t\t\t\tbcc,\n\t\t\t\t\t\t\treplyTo,\n\t\t\t\t\t\t\tsubject: this.getNodeParameter('subject', i) as string,\n\t\t\t\t\t\t\t...prepareEmailBody.call(this, i),\n\t\t\t\t\t\t\tattachments,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\tmessage: {\n\t\t\t\t\t\t\t\traw: await encodeEmail(email),\n\t\t\t\t\t\t\t\tthreadId: threadId || undefined,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/gmail/v1/users/me/drafts',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\t// https://developers.google.com/gmail/api/v1/reference/users/drafts/get\n\t\t\t\t\t\tconst id = this.getNodeParameter('messageId', i);\n\t\t\t\t\t\tconst endpoint = `/gmail/v1/users/me/drafts/${id}`;\n\t\t\t\t\t\tconst qs: IDataObject = {};\n\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tqs.format = 'raw';\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(this, 'GET', endpoint, {}, qs);\n\n\t\t\t\t\t\tconst dataPropertyNameDownload =\n\t\t\t\t\t\t\t(options.dataPropertyAttachmentsPrefixName as string) || 'attachment_';\n\n\t\t\t\t\t\tconst nodeExecutionData = await parseRawEmail.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tresponseData.message,\n\t\t\t\t\t\t\tdataPropertyNameDownload,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// Add the draft-id\n\t\t\t\t\t\tnodeExecutionData.json.messageId = nodeExecutionData.json.id;\n\t\t\t\t\t\tnodeExecutionData.json.id = responseData.id;\n\n\t\t\t\t\t\tresponseData = [nodeExecutionData];\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\t// https://developers.google.com/gmail/api/v1/reference/users/drafts/delete\n\t\t\t\t\t\tconst id = this.getNodeParameter('messageId', i);\n\t\t\t\t\t\tconst endpoint = `/gmail/v1/users/me/drafts/${id}`;\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(this, 'DELETE', endpoint);\n\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tconst qs: IDataObject = {};\n\t\t\t\t\t\tObject.assign(qs, options);\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await googleApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'drafts',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/gmail/v1/users/me/drafts',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.maxResults = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/gmail/v1/users/me/drafts',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.drafts;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (responseData === undefined) {\n\t\t\t\t\t\t\tresponseData = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tqs.format = 'raw';\n\n\t\t\t\t\t\tfor (let index = 0; index < responseData.length; index++) {\n\t\t\t\t\t\t\tresponseData[index] = await googleApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/gmail/v1/users/me/drafts/${responseData[index].id}`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tconst dataPropertyNameDownload =\n\t\t\t\t\t\t\t\t(options.dataPropertyAttachmentsPrefixName as string) || 'attachment_';\n\t\t\t\t\t\t\tconst id = responseData[index].id;\n\t\t\t\t\t\t\tresponseData[index] = await parseRawEmail.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\tresponseData[index].message,\n\t\t\t\t\t\t\t\tdataPropertyNameDownload,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Add the draft-id\n\t\t\t\t\t\t\tresponseData[index].json.messageId = responseData[index].json.id;\n\t\t\t\t\t\t\tresponseData[index].json.id = id;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//------------------------------------------------------------------//\n\t\t\t\t//                           threads                                //\n\t\t\t\t//------------------------------------------------------------------//\n\t\t\t\tif (resource === 'thread') {\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\t//https://developers.google.com/gmail/api/reference/rest/v1/users.threads/delete\n\t\t\t\t\t\tconst id = this.getNodeParameter('threadId', i);\n\t\t\t\t\t\tconst endpoint = `/gmail/v1/users/me/threads/${id}`;\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(this, 'DELETE', endpoint);\n\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\t//https://developers.google.com/gmail/api/reference/rest/v1/users.threads/get\n\t\t\t\t\t\tconst id = this.getNodeParameter('threadId', i);\n\t\t\t\t\t\tconst endpoint = `/gmail/v1/users/me/threads/${id}`;\n\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tconst onlyMessages = options.returnOnlyMessages || false;\n\t\t\t\t\t\tconst qs: IDataObject = {};\n\n\t\t\t\t\t\tconst simple = this.getNodeParameter('simple', i) as boolean;\n\n\t\t\t\t\t\tif (simple) {\n\t\t\t\t\t\t\tqs.format = 'metadata';\n\t\t\t\t\t\t\tqs.metadataHeaders = ['From', 'To', 'Cc', 'Bcc', 'Subject'];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.format = 'full';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(this, 'GET', endpoint, {}, qs);\n\n\t\t\t\t\t\tif (onlyMessages) {\n\t\t\t\t\t\t\tresponseData = this.helpers.returnJsonArray(\n\t\t\t\t\t\t\t\tawait simplifyOutput.call(this, responseData.messages as IDataObject[]),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresponseData.messages = await simplifyOutput.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\tresponseData.messages as IDataObject[],\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = [{ json: responseData }];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\t//https://developers.google.com/gmail/api/reference/rest/v1/users.threads/list\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\t\t\t\t\t\tconst qs: IDataObject = {};\n\t\t\t\t\t\tObject.assign(qs, prepareQuery.call(this, filters, i));\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await googleApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'threads',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/gmail/v1/users/me/threads',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.maxResults = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/gmail/v1/users/me/threads',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.threads;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (responseData === undefined) {\n\t\t\t\t\t\t\tresponseData = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = this.helpers.returnJsonArray(responseData as IDataObject[]);\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'reply') {\n\t\t\t\t\t\tconst messageIdGmail = this.getNodeParameter('messageId', i) as string;\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\n\t\t\t\t\t\tresponseData = await replyToEmail.call(this, messageIdGmail, options, i);\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'trash') {\n\t\t\t\t\t\t//https://developers.google.com/gmail/api/reference/rest/v1/users.threads/trash\n\t\t\t\t\t\tconst id = this.getNodeParameter('threadId', i);\n\t\t\t\t\t\tconst endpoint = `/gmail/v1/users/me/threads/${id}/trash`;\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(this, 'POST', endpoint);\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'untrash') {\n\t\t\t\t\t\t//https://developers.google.com/gmail/api/reference/rest/v1/users.threads/untrash\n\t\t\t\t\t\tconst id = this.getNodeParameter('threadId', i);\n\n\t\t\t\t\t\tconst endpoint = `/gmail/v1/users/me/threads/${id}/untrash`;\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(this, 'POST', endpoint);\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'addLabels') {\n\t\t\t\t\t\tconst id = this.getNodeParameter('threadId', i);\n\t\t\t\t\t\tconst labelIds = this.getNodeParameter('labelIds', i) as string[];\n\n\t\t\t\t\t\tconst endpoint = `/gmail/v1/users/me/threads/${id}/modify`;\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\taddLabelIds: labelIds,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(this, 'POST', endpoint, body);\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'removeLabels') {\n\t\t\t\t\t\tconst id = this.getNodeParameter('threadId', i);\n\t\t\t\t\t\tconst labelIds = this.getNodeParameter('labelIds', i) as string[];\n\n\t\t\t\t\t\tconst endpoint = `/gmail/v1/users/me/threads/${id}/modify`;\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\tremoveLabelIds: labelIds,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(this, 'POST', endpoint, body);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//------------------------------------------------------------------//\n\n\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t{\n\t\t\t\t\t\titemData: { item: i },\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t\treturnData.push(...executionData);\n\t\t\t} catch (error) {\n\t\t\t\terror.message = `${error.message} (item ${i})`;\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\treturnData.push({ json: { error: error.message }, pairedItem: { item: i } });\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow new NodeOperationError(this.getNode(), error as Error, {\n\t\t\t\t\tdescription: error.description,\n\t\t\t\t\titemIndex: i,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (\n\t\t\t['draft', 'message', 'thread'].includes(resource) &&\n\t\t\t['get', 'getAll'].includes(operation)\n\t\t) {\n\t\t\treturn [unescapeSnippets(returnData)];\n\t\t}\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":[]}