{"version":3,"sources":["../../../../../../../nodes/Google/Sheet/v2/actions/sheet/delete.operation.ts"],"sourcesContent":["import type { IExecuteFunctions, IDataObject, INodeExecutionData } from 'n8n-workflow';\n\nimport { generatePairedItemData, wrapData } from '../../../../../../utils/utilities';\nimport type { GoogleSheet } from '../../helpers/GoogleSheet';\nimport type { SheetProperties } from '../../helpers/GoogleSheets.types';\nimport { getColumnNumber, untilSheetSelected } from '../../helpers/GoogleSheets.utils';\n\nexport const description: SheetProperties = [\n\t{\n\t\tdisplayName: 'To Delete',\n\t\tname: 'toDelete',\n\t\ttype: 'options',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tname: 'Rows',\n\t\t\t\tvalue: 'rows',\n\t\t\t\tdescription: 'Rows to delete',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Columns',\n\t\t\t\tvalue: 'columns',\n\t\t\t\tdescription: 'Columns to delete',\n\t\t\t},\n\t\t],\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['sheet'],\n\t\t\t\toperation: ['delete'],\n\t\t\t},\n\t\t\thide: {\n\t\t\t\t...untilSheetSelected,\n\t\t\t},\n\t\t},\n\t\tdefault: 'rows',\n\t\tdescription: 'What to delete',\n\t},\n\t{\n\t\tdisplayName: 'Start Row Number',\n\t\tname: 'startIndex',\n\t\ttype: 'number',\n\t\ttypeOptions: {\n\t\t\tminValue: 1,\n\t\t},\n\t\tdefault: 2,\n\t\tdescription: 'The row number to delete from, The first row is 2',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['sheet'],\n\t\t\t\toperation: ['delete'],\n\t\t\t\ttoDelete: ['rows'],\n\t\t\t},\n\t\t\thide: {\n\t\t\t\t...untilSheetSelected,\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tdisplayName: 'Number of Rows to Delete',\n\t\tname: 'numberToDelete',\n\t\ttype: 'number',\n\t\ttypeOptions: {\n\t\t\tminValue: 1,\n\t\t},\n\t\tdefault: 1,\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['sheet'],\n\t\t\t\toperation: ['delete'],\n\t\t\t\ttoDelete: ['rows'],\n\t\t\t},\n\t\t\thide: {\n\t\t\t\t...untilSheetSelected,\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tdisplayName: 'Start Column',\n\t\tname: 'startIndex',\n\t\ttype: 'string',\n\t\tdefault: 'A',\n\t\tdescription: 'The column to delete',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['sheet'],\n\t\t\t\toperation: ['delete'],\n\t\t\t\ttoDelete: ['columns'],\n\t\t\t},\n\t\t\thide: {\n\t\t\t\t...untilSheetSelected,\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tdisplayName: 'Number of Columns to Delete',\n\t\tname: 'numberToDelete',\n\t\ttype: 'number',\n\t\ttypeOptions: {\n\t\t\tminValue: 1,\n\t\t},\n\t\tdefault: 1,\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['sheet'],\n\t\t\t\toperation: ['delete'],\n\t\t\t\ttoDelete: ['columns'],\n\t\t\t},\n\t\t\thide: {\n\t\t\t\t...untilSheetSelected,\n\t\t\t},\n\t\t},\n\t},\n];\n\nexport async function execute(\n\tthis: IExecuteFunctions,\n\tsheet: GoogleSheet,\n\tsheetName: string,\n): Promise<INodeExecutionData[]> {\n\tconst items = this.getInputData();\n\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst requests: IDataObject[] = [];\n\t\tlet startIndex, endIndex, numberToDelete;\n\t\tconst deleteType = this.getNodeParameter('toDelete', i) as string;\n\n\t\tif (deleteType === 'rows') {\n\t\t\tstartIndex = this.getNodeParameter('startIndex', i) as number;\n\t\t\t// We start from 1 now...\n\t\t\tstartIndex--;\n\t\t\tnumberToDelete = this.getNodeParameter('numberToDelete', i) as number;\n\t\t\tif (numberToDelete === 1) {\n\t\t\t\tendIndex = startIndex + 1;\n\t\t\t} else {\n\t\t\t\tendIndex = startIndex + numberToDelete;\n\t\t\t}\n\t\t\trequests.push({\n\t\t\t\tdeleteDimension: {\n\t\t\t\t\trange: {\n\t\t\t\t\t\tsheetId: sheetName,\n\t\t\t\t\t\tdimension: 'ROWS',\n\t\t\t\t\t\tstartIndex,\n\t\t\t\t\t\tendIndex,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t} else if (deleteType === 'columns') {\n\t\t\tstartIndex = this.getNodeParameter('startIndex', i) as string;\n\t\t\tnumberToDelete = this.getNodeParameter('numberToDelete', i) as number;\n\t\t\tstartIndex = getColumnNumber(startIndex) - 1;\n\t\t\tif (numberToDelete === 1) {\n\t\t\t\tendIndex = startIndex + 1;\n\t\t\t} else {\n\t\t\t\tendIndex = startIndex + numberToDelete;\n\t\t\t}\n\t\t\trequests.push({\n\t\t\t\tdeleteDimension: {\n\t\t\t\t\trange: {\n\t\t\t\t\t\tsheetId: sheetName,\n\t\t\t\t\t\tdimension: 'COLUMNS',\n\t\t\t\t\t\tstartIndex,\n\t\t\t\t\t\tendIndex,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tawait sheet.spreadsheetBatchUpdate(requests);\n\t}\n\n\tconst itemData = generatePairedItemData(this.getInputData().length);\n\tconst returnData = this.helpers.constructExecutionMetaData(wrapData({ success: true }), {\n\t\titemData,\n\t});\n\n\treturn returnData;\n}\n"],"mappings":"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","names":[]}