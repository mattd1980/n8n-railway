{"version":3,"sources":["../../../../../../../nodes/Google/Sheet/v2/actions/sheet/remove.operation.ts"],"sourcesContent":["import type { IExecuteFunctions, IDataObject, INodeExecutionData } from 'n8n-workflow';\n\nimport { wrapData } from '../../../../../../utils/utilities';\nimport type { GoogleSheet } from '../../helpers/GoogleSheet';\nimport { apiRequest } from '../../transport';\n\nexport async function execute(\n\tthis: IExecuteFunctions,\n\t_sheet: GoogleSheet,\n\tsheetName: string,\n): Promise<INodeExecutionData[]> {\n\tconst returnData: INodeExecutionData[] = [];\n\tconst items = this.getInputData();\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst [spreadsheetId, sheetWithinDocument] = sheetName.split('||');\n\t\tconst requests = [\n\t\t\t{\n\t\t\t\tdeleteSheet: {\n\t\t\t\t\tsheetId: sheetWithinDocument,\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\n\t\tconst responseData = await apiRequest.call(\n\t\t\tthis,\n\t\t\t'POST',\n\t\t\t`/v4/spreadsheets/${spreadsheetId}:batchUpdate`,\n\t\t\t{ requests },\n\t\t);\n\t\tdelete responseData.replies;\n\n\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\twrapData(responseData as IDataObject[]),\n\t\t\t{ itemData: { item: i } },\n\t\t);\n\n\t\treturnData.push(...executionData);\n\t}\n\n\treturn returnData;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,uBAAyB;AAEzB,uBAA2B;AAE3B,eAAsB,QAErB,QACA,WACgC;AAChC,QAAM,aAAmC,CAAC;AAC1C,QAAM,QAAQ,KAAK,aAAa;AAChC,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACtC,UAAM,CAAC,eAAe,mBAAmB,IAAI,UAAU,MAAM,IAAI;AACjE,UAAM,WAAW;AAAA,MAChB;AAAA,QACC,aAAa;AAAA,UACZ,SAAS;AAAA,QACV;AAAA,MACD;AAAA,IACD;AAEA,UAAM,eAAe,MAAM,4BAAW;AAAA,MACrC;AAAA,MACA;AAAA,MACA,oBAAoB,aAAa;AAAA,MACjC,EAAE,SAAS;AAAA,IACZ;AACA,WAAO,aAAa;AAEpB,UAAM,gBAAgB,KAAK,QAAQ;AAAA,UAClC,2BAAS,YAA6B;AAAA,MACtC,EAAE,UAAU,EAAE,MAAM,EAAE,EAAE;AAAA,IACzB;AAEA,eAAW,KAAK,GAAG,aAAa;AAAA,EACjC;AAEA,SAAO;AACR;","names":[]}