{"version":3,"sources":["../../../../../../../nodes/Google/Sheet/v2/actions/sheet/create.operation.ts"],"sourcesContent":["import type { IExecuteFunctions, IDataObject, INodeExecutionData } from 'n8n-workflow';\n\nimport { wrapData } from '../../../../../../utils/utilities';\nimport type { GoogleSheet } from '../../helpers/GoogleSheet';\nimport type { SheetProperties } from '../../helpers/GoogleSheets.types';\nimport { getExistingSheetNames, hexToRgb } from '../../helpers/GoogleSheets.utils';\nimport { apiRequest } from '../../transport';\n\nexport const description: SheetProperties = [\n\t{\n\t\tdisplayName: 'Title',\n\t\tname: 'title',\n\t\ttype: 'string',\n\t\trequired: true,\n\t\tdefault: 'n8n-sheet',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['sheet'],\n\t\t\t\toperation: ['create'],\n\t\t\t},\n\t\t},\n\t\tdescription: 'The name of the sheet',\n\t},\n\t{\n\t\tdisplayName: 'Options',\n\t\tname: 'options',\n\t\ttype: 'collection',\n\t\tplaceholder: 'Add option',\n\t\tdefault: {},\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['sheet'],\n\t\t\t\toperation: ['create'],\n\t\t\t},\n\t\t},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Hidden',\n\t\t\t\tname: 'hidden',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: \"Whether the sheet is hidden in the UI, false if it's visible\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Right To Left',\n\t\t\t\tname: 'rightToLeft',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: 'Whether the sheet is an RTL sheet instead of an LTR sheet',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Sheet ID',\n\t\t\t\tname: 'sheetId',\n\t\t\t\ttype: 'number',\n\t\t\t\tdefault: 0,\n\t\t\t\tdescription:\n\t\t\t\t\t'The ID of the sheet. Must be non-negative. This field cannot be changed once set.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Sheet Index',\n\t\t\t\tname: 'index',\n\t\t\t\ttype: 'number',\n\t\t\t\tdefault: 0,\n\t\t\t\tdescription: 'The index of the sheet within the spreadsheet',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Tab Color',\n\t\t\t\tname: 'tabColor',\n\t\t\t\ttype: 'color',\n\t\t\t\tdefault: '0aa55c',\n\t\t\t\tdescription: 'The color of the tab in the UI',\n\t\t\t},\n\t\t],\n\t},\n];\n\nexport async function execute(\n\tthis: IExecuteFunctions,\n\tsheet: GoogleSheet,\n\tsheetName: string,\n): Promise<INodeExecutionData[]> {\n\tlet responseData;\n\tconst returnData: INodeExecutionData[] = [];\n\tconst items = this.getInputData();\n\n\tconst existingSheetNames = await getExistingSheetNames(sheet);\n\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst sheetTitle = this.getNodeParameter('title', i, {}) as string;\n\n\t\tif (existingSheetNames.includes(sheetTitle)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst options = this.getNodeParameter('options', i, {});\n\t\tconst properties = { ...options };\n\t\tproperties.title = sheetTitle;\n\n\t\tif (options.tabColor) {\n\t\t\tconst { red, green, blue } = hexToRgb(options.tabColor as string)!;\n\t\t\tproperties.tabColor = { red: red / 255, green: green / 255, blue: blue / 255 };\n\t\t}\n\n\t\tconst requests = [\n\t\t\t{\n\t\t\t\taddSheet: {\n\t\t\t\t\tproperties,\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\n\t\tresponseData = await apiRequest.call(\n\t\t\tthis,\n\t\t\t'POST',\n\t\t\t`/v4/spreadsheets/${sheetName}:batchUpdate`,\n\t\t\t{ requests },\n\t\t);\n\n\t\t// simplify response\n\t\tObject.assign(responseData, responseData.replies[0].addSheet.properties);\n\t\tdelete responseData.replies;\n\n\t\texistingSheetNames.push(sheetTitle);\n\n\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\twrapData(responseData as IDataObject[]),\n\t\t\t{ itemData: { item: i } },\n\t\t);\n\n\t\treturnData.push(...executionData);\n\t}\n\treturn returnData;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,uBAAyB;AAGzB,0BAAgD;AAChD,uBAA2B;AAEpB,MAAM,cAA+B;AAAA,EAC3C;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,SAAS;AAAA,IACT,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,UAAU,CAAC,OAAO;AAAA,QAClB,WAAW,CAAC,QAAQ;AAAA,MACrB;AAAA,IACD;AAAA,IACA,aAAa;AAAA,EACd;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,SAAS,CAAC;AAAA,IACV,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,UAAU,CAAC,OAAO;AAAA,QAClB,WAAW,CAAC,QAAQ;AAAA,MACrB;AAAA,IACD;AAAA,IACA,SAAS;AAAA,MACR;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aAAa;AAAA,MACd;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aAAa;AAAA,MACd;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aACC;AAAA,MACF;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aAAa;AAAA,MACd;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aAAa;AAAA,MACd;AAAA,IACD;AAAA,EACD;AACD;AAEA,eAAsB,QAErB,OACA,WACgC;AAChC,MAAI;AACJ,QAAM,aAAmC,CAAC;AAC1C,QAAM,QAAQ,KAAK,aAAa;AAEhC,QAAM,qBAAqB,UAAM,2CAAsB,KAAK;AAE5D,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACtC,UAAM,aAAa,KAAK,iBAAiB,SAAS,GAAG,CAAC,CAAC;AAEvD,QAAI,mBAAmB,SAAS,UAAU,GAAG;AAC5C;AAAA,IACD;AAEA,UAAM,UAAU,KAAK,iBAAiB,WAAW,GAAG,CAAC,CAAC;AACtD,UAAM,aAAa,EAAE,GAAG,QAAQ;AAChC,eAAW,QAAQ;AAEnB,QAAI,QAAQ,UAAU;AACrB,YAAM,EAAE,KAAK,OAAO,KAAK,QAAI,8BAAS,QAAQ,QAAkB;AAChE,iBAAW,WAAW,EAAE,KAAK,MAAM,KAAK,OAAO,QAAQ,KAAK,MAAM,OAAO,IAAI;AAAA,IAC9E;AAEA,UAAM,WAAW;AAAA,MAChB;AAAA,QACC,UAAU;AAAA,UACT;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAEA,mBAAe,MAAM,4BAAW;AAAA,MAC/B;AAAA,MACA;AAAA,MACA,oBAAoB,SAAS;AAAA,MAC7B,EAAE,SAAS;AAAA,IACZ;AAGA,WAAO,OAAO,cAAc,aAAa,QAAQ,CAAC,EAAE,SAAS,UAAU;AACvE,WAAO,aAAa;AAEpB,uBAAmB,KAAK,UAAU;AAElC,UAAM,gBAAgB,KAAK,QAAQ;AAAA,UAClC,2BAAS,YAA6B;AAAA,MACtC,EAAE,UAAU,EAAE,MAAM,EAAE,EAAE;AAAA,IACzB;AAEA,eAAW,KAAK,GAAG,aAAa;AAAA,EACjC;AACA,SAAO;AACR;","names":[]}