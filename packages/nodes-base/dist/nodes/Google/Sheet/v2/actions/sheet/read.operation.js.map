{"version":3,"sources":["../../../../../../../nodes/Google/Sheet/v2/actions/sheet/read.operation.ts"],"sourcesContent":["import type { IExecuteFunctions, INodeExecutionData, INodeProperties } from 'n8n-workflow';\n\nimport { dataLocationOnSheet, outputFormatting } from './commonDescription';\nimport type { GoogleSheet } from '../../helpers/GoogleSheet';\nimport type { SheetProperties } from '../../helpers/GoogleSheets.types';\nimport { untilSheetSelected } from '../../helpers/GoogleSheets.utils';\nimport { readSheet } from '../utils/readOperation';\n\nconst combineFiltersOptions: INodeProperties = {\n\tdisplayName: 'Combine Filters',\n\tname: 'combineFilters',\n\ttype: 'options',\n\tdescription:\n\t\t'How to combine the conditions defined in \"Filters\": AND requires all conditions to be true, OR requires at least one condition to be true',\n\toptions: [\n\t\t{\n\t\t\tname: 'AND',\n\t\t\tvalue: 'AND',\n\t\t\tdescription: 'Only rows that meet all the conditions are selected',\n\t\t},\n\t\t{\n\t\t\tname: 'OR',\n\t\t\tvalue: 'OR',\n\t\t\tdescription: 'Rows that meet at least one condition are selected',\n\t\t},\n\t],\n\tdefault: 'AND',\n};\n\nexport const readFilter: INodeProperties = {\n\tdisplayName: 'Filters',\n\tname: 'filtersUI',\n\tplaceholder: 'Add Filter',\n\ttype: 'fixedCollection',\n\ttypeOptions: {\n\t\tmultipleValueButtonText: 'Add Filter',\n\t\tmultipleValues: true,\n\t},\n\tdefault: {},\n\toptions: [\n\t\t{\n\t\t\tdisplayName: 'Filter',\n\t\t\tname: 'values',\n\t\t\tvalues: [\n\t\t\t\t{\n\t\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-display-name-wrong-for-dynamic-options\n\t\t\t\t\tdisplayName: 'Column',\n\t\t\t\t\tname: 'lookupColumn',\n\t\t\t\t\ttype: 'options',\n\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\tloadOptionsDependsOn: ['sheetName.value'],\n\t\t\t\t\t\tloadOptionsMethod: 'getSheetHeaderRowWithGeneratedColumnNames',\n\t\t\t\t\t},\n\t\t\t\t\tdefault: '',\n\t\t\t\t\tdescription:\n\t\t\t\t\t\t'Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdisplayName: 'Value',\n\t\t\t\t\tname: 'lookupValue',\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdefault: '',\n\t\t\t\t\thint: 'The column must have this value to be matched',\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t],\n};\n\nexport const description: SheetProperties = [\n\t{\n\t\t...readFilter,\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['sheet'],\n\t\t\t\toperation: ['read'],\n\t\t\t},\n\t\t\thide: {\n\t\t\t\t...untilSheetSelected,\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\t...combineFiltersOptions,\n\t\tdefault: 'OR',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\t'@version': [{ _cnd: { lt: 4.3 } }],\n\t\t\t\tresource: ['sheet'],\n\t\t\t\toperation: ['read'],\n\t\t\t},\n\t\t\thide: {\n\t\t\t\t...untilSheetSelected,\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\t...combineFiltersOptions,\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\t'@version': [{ _cnd: { gte: 4.3 } }],\n\t\t\t\tresource: ['sheet'],\n\t\t\t\toperation: ['read'],\n\t\t\t},\n\t\t\thide: {\n\t\t\t\t...untilSheetSelected,\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tdisplayName: 'Options',\n\t\tname: 'options',\n\t\ttype: 'collection',\n\t\tplaceholder: 'Add option',\n\t\tdefault: {},\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['sheet'],\n\t\t\t\toperation: ['read'],\n\t\t\t},\n\t\t\thide: {\n\t\t\t\t...untilSheetSelected,\n\t\t\t},\n\t\t},\n\t\toptions: [\n\t\t\tdataLocationOnSheet,\n\t\t\toutputFormatting,\n\t\t\t{\n\t\t\t\tdisplayName: 'Return only First Matching Row',\n\t\t\t\tname: 'returnFirstMatch',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\tdescription:\n\t\t\t\t\t'Whether to select the first row of the sheet or the first matching row (if filters are set)',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\t'@version': [{ _cnd: { gte: 4.5 } }],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'When Filter Has Multiple Matches',\n\t\t\t\tname: 'returnAllMatches',\n\t\t\t\ttype: 'options',\n\t\t\t\tdefault: 'returnFirstMatch',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Return First Match',\n\t\t\t\t\t\tvalue: 'returnFirstMatch',\n\t\t\t\t\t\tdescription: 'Return only the first match',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Return All Matches',\n\t\t\t\t\t\tvalue: 'returnAllMatches',\n\t\t\t\t\t\tdescription: 'Return all values that match',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdescription:\n\t\t\t\t\t'By default only the first result gets returned, Set to \"Return All Matches\" to get multiple matches',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\t'@version': [{ _cnd: { lt: 4.5 } }],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n];\n\nexport async function execute(\n\tthis: IExecuteFunctions,\n\tsheet: GoogleSheet,\n\tsheetName: string,\n): Promise<INodeExecutionData[]> {\n\tconst items = this.getInputData();\n\tconst nodeVersion = this.getNode().typeVersion;\n\tlet length = 1;\n\n\tif (nodeVersion > 4.1) {\n\t\tlength = items.length;\n\t}\n\n\tlet returnData: INodeExecutionData[] = [];\n\n\tfor (let itemIndex = 0; itemIndex < length; itemIndex++) {\n\t\treturnData = await readSheet.call(\n\t\t\tthis,\n\t\t\tsheet,\n\t\t\tsheetName,\n\t\t\titemIndex,\n\t\t\treturnData,\n\t\t\tnodeVersion,\n\t\t\titems,\n\t\t);\n\t}\n\n\treturn returnData;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,+BAAsD;AAGtD,0BAAmC;AACnC,2BAA0B;AAE1B,MAAM,wBAAyC;AAAA,EAC9C,aAAa;AAAA,EACb,MAAM;AAAA,EACN,MAAM;AAAA,EACN,aACC;AAAA,EACD,SAAS;AAAA,IACR;AAAA,MACC,MAAM;AAAA,MACN,OAAO;AAAA,MACP,aAAa;AAAA,IACd;AAAA,IACA;AAAA,MACC,MAAM;AAAA,MACN,OAAO;AAAA,MACP,aAAa;AAAA,IACd;AAAA,EACD;AAAA,EACA,SAAS;AACV;AAEO,MAAM,aAA8B;AAAA,EAC1C,aAAa;AAAA,EACb,MAAM;AAAA,EACN,aAAa;AAAA,EACb,MAAM;AAAA,EACN,aAAa;AAAA,IACZ,yBAAyB;AAAA,IACzB,gBAAgB;AAAA,EACjB;AAAA,EACA,SAAS,CAAC;AAAA,EACV,SAAS;AAAA,IACR;AAAA,MACC,aAAa;AAAA,MACb,MAAM;AAAA,MACN,QAAQ;AAAA,QACP;AAAA;AAAA,UAEC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,aAAa;AAAA,YACZ,sBAAsB,CAAC,iBAAiB;AAAA,YACxC,mBAAmB;AAAA,UACpB;AAAA,UACA,SAAS;AAAA,UACT,aACC;AAAA,QACF;AAAA,QACA;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,SAAS;AAAA,UACT,MAAM;AAAA,QACP;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;AAEO,MAAM,cAA+B;AAAA,EAC3C;AAAA,IACC,GAAG;AAAA,IACH,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,UAAU,CAAC,OAAO;AAAA,QAClB,WAAW,CAAC,MAAM;AAAA,MACnB;AAAA,MACA,MAAM;AAAA,QACL,GAAG;AAAA,MACJ;AAAA,IACD;AAAA,EACD;AAAA,EACA;AAAA,IACC,GAAG;AAAA,IACH,SAAS;AAAA,IACT,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,YAAY,CAAC,EAAE,MAAM,EAAE,IAAI,IAAI,EAAE,CAAC;AAAA,QAClC,UAAU,CAAC,OAAO;AAAA,QAClB,WAAW,CAAC,MAAM;AAAA,MACnB;AAAA,MACA,MAAM;AAAA,QACL,GAAG;AAAA,MACJ;AAAA,IACD;AAAA,EACD;AAAA,EACA;AAAA,IACC,GAAG;AAAA,IACH,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,YAAY,CAAC,EAAE,MAAM,EAAE,KAAK,IAAI,EAAE,CAAC;AAAA,QACnC,UAAU,CAAC,OAAO;AAAA,QAClB,WAAW,CAAC,MAAM;AAAA,MACnB;AAAA,MACA,MAAM;AAAA,QACL,GAAG;AAAA,MACJ;AAAA,IACD;AAAA,EACD;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,SAAS,CAAC;AAAA,IACV,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,UAAU,CAAC,OAAO;AAAA,QAClB,WAAW,CAAC,MAAM;AAAA,MACnB;AAAA,MACA,MAAM;AAAA,QACL,GAAG;AAAA,MACJ;AAAA,IACD;AAAA,IACA,SAAS;AAAA,MACR;AAAA,MACA;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aACC;AAAA,QACD,gBAAgB;AAAA,UACf,MAAM;AAAA,YACL,YAAY,CAAC,EAAE,MAAM,EAAE,KAAK,IAAI,EAAE,CAAC;AAAA,UACpC;AAAA,QACD;AAAA,MACD;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,SAAS;AAAA,UACR;AAAA,YACC,MAAM;AAAA,YACN,OAAO;AAAA,YACP,aAAa;AAAA,UACd;AAAA,UACA;AAAA,YACC,MAAM;AAAA,YACN,OAAO;AAAA,YACP,aAAa;AAAA,UACd;AAAA,QACD;AAAA,QACA,aACC;AAAA,QACD,gBAAgB;AAAA,UACf,MAAM;AAAA,YACL,YAAY,CAAC,EAAE,MAAM,EAAE,IAAI,IAAI,EAAE,CAAC;AAAA,UACnC;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;AAEA,eAAsB,QAErB,OACA,WACgC;AAChC,QAAM,QAAQ,KAAK,aAAa;AAChC,QAAM,cAAc,KAAK,QAAQ,EAAE;AACnC,MAAI,SAAS;AAEb,MAAI,cAAc,KAAK;AACtB,aAAS,MAAM;AAAA,EAChB;AAEA,MAAI,aAAmC,CAAC;AAExC,WAAS,YAAY,GAAG,YAAY,QAAQ,aAAa;AACxD,iBAAa,MAAM,+BAAU;AAAA,MAC5B;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACD;AAEA,SAAO;AACR;","names":[]}