{"version":3,"sources":["../../../../../../../nodes/Google/Sheet/v2/actions/sheet/commonDescription.ts"],"sourcesContent":["import type { INodeProperties } from 'n8n-workflow';\n\nexport const dataLocationOnSheet: INodeProperties = {\n\tdisplayName: 'Data Location on Sheet',\n\tname: 'dataLocationOnSheet',\n\ttype: 'fixedCollection',\n\tplaceholder: 'Select Range',\n\tdefault: { values: { rangeDefinition: 'detectAutomatically' } },\n\toptions: [\n\t\t{\n\t\t\tdisplayName: 'Values',\n\t\t\tname: 'values',\n\t\t\tvalues: [\n\t\t\t\t{\n\t\t\t\t\tdisplayName: 'Range Definition',\n\t\t\t\t\tname: 'rangeDefinition',\n\t\t\t\t\ttype: 'options',\n\t\t\t\t\toptions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'Detect Automatically',\n\t\t\t\t\t\t\tvalue: 'detectAutomatically',\n\t\t\t\t\t\t\tdescription: 'Automatically detect the data range',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'Specify Range (A1 Notation)',\n\t\t\t\t\t\t\tvalue: 'specifyRangeA1',\n\t\t\t\t\t\t\tdescription: 'Manually specify the data range',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'Specify Range (Rows)',\n\t\t\t\t\t\t\tvalue: 'specifyRange',\n\t\t\t\t\t\t\tdescription: 'Manually specify the data range',\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\tdefault: '',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdisplayName: 'Read Rows Until',\n\t\t\t\t\tname: 'readRowsUntil',\n\t\t\t\t\ttype: 'options',\n\t\t\t\t\tdefault: 'lastRowInSheet',\n\t\t\t\t\toptions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'First Empty Row',\n\t\t\t\t\t\t\tvalue: 'firstEmptyRow',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'Last Row In Sheet',\n\t\t\t\t\t\t\tvalue: 'lastRowInSheet',\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\trangeDefinition: ['detectAutomatically'],\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdisplayName: 'Header Row',\n\t\t\t\t\tname: 'headerRow',\n\t\t\t\t\ttype: 'number',\n\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\tminValue: 1,\n\t\t\t\t\t},\n\t\t\t\t\tdefault: 1,\n\t\t\t\t\tdescription: \"Index is relative to the set 'Range', first row index is 1\",\n\t\t\t\t\thint: 'Index of the row which contains the column names',\n\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\trangeDefinition: ['specifyRange'],\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdisplayName: 'First Data Row',\n\t\t\t\t\tname: 'firstDataRow',\n\t\t\t\t\ttype: 'number',\n\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\tminValue: 1,\n\t\t\t\t\t},\n\t\t\t\t\tdefault: 2,\n\t\t\t\t\tdescription: \"Index is relative to the set 'Range', first row index is 1\",\n\t\t\t\t\thint: 'Index of first row which contains the actual data',\n\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\trangeDefinition: ['specifyRange'],\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdisplayName: 'Range',\n\t\t\t\t\tname: 'range',\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdefault: '',\n\t\t\t\t\tplaceholder: 'A:Z',\n\t\t\t\t\tdescription:\n\t\t\t\t\t\t'The table range to read from or to append data to. See the Google <a href=\"https://developers.google.com/sheets/api/guides/values#writing\">documentation</a> for the details.',\n\t\t\t\t\thint: 'You can specify both the rows and the columns, e.g. C4:E7',\n\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\trangeDefinition: ['specifyRangeA1'],\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t],\n};\n\nexport const locationDefine: INodeProperties = {\n\tdisplayName: 'Data Location on Sheet',\n\tname: 'locationDefine',\n\ttype: 'fixedCollection',\n\tplaceholder: 'Select Range',\n\tdefault: { values: {} },\n\toptions: [\n\t\t{\n\t\t\tdisplayName: 'Values',\n\t\t\tname: 'values',\n\t\t\tvalues: [\n\t\t\t\t{\n\t\t\t\t\tdisplayName: 'Header Row',\n\t\t\t\t\tname: 'headerRow',\n\t\t\t\t\ttype: 'number',\n\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\tminValue: 1,\n\t\t\t\t\t},\n\t\t\t\t\tdefault: 1,\n\t\t\t\t\tdescription: \"Index is relative to the set 'Range', first row index is 1\",\n\t\t\t\t\thint: 'Index of the row which contains the column names',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdisplayName: 'First Data Row',\n\t\t\t\t\tname: 'firstDataRow',\n\t\t\t\t\ttype: 'number',\n\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\tminValue: 1,\n\t\t\t\t\t},\n\t\t\t\t\tdefault: 2,\n\t\t\t\t\tdescription: \"Index is relative to the set 'Range', first row index is 1\",\n\t\t\t\t\thint: 'Index of first row which contains the actual data',\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t],\n};\n\nexport const outputFormatting: INodeProperties = {\n\tdisplayName: 'Output Formatting',\n\tname: 'outputFormatting',\n\ttype: 'fixedCollection',\n\tplaceholder: 'Add Formatting',\n\tdefault: { values: { general: 'UNFORMATTED_VALUE', date: 'FORMATTED_STRING' } },\n\toptions: [\n\t\t{\n\t\t\tdisplayName: 'Values',\n\t\t\tname: 'values',\n\t\t\tvalues: [\n\t\t\t\t{\n\t\t\t\t\tdisplayName: 'General Formatting',\n\t\t\t\t\tname: 'general',\n\t\t\t\t\ttype: 'options',\n\t\t\t\t\toptions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-display-name-miscased\n\t\t\t\t\t\t\tname: 'Values (unformatted)',\n\t\t\t\t\t\t\tvalue: 'UNFORMATTED_VALUE',\n\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t'Numbers stay as numbers, but any currency signs or special formatting is lost',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-display-name-miscased\n\t\t\t\t\t\t\tname: 'Values (formatted)',\n\t\t\t\t\t\t\tvalue: 'FORMATTED_VALUE',\n\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t'Numbers are turned to text, and displayed as in Google Sheets (e.g. with commas or currency signs)',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'Formulas',\n\t\t\t\t\t\t\tvalue: 'FORMULA',\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\tdefault: '',\n\t\t\t\t\tdescription: 'Determines how values should be rendered in the output',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdisplayName: 'Date Formatting',\n\t\t\t\t\tname: 'date',\n\t\t\t\t\ttype: 'options',\n\t\t\t\t\tdefault: '',\n\t\t\t\t\toptions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'Formatted Text',\n\t\t\t\t\t\t\tvalue: 'FORMATTED_STRING',\n\t\t\t\t\t\t\tdescription: \"As displayed in Google Sheets, e.g. '01/01/2022'\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'Serial Number',\n\t\t\t\t\t\t\tvalue: 'SERIAL_NUMBER',\n\t\t\t\t\t\t\tdescription: 'A number representing the number of days since Dec 30, 1899',\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t],\n};\n\nexport const cellFormat: INodeProperties = {\n\tdisplayName: 'Cell Format',\n\tname: 'cellFormat',\n\ttype: 'options',\n\toptions: [\n\t\t{\n\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-display-name-miscased\n\t\t\tname: 'Let Google Sheets format',\n\t\t\tvalue: 'USER_ENTERED',\n\t\t\tdescription: 'Cells are styled as if you typed the values into Google Sheets directly',\n\t\t},\n\t\t{\n\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-display-name-miscased\n\t\t\tname: 'Let n8n format',\n\t\t\tvalue: 'RAW',\n\t\t\tdescription: 'Cells have the same types as the input data',\n\t\t},\n\t],\n\tdefault: 'USER_ENTERED',\n\tdescription: 'Determines how data should be interpreted',\n};\n\nexport const handlingExtraData: INodeProperties = {\n\t// eslint-disable-next-line n8n-nodes-base/node-param-display-name-miscased\n\tdisplayName: 'Handling extra fields in input',\n\tname: 'handlingExtraData',\n\ttype: 'options',\n\toptions: [\n\t\t{\n\t\t\tname: 'Insert in New Column(s)',\n\t\t\tvalue: 'insertInNewColumn',\n\t\t\tdescription: 'Create a new column for extra data',\n\t\t},\n\t\t{\n\t\t\tname: 'Ignore Them',\n\t\t\tvalue: 'ignoreIt',\n\t\t\tdescription: 'Ignore extra data',\n\t\t},\n\t\t{\n\t\t\tname: 'Error',\n\t\t\tvalue: 'error',\n\t\t\tdescription: 'Throw an error',\n\t\t},\n\t],\n\tdisplayOptions: {\n\t\tshow: {\n\t\t\t'/dataMode': ['autoMapInputData'],\n\t\t},\n\t},\n\tdefault: 'insertInNewColumn',\n\tdescription: \"What do to with fields that don't match any columns in the Google Sheet\",\n};\n\nexport const useAppendOption: INodeProperties = {\n\tdisplayName: 'Minimise API Calls',\n\tname: 'useAppend',\n\ttype: 'boolean',\n\tdefault: false,\n\thint: 'Use if your sheet has no gaps between rows or columns',\n\tdescription:\n\t\t'Whether to use append instead of update(default), this is more efficient but in some cases data might be misaligned',\n};\n"],"mappings":"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","names":[]}