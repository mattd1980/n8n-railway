{"version":3,"sources":["../../../../../../nodes/Google/BigQuery/v2/methods/loadOptions.ts"],"sourcesContent":["import type { IDataObject, ILoadOptionsFunctions, INodePropertyOptions } from 'n8n-workflow';\n\nimport { googleBigQueryApiRequest } from '../transport';\n\nexport async function getDatasets(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\tconst projectId = this.getNodeParameter('projectId', undefined, {\n\t\textractValue: true,\n\t});\n\tconst returnData: INodePropertyOptions[] = [];\n\tconst { datasets } = await googleBigQueryApiRequest.call(\n\t\tthis,\n\t\t'GET',\n\t\t`/v2/projects/${projectId}/datasets`,\n\t);\n\tfor (const dataset of datasets) {\n\t\treturnData.push({\n\t\t\tname: dataset.datasetReference.datasetId as string,\n\t\t\tvalue: dataset.datasetReference.datasetId,\n\t\t});\n\t}\n\treturn returnData;\n}\n\nexport async function getSchema(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\tconst projectId = this.getNodeParameter('projectId', undefined, {\n\t\textractValue: true,\n\t});\n\tconst datasetId = this.getNodeParameter('datasetId', undefined, {\n\t\textractValue: true,\n\t});\n\tconst tableId = this.getNodeParameter('tableId', undefined, {\n\t\textractValue: true,\n\t});\n\n\tconst returnData: INodePropertyOptions[] = [];\n\n\tconst { schema } = await googleBigQueryApiRequest.call(\n\t\tthis,\n\t\t'GET',\n\t\t`/v2/projects/${projectId}/datasets/${datasetId}/tables/${tableId}`,\n\t\t{},\n\t);\n\n\tfor (const field of schema.fields as IDataObject[]) {\n\t\treturnData.push({\n\t\t\tname: field.name as string,\n\t\t\tvalue: field.name as string,\n\n\t\t\tdescription:\n\t\t\t\t`type: ${field.type as string}` + (field.mode ? ` mode: ${field.mode as string}` : ''),\n\t\t});\n\t}\n\treturn returnData;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,uBAAyC;AAEzC,eAAsB,cAA0E;AAC/F,QAAM,YAAY,KAAK,iBAAiB,aAAa,QAAW;AAAA,IAC/D,cAAc;AAAA,EACf,CAAC;AACD,QAAM,aAAqC,CAAC;AAC5C,QAAM,EAAE,SAAS,IAAI,MAAM,0CAAyB;AAAA,IACnD;AAAA,IACA;AAAA,IACA,gBAAgB,SAAS;AAAA,EAC1B;AACA,aAAW,WAAW,UAAU;AAC/B,eAAW,KAAK;AAAA,MACf,MAAM,QAAQ,iBAAiB;AAAA,MAC/B,OAAO,QAAQ,iBAAiB;AAAA,IACjC,CAAC;AAAA,EACF;AACA,SAAO;AACR;AAEA,eAAsB,YAAwE;AAC7F,QAAM,YAAY,KAAK,iBAAiB,aAAa,QAAW;AAAA,IAC/D,cAAc;AAAA,EACf,CAAC;AACD,QAAM,YAAY,KAAK,iBAAiB,aAAa,QAAW;AAAA,IAC/D,cAAc;AAAA,EACf,CAAC;AACD,QAAM,UAAU,KAAK,iBAAiB,WAAW,QAAW;AAAA,IAC3D,cAAc;AAAA,EACf,CAAC;AAED,QAAM,aAAqC,CAAC;AAE5C,QAAM,EAAE,OAAO,IAAI,MAAM,0CAAyB;AAAA,IACjD;AAAA,IACA;AAAA,IACA,gBAAgB,SAAS,aAAa,SAAS,WAAW,OAAO;AAAA,IACjE,CAAC;AAAA,EACF;AAEA,aAAW,SAAS,OAAO,QAAyB;AACnD,eAAW,KAAK;AAAA,MACf,MAAM,MAAM;AAAA,MACZ,OAAO,MAAM;AAAA,MAEb,aACC,SAAS,MAAM,IAAc,MAAM,MAAM,OAAO,UAAU,MAAM,IAAc,KAAK;AAAA,IACrF,CAAC;AAAA,EACF;AACA,SAAO;AACR;","names":[]}