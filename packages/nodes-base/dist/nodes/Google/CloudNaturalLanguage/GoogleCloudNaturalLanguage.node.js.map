{"version":3,"sources":["../../../../nodes/Google/CloudNaturalLanguage/GoogleCloudNaturalLanguage.node.ts"],"sourcesContent":["import {\n\tNodeConnectionTypes,\n\ttype IExecuteFunctions,\n\ttype INodeExecutionData,\n\ttype INodeType,\n\ttype INodeTypeDescription,\n} from 'n8n-workflow';\n\nimport { googleApiRequest } from './GenericFunctions';\nimport type { IData } from './Interface';\n\nexport class GoogleCloudNaturalLanguage implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Google Cloud Natural Language',\n\t\tname: 'googleCloudNaturalLanguage',\n\t\t// eslint-disable-next-line n8n-nodes-base/node-class-description-icon-not-svg\n\t\ticon: 'file:googlecloudnaturallanguage.png',\n\t\tgroup: ['input', 'output'],\n\t\tversion: 1,\n\t\tdescription: 'Consume Google Cloud Natural Language API',\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdefaults: {\n\t\t\tname: 'Google Cloud Natural Language',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'googleCloudNaturalLanguageOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Document',\n\t\t\t\t\t\tvalue: 'document',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'document',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['document'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Analyze Sentiment',\n\t\t\t\t\t\tvalue: 'analyzeSentiment',\n\t\t\t\t\t\taction: 'Analyze sentiment',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'analyzeSentiment',\n\t\t\t},\n\t\t\t// ----------------------------------\n\t\t\t//         All\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Source',\n\t\t\t\tname: 'source',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Content',\n\t\t\t\t\t\tvalue: 'content',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Google Cloud Storage URI',\n\t\t\t\t\t\tvalue: 'gcsContentUri',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'content',\n\t\t\t\tdescription:\n\t\t\t\t\t'The source of the document: a string containing the content or a Google Cloud Storage URI',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['analyzeSentiment'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Content',\n\t\t\t\tname: 'content',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tdescription:\n\t\t\t\t\t'The content of the input in string format. Cloud audit logging exempt since it is based on user data.',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['analyzeSentiment'],\n\t\t\t\t\t\tsource: ['content'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Google Cloud Storage URI',\n\t\t\t\tname: 'gcsContentUri',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tdescription:\n\t\t\t\t\t'The Google Cloud Storage URI where the file content is located. This URI must be of the form: <code>gs://bucket_name/object_name</code>. For more details, see <a href=\"https://cloud.google.com/storage/docs/reference-uris.\">reference</a>.',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['analyzeSentiment'],\n\t\t\t\t\t\tsource: ['gcsContentUri'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Options',\n\t\t\t\tname: 'options',\n\t\t\t\ttype: 'collection',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['analyzeSentiment'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: {},\n\t\t\t\tplaceholder: 'Add option',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Document Type',\n\t\t\t\t\t\tname: 'documentType',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'HTML',\n\t\t\t\t\t\t\t\tvalue: 'HTML',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Plain Text',\n\t\t\t\t\t\t\t\tvalue: 'PLAIN_TEXT',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: 'PLAIN_TEXT',\n\t\t\t\t\t\tdescription: 'The type of input document',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Encoding Type',\n\t\t\t\t\t\tname: 'encodingType',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'None',\n\t\t\t\t\t\t\t\tvalue: 'NONE',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'UTF-8',\n\t\t\t\t\t\t\t\tvalue: 'UTF8',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'UTF-16',\n\t\t\t\t\t\t\t\tvalue: 'UTF16',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'UTF-32',\n\t\t\t\t\t\t\t\tvalue: 'UTF32',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: 'UTF16',\n\t\t\t\t\t\tdescription: 'The encoding type used by the API to calculate sentence offsets',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Language',\n\t\t\t\t\t\tname: 'language',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Arabic',\n\t\t\t\t\t\t\t\tvalue: 'ar',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Chinese (Simplified)',\n\t\t\t\t\t\t\t\tvalue: 'zh',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Chinese (Traditional)',\n\t\t\t\t\t\t\t\tvalue: 'zh-Hant',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Dutch',\n\t\t\t\t\t\t\t\tvalue: 'nl',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'English',\n\t\t\t\t\t\t\t\tvalue: 'en',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'French',\n\t\t\t\t\t\t\t\tvalue: 'fr',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'German',\n\t\t\t\t\t\t\t\tvalue: 'de',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Indonesian',\n\t\t\t\t\t\t\t\tvalue: 'id',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Italian',\n\t\t\t\t\t\t\t\tvalue: 'it',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Japanese',\n\t\t\t\t\t\t\t\tvalue: 'ja',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Korean',\n\t\t\t\t\t\t\t\tvalue: 'ko',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Portuguese (Brazilian & Continental)',\n\t\t\t\t\t\t\t\tvalue: 'pt',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Spanish',\n\t\t\t\t\t\t\t\tvalue: 'es',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Thai',\n\t\t\t\t\t\t\t\tvalue: 'th',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Turkish',\n\t\t\t\t\t\t\t\tvalue: 'tr',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Vietnamese',\n\t\t\t\t\t\t\t\tvalue: 'vi',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: 'en',\n\t\t\t\t\t\tplaceholder: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'The language of the document (if not specified, the language is automatically detected). Both ISO and BCP-47 language codes are accepted.',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst length = items.length;\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\t\tconst responseData = [];\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tif (resource === 'document') {\n\t\t\t\tif (operation === 'analyzeSentiment') {\n\t\t\t\t\tconst source = this.getNodeParameter('source', i) as string;\n\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\tconst encodingType = (options.encodingType as string | undefined) || 'UTF16';\n\t\t\t\t\tconst documentType = (options.documentType as string | undefined) || 'PLAIN_TEXT';\n\n\t\t\t\t\tconst body: IData = {\n\t\t\t\t\t\tdocument: {\n\t\t\t\t\t\t\ttype: documentType,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tencodingType,\n\t\t\t\t\t};\n\n\t\t\t\t\tif (source === 'content') {\n\t\t\t\t\t\tconst content = this.getNodeParameter('content', i) as string;\n\t\t\t\t\t\tbody.document.content = content;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst gcsContentUri = this.getNodeParameter('gcsContentUri', i) as string;\n\t\t\t\t\t\tbody.document.gcsContentUri = gcsContentUri;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (options.language) {\n\t\t\t\t\t\tbody.document.language = options.language as string;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst response = await googleApiRequest.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t'/v1/documents:analyzeSentiment',\n\t\t\t\t\t\tbody,\n\t\t\t\t\t);\n\t\t\t\t\tresponseData.push(response);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn [this.helpers.returnJsonArray(responseData)];\n\t}\n}\n"],"mappings":"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","names":[]}