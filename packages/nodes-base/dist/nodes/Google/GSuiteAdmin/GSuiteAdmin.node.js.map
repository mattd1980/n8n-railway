{"version":3,"sources":["../../../../nodes/Google/GSuiteAdmin/GSuiteAdmin.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport { deviceFields, deviceOperations } from './DeviceDescription';\nimport { googleApiRequest, googleApiRequestAllItems } from './GenericFunctions';\nimport { groupFields, groupOperations } from './GroupDescripion';\nimport { searchDevices, searchGroups, searchUsers } from './SearchFunctions';\nimport { userFields, userOperations } from './UserDescription';\n\nexport class GSuiteAdmin implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Google Workspace Admin',\n\t\tname: 'gSuiteAdmin',\n\t\ticon: 'file:gSuiteAdmin.svg',\n\t\tgroup: ['input'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume Google Workspace Admin API',\n\t\tdefaults: {\n\t\t\tname: 'Google Workspace Admin',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'gSuiteAdminOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'ChromeOS Device',\n\t\t\t\t\t\tvalue: 'device',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Group',\n\t\t\t\t\t\tvalue: 'group',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'User',\n\t\t\t\t\t\tvalue: 'user',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'user',\n\t\t\t},\n\t\t\t...deviceOperations,\n\t\t\t...deviceFields,\n\t\t\t...groupOperations,\n\t\t\t...groupFields,\n\t\t\t...userOperations,\n\t\t\t...userFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\tasync getDomains(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst domains = (await googleApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'domains',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/directory/v1/customer/my_customer/domains',\n\t\t\t\t)) as Array<{\n\t\t\t\t\tdomainName: string;\n\t\t\t\t}>;\n\t\t\t\tfor (const domain of domains) {\n\t\t\t\t\tconst domainName = domain.domainName;\n\t\t\t\t\tconst domainId = domain.domainName;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: domainName,\n\t\t\t\t\t\tvalue: domainId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\tasync getSchemas(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst schemas = (await googleApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'schemas',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/directory/v1/customer/my_customer/schemas',\n\t\t\t\t)) as Array<{\n\t\t\t\t\tdisplayName: string;\n\t\t\t\t\tschemaName: string;\n\t\t\t\t}>;\n\t\t\t\treturn schemas.map((schema: { schemaName: string; displayName: string }) => ({\n\t\t\t\t\tname: schema.displayName || schema.schemaName,\n\t\t\t\t\tvalue: schema.schemaName,\n\t\t\t\t}));\n\t\t\t},\n\t\t\tasync getOrgUnits(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst orgUnits = (await googleApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/directory/v1/customer/my_customer/orgunits',\n\t\t\t\t\t{},\n\t\t\t\t\t{ orgUnitPath: '/', type: 'all' },\n\t\t\t\t)) as {\n\t\t\t\t\torganizationUnits: Array<{\n\t\t\t\t\t\tname: string;\n\t\t\t\t\t\torgUnitPath: string;\n\t\t\t\t\t}>;\n\t\t\t\t};\n\n\t\t\t\tfor (const unit of orgUnits.organizationUnits) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: unit.name,\n\t\t\t\t\t\tvalue: unit.orgUnitPath,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t\tlistSearch: {\n\t\t\tsearchDevices,\n\t\t\tsearchGroups,\n\t\t\tsearchUsers,\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst length = items.length;\n\t\tlet responseData;\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tconst qs: IDataObject = {};\n\n\t\t\ttry {\n\t\t\t\tif (resource === 'device') {\n\t\t\t\t\t//https://developers.google.com/admin-sdk/directory/v1/customer/my_customer/devices/chromeos/deviceId\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst deviceId = this.getNodeParameter('deviceId', i, undefined, {\n\t\t\t\t\t\t\textractValue: true,\n\t\t\t\t\t\t}) as string;\n\t\t\t\t\t\tconst output = this.getNodeParameter('projection', 1);\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/directory/v1/customer/my_customer/devices/chromeos/${deviceId}?projection=${output}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\t//https://developers.google.com/admin-sdk/directory/reference/rest/v1/chromeosdevices/list\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst output = this.getNodeParameter('projection', 1);\n\t\t\t\t\t\tconst includeChildren = this.getNodeParameter('includeChildOrgunits', i);\n\t\t\t\t\t\tconst filter = this.getNodeParameter('filter', i, {}) as {\n\t\t\t\t\t\t\tquery?: string;\n\t\t\t\t\t\t\torgUnitPath?: string;\n\t\t\t\t\t\t};\n\t\t\t\t\t\tconst sort = this.getNodeParameter('sort', i, {}) as {\n\t\t\t\t\t\t\tsortRules?: {\n\t\t\t\t\t\t\t\torderBy?: string;\n\t\t\t\t\t\t\t\tsortOrder?: string;\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tqs.projection = output;\n\t\t\t\t\t\tqs.includeChildOrgunits = includeChildren;\n\n\t\t\t\t\t\tif (qs.customer === undefined) {\n\t\t\t\t\t\t\tqs.customer = 'my_customer';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (filter.orgUnitPath) {\n\t\t\t\t\t\t\tqs.orgUnitPath = filter.orgUnitPath;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (filter.query) {\n\t\t\t\t\t\t\tqs.query = filter.query.trim();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (sort.sortRules) {\n\t\t\t\t\t\t\tconst { orderBy, sortOrder } = sort.sortRules;\n\t\t\t\t\t\t\tif (orderBy) {\n\t\t\t\t\t\t\t\tqs.orderBy = orderBy;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (sortOrder) {\n\t\t\t\t\t\t\t\tqs.sortOrder = sortOrder;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tqs.maxResults = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/directory/v1/customer/${qs.customer}/devices/chromeos/`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (!Array.isArray(responseData) || responseData.length === 0) {\n\t\t\t\t\t\t\treturn [this.helpers.returnJsonArray({})];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [this.helpers.returnJsonArray(responseData)];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst deviceId = this.getNodeParameter('deviceId', i, undefined, {\n\t\t\t\t\t\t\textractValue: true,\n\t\t\t\t\t\t}) as string;\n\t\t\t\t\t\tconst updateOptions = this.getNodeParameter('updateOptions', 1);\n\n\t\t\t\t\t\tObject.assign(qs, updateOptions);\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t\t`/directory/v1/customer/my_customer/devices/chromeos/${deviceId}`,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'changeStatus') {\n\t\t\t\t\t\tconst deviceId = this.getNodeParameter('deviceId', i, undefined, {\n\t\t\t\t\t\t\textractValue: true,\n\t\t\t\t\t\t}) as string;\n\t\t\t\t\t\tconst action = this.getNodeParameter('action', 1);\n\n\t\t\t\t\t\tqs.action = action;\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/directory/v1/customer/my_customer/devices/chromeos/${deviceId}/action`,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'group') {\n\t\t\t\t\t//https://developers.google.com/admin-sdk/directory/v1/reference/groups/insert\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst name = this.getNodeParameter('name', i) as string;\n\t\t\t\t\t\tconst email = this.getNodeParameter('email', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\temail,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tObject.assign(body, additionalFields);\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(this, 'POST', '/directory/v1/groups', body);\n\t\t\t\t\t}\n\n\t\t\t\t\t//https://developers.google.com/admin-sdk/directory/v1/reference/groups/delete\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst groupId = this.getNodeParameter('groupId', i, undefined, {\n\t\t\t\t\t\t\textractValue: true,\n\t\t\t\t\t\t}) as string;\n\n\t\t\t\t\t\tawait googleApiRequest.call(this, 'DELETE', `/directory/v1/groups/${groupId}`, {});\n\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\n\t\t\t\t\t//https://developers.google.com/admin-sdk/directory/v1/reference/groups/get\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst groupId = this.getNodeParameter('groupId', i, undefined, {\n\t\t\t\t\t\t\textractValue: true,\n\t\t\t\t\t\t}) as string;\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/directory/v1/groups/${groupId}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developers.google.com/admin-sdk/directory/v1/reference/groups/list\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst filter = this.getNodeParameter('filter', i, {}) as {\n\t\t\t\t\t\t\tcustomer?: string;\n\t\t\t\t\t\t\tdomain?: string;\n\t\t\t\t\t\t\tquery?: string;\n\t\t\t\t\t\t\tuserId?: string;\n\t\t\t\t\t\t};\n\t\t\t\t\t\tconst sort = this.getNodeParameter('sort', i, {}) as {\n\t\t\t\t\t\t\tsortRules?: {\n\t\t\t\t\t\t\t\torderBy?: string;\n\t\t\t\t\t\t\t\tsortOrder?: string;\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (filter.customer) {\n\t\t\t\t\t\t\tqs.customer = filter.customer;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (filter.domain) {\n\t\t\t\t\t\t\tqs.domain = filter.domain;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (filter.query) {\n\t\t\t\t\t\t\tconst query = filter.query.trim();\n\n\t\t\t\t\t\t\tconst regex = /^(name|email):\\S+$/;\n\t\t\t\t\t\t\tif (!regex.test(query)) {\n\t\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t\t'Invalid query format. Query must follow the format \"displayName:<value>\" or \"email:<value>\".',\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tqs.query = query;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (filter.userId) {\n\t\t\t\t\t\t\tqs.userId = filter.userId;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (sort.sortRules) {\n\t\t\t\t\t\t\tconst { orderBy, sortOrder } = sort.sortRules;\n\t\t\t\t\t\t\tif (orderBy) {\n\t\t\t\t\t\t\t\tqs.orderBy = orderBy;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (sortOrder) {\n\t\t\t\t\t\t\t\tqs.sortOrder = sortOrder;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!qs.customer) {\n\t\t\t\t\t\t\tqs.customer = 'my_customer';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tqs.maxResults = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await googleApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'groups',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/directory/v1/groups',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.maxResults = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/directory/v1/groups',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.groups || [];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t//https://developers.google.com/admin-sdk/directory/v1/reference/groups/update\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst groupId = this.getNodeParameter('groupId', i, undefined, {\n\t\t\t\t\t\t\textractValue: true,\n\t\t\t\t\t\t}) as string;\n\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\n\t\t\t\t\t\tconst body: IDataObject = {};\n\n\t\t\t\t\t\tObject.assign(body, updateFields);\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t\t`/directory/v1/groups/${groupId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'user') {\n\t\t\t\t\t//https://developers.google.com/admin-sdk/directory/reference/rest/v1/members/insert\n\t\t\t\t\tif (operation === 'addToGroup') {\n\t\t\t\t\t\tconst groupId = this.getNodeParameter('groupId', i, undefined, {\n\t\t\t\t\t\t\textractValue: true,\n\t\t\t\t\t\t}) as string;\n\t\t\t\t\t\tconst userId = this.getNodeParameter('userId', i, undefined, {\n\t\t\t\t\t\t\textractValue: true,\n\t\t\t\t\t\t}) as string;\n\n\t\t\t\t\t\tlet userEmail: string | undefined;\n\n\t\t\t\t\t\t// If the user ID is not already an email, fetch the user details\n\t\t\t\t\t\tif (!userId.includes('@')) {\n\t\t\t\t\t\t\tconst userDetails = (await googleApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/directory/v1/users/${userId}`,\n\t\t\t\t\t\t\t)) as {\n\t\t\t\t\t\t\t\tprimaryEmail: string;\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tuserEmail = userDetails.primaryEmail;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tuserEmail = userId;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!userEmail) {\n\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t'Unable to determine the user email for adding to the group',\n\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\temail: userEmail,\n\t\t\t\t\t\t\trole: 'MEMBER',\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tawait googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/directory/v1/groups/${groupId}/members`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData = { added: true };\n\t\t\t\t\t}\n\n\t\t\t\t\t//https://developers.google.com/admin-sdk/directory/v1/reference/users/insert\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst domain = this.getNodeParameter('domain', i) as string;\n\t\t\t\t\t\tconst firstName = this.getNodeParameter('firstName', i) as string;\n\t\t\t\t\t\tconst lastName = this.getNodeParameter('lastName', i) as string;\n\t\t\t\t\t\tconst password = this.getNodeParameter('password', i) as string;\n\t\t\t\t\t\tconst username = this.getNodeParameter('username', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\t\tfamilyName: lastName,\n\t\t\t\t\t\t\t\tgivenName: firstName,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpassword,\n\t\t\t\t\t\t\tprimaryEmail: `${username}@${domain}`,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (!username) {\n\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), \"The parameter 'Username' is empty\", {\n\t\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t\t\tdescription: \"Please fill in the 'Username' parameter to create the user\",\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.phoneUi) {\n\t\t\t\t\t\t\tbody.phones = (additionalFields.phoneUi as IDataObject).phoneValues as IDataObject[];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.emailUi) {\n\t\t\t\t\t\t\tbody.emails = (additionalFields.emailUi as IDataObject).emailValues as IDataObject[];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.roles) {\n\t\t\t\t\t\t\tconst roles = additionalFields.roles as string[];\n\t\t\t\t\t\t\tbody.roles = {\n\t\t\t\t\t\t\t\tsuperAdmin: roles.includes('superAdmin'),\n\t\t\t\t\t\t\t\tgroupsAdmin: roles.includes('groupsAdmin'),\n\t\t\t\t\t\t\t\tgroupsReader: roles.includes('groupsReader'),\n\t\t\t\t\t\t\t\tgroupsEditor: roles.includes('groupsEditor'),\n\t\t\t\t\t\t\t\tuserManagement: roles.includes('userManagement'),\n\t\t\t\t\t\t\t\thelpDeskAdmin: roles.includes('helpDeskAdmin'),\n\t\t\t\t\t\t\t\tservicesAdmin: roles.includes('servicesAdmin'),\n\t\t\t\t\t\t\t\tinventoryReportingAdmin: roles.includes('inventoryReportingAdmin'),\n\t\t\t\t\t\t\t\tstorageAdmin: roles.includes('storageAdmin'),\n\t\t\t\t\t\t\t\tdirectorySyncAdmin: roles.includes('directorySyncAdmin'),\n\t\t\t\t\t\t\t\tmobileAdmin: roles.includes('mobileAdmin'),\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.customFields) {\n\t\t\t\t\t\t\tconst customFields = (additionalFields.customFields as IDataObject)\n\t\t\t\t\t\t\t\t.fieldValues as IDataObject[];\n\t\t\t\t\t\t\tconst customSchemas: IDataObject = {};\n\t\t\t\t\t\t\tcustomFields.forEach((field) => {\n\t\t\t\t\t\t\t\tconst { schemaName, fieldName, value } = field as {\n\t\t\t\t\t\t\t\t\tschemaName: string;\n\t\t\t\t\t\t\t\t\tfieldName: string;\n\t\t\t\t\t\t\t\t\tvalue: string;\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\tif (!schemaName || !fieldName || !value) {\n\t\t\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'Invalid custom field data', {\n\t\t\t\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t\t\t\t\tdescription: 'Schema name, field name, and value are required.',\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tcustomSchemas[schemaName] ??= {};\n\t\t\t\t\t\t\t\t(customSchemas[schemaName] as IDataObject)[fieldName] = value;\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tif (Object.keys(customSchemas).length > 0) {\n\t\t\t\t\t\t\t\tbody.customSchemas = customSchemas;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/directory/v1/users',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\t//https://developers.google.com/admin-sdk/directory/v1/reference/users/delete\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst userId = this.getNodeParameter('userId', i, undefined, {\n\t\t\t\t\t\t\textractValue: true,\n\t\t\t\t\t\t}) as string;\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/directory/v1/users/${userId}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData = { deleted: true };\n\t\t\t\t\t}\n\n\t\t\t\t\t//https://developers.google.com/admin-sdk/directory/v1/reference/users/get\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst userId = this.getNodeParameter('userId', i, undefined, {\n\t\t\t\t\t\t\textractValue: true,\n\t\t\t\t\t\t}) as string;\n\n\t\t\t\t\t\tconst output = this.getNodeParameter('output', i);\n\t\t\t\t\t\tconst projection = this.getNodeParameter('projection', i);\n\t\t\t\t\t\tconst fields = this.getNodeParameter('fields', i, []) as string[];\n\n\t\t\t\t\t\tif (projection) {\n\t\t\t\t\t\t\tqs.projection = projection;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (projection === 'custom' && qs.customFieldMask) {\n\t\t\t\t\t\t\tqs.customFieldMask = (qs.customFieldMask as string[]).join(',');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (output === 'select') {\n\t\t\t\t\t\t\tif (!fields.includes('id')) {\n\t\t\t\t\t\t\t\tfields.push('id');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tqs.fields = fields.join(',');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/directory/v1/users/${userId}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (output === 'simplified') {\n\t\t\t\t\t\t\tresponseData = {\n\t\t\t\t\t\t\t\tkind: responseData.kind,\n\t\t\t\t\t\t\t\tid: responseData.id,\n\t\t\t\t\t\t\t\tprimaryEmail: responseData.primaryEmail,\n\t\t\t\t\t\t\t\tname: responseData.name,\n\t\t\t\t\t\t\t\tisAdmin: responseData.isAdmin,\n\t\t\t\t\t\t\t\tlastLoginTime: responseData.lastLoginTime,\n\t\t\t\t\t\t\t\tcreationTime: responseData.creationTime,\n\t\t\t\t\t\t\t\tsuspended: responseData.suspended,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t//https://developers.google.com/admin-sdk/directory/v1/reference/users/list\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst output = this.getNodeParameter('output', i);\n\t\t\t\t\t\tconst fields = this.getNodeParameter('fields', i, []) as string[];\n\t\t\t\t\t\tconst projection = this.getNodeParameter('projection', i) as string;\n\t\t\t\t\t\tconst filter = this.getNodeParameter('filter', i, {}) as {\n\t\t\t\t\t\t\tcustomer?: string;\n\t\t\t\t\t\t\tdomain?: string;\n\t\t\t\t\t\t\tquery?: string;\n\t\t\t\t\t\t\tshowDeleted?: boolean;\n\t\t\t\t\t\t};\n\t\t\t\t\t\tconst sort = this.getNodeParameter('sort', i, {}) as {\n\t\t\t\t\t\t\tsortRules?: {\n\t\t\t\t\t\t\t\torderBy?: string;\n\t\t\t\t\t\t\t\tsortOrder?: string;\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (filter.customer) {\n\t\t\t\t\t\t\tqs.customer = filter.customer;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (filter.domain) {\n\t\t\t\t\t\t\tqs.domain = filter.domain;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (filter.query) {\n\t\t\t\t\t\t\tqs.query = filter.query.trim();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (filter.showDeleted) {\n\t\t\t\t\t\t\tqs.showDeleted = filter.showDeleted ? 'true' : 'false';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (sort.sortRules) {\n\t\t\t\t\t\t\tconst { orderBy, sortOrder } = sort.sortRules;\n\t\t\t\t\t\t\tif (orderBy) {\n\t\t\t\t\t\t\t\tqs.orderBy = orderBy;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (sortOrder) {\n\t\t\t\t\t\t\t\tqs.sortOrder = sortOrder;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tqs.projection = projection;\n\t\t\t\t\t\tif (projection === 'custom' && qs.customFieldMask) {\n\t\t\t\t\t\t\tqs.customFieldMask = (qs.customFieldMask as string[]).join(',');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (output === 'select') {\n\t\t\t\t\t\t\tif (!fields.includes('id')) {\n\t\t\t\t\t\t\t\tfields.push('id');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tqs.fields = `users(${fields.join(',')})`;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!qs.customer) {\n\t\t\t\t\t\t\tqs.customer = 'my_customer';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await googleApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'users',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/directory/v1/users',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.maxResults = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/directory/v1/users',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tresponseData = responseData.users;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (output === 'simplified') {\n\t\t\t\t\t\t\tresponseData = responseData.map((user: any) => ({\n\t\t\t\t\t\t\t\tkind: user.kind,\n\t\t\t\t\t\t\t\tid: user.id,\n\t\t\t\t\t\t\t\tprimaryEmail: user.primaryEmail,\n\t\t\t\t\t\t\t\tname: user.name,\n\t\t\t\t\t\t\t\tisAdmin: user.isAdmin,\n\t\t\t\t\t\t\t\tlastLoginTime: user.lastLoginTime,\n\t\t\t\t\t\t\t\tcreationTime: user.creationTime,\n\t\t\t\t\t\t\t\tsuspended: user.suspended,\n\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t//https://developers.google.com/admin-sdk/directory/reference/rest/v1/members/delete\n\t\t\t\t\tif (operation === 'removeFromGroup') {\n\t\t\t\t\t\tconst groupId = this.getNodeParameter('groupId', i, undefined, {\n\t\t\t\t\t\t\textractValue: true,\n\t\t\t\t\t\t}) as string;\n\t\t\t\t\t\tconst userId = this.getNodeParameter('userId', i, undefined, {\n\t\t\t\t\t\t\textractValue: true,\n\t\t\t\t\t\t}) as string;\n\n\t\t\t\t\t\tawait googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/directory/v1/groups/${groupId}/members/${userId}`,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData = { removed: true };\n\t\t\t\t\t}\n\n\t\t\t\t\t//https://developers.google.com/admin-sdk/directory/v1/reference/users/update\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst userId = this.getNodeParameter('userId', i, undefined, {\n\t\t\t\t\t\t\textractValue: true,\n\t\t\t\t\t\t}) as string;\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\n\t\t\t\t\t\tconst body: {\n\t\t\t\t\t\t\tname?: { givenName?: string; familyName?: string };\n\t\t\t\t\t\t\temails?: IDataObject[];\n\t\t\t\t\t\t\tprimaryEmail?: string;\n\t\t\t\t\t\t\tphones?: IDataObject[];\n\t\t\t\t\t\t\tsuspended?: boolean;\n\t\t\t\t\t\t\troles?: { [key: string]: boolean };\n\t\t\t\t\t\t\tcustomSchemas?: IDataObject;\n\t\t\t\t\t\t} = {};\n\n\t\t\t\t\t\tif (updateFields.firstName) {\n\t\t\t\t\t\t\tbody.name ??= {};\n\t\t\t\t\t\t\tbody.name.givenName = updateFields.firstName as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateFields.lastName) {\n\t\t\t\t\t\t\tbody.name ??= {};\n\t\t\t\t\t\t\tbody.name.familyName = updateFields.lastName as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateFields.phoneUi) {\n\t\t\t\t\t\t\tbody.phones = (updateFields.phoneUi as IDataObject).phoneValues as IDataObject[];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateFields.emailUi) {\n\t\t\t\t\t\t\tbody.emails = (updateFields.emailUi as IDataObject).emailValues as IDataObject[];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateFields.primaryEmail) {\n\t\t\t\t\t\t\tbody.primaryEmail = updateFields.primaryEmail as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateFields.suspendUi) {\n\t\t\t\t\t\t\tbody.suspended = updateFields.suspendUi as boolean;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateFields.roles) {\n\t\t\t\t\t\t\tconst roles = updateFields.roles as string[];\n\t\t\t\t\t\t\tbody.roles = {\n\t\t\t\t\t\t\t\tsuperAdmin: roles.includes('superAdmin'),\n\t\t\t\t\t\t\t\tgroupsAdmin: roles.includes('groupsAdmin'),\n\t\t\t\t\t\t\t\tgroupsReader: roles.includes('groupsReader'),\n\t\t\t\t\t\t\t\tgroupsEditor: roles.includes('groupsEditor'),\n\t\t\t\t\t\t\t\tuserManagement: roles.includes('userManagement'),\n\t\t\t\t\t\t\t\thelpDeskAdmin: roles.includes('helpDeskAdmin'),\n\t\t\t\t\t\t\t\tservicesAdmin: roles.includes('servicesAdmin'),\n\t\t\t\t\t\t\t\tinventoryReportingAdmin: roles.includes('inventoryReportingAdmin'),\n\t\t\t\t\t\t\t\tstorageAdmin: roles.includes('storageAdmin'),\n\t\t\t\t\t\t\t\tdirectorySyncAdmin: roles.includes('directorySyncAdmin'),\n\t\t\t\t\t\t\t\tmobileAdmin: roles.includes('mobileAdmin'),\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateFields.customFields) {\n\t\t\t\t\t\t\tconst customFields = (updateFields.customFields as IDataObject)\n\t\t\t\t\t\t\t\t.fieldValues as IDataObject[];\n\t\t\t\t\t\t\tconst customSchemas: IDataObject = {};\n\t\t\t\t\t\t\tcustomFields.forEach((field) => {\n\t\t\t\t\t\t\t\tconst { schemaName, fieldName, value } = field as {\n\t\t\t\t\t\t\t\t\tschemaName: string;\n\t\t\t\t\t\t\t\t\tfieldName: string;\n\t\t\t\t\t\t\t\t\tvalue: string;\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\tif (!schemaName || !fieldName || !value) {\n\t\t\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'Invalid custom field data', {\n\t\t\t\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t\t\t\t\tdescription: 'Schema name, field name, and value are required.',\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tcustomSchemas[schemaName] ??= {};\n\t\t\t\t\t\t\t\t(customSchemas[schemaName] as IDataObject)[fieldName] = value;\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tif (Object.keys(customSchemas).length > 0) {\n\t\t\t\t\t\t\t\tbody.customSchemas = customSchemas;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t\t`/directory/v1/users/${userId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t);\n\n\t\t\t\treturnData.push(...executionData);\n\t\t\t} catch (error) {\n\t\t\t\tif (error instanceof NodeOperationError) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({\n\t\t\t\t\t\t\tmessage: `Operation \"${operation}\" failed for resource \"${resource}\".`,\n\t\t\t\t\t\t\tdescription: error.message,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t`Operation \"${operation}\" failed for resource \"${resource}\".`,\n\n\t\t\t\t\t{\n\t\t\t\t\t\tdescription: `Please check the input parameters and ensure the API request is correctly formatted. Details: ${error.description}`,\n\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":[]}