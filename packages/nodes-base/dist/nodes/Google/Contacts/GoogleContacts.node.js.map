{"version":3,"sources":["../../../../nodes/Google/Contacts/GoogleContacts.node.ts"],"sourcesContent":["import moment from 'moment-timezone';\nimport type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes } from 'n8n-workflow';\n\nimport { contactFields, contactOperations } from './ContactDescription';\nimport {\n\tallFields,\n\tcleanData,\n\tgoogleApiRequest,\n\tgoogleApiRequestAllItems,\n} from './GenericFunctions';\n\nexport class GoogleContacts implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Google Contacts',\n\t\tname: 'googleContacts',\n\t\t// eslint-disable-next-line n8n-nodes-base/node-class-description-icon-not-svg\n\t\ticon: 'file:googleContacts.png',\n\t\tgroup: ['input'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume Google Contacts API',\n\t\tdefaults: {\n\t\t\tname: 'Google Contacts',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'googleContactsOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Contact',\n\t\t\t\t\t\tvalue: 'contact',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'contact',\n\t\t\t},\n\t\t\t...contactOperations,\n\t\t\t...contactFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get all the calendars to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getGroups(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst groups = await googleApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'contactGroups',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/contactGroups',\n\t\t\t\t);\n\t\t\t\tfor (const group of groups) {\n\t\t\t\t\tconst groupName = group.name;\n\t\t\t\t\tconst groupId = group.resourceName;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: groupName,\n\t\t\t\t\t\tvalue: groupId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst length = items.length;\n\t\tconst qs: IDataObject = {};\n\t\tlet responseData;\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\t// Warmup cache\n\t\t// https://developers.google.com/people/v1/contacts#protocol_1\n\t\tif (resource === 'contact' && operation === 'getAll') {\n\t\t\tawait googleApiRequest.call(this, 'GET', '/people:searchContacts', undefined, {\n\t\t\t\tquery: '',\n\t\t\t\treadMask: 'names',\n\t\t\t});\n\t\t\tawait googleApiRequest.call(this, 'GET', '/people/me/connections', undefined, {\n\t\t\t\tpersonFields: 'names',\n\t\t\t});\n\t\t}\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'contact') {\n\t\t\t\t\t//https://developers.google.com/calendar/v3/reference/events/insert\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst familyName = this.getNodeParameter('familyName', i) as string;\n\t\t\t\t\t\tconst givenName = this.getNodeParameter('givenName', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tnames: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tfamilyName,\n\t\t\t\t\t\t\t\t\tgivenName,\n\t\t\t\t\t\t\t\t\tmiddleName: '',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (additionalFields.middleName) {\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tbody.names[0].middleName = additionalFields.middleName as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.honorificPrefix) {\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tbody.names[0].honorificPrefix = additionalFields.honorificPrefix as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.honorificSuffix) {\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tbody.names[0].honorificSuffix = additionalFields.honorificSuffix as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.companyUi) {\n\t\t\t\t\t\t\tconst companyValues = (additionalFields.companyUi as IDataObject)\n\t\t\t\t\t\t\t\t.companyValues as IDataObject[];\n\t\t\t\t\t\t\tbody.organizations = companyValues;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.phoneUi) {\n\t\t\t\t\t\t\tconst phoneValues = (additionalFields.phoneUi as IDataObject)\n\t\t\t\t\t\t\t\t.phoneValues as IDataObject[];\n\t\t\t\t\t\t\tbody.phoneNumbers = phoneValues;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.addressesUi) {\n\t\t\t\t\t\t\tconst addressesValues = (additionalFields.addressesUi as IDataObject)\n\t\t\t\t\t\t\t\t.addressesValues as IDataObject[];\n\t\t\t\t\t\t\tbody.addresses = addressesValues;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.relationsUi) {\n\t\t\t\t\t\t\tconst relationsValues = (additionalFields.relationsUi as IDataObject)\n\t\t\t\t\t\t\t\t.relationsValues as IDataObject[];\n\t\t\t\t\t\t\tbody.relations = relationsValues;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.eventsUi) {\n\t\t\t\t\t\t\tconst eventsValues = (additionalFields.eventsUi as IDataObject)\n\t\t\t\t\t\t\t\t.eventsValues as IDataObject[];\n\t\t\t\t\t\t\tfor (let index = 0; index < eventsValues.length; index++) {\n\t\t\t\t\t\t\t\tconst [month, day, year] = moment(eventsValues[index].date as string)\n\t\t\t\t\t\t\t\t\t.format('MM/DD/YYYY')\n\t\t\t\t\t\t\t\t\t.split('/');\n\t\t\t\t\t\t\t\teventsValues[index] = {\n\t\t\t\t\t\t\t\t\tdate: {\n\t\t\t\t\t\t\t\t\t\tday,\n\t\t\t\t\t\t\t\t\t\tmonth,\n\t\t\t\t\t\t\t\t\t\tyear,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\ttype: eventsValues[index].type,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbody.events = eventsValues;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.birthday) {\n\t\t\t\t\t\t\tconst [month, day, year] = moment(additionalFields.birthday as string)\n\t\t\t\t\t\t\t\t.format('MM/DD/YYYY')\n\t\t\t\t\t\t\t\t.split('/');\n\n\t\t\t\t\t\t\tbody.birthdays = [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tdate: {\n\t\t\t\t\t\t\t\t\t\tday,\n\t\t\t\t\t\t\t\t\t\tmonth,\n\t\t\t\t\t\t\t\t\t\tyear,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.emailsUi) {\n\t\t\t\t\t\t\tconst emailsValues = (additionalFields.emailsUi as IDataObject)\n\t\t\t\t\t\t\t\t.emailsValues as IDataObject[];\n\t\t\t\t\t\t\tbody.emailAddresses = emailsValues;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.biographies) {\n\t\t\t\t\t\t\tbody.biographies = [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvalue: additionalFields.biographies,\n\t\t\t\t\t\t\t\t\tcontentType: 'TEXT_PLAIN',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.customFieldsUi) {\n\t\t\t\t\t\t\tconst customFieldsValues = (additionalFields.customFieldsUi as IDataObject)\n\t\t\t\t\t\t\t\t.customFieldsValues as IDataObject[];\n\t\t\t\t\t\t\tbody.userDefined = customFieldsValues;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.group) {\n\t\t\t\t\t\t\tconst memberships = (additionalFields.group as string[]).map((groupId: string) => {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tcontactGroupMembership: {\n\t\t\t\t\t\t\t\t\t\tcontactGroupResourceName: groupId,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tbody.memberships = memberships;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/people:createContact',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData.contactId = responseData.resourceName.split('/')[1];\n\t\t\t\t\t}\n\t\t\t\t\t//https://developers.google.com/people/api/rest/v1/people/deleteContact\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i) as string;\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/people/${contactId}:deleteContact`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t\t//https://developers.google.com/people/api/rest/v1/people/get\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i) as string;\n\t\t\t\t\t\tconst fields = this.getNodeParameter('fields', i) as string[];\n\t\t\t\t\t\tconst rawData = this.getNodeParameter('rawData', i);\n\n\t\t\t\t\t\tif (fields.includes('*')) {\n\t\t\t\t\t\t\tqs.personFields = allFields.join(',');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.personFields = fields.join(',');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(this, 'GET', `/people/${contactId}`, {}, qs);\n\n\t\t\t\t\t\tif (!rawData) {\n\t\t\t\t\t\t\tresponseData = cleanData(responseData)[0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData.contactId = responseData.resourceName.split('/')[1];\n\t\t\t\t\t}\n\t\t\t\t\t//https://developers.google.com/people/api/rest/v1/people.connections/list\n\t\t\t\t\t//https://developers.google.com/people/api/rest/v1/people/searchContacts\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst fields = this.getNodeParameter('fields', i) as string[];\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i, {});\n\t\t\t\t\t\tconst rawData = this.getNodeParameter('rawData', i);\n\t\t\t\t\t\tconst useQuery = this.getNodeParameter('useQuery', i) as boolean;\n\n\t\t\t\t\t\tconst endpoint = useQuery ? ':searchContacts' : '/me/connections';\n\n\t\t\t\t\t\tif (useQuery) {\n\t\t\t\t\t\t\tqs.query = this.getNodeParameter('query', i) as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (options.sortOrder) {\n\t\t\t\t\t\t\tqs.sortOrder = options.sortOrder as number;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (fields.includes('*')) {\n\t\t\t\t\t\t\tqs.personFields = allFields.join(',');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.personFields = fields.join(',');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (useQuery) {\n\t\t\t\t\t\t\tqs.readMask = qs.personFields;\n\t\t\t\t\t\t\tdelete qs.personFields;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await googleApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\tuseQuery ? 'results' : 'connections',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/people${endpoint}`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif (useQuery) {\n\t\t\t\t\t\t\t\tresponseData = responseData.map((result: IDataObject) => result.person);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.pageSize = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await googleApiRequest.call(this, 'GET', `/people${endpoint}`, {}, qs);\n\n\t\t\t\t\t\t\tresponseData =\n\t\t\t\t\t\t\t\tresponseData.connections ||\n\t\t\t\t\t\t\t\tresponseData.results?.map((result: IDataObject) => result.person) ||\n\t\t\t\t\t\t\t\t[];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!rawData) {\n\t\t\t\t\t\t\tresponseData = cleanData(responseData);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let index = 0; index < responseData.length; index++) {\n\t\t\t\t\t\t\tresponseData[index].contactId = responseData[index].resourceName.split('/')[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://developers.google.com/people/api/rest/v1/people/updateContact\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst updatePersonFields = [];\n\n\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i) as string;\n\n\t\t\t\t\t\tconst fields = this.getNodeParameter('fields', i) as string[];\n\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\n\t\t\t\t\t\tlet etag;\n\n\t\t\t\t\t\tif (updateFields.etag) {\n\t\t\t\t\t\t\tetag = updateFields.etag as string;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst data = await googleApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/people/${contactId}`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t{ personFields: 'Names' },\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tetag = data.etag;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (fields.includes('*')) {\n\t\t\t\t\t\t\tqs.personFields = allFields.join(',');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.personFields = fields.join(',');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tetag,\n\t\t\t\t\t\t\tnames: [{}],\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (updateFields.givenName) {\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tbody.names[0].givenName = updateFields.givenName as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateFields.familyName) {\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tbody.names[0].familyName = updateFields.familyName as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateFields.middleName) {\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tbody.names[0].middleName = updateFields.middleName as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateFields.honorificPrefix) {\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tbody.names[0].honorificPrefix = updateFields.honorificPrefix as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateFields.honorificSuffix) {\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tbody.names[0].honorificSuffix = updateFields.honorificSuffix as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateFields.companyUi) {\n\t\t\t\t\t\t\tconst companyValues = (updateFields.companyUi as IDataObject)\n\t\t\t\t\t\t\t\t.companyValues as IDataObject[];\n\t\t\t\t\t\t\tbody.organizations = companyValues;\n\t\t\t\t\t\t\tupdatePersonFields.push('organizations');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateFields.phoneUi) {\n\t\t\t\t\t\t\tconst phoneValues = (updateFields.phoneUi as IDataObject)\n\t\t\t\t\t\t\t\t.phoneValues as IDataObject[];\n\t\t\t\t\t\t\tbody.phoneNumbers = phoneValues;\n\t\t\t\t\t\t\tupdatePersonFields.push('phoneNumbers');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateFields.addressesUi) {\n\t\t\t\t\t\t\tconst addressesValues = (updateFields.addressesUi as IDataObject)\n\t\t\t\t\t\t\t\t.addressesValues as IDataObject[];\n\t\t\t\t\t\t\tbody.addresses = addressesValues;\n\t\t\t\t\t\t\tupdatePersonFields.push('addresses');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateFields.relationsUi) {\n\t\t\t\t\t\t\tconst relationsValues = (updateFields.relationsUi as IDataObject)\n\t\t\t\t\t\t\t\t.relationsValues as IDataObject[];\n\t\t\t\t\t\t\tbody.relations = relationsValues;\n\t\t\t\t\t\t\tupdatePersonFields.push('relations');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateFields.eventsUi) {\n\t\t\t\t\t\t\tconst eventsValues = (updateFields.eventsUi as IDataObject)\n\t\t\t\t\t\t\t\t.eventsValues as IDataObject[];\n\t\t\t\t\t\t\tfor (let index = 0; index < eventsValues.length; index++) {\n\t\t\t\t\t\t\t\tconst [month, day, year] = moment(eventsValues[index].date as string)\n\t\t\t\t\t\t\t\t\t.format('MM/DD/YYYY')\n\t\t\t\t\t\t\t\t\t.split('/');\n\t\t\t\t\t\t\t\teventsValues[index] = {\n\t\t\t\t\t\t\t\t\tdate: {\n\t\t\t\t\t\t\t\t\t\tday,\n\t\t\t\t\t\t\t\t\t\tmonth,\n\t\t\t\t\t\t\t\t\t\tyear,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\ttype: eventsValues[index].type,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbody.events = eventsValues;\n\t\t\t\t\t\t\tupdatePersonFields.push('events');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateFields.birthday) {\n\t\t\t\t\t\t\tconst [month, day, year] = moment(updateFields.birthday as string)\n\t\t\t\t\t\t\t\t.format('MM/DD/YYYY')\n\t\t\t\t\t\t\t\t.split('/');\n\n\t\t\t\t\t\t\tbody.birthdays = [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tdate: {\n\t\t\t\t\t\t\t\t\t\tday,\n\t\t\t\t\t\t\t\t\t\tmonth,\n\t\t\t\t\t\t\t\t\t\tyear,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t];\n\n\t\t\t\t\t\t\tupdatePersonFields.push('birthdays');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateFields.emailsUi) {\n\t\t\t\t\t\t\tconst emailsValues = (updateFields.emailsUi as IDataObject)\n\t\t\t\t\t\t\t\t.emailsValues as IDataObject[];\n\t\t\t\t\t\t\tbody.emailAddresses = emailsValues;\n\t\t\t\t\t\t\tupdatePersonFields.push('emailAddresses');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateFields.biographies) {\n\t\t\t\t\t\t\tbody.biographies = [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvalue: updateFields.biographies,\n\t\t\t\t\t\t\t\t\tcontentType: 'TEXT_PLAIN',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\tupdatePersonFields.push('biographies');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateFields.customFieldsUi) {\n\t\t\t\t\t\t\tconst customFieldsValues = (updateFields.customFieldsUi as IDataObject)\n\t\t\t\t\t\t\t\t.customFieldsValues as IDataObject[];\n\t\t\t\t\t\t\tbody.userDefined = customFieldsValues;\n\t\t\t\t\t\t\tupdatePersonFields.push('userDefined');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateFields.group) {\n\t\t\t\t\t\t\tconst memberships = (updateFields.group as string[]).map((groupId: string) => {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tcontactGroupMembership: {\n\t\t\t\t\t\t\t\t\t\tcontactGroupResourceName: groupId,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tbody.memberships = memberships;\n\t\t\t\t\t\t\tupdatePersonFields.push('memberships');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ((body.names as IDataObject[]).length > 0) {\n\t\t\t\t\t\t\tupdatePersonFields.push('names');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tqs.updatePersonFields = updatePersonFields.join(',');\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PATCH',\n\t\t\t\t\t\t\t`/people/${contactId}:updateContact`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData.contactId = responseData.resourceName.split('/')[1];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject),\n\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t);\n\t\t\t\treturnData.push(...executionData);\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":["moment"]}