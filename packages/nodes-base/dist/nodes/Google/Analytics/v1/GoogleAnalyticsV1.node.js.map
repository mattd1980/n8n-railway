{"version":3,"sources":["../../../../../nodes/Google/Analytics/v1/GoogleAnalyticsV1.node.ts"],"sourcesContent":["import moment from 'moment-timezone';\nimport {\n\ttype IExecuteFunctions,\n\ttype IDataObject,\n\ttype ILoadOptionsFunctions,\n\ttype INodeExecutionData,\n\ttype INodePropertyOptions,\n\ttype INodeType,\n\ttype INodeTypeBaseDescription,\n\ttype INodeTypeDescription,\n\ttype IHttpRequestMethods,\n\tNodeConnectionTypes,\n} from 'n8n-workflow';\n\nimport { oldVersionNotice } from '@utils/descriptions';\n\nimport { googleApiRequest, googleApiRequestAllItems, merge, simplify } from './GenericFunctions';\nimport type { IData } from './Interfaces';\nimport { reportFields, reportOperations } from './ReportDescription';\nimport { userActivityFields, userActivityOperations } from './UserActivityDescription';\n\nconst versionDescription: INodeTypeDescription = {\n\tdisplayName: 'Google Analytics',\n\tname: 'googleAnalytics',\n\ticon: 'file:analytics.svg',\n\tgroup: ['transform'],\n\tversion: 1,\n\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\tdescription: 'Use the Google Analytics API',\n\tdefaults: {\n\t\tname: 'Google Analytics',\n\t},\n\tinputs: [NodeConnectionTypes.Main],\n\toutputs: [NodeConnectionTypes.Main],\n\tcredentials: [\n\t\t{\n\t\t\tname: 'googleAnalyticsOAuth2',\n\t\t\trequired: true,\n\t\t},\n\t],\n\tproperties: [\n\t\toldVersionNotice,\n\t\t{\n\t\t\tdisplayName: 'Resource',\n\t\t\tname: 'resource',\n\t\t\ttype: 'options',\n\t\t\tnoDataExpression: true,\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\tname: 'Report',\n\t\t\t\t\tvalue: 'report',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'User Activity',\n\t\t\t\t\tvalue: 'userActivity',\n\t\t\t\t},\n\t\t\t],\n\t\t\tdefault: 'report',\n\t\t},\n\t\t//-------------------------------\n\t\t// Reports Operations\n\t\t//-------------------------------\n\t\t...reportOperations,\n\t\t...reportFields,\n\n\t\t//-------------------------------\n\t\t// User Activity Operations\n\t\t//-------------------------------\n\t\t...userActivityOperations,\n\t\t...userActivityFields,\n\t],\n};\n\nexport class GoogleAnalyticsV1 implements INodeType {\n\tdescription: INodeTypeDescription;\n\n\tconstructor(baseDescription: INodeTypeBaseDescription) {\n\t\tthis.description = {\n\t\t\t...baseDescription,\n\t\t\t...versionDescription,\n\t\t};\n\t}\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get all the dimensions to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getDimensions(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst { items: dimensions } = await googleApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t'',\n\t\t\t\t\t{},\n\t\t\t\t\t{},\n\t\t\t\t\t'https://www.googleapis.com/analytics/v3/metadata/ga/columns',\n\t\t\t\t);\n\n\t\t\t\tfor (const dimension of dimensions) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tdimension.attributes.type === 'DIMENSION' &&\n\t\t\t\t\t\tdimension.attributes.status !== 'DEPRECATED'\n\t\t\t\t\t) {\n\t\t\t\t\t\treturnData.push({\n\t\t\t\t\t\t\tname: dimension.attributes.uiName,\n\t\t\t\t\t\t\tvalue: dimension.id,\n\t\t\t\t\t\t\tdescription: dimension.attributes.description,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturnData.sort((a, b) => {\n\t\t\t\t\tconst aName = a.name.toLowerCase();\n\t\t\t\t\tconst bName = b.name.toLowerCase();\n\t\t\t\t\tif (aName < bName) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t\tif (aName > bName) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t});\n\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the views to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getViews(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst { items } = await googleApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t'',\n\t\t\t\t\t{},\n\t\t\t\t\t{},\n\t\t\t\t\t'https://www.googleapis.com/analytics/v3/management/accounts/~all/webproperties/~all/profiles',\n\t\t\t\t);\n\n\t\t\t\tfor (const item of items) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: item.name,\n\t\t\t\t\t\tvalue: item.id,\n\t\t\t\t\t\tdescription: item.websiteUrl,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\tlet method: IHttpRequestMethods = 'GET';\n\t\tconst qs: IDataObject = {};\n\t\tlet endpoint = '';\n\t\tlet responseData;\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'report') {\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\t//https://developers.google.com/analytics/devguides/reporting/core/v4/rest/v4/reports/batchGet\n\t\t\t\t\t\tmethod = 'POST';\n\t\t\t\t\t\tendpoint = '/v4/reports:batchGet';\n\t\t\t\t\t\tconst viewId = this.getNodeParameter('viewId', i) as string;\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', 0);\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst simple = this.getNodeParameter('simple', i) as boolean;\n\n\t\t\t\t\t\tconst body: IData = {\n\t\t\t\t\t\t\tviewId,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (additionalFields.useResourceQuotas) {\n\t\t\t\t\t\t\tqs.useResourceQuotas = additionalFields.useResourceQuotas;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.dateRangesUi) {\n\t\t\t\t\t\t\tconst dateValues = (additionalFields.dateRangesUi as IDataObject)\n\t\t\t\t\t\t\t\t.dateRanges as IDataObject;\n\t\t\t\t\t\t\tif (dateValues) {\n\t\t\t\t\t\t\t\tconst start = dateValues.startDate as string;\n\t\t\t\t\t\t\t\tconst end = dateValues.endDate as string;\n\t\t\t\t\t\t\t\tObject.assign(body, {\n\t\t\t\t\t\t\t\t\tdateRanges: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tstartDate: moment(start).utc().format('YYYY-MM-DD'),\n\t\t\t\t\t\t\t\t\t\t\tendDate: moment(end).utc().format('YYYY-MM-DD'),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.metricsUi) {\n\t\t\t\t\t\t\tconst metrics = (additionalFields.metricsUi as IDataObject)\n\t\t\t\t\t\t\t\t.metricValues as IDataObject[];\n\t\t\t\t\t\t\tbody.metrics = metrics;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.dimensionUi) {\n\t\t\t\t\t\t\tconst dimensions = (additionalFields.dimensionUi as IDataObject)\n\t\t\t\t\t\t\t\t.dimensionValues as IDataObject[];\n\t\t\t\t\t\t\tif (dimensions) {\n\t\t\t\t\t\t\t\tbody.dimensions = dimensions;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.dimensionFiltersUi) {\n\t\t\t\t\t\t\tconst dimensionFilters = (additionalFields.dimensionFiltersUi as IDataObject)\n\t\t\t\t\t\t\t\t.filterValues as IDataObject[];\n\t\t\t\t\t\t\tif (dimensionFilters) {\n\t\t\t\t\t\t\t\tdimensionFilters.forEach((filter) => (filter.expressions = [filter.expressions]));\n\t\t\t\t\t\t\t\tbody.dimensionFilterClauses = { filters: dimensionFilters };\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.includeEmptyRows) {\n\t\t\t\t\t\t\tObject.assign(body, { includeEmptyRows: additionalFields.includeEmptyRows });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.hideTotals) {\n\t\t\t\t\t\t\tObject.assign(body, { hideTotals: additionalFields.hideTotals });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.hideValueRanges) {\n\t\t\t\t\t\t\tObject.assign(body, { hideTotals: additionalFields.hideTotals });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await googleApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'reports',\n\t\t\t\t\t\t\t\tmethod,\n\t\t\t\t\t\t\t\tendpoint,\n\t\t\t\t\t\t\t\t{ reportRequests: [body] },\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\tmethod,\n\t\t\t\t\t\t\t\tendpoint,\n\t\t\t\t\t\t\t\t{ reportRequests: [body] },\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.reports;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (simple) {\n\t\t\t\t\t\t\tresponseData = simplify(responseData);\n\t\t\t\t\t\t} else if (returnAll && responseData.length > 1) {\n\t\t\t\t\t\t\tresponseData = merge(responseData);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'userActivity') {\n\t\t\t\t\tif (operation === 'search') {\n\t\t\t\t\t\t//https://developers.google.com/analytics/devguides/reporting/core/v4/rest/v4/userActivity/search\n\t\t\t\t\t\tmethod = 'POST';\n\t\t\t\t\t\tendpoint = '/v4/userActivity:search';\n\t\t\t\t\t\tconst viewId = this.getNodeParameter('viewId', i);\n\t\t\t\t\t\tconst userId = this.getNodeParameter('userId', i);\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', 0);\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tviewId,\n\t\t\t\t\t\t\tuser: {\n\t\t\t\t\t\t\t\tuserId,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (additionalFields.activityTypes) {\n\t\t\t\t\t\t\tObject.assign(body, { activityTypes: additionalFields.activityTypes });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await googleApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'sessions',\n\t\t\t\t\t\t\t\tmethod,\n\t\t\t\t\t\t\t\tendpoint,\n\t\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbody.pageSize = this.getNodeParameter('limit', 0);\n\t\t\t\t\t\t\tresponseData = await googleApiRequest.call(this, method, endpoint, body);\n\t\t\t\t\t\t\tresponseData = responseData.sessions;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t);\n\t\t\t\treturnData.push(...executionData);\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":["moment"]}