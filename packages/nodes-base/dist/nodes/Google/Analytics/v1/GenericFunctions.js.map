{"version":3,"sources":["../../../../../nodes/Google/Analytics/v1/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tILoadOptionsFunctions,\n\tIDataObject,\n\tJsonObject,\n\tIHttpRequestMethods,\n\tIRequestOptions,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\nexport async function googleApiRequest(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\tbody: IDataObject = {},\n\tqs: IDataObject = {},\n\turi?: string,\n\toption: IDataObject = {},\n) {\n\tconst baseURL = 'https://analyticsreporting.googleapis.com';\n\n\tlet options: IRequestOptions = {\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tmethod,\n\t\tbody,\n\t\tqs,\n\t\turi: uri || `${baseURL}${endpoint}`,\n\t\tjson: true,\n\t};\n\n\toptions = Object.assign({}, options, option);\n\n\ttry {\n\t\tif (Object.keys(body).length === 0) {\n\t\t\tdelete options.body;\n\t\t}\n\t\tif (Object.keys(qs).length === 0) {\n\t\t\tdelete options.qs;\n\t\t}\n\t\treturn await this.helpers.requestOAuth2.call(this, 'googleAnalyticsOAuth2', options);\n\t} catch (error) {\n\t\tconst errorData = (error.message || '').split(' - ')[1] as string;\n\t\tif (errorData) {\n\t\t\tconst parsedError = JSON.parse(errorData.trim());\n\t\t\tconst [message, ...rest] = parsedError.error.message.split('\\n');\n\t\t\tconst description = rest.join('\\n');\n\t\t\tconst httpCode = parsedError.error.code;\n\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject, {\n\t\t\t\tmessage,\n\t\t\t\tdescription,\n\t\t\t\thttpCode,\n\t\t\t});\n\t\t}\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject, { message: error.message });\n\t}\n}\n\nexport async function googleApiRequestAllItems(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions,\n\tpropertyName: string,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\tbody: IDataObject = {},\n\tquery: IDataObject = {},\n\turi?: string,\n) {\n\tconst returnData: IDataObject[] = [];\n\tlet responseData;\n\n\tdo {\n\t\tresponseData = await googleApiRequest.call(this, method, endpoint, body, query, uri);\n\t\tif (body.reportRequests && Array.isArray(body.reportRequests)) {\n\t\t\t(body.reportRequests as IDataObject[])[0].pageToken =\n\t\t\t\tresponseData[propertyName][0].nextPageToken;\n\t\t} else {\n\t\t\tbody.pageToken = responseData.nextPageToken;\n\t\t}\n\t\treturnData.push.apply(returnData, responseData[propertyName] as IDataObject[]);\n\t} while (\n\t\t(responseData.nextPageToken !== undefined && responseData.nextPageToken !== '') ||\n\t\tresponseData[propertyName]?.[0].nextPageToken !== undefined\n\t);\n\n\treturn returnData;\n}\n\nexport function simplify(responseData: any | [any]) {\n\tconst response = [];\n\tfor (const {\n\t\tcolumnHeader: { dimensions, metricHeader },\n\t\tdata: { rows },\n\t} of responseData) {\n\t\tif (rows === undefined) {\n\t\t\t// Do not error if there is no data\n\t\t\tcontinue;\n\t\t}\n\t\tconst metrics = metricHeader.metricHeaderEntries.map((entry: { name: string }) => entry.name);\n\t\tfor (const row of rows) {\n\t\t\tconst data: IDataObject = {};\n\t\t\tif (dimensions) {\n\t\t\t\tfor (let i = 0; i < dimensions.length; i++) {\n\t\t\t\t\tdata[dimensions[i]] = row.dimensions[i];\n\t\t\t\t\tfor (const [index, metric] of metrics.entries()) {\n\t\t\t\t\t\tdata[metric] = row.metrics[0].values[index];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (const [index, metric] of metrics.entries()) {\n\t\t\t\t\tdata[metric] = row.metrics[0].values[index];\n\t\t\t\t}\n\t\t\t}\n\t\t\tresponse.push(data);\n\t\t}\n\t}\n\n\treturn response;\n}\n\nexport function merge(responseData: [any]) {\n\tconst response: { columnHeader: IDataObject; data: { rows: [] } } = {\n\t\tcolumnHeader: responseData[0].columnHeader,\n\t\tdata: responseData[0].data,\n\t};\n\tconst allRows = [];\n\tfor (const {\n\t\tdata: { rows },\n\t} of responseData) {\n\t\tallRows.push(...(rows as IDataObject[]));\n\t}\n\tresponse.data.rows = allRows as [];\n\treturn [response];\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,0BAA6B;AAE7B,eAAsB,iBAErB,QACA,UACA,OAAoB,CAAC,GACrB,KAAkB,CAAC,GACnB,KACA,SAAsB,CAAC,GACtB;AACD,QAAM,UAAU;AAEhB,MAAI,UAA2B;AAAA,IAC9B,SAAS;AAAA,MACR,QAAQ;AAAA,MACR,gBAAgB;AAAA,IACjB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,KAAK,OAAO,GAAG,OAAO,GAAG,QAAQ;AAAA,IACjC,MAAM;AAAA,EACP;AAEA,YAAU,OAAO,OAAO,CAAC,GAAG,SAAS,MAAM;AAE3C,MAAI;AACH,QAAI,OAAO,KAAK,IAAI,EAAE,WAAW,GAAG;AACnC,aAAO,QAAQ;AAAA,IAChB;AACA,QAAI,OAAO,KAAK,EAAE,EAAE,WAAW,GAAG;AACjC,aAAO,QAAQ;AAAA,IAChB;AACA,WAAO,MAAM,KAAK,QAAQ,cAAc,KAAK,MAAM,yBAAyB,OAAO;AAAA,EACpF,SAAS,OAAO;AACf,UAAM,aAAa,MAAM,WAAW,IAAI,MAAM,KAAK,EAAE,CAAC;AACtD,QAAI,WAAW;AACd,YAAM,cAAc,KAAK,MAAM,UAAU,KAAK,CAAC;AAC/C,YAAM,CAAC,SAAS,GAAG,IAAI,IAAI,YAAY,MAAM,QAAQ,MAAM,IAAI;AAC/D,YAAM,cAAc,KAAK,KAAK,IAAI;AAClC,YAAM,WAAW,YAAY,MAAM;AACnC,YAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,OAAqB;AAAA,QAC3D;AAAA,QACA;AAAA,QACA;AAAA,MACD,CAAC;AAAA,IACF;AACA,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,OAAqB,EAAE,SAAS,MAAM,QAAQ,CAAC;AAAA,EACvF;AACD;AAEA,eAAsB,yBAErB,cACA,QACA,UACA,OAAoB,CAAC,GACrB,QAAqB,CAAC,GACtB,KACC;AACD,QAAM,aAA4B,CAAC;AACnC,MAAI;AAEJ,KAAG;AACF,mBAAe,MAAM,iBAAiB,KAAK,MAAM,QAAQ,UAAU,MAAM,OAAO,GAAG;AACnF,QAAI,KAAK,kBAAkB,MAAM,QAAQ,KAAK,cAAc,GAAG;AAC9D,MAAC,KAAK,eAAiC,CAAC,EAAE,YACzC,aAAa,YAAY,EAAE,CAAC,EAAE;AAAA,IAChC,OAAO;AACN,WAAK,YAAY,aAAa;AAAA,IAC/B;AACA,eAAW,KAAK,MAAM,YAAY,aAAa,YAAY,CAAkB;AAAA,EAC9E,SACE,aAAa,kBAAkB,UAAa,aAAa,kBAAkB,MAC5E,aAAa,YAAY,IAAI,CAAC,EAAE,kBAAkB;AAGnD,SAAO;AACR;AAEO,SAAS,SAAS,cAA2B;AACnD,QAAM,WAAW,CAAC;AAClB,aAAW;AAAA,IACV,cAAc,EAAE,YAAY,aAAa;AAAA,IACzC,MAAM,EAAE,KAAK;AAAA,EACd,KAAK,cAAc;AAClB,QAAI,SAAS,QAAW;AAEvB;AAAA,IACD;AACA,UAAM,UAAU,aAAa,oBAAoB,IAAI,CAAC,UAA4B,MAAM,IAAI;AAC5F,eAAW,OAAO,MAAM;AACvB,YAAM,OAAoB,CAAC;AAC3B,UAAI,YAAY;AACf,iBAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC3C,eAAK,WAAW,CAAC,CAAC,IAAI,IAAI,WAAW,CAAC;AACtC,qBAAW,CAAC,OAAO,MAAM,KAAK,QAAQ,QAAQ,GAAG;AAChD,iBAAK,MAAM,IAAI,IAAI,QAAQ,CAAC,EAAE,OAAO,KAAK;AAAA,UAC3C;AAAA,QACD;AAAA,MACD,OAAO;AACN,mBAAW,CAAC,OAAO,MAAM,KAAK,QAAQ,QAAQ,GAAG;AAChD,eAAK,MAAM,IAAI,IAAI,QAAQ,CAAC,EAAE,OAAO,KAAK;AAAA,QAC3C;AAAA,MACD;AACA,eAAS,KAAK,IAAI;AAAA,IACnB;AAAA,EACD;AAEA,SAAO;AACR;AAEO,SAAS,MAAM,cAAqB;AAC1C,QAAM,WAA8D;AAAA,IACnE,cAAc,aAAa,CAAC,EAAE;AAAA,IAC9B,MAAM,aAAa,CAAC,EAAE;AAAA,EACvB;AACA,QAAM,UAAU,CAAC;AACjB,aAAW;AAAA,IACV,MAAM,EAAE,KAAK;AAAA,EACd,KAAK,cAAc;AAClB,YAAQ,KAAK,GAAI,IAAsB;AAAA,EACxC;AACA,WAAS,KAAK,OAAO;AACrB,SAAO,CAAC,QAAQ;AACjB;","names":[]}