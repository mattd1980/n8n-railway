{"version":3,"sources":["../../../../../../../nodes/Google/Analytics/v2/actions/report/get.ga4.operation.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tINodeExecutionData,\n\tINodeProperties,\n} from 'n8n-workflow';\n\nimport {\n\tdimensionDropdown,\n\tdimensionFilterField,\n\tmetricDropdown,\n\tmetricsFilterField,\n} from './FiltersDescription';\nimport {\n\tcheckDuplicates,\n\tdefaultEndDate,\n\tdefaultStartDate,\n\tprepareDateRange,\n\tprocessFilters,\n\tsimplifyGA4,\n} from '../../helpers/utils';\nimport { googleApiRequest, googleApiRequestAllItems } from '../../transport';\n\nexport const description: INodeProperties[] = [\n\t{\n\t\tdisplayName: 'Property',\n\t\tname: 'propertyId',\n\t\ttype: 'resourceLocator',\n\t\tdefault: { mode: 'list', value: '' },\n\t\trequired: true,\n\t\tdescription: 'The Property of Google Analytics',\n\t\thint: \"If this doesn't work, try changing the 'Property Type' field above\",\n\t\tmodes: [\n\t\t\t{\n\t\t\t\tdisplayName: 'From List',\n\t\t\t\tname: 'list',\n\t\t\t\ttype: 'list',\n\t\t\t\tplaceholder: 'Select a property...',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tsearchListMethod: 'searchProperties',\n\t\t\t\t\tsearchFilterRequired: false,\n\t\t\t\t\tsearchable: false,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'By URL',\n\t\t\t\tname: 'url',\n\t\t\t\ttype: 'string',\n\t\t\t\tplaceholder: 'https://analytics.google.com/analytics/...',\n\t\t\t\tvalidation: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'regex',\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tregex: '.*analytics\\\\.google\\\\.com\\\\/analytics.*\\\\/p([0-9]{1,})(?:\\\\/.*|)*',\n\t\t\t\t\t\t\terrorMessage: 'Not a valid Google Analytics URL',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\textractValue: {\n\t\t\t\t\ttype: 'regex',\n\t\t\t\t\tregex: '.*analytics\\\\.google\\\\.com\\\\/analytics.*\\\\/p([0-9]{1,})(?:\\\\/.*|)',\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'By ID',\n\t\t\t\tname: 'id',\n\t\t\t\ttype: 'string',\n\t\t\t\tplaceholder: '123456',\n\t\t\t\tvalidation: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'regex',\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tregex: '[0-9]{1,}',\n\t\t\t\t\t\t\terrorMessage: 'Not a valid Google Analytics Property ID',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\turl: '=https://analytics.google.com/analytics/web/#/p{{$value}}/',\n\t\t\t},\n\t\t],\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['report'],\n\t\t\t\toperation: ['get'],\n\t\t\t\tpropertyType: ['ga4'],\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tdisplayName: 'Date Range',\n\t\tname: 'dateRange',\n\t\ttype: 'options',\n\t\trequired: true,\n\t\t// eslint-disable-next-line n8n-nodes-base/node-param-options-type-unsorted-items\n\t\toptions: [\n\t\t\t{\n\t\t\t\tname: 'Last 7 Days',\n\t\t\t\tvalue: 'last7days',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Last 30 Days',\n\t\t\t\tvalue: 'last30days',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Today',\n\t\t\t\tvalue: 'today',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Yesterday',\n\t\t\t\tvalue: 'yesterday',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Last Complete Calendar Week',\n\t\t\t\tvalue: 'lastCalendarWeek',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Last Complete Calendar Month',\n\t\t\t\tvalue: 'lastCalendarMonth',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Custom',\n\t\t\t\tvalue: 'custom',\n\t\t\t},\n\t\t],\n\t\tdefault: 'last7days',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['report'],\n\t\t\t\toperation: ['get'],\n\t\t\t\tpropertyType: ['ga4'],\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tdisplayName: 'Start',\n\t\tname: 'startDate',\n\t\ttype: 'dateTime',\n\t\trequired: true,\n\t\tdefault: defaultStartDate(),\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['report'],\n\t\t\t\toperation: ['get'],\n\t\t\t\tdateRange: ['custom'],\n\t\t\t\tpropertyType: ['ga4'],\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tdisplayName: 'End',\n\t\tname: 'endDate',\n\t\ttype: 'dateTime',\n\t\trequired: true,\n\t\tdefault: defaultEndDate(),\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['report'],\n\t\t\t\toperation: ['get'],\n\t\t\t\tdateRange: ['custom'],\n\t\t\t\tpropertyType: ['ga4'],\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tdisplayName: 'Metrics',\n\t\tname: 'metricsGA4',\n\t\ttype: 'fixedCollection',\n\t\tdefault: { metricValues: [{ listName: 'totalUsers' }] },\n\t\ttypeOptions: {\n\t\t\tmultipleValues: true,\n\t\t},\n\t\tplaceholder: 'Add Metric',\n\t\tdescription:\n\t\t\t'The quantitative measurements of a report. For example, the metric eventCount is the total number of events. Requests are allowed up to 10 metrics.',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Values',\n\t\t\t\tname: 'metricValues',\n\t\t\t\tvalues: [\n\t\t\t\t\t...metricDropdown,\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Expression',\n\t\t\t\t\t\tname: 'expression',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'A mathematical expression for derived metrics. For example, the metric Event count per user is eventCount/totalUsers.',\n\t\t\t\t\t\tplaceholder: 'e.g. eventCount/totalUsers',\n\t\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\t\tlistName: ['custom'],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Invisible',\n\t\t\t\t\t\tname: 'invisible',\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\t\tlistName: ['custom'],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Whether a metric is invisible in the report response. If a metric is invisible, the metric will not produce a column in the response, but can be used in metricFilter, orderBys, or a metric expression.',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['report'],\n\t\t\t\toperation: ['get'],\n\t\t\t\tpropertyType: ['ga4'],\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\t// eslint-disable-next-line n8n-nodes-base/node-param-display-name-miscased\n\t\tdisplayName: 'Dimensions to split by',\n\t\tname: 'dimensionsGA4',\n\t\ttype: 'fixedCollection',\n\t\tdefault: { dimensionValues: [{ listName: 'date' }] },\n\t\t// default: {},\n\t\ttypeOptions: {\n\t\t\tmultipleValues: true,\n\t\t},\n\t\tplaceholder: 'Add Dimension',\n\t\tdescription:\n\t\t\t'Dimensions are attributes of your data. For example, the dimension city indicates the city from which an event originates. Dimension values in report responses are strings; for example, the city could be \"Paris\" or \"New York\". Requests are allowed up to 9 dimensions.',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Values',\n\t\t\t\tname: 'dimensionValues',\n\t\t\t\tvalues: [...dimensionDropdown],\n\t\t\t},\n\t\t],\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['report'],\n\t\t\t\toperation: ['get'],\n\t\t\t\tpropertyType: ['ga4'],\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tdisplayName: 'Return All',\n\t\tname: 'returnAll',\n\t\ttype: 'boolean',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\toperation: ['get'],\n\t\t\t\tresource: ['report'],\n\t\t\t\tpropertyType: ['ga4'],\n\t\t\t},\n\t\t},\n\t\tdefault: false,\n\t\tdescription: 'Whether to return all results or only up to a given limit',\n\t},\n\t{\n\t\tdisplayName: 'Limit',\n\t\tname: 'limit',\n\t\ttype: 'number',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\toperation: ['get'],\n\t\t\t\tresource: ['report'],\n\t\t\t\tpropertyType: ['ga4'],\n\t\t\t\treturnAll: [false],\n\t\t\t},\n\t\t},\n\t\ttypeOptions: {\n\t\t\tminValue: 1,\n\t\t\tmaxValue: 1000,\n\t\t},\n\t\tdefault: 50,\n\t\tdescription: 'Max number of results to return',\n\t},\n\t{\n\t\t// eslint-disable-next-line n8n-nodes-base/node-param-display-name-wrong-for-simplify\n\t\tdisplayName: 'Simplify Output',\n\t\tname: 'simple',\n\t\ttype: 'boolean',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\toperation: ['get'],\n\t\t\t\tresource: ['report'],\n\t\t\t\tpropertyType: ['ga4'],\n\t\t\t},\n\t\t},\n\t\tdefault: true,\n\t\tdescription: 'Whether to return a simplified version of the response instead of the raw data',\n\t},\n\n\t{\n\t\tdisplayName: 'Additional Fields',\n\t\tname: 'additionalFields',\n\t\ttype: 'collection',\n\t\tplaceholder: 'Add Field',\n\t\tdefault: {},\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['report'],\n\t\t\t\toperation: ['get'],\n\t\t\t\tpropertyType: ['ga4'],\n\t\t\t},\n\t\t},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Currency Code',\n\t\t\t\tname: 'currencyCode',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tdescription:\n\t\t\t\t\t'A currency code in ISO4217 format, such as \"AED\", \"USD\", \"JPY\". If the field is empty, the report uses the property\\'s default currency.',\n\t\t\t},\n\t\t\t...dimensionFilterField,\n\t\t\t{\n\t\t\t\tdisplayName: 'Metric Aggregation',\n\t\t\t\tname: 'metricAggregations',\n\t\t\t\ttype: 'multiOptions',\n\t\t\t\tdefault: [],\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'MAXIMUM',\n\t\t\t\t\t\tvalue: 'MAXIMUM',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'MINIMUM',\n\t\t\t\t\t\tvalue: 'MINIMUM',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'TOTAL',\n\t\t\t\t\t\tvalue: 'TOTAL',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\t'/simple': [false],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t...metricsFilterField,\n\t\t\t{\n\t\t\t\tdisplayName: 'Keep Empty Rows',\n\t\t\t\tname: 'keepEmptyRows',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\tdescription:\n\t\t\t\t\t'Whether false or unspecified, each row with all metrics equal to 0 will not be returned. If true, these rows will be returned if they are not separately removed by a filter.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Order By',\n\t\t\t\tname: 'orderByUI',\n\t\t\t\ttype: 'fixedCollection',\n\t\t\t\tdefault: {},\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tmultipleValues: true,\n\t\t\t\t},\n\t\t\t\tplaceholder: 'Add Order',\n\t\t\t\tdescription: 'Specifies how rows are ordered in the response',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Metric Order By',\n\t\t\t\t\t\tname: 'metricOrderBy',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Descending',\n\t\t\t\t\t\t\t\tname: 'desc',\n\t\t\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\t\t\tdescription: 'Whether true, sorts by descending order',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Metric Name or ID',\n\t\t\t\t\t\t\t\tname: 'metricName',\n\t\t\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\t\t\tloadOptionsMethod: 'getMetricsGA4',\n\t\t\t\t\t\t\t\t\tloadOptionsDependsOn: ['propertyId.value'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t'Sorts by metric values. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Dimmension Order By',\n\t\t\t\t\t\tname: 'dimmensionOrderBy',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Descending',\n\t\t\t\t\t\t\t\tname: 'desc',\n\t\t\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\t\t\tdescription: 'Whether true, sorts by descending order',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Dimmension Name or ID',\n\t\t\t\t\t\t\t\tname: 'dimensionName',\n\t\t\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\t\t\tloadOptionsMethod: 'getDimensionsGA4',\n\t\t\t\t\t\t\t\t\tloadOptionsDependsOn: ['propertyId.value'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t'Sorts by metric values. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Order Type',\n\t\t\t\t\t\t\t\tname: 'orderType',\n\t\t\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\t\t\tdefault: 'ORDER_TYPE_UNSPECIFIED',\n\t\t\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'Alphanumeric',\n\t\t\t\t\t\t\t\t\t\tvalue: 'ALPHANUMERIC',\n\t\t\t\t\t\t\t\t\t\tdescription: 'Alphanumeric sort by Unicode code point',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'Case Insensitive Alphanumeric',\n\t\t\t\t\t\t\t\t\t\tvalue: 'CASE_INSENSITIVE_ALPHANUMERIC',\n\t\t\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t\t\t'Case insensitive alphanumeric sort by lower case Unicode code point',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'Numeric',\n\t\t\t\t\t\t\t\t\t\tvalue: 'NUMERIC',\n\t\t\t\t\t\t\t\t\t\tdescription: 'Dimension values are converted to numbers before sorting',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'Unspecified',\n\t\t\t\t\t\t\t\t\t\tvalue: 'ORDER_TYPE_UNSPECIFIED',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Return Property Quota',\n\t\t\t\tname: 'returnPropertyQuota',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\tdescription:\n\t\t\t\t\t\"Whether to return the current state of this Analytics Property's quota. Quota is returned in PropertyQuota.\",\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\t'/simple': [false],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n];\n\nexport async function execute(\n\tthis: IExecuteFunctions,\n\tindex: number,\n): Promise<INodeExecutionData[]> {\n\t//migration guide: https://developers.google.com/analytics/devguides/migration/api/reporting-ua-to-ga4#core_reporting\n\tconst propertyId = this.getNodeParameter('propertyId', index, undefined, {\n\t\textractValue: true,\n\t}) as string;\n\n\tconst returnAll = this.getNodeParameter('returnAll', 0);\n\tconst additionalFields = this.getNodeParameter('additionalFields', index);\n\tconst dateRange = this.getNodeParameter('dateRange', index) as string;\n\tconst metricsGA4 = this.getNodeParameter('metricsGA4', index, {}) as IDataObject;\n\tconst dimensionsGA4 = this.getNodeParameter('dimensionsGA4', index, {}) as IDataObject;\n\tconst simple = this.getNodeParameter('simple', index) as boolean;\n\n\tlet responseData: IDataObject[] = [];\n\n\tconst qs: IDataObject = {};\n\tconst body: IDataObject = {\n\t\tdateRanges: prepareDateRange.call(this, dateRange, index),\n\t};\n\n\tif (metricsGA4.metricValues) {\n\t\tconst metrics = (metricsGA4.metricValues as IDataObject[]).map((metric) => {\n\t\t\tswitch (metric.listName) {\n\t\t\t\tcase 'other':\n\t\t\t\t\treturn { name: metric.name };\n\t\t\t\tcase 'custom':\n\t\t\t\t\tconst newMetric = {\n\t\t\t\t\t\tname: metric.name,\n\t\t\t\t\t\texpression: metric.expression,\n\t\t\t\t\t\tinvisible: metric.invisible,\n\t\t\t\t\t};\n\n\t\t\t\t\tif (newMetric.invisible === false) {\n\t\t\t\t\t\tdelete newMetric.invisible;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (newMetric.expression === '') {\n\t\t\t\t\t\tdelete newMetric.expression;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn newMetric;\n\t\t\t\tdefault:\n\t\t\t\t\treturn { name: metric.listName };\n\t\t\t}\n\t\t});\n\t\tif (metrics.length) {\n\t\t\tcheckDuplicates.call(this, metrics, 'name', 'metrics');\n\t\t\tbody.metrics = metrics;\n\t\t}\n\t}\n\n\tif (dimensionsGA4.dimensionValues) {\n\t\tconst dimensions = (dimensionsGA4.dimensionValues as IDataObject[]).map((dimension) => {\n\t\t\tswitch (dimension.listName) {\n\t\t\t\tcase 'other':\n\t\t\t\t\treturn { name: dimension.name };\n\t\t\t\tdefault:\n\t\t\t\t\treturn { name: dimension.listName };\n\t\t\t}\n\t\t});\n\t\tif (dimensions.length) {\n\t\t\tcheckDuplicates.call(this, dimensions, 'name', 'dimensions');\n\t\t\tbody.dimensions = dimensions;\n\t\t}\n\t}\n\n\tif (additionalFields.currencyCode) {\n\t\tbody.currencyCode = additionalFields.currencyCode;\n\t}\n\n\tif (additionalFields.dimensionFiltersUI) {\n\t\tconst { filterExpressionType, expression } = (\n\t\t\tadditionalFields.dimensionFiltersUI as IDataObject\n\t\t).filterExpressions as IDataObject;\n\t\tif (expression) {\n\t\t\tbody.dimensionFilter = {\n\t\t\t\t[filterExpressionType as string]: {\n\t\t\t\t\texpressions: processFilters(expression as IDataObject),\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t}\n\n\tif (additionalFields.metricsFiltersUI) {\n\t\tconst { filterExpressionType, expression } = (additionalFields.metricsFiltersUI as IDataObject)\n\t\t\t.filterExpressions as IDataObject;\n\t\tif (expression) {\n\t\t\tbody.metricFilter = {\n\t\t\t\t[filterExpressionType as string]: {\n\t\t\t\t\texpressions: processFilters(expression as IDataObject),\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t}\n\n\tif (additionalFields.metricAggregations) {\n\t\tbody.metricAggregations = additionalFields.metricAggregations;\n\t}\n\n\tif (additionalFields.keepEmptyRows) {\n\t\tbody.keepEmptyRows = additionalFields.keepEmptyRows;\n\t}\n\n\tif (additionalFields.orderByUI) {\n\t\tlet orderBys: IDataObject[] = [];\n\t\tconst metricOrderBy = (additionalFields.orderByUI as IDataObject)\n\t\t\t.metricOrderBy as IDataObject[];\n\t\tconst dimmensionOrderBy = (additionalFields.orderByUI as IDataObject)\n\t\t\t.dimmensionOrderBy as IDataObject[];\n\t\tif (metricOrderBy) {\n\t\t\torderBys = orderBys.concat(\n\t\t\t\tmetricOrderBy.map((order) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdesc: order.desc,\n\t\t\t\t\t\tmetric: {\n\t\t\t\t\t\t\tmetricName: order.metricName,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t\tif (dimmensionOrderBy) {\n\t\t\torderBys = orderBys.concat(\n\t\t\t\tdimmensionOrderBy.map((order) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdesc: order.desc,\n\t\t\t\t\t\tdimension: {\n\t\t\t\t\t\t\tdimensionName: order.dimensionName,\n\t\t\t\t\t\t\torderType: order.orderType,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t\tbody.orderBys = orderBys;\n\t}\n\n\tif (additionalFields.returnPropertyQuota) {\n\t\tbody.returnPropertyQuota = additionalFields.returnPropertyQuota;\n\t}\n\n\tconst method = 'POST';\n\tconst endpoint = `/v1beta/properties/${propertyId}:runReport`;\n\n\tif (returnAll) {\n\t\tresponseData = await googleApiRequestAllItems.call(this, '', method, endpoint, body, qs);\n\t} else {\n\t\tbody.limit = this.getNodeParameter('limit', 0);\n\t\tresponseData = [await googleApiRequest.call(this, method, endpoint, body, qs)];\n\t}\n\n\tif (responseData?.length && simple) {\n\t\tresponseData = simplifyGA4(responseData[0]);\n\t}\n\n\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\tthis.helpers.returnJsonArray(responseData),\n\t\t{ itemData: { item: index } },\n\t);\n\n\treturn executionData;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,gCAKO;AACP,mBAOO;AACP,uBAA2D;AAEpD,MAAM,cAAiC;AAAA,EAC7C;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS,EAAE,MAAM,QAAQ,OAAO,GAAG;AAAA,IACnC,UAAU;AAAA,IACV,aAAa;AAAA,IACb,MAAM;AAAA,IACN,OAAO;AAAA,MACN;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,aAAa;AAAA,QACb,aAAa;AAAA,UACZ,kBAAkB;AAAA,UAClB,sBAAsB;AAAA,UACtB,YAAY;AAAA,QACb;AAAA,MACD;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,aAAa;AAAA,QACb,YAAY;AAAA,UACX;AAAA,YACC,MAAM;AAAA,YACN,YAAY;AAAA,cACX,OAAO;AAAA,cACP,cAAc;AAAA,YACf;AAAA,UACD;AAAA,QACD;AAAA,QACA,cAAc;AAAA,UACb,MAAM;AAAA,UACN,OAAO;AAAA,QACR;AAAA,MACD;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,aAAa;AAAA,QACb,YAAY;AAAA,UACX;AAAA,YACC,MAAM;AAAA,YACN,YAAY;AAAA,cACX,OAAO;AAAA,cACP,cAAc;AAAA,YACf;AAAA,UACD;AAAA,QACD;AAAA,QACA,KAAK;AAAA,MACN;AAAA,IACD;AAAA,IACA,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,UAAU,CAAC,QAAQ;AAAA,QACnB,WAAW,CAAC,KAAK;AAAA,QACjB,cAAc,CAAC,KAAK;AAAA,MACrB;AAAA,IACD;AAAA,EACD;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA;AAAA,IAEV,SAAS;AAAA,MACR;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,IACD;AAAA,IACA,SAAS;AAAA,IACT,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,UAAU,CAAC,QAAQ;AAAA,QACnB,WAAW,CAAC,KAAK;AAAA,QACjB,cAAc,CAAC,KAAK;AAAA,MACrB;AAAA,IACD;AAAA,EACD;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,aAAS,+BAAiB;AAAA,IAC1B,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,UAAU,CAAC,QAAQ;AAAA,QACnB,WAAW,CAAC,KAAK;AAAA,QACjB,WAAW,CAAC,QAAQ;AAAA,QACpB,cAAc,CAAC,KAAK;AAAA,MACrB;AAAA,IACD;AAAA,EACD;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,aAAS,6BAAe;AAAA,IACxB,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,UAAU,CAAC,QAAQ;AAAA,QACnB,WAAW,CAAC,KAAK;AAAA,QACjB,WAAW,CAAC,QAAQ;AAAA,QACpB,cAAc,CAAC,KAAK;AAAA,MACrB;AAAA,IACD;AAAA,EACD;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS,EAAE,cAAc,CAAC,EAAE,UAAU,aAAa,CAAC,EAAE;AAAA,IACtD,aAAa;AAAA,MACZ,gBAAgB;AAAA,IACjB;AAAA,IACA,aAAa;AAAA,IACb,aACC;AAAA,IACD,SAAS;AAAA,MACR;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,QAAQ;AAAA,UACP,GAAG;AAAA,UACH;AAAA,YACC,aAAa;AAAA,YACb,MAAM;AAAA,YACN,MAAM;AAAA,YACN,SAAS;AAAA,YACT,aACC;AAAA,YACD,aAAa;AAAA,YACb,gBAAgB;AAAA,cACf,MAAM;AAAA,gBACL,UAAU,CAAC,QAAQ;AAAA,cACpB;AAAA,YACD;AAAA,UACD;AAAA,UACA;AAAA,YACC,aAAa;AAAA,YACb,MAAM;AAAA,YACN,MAAM;AAAA,YACN,SAAS;AAAA,YACT,gBAAgB;AAAA,cACf,MAAM;AAAA,gBACL,UAAU,CAAC,QAAQ;AAAA,cACpB;AAAA,YACD;AAAA,YACA,aACC;AAAA,UACF;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,IACA,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,UAAU,CAAC,QAAQ;AAAA,QACnB,WAAW,CAAC,KAAK;AAAA,QACjB,cAAc,CAAC,KAAK;AAAA,MACrB;AAAA,IACD;AAAA,EACD;AAAA,EACA;AAAA;AAAA,IAEC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS,EAAE,iBAAiB,CAAC,EAAE,UAAU,OAAO,CAAC,EAAE;AAAA;AAAA,IAEnD,aAAa;AAAA,MACZ,gBAAgB;AAAA,IACjB;AAAA,IACA,aAAa;AAAA,IACb,aACC;AAAA,IACD,SAAS;AAAA,MACR;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,QAAQ,CAAC,GAAG,2CAAiB;AAAA,MAC9B;AAAA,IACD;AAAA,IACA,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,UAAU,CAAC,QAAQ;AAAA,QACnB,WAAW,CAAC,KAAK;AAAA,QACjB,cAAc,CAAC,KAAK;AAAA,MACrB;AAAA,IACD;AAAA,EACD;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,WAAW,CAAC,KAAK;AAAA,QACjB,UAAU,CAAC,QAAQ;AAAA,QACnB,cAAc,CAAC,KAAK;AAAA,MACrB;AAAA,IACD;AAAA,IACA,SAAS;AAAA,IACT,aAAa;AAAA,EACd;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,WAAW,CAAC,KAAK;AAAA,QACjB,UAAU,CAAC,QAAQ;AAAA,QACnB,cAAc,CAAC,KAAK;AAAA,QACpB,WAAW,CAAC,KAAK;AAAA,MAClB;AAAA,IACD;AAAA,IACA,aAAa;AAAA,MACZ,UAAU;AAAA,MACV,UAAU;AAAA,IACX;AAAA,IACA,SAAS;AAAA,IACT,aAAa;AAAA,EACd;AAAA,EACA;AAAA;AAAA,IAEC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,WAAW,CAAC,KAAK;AAAA,QACjB,UAAU,CAAC,QAAQ;AAAA,QACnB,cAAc,CAAC,KAAK;AAAA,MACrB;AAAA,IACD;AAAA,IACA,SAAS;AAAA,IACT,aAAa;AAAA,EACd;AAAA,EAEA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,SAAS,CAAC;AAAA,IACV,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,UAAU,CAAC,QAAQ;AAAA,QACnB,WAAW,CAAC,KAAK;AAAA,QACjB,cAAc,CAAC,KAAK;AAAA,MACrB;AAAA,IACD;AAAA,IACA,SAAS;AAAA,MACR;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aACC;AAAA,MACF;AAAA,MACA,GAAG;AAAA,MACH;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS,CAAC;AAAA,QACV,SAAS;AAAA,UACR;AAAA,YACC,MAAM;AAAA,YACN,OAAO;AAAA,UACR;AAAA,UACA;AAAA,YACC,MAAM;AAAA,YACN,OAAO;AAAA,UACR;AAAA,UACA;AAAA,YACC,MAAM;AAAA,YACN,OAAO;AAAA,UACR;AAAA,QACD;AAAA,QACA,gBAAgB;AAAA,UACf,MAAM;AAAA,YACL,WAAW,CAAC,KAAK;AAAA,UAClB;AAAA,QACD;AAAA,MACD;AAAA,MACA,GAAG;AAAA,MACH;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aACC;AAAA,MACF;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS,CAAC;AAAA,QACV,aAAa;AAAA,UACZ,gBAAgB;AAAA,QACjB;AAAA,QACA,aAAa;AAAA,QACb,aAAa;AAAA,QACb,SAAS;AAAA,UACR;AAAA,YACC,aAAa;AAAA,YACb,MAAM;AAAA,YACN,QAAQ;AAAA,cACP;AAAA,gBACC,aAAa;AAAA,gBACb,MAAM;AAAA,gBACN,MAAM;AAAA,gBACN,SAAS;AAAA,gBACT,aAAa;AAAA,cACd;AAAA,cACA;AAAA,gBACC,aAAa;AAAA,gBACb,MAAM;AAAA,gBACN,MAAM;AAAA,gBACN,aAAa;AAAA,kBACZ,mBAAmB;AAAA,kBACnB,sBAAsB,CAAC,kBAAkB;AAAA,gBAC1C;AAAA,gBACA,SAAS;AAAA,gBACT,aACC;AAAA,cACF;AAAA,YACD;AAAA,UACD;AAAA,UACA;AAAA,YACC,aAAa;AAAA,YACb,MAAM;AAAA,YACN,QAAQ;AAAA,cACP;AAAA,gBACC,aAAa;AAAA,gBACb,MAAM;AAAA,gBACN,MAAM;AAAA,gBACN,SAAS;AAAA,gBACT,aAAa;AAAA,cACd;AAAA,cACA;AAAA,gBACC,aAAa;AAAA,gBACb,MAAM;AAAA,gBACN,MAAM;AAAA,gBACN,aAAa;AAAA,kBACZ,mBAAmB;AAAA,kBACnB,sBAAsB,CAAC,kBAAkB;AAAA,gBAC1C;AAAA,gBACA,SAAS;AAAA,gBACT,aACC;AAAA,cACF;AAAA,cACA;AAAA,gBACC,aAAa;AAAA,gBACb,MAAM;AAAA,gBACN,MAAM;AAAA,gBACN,SAAS;AAAA,gBACT,SAAS;AAAA,kBACR;AAAA,oBACC,MAAM;AAAA,oBACN,OAAO;AAAA,oBACP,aAAa;AAAA,kBACd;AAAA,kBACA;AAAA,oBACC,MAAM;AAAA,oBACN,OAAO;AAAA,oBACP,aACC;AAAA,kBACF;AAAA,kBACA;AAAA,oBACC,MAAM;AAAA,oBACN,OAAO;AAAA,oBACP,aAAa;AAAA,kBACd;AAAA,kBACA;AAAA,oBACC,MAAM;AAAA,oBACN,OAAO;AAAA,kBACR;AAAA,gBACD;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aACC;AAAA,QACD,gBAAgB;AAAA,UACf,MAAM;AAAA,YACL,WAAW,CAAC,KAAK;AAAA,UAClB;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;AAEA,eAAsB,QAErB,OACgC;AAEhC,QAAM,aAAa,KAAK,iBAAiB,cAAc,OAAO,QAAW;AAAA,IACxE,cAAc;AAAA,EACf,CAAC;AAED,QAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,QAAM,mBAAmB,KAAK,iBAAiB,oBAAoB,KAAK;AACxE,QAAM,YAAY,KAAK,iBAAiB,aAAa,KAAK;AAC1D,QAAM,aAAa,KAAK,iBAAiB,cAAc,OAAO,CAAC,CAAC;AAChE,QAAM,gBAAgB,KAAK,iBAAiB,iBAAiB,OAAO,CAAC,CAAC;AACtE,QAAM,SAAS,KAAK,iBAAiB,UAAU,KAAK;AAEpD,MAAI,eAA8B,CAAC;AAEnC,QAAM,KAAkB,CAAC;AACzB,QAAM,OAAoB;AAAA,IACzB,YAAY,8BAAiB,KAAK,MAAM,WAAW,KAAK;AAAA,EACzD;AAEA,MAAI,WAAW,cAAc;AAC5B,UAAM,UAAW,WAAW,aAA+B,IAAI,CAAC,WAAW;AAC1E,cAAQ,OAAO,UAAU;AAAA,QACxB,KAAK;AACJ,iBAAO,EAAE,MAAM,OAAO,KAAK;AAAA,QAC5B,KAAK;AACJ,gBAAM,YAAY;AAAA,YACjB,MAAM,OAAO;AAAA,YACb,YAAY,OAAO;AAAA,YACnB,WAAW,OAAO;AAAA,UACnB;AAEA,cAAI,UAAU,cAAc,OAAO;AAClC,mBAAO,UAAU;AAAA,UAClB;AAEA,cAAI,UAAU,eAAe,IAAI;AAChC,mBAAO,UAAU;AAAA,UAClB;AAEA,iBAAO;AAAA,QACR;AACC,iBAAO,EAAE,MAAM,OAAO,SAAS;AAAA,MACjC;AAAA,IACD,CAAC;AACD,QAAI,QAAQ,QAAQ;AACnB,mCAAgB,KAAK,MAAM,SAAS,QAAQ,SAAS;AACrD,WAAK,UAAU;AAAA,IAChB;AAAA,EACD;AAEA,MAAI,cAAc,iBAAiB;AAClC,UAAM,aAAc,cAAc,gBAAkC,IAAI,CAAC,cAAc;AACtF,cAAQ,UAAU,UAAU;AAAA,QAC3B,KAAK;AACJ,iBAAO,EAAE,MAAM,UAAU,KAAK;AAAA,QAC/B;AACC,iBAAO,EAAE,MAAM,UAAU,SAAS;AAAA,MACpC;AAAA,IACD,CAAC;AACD,QAAI,WAAW,QAAQ;AACtB,mCAAgB,KAAK,MAAM,YAAY,QAAQ,YAAY;AAC3D,WAAK,aAAa;AAAA,IACnB;AAAA,EACD;AAEA,MAAI,iBAAiB,cAAc;AAClC,SAAK,eAAe,iBAAiB;AAAA,EACtC;AAEA,MAAI,iBAAiB,oBAAoB;AACxC,UAAM,EAAE,sBAAsB,WAAW,IACxC,iBAAiB,mBAChB;AACF,QAAI,YAAY;AACf,WAAK,kBAAkB;AAAA,QACtB,CAAC,oBAA8B,GAAG;AAAA,UACjC,iBAAa,6BAAe,UAAyB;AAAA,QACtD;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAEA,MAAI,iBAAiB,kBAAkB;AACtC,UAAM,EAAE,sBAAsB,WAAW,IAAK,iBAAiB,iBAC7D;AACF,QAAI,YAAY;AACf,WAAK,eAAe;AAAA,QACnB,CAAC,oBAA8B,GAAG;AAAA,UACjC,iBAAa,6BAAe,UAAyB;AAAA,QACtD;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAEA,MAAI,iBAAiB,oBAAoB;AACxC,SAAK,qBAAqB,iBAAiB;AAAA,EAC5C;AAEA,MAAI,iBAAiB,eAAe;AACnC,SAAK,gBAAgB,iBAAiB;AAAA,EACvC;AAEA,MAAI,iBAAiB,WAAW;AAC/B,QAAI,WAA0B,CAAC;AAC/B,UAAM,gBAAiB,iBAAiB,UACtC;AACF,UAAM,oBAAqB,iBAAiB,UAC1C;AACF,QAAI,eAAe;AAClB,iBAAW,SAAS;AAAA,QACnB,cAAc,IAAI,CAAC,UAAU;AAC5B,iBAAO;AAAA,YACN,MAAM,MAAM;AAAA,YACZ,QAAQ;AAAA,cACP,YAAY,MAAM;AAAA,YACnB;AAAA,UACD;AAAA,QACD,CAAC;AAAA,MACF;AAAA,IACD;AACA,QAAI,mBAAmB;AACtB,iBAAW,SAAS;AAAA,QACnB,kBAAkB,IAAI,CAAC,UAAU;AAChC,iBAAO;AAAA,YACN,MAAM,MAAM;AAAA,YACZ,WAAW;AAAA,cACV,eAAe,MAAM;AAAA,cACrB,WAAW,MAAM;AAAA,YAClB;AAAA,UACD;AAAA,QACD,CAAC;AAAA,MACF;AAAA,IACD;AACA,SAAK,WAAW;AAAA,EACjB;AAEA,MAAI,iBAAiB,qBAAqB;AACzC,SAAK,sBAAsB,iBAAiB;AAAA,EAC7C;AAEA,QAAM,SAAS;AACf,QAAM,WAAW,sBAAsB,UAAU;AAEjD,MAAI,WAAW;AACd,mBAAe,MAAM,0CAAyB,KAAK,MAAM,IAAI,QAAQ,UAAU,MAAM,EAAE;AAAA,EACxF,OAAO;AACN,SAAK,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC7C,mBAAe,CAAC,MAAM,kCAAiB,KAAK,MAAM,QAAQ,UAAU,MAAM,EAAE,CAAC;AAAA,EAC9E;AAEA,MAAI,cAAc,UAAU,QAAQ;AACnC,uBAAe,0BAAY,aAAa,CAAC,CAAC;AAAA,EAC3C;AAEA,QAAM,gBAAgB,KAAK,QAAQ;AAAA,IAClC,KAAK,QAAQ,gBAAgB,YAAY;AAAA,IACzC,EAAE,UAAU,EAAE,MAAM,MAAM,EAAE;AAAA,EAC7B;AAEA,SAAO;AACR;","names":[]}