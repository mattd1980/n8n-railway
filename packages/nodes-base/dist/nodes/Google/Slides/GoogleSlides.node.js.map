{"version":3,"sources":["../../../../nodes/Google/Slides/GoogleSlides.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes } from 'n8n-workflow';\n\nimport { googleApiRequest } from './GenericFunctions';\n\nexport class GoogleSlides implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Google Slides',\n\t\tname: 'googleSlides',\n\t\ticon: 'file:googleslides.svg',\n\t\tgroup: ['input', 'output'],\n\t\tversion: [1, 2],\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume the Google Slides API',\n\t\tdefaults: {\n\t\t\tname: 'Google Slides',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'googleApi',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['serviceAccount'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'googleSlidesOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['oAuth2'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Authentication',\n\t\t\t\tname: 'authentication',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'OAuth2',\n\t\t\t\t\t\tvalue: 'oAuth2',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Service Account',\n\t\t\t\t\t\tvalue: 'serviceAccount',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'serviceAccount',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\t'@version': [1],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Authentication',\n\t\t\t\tname: 'authentication',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-display-name-miscased\n\t\t\t\t\t\tname: 'OAuth2 (recommended)',\n\t\t\t\t\t\tvalue: 'oAuth2',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Service Account',\n\t\t\t\t\t\tvalue: 'serviceAccount',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'oAuth2',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\t'@version': [2],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Page',\n\t\t\t\t\t\tvalue: 'page',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Presentation',\n\t\t\t\t\t\tvalue: 'presentation',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'presentation',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Create',\n\t\t\t\t\t\tvalue: 'create',\n\t\t\t\t\t\tdescription: 'Create a presentation',\n\t\t\t\t\t\taction: 'Create a presentation',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get',\n\t\t\t\t\t\tvalue: 'get',\n\t\t\t\t\t\tdescription: 'Get a presentation',\n\t\t\t\t\t\taction: 'Get a presentation',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get Slides',\n\t\t\t\t\t\tvalue: 'getSlides',\n\t\t\t\t\t\tdescription: 'Get presentation slides',\n\t\t\t\t\t\taction: 'Get slides from a presentation',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Replace Text',\n\t\t\t\t\t\tvalue: 'replaceText',\n\t\t\t\t\t\tdescription: 'Replace text in a presentation',\n\t\t\t\t\t\taction: 'Replace text in a presentation',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['presentation'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: 'create',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get',\n\t\t\t\t\t\tvalue: 'get',\n\t\t\t\t\t\tdescription: 'Get a page',\n\t\t\t\t\t\taction: 'Get a page',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get Thumbnail',\n\t\t\t\t\t\tvalue: 'getThumbnail',\n\t\t\t\t\t\tdescription: 'Get a thumbnail',\n\t\t\t\t\t\taction: 'Get the thumbnail for a page',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['page'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: 'get',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Title',\n\t\t\t\tname: 'title',\n\t\t\t\tdescription: 'Title of the presentation to create',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['presentation'],\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Presentation ID',\n\t\t\t\tname: 'presentationId',\n\t\t\t\tdescription:\n\t\t\t\t\t'ID of the presentation to retrieve. Found in the presentation URL: <code>https://docs.google.com/presentation/d/PRESENTATION_ID/edit</code>',\n\t\t\t\tplaceholder: '1wZtNFZ8MO-WKrxhYrOLMvyiqSgFwdSz5vn8_l_7eNqw',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['presentation', 'page'],\n\t\t\t\t\t\toperation: ['get', 'getThumbnail', 'getSlides', 'replaceText'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Return All',\n\t\t\t\tname: 'returnAll',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['getSlides'],\n\t\t\t\t\t\tresource: ['presentation'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: 'Whether to return all results or only up to a given limit',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Limit',\n\t\t\t\tname: 'limit',\n\t\t\t\ttype: 'number',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['getSlides'],\n\t\t\t\t\t\tresource: ['presentation'],\n\t\t\t\t\t\treturnAll: [false],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tminValue: 1,\n\t\t\t\t\tmaxValue: 500,\n\t\t\t\t},\n\t\t\t\tdefault: 100,\n\t\t\t\tdescription: 'Max number of results to return',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Page Object ID',\n\t\t\t\tname: 'pageObjectId',\n\t\t\t\tdescription: 'ID of the page object to retrieve',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['page'],\n\t\t\t\t\t\toperation: ['get', 'getThumbnail'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Texts To Replace',\n\t\t\t\tname: 'textUi',\n\t\t\t\tplaceholder: 'Add Text',\n\t\t\t\ttype: 'fixedCollection',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tmultipleValues: true,\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['presentation'],\n\t\t\t\t\t\toperation: ['replaceText'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: {},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'textValues',\n\t\t\t\t\t\tdisplayName: 'Text',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Match Case',\n\t\t\t\t\t\t\t\tname: 'matchCase',\n\t\t\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t'Whether the search should respect case. True : the search is case sensitive. False : the search is case insensitive.',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Slide Names or IDs',\n\t\t\t\t\t\t\t\tname: 'pageObjectIds',\n\t\t\t\t\t\t\t\ttype: 'multiOptions',\n\t\t\t\t\t\t\t\tdefault: [],\n\t\t\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\t\t\tloadOptionsMethod: 'getPages',\n\t\t\t\t\t\t\t\t\tloadOptionsDependsOn: ['presentationId'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t'If non-empty, limits the matches to slide elements only on the given slides. Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Search For',\n\t\t\t\t\t\t\t\tname: 'text',\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\tdescription: 'The text to search for in the slide',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Replace With',\n\t\t\t\t\t\t\t\tname: 'replaceText',\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\tdescription: 'The text that will replace the matched text',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Options',\n\t\t\t\tname: 'options',\n\t\t\t\ttype: 'collection',\n\t\t\t\tplaceholder: 'Add option',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['replaceText'],\n\t\t\t\t\t\tresource: ['presentation'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: {},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Revision ID',\n\t\t\t\t\t\tname: 'revisionId',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\"The revision ID of the presentation required for the write request. If specified and the requiredRevisionId doesn't exactly match the presentation's current revisionId, the request will not be processed and will return a 400 bad request error.\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\n\t\t\t{\n\t\t\t\tdisplayName: 'Download',\n\t\t\t\tname: 'download',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['page'],\n\t\t\t\t\t\toperation: ['getThumbnail'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-description-boolean-without-whether\n\t\t\t\tdescription: 'Name of the binary property to which to write the data of the read page',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Put Output File in Field',\n\t\t\t\tname: 'binaryProperty',\n\t\t\t\ttype: 'string',\n\t\t\t\trequired: true,\n\t\t\t\tdefault: 'data',\n\t\t\t\thint: 'The name of the output binary field to put the file in',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['page'],\n\t\t\t\t\t\toperation: ['getThumbnail'],\n\t\t\t\t\t\tdownload: [true],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get all the pages to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getPages(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst presentationId = this.getCurrentNodeParameter('presentationId') as string;\n\t\t\t\tconst { slides } = await googleApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t`/presentations/${presentationId}`,\n\t\t\t\t\t{},\n\t\t\t\t\t{ fields: 'slides' },\n\t\t\t\t);\n\t\t\t\tfor (const slide of slides) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: slide.objectId,\n\t\t\t\t\t\tvalue: slide.objectId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\tlet responseData;\n\t\tconst returnData: INodeExecutionData[] = [];\n\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'page') {\n\t\t\t\t\t// *********************************************************************\n\t\t\t\t\t//                              page\n\t\t\t\t\t// *********************************************************************\n\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//            page: get\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst presentationId = this.getNodeParameter('presentationId', i) as string;\n\t\t\t\t\t\tconst pageObjectId = this.getNodeParameter('pageObjectId', i) as string;\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/presentations/${presentationId}/pages/${pageObjectId}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject),\n\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t\t} else if (operation === 'getThumbnail') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         page: getThumbnail\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst presentationId = this.getNodeParameter('presentationId', i) as string;\n\t\t\t\t\t\tconst pageObjectId = this.getNodeParameter('pageObjectId', i) as string;\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/presentations/${presentationId}/pages/${pageObjectId}/thumbnail`,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst download = this.getNodeParameter('download', 0);\n\t\t\t\t\t\tif (download) {\n\t\t\t\t\t\t\tconst binaryProperty = this.getNodeParameter('binaryProperty', i);\n\n\t\t\t\t\t\t\tconst data = await this.helpers.request({\n\t\t\t\t\t\t\t\turi: responseData.contentUrl,\n\t\t\t\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\t\t\t\tjson: false,\n\t\t\t\t\t\t\t\tencoding: null,\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tconst fileName = pageObjectId + '.png';\n\t\t\t\t\t\t\tconst binaryData = await this.helpers.prepareBinaryData(\n\t\t\t\t\t\t\t\tdata as Buffer,\n\t\t\t\t\t\t\t\tfileName || fileName,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tjson: responseData,\n\t\t\t\t\t\t\t\t\t\tbinary: {\n\t\t\t\t\t\t\t\t\t\t\t[binaryProperty]: binaryData,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject),\n\t\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'presentation') {\n\t\t\t\t\t// *********************************************************************\n\t\t\t\t\t//                           presentation\n\t\t\t\t\t// *********************************************************************\n\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//       presentation: create\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\ttitle: this.getNodeParameter('title', i) as string,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(this, 'POST', '/presentations', body);\n\n\t\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject),\n\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t\t} else if (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         presentation: get\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst presentationId = this.getNodeParameter('presentationId', i) as string;\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/presentations/${presentationId}`,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject),\n\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t\t} else if (operation === 'getSlides') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//      presentation: getSlides\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', 0);\n\t\t\t\t\t\tconst presentationId = this.getNodeParameter('presentationId', i) as string;\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/presentations/${presentationId}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t{ fields: 'slides' },\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.slides;\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = responseData.slice(0, limit);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject),\n\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t\t} else if (operation === 'replaceText') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//      presentation: replaceText\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\tconst presentationId = this.getNodeParameter('presentationId', i) as string;\n\t\t\t\t\t\tconst texts = this.getNodeParameter('textUi.textValues', i, []) as IDataObject[];\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tconst requests = texts.map((text) => {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\treplaceAllText: {\n\t\t\t\t\t\t\t\t\treplaceText: text.replaceText,\n\t\t\t\t\t\t\t\t\tpageObjectIds: text.pageObjectIds || [],\n\t\t\t\t\t\t\t\t\tcontainsText: {\n\t\t\t\t\t\t\t\t\t\ttext: text.text,\n\t\t\t\t\t\t\t\t\t\tmatchCase: text.matchCase,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\trequests,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (options.revisionId) {\n\t\t\t\t\t\t\tbody.writeControl = {\n\t\t\t\t\t\t\t\trequiredRevisionId: options.revisionId as string,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/presentations/${presentationId}:batchUpdate`,\n\t\t\t\t\t\t\t{ requests },\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject),\n\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":[]}