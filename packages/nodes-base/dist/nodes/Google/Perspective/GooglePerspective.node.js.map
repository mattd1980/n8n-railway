{"version":3,"sources":["../../../../nodes/Google/Perspective/GooglePerspective.node.ts"],"sourcesContent":["import ISO6391 from 'iso-639-1';\nimport type {\n\tIExecuteFunctions,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n\tJsonObject,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport { googleApiRequest } from './GenericFunctions';\nimport type {\n\tAttributesValuesUi,\n\tCommentAnalyzeBody,\n\tLanguage,\n\tRequestedAttributes,\n} from './types';\n\nexport class GooglePerspective implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Google Perspective',\n\t\tname: 'googlePerspective',\n\t\ticon: { light: 'file:googlePerspective.svg', dark: 'file:googlePerspective.dark.svg' },\n\t\tgroup: ['transform'],\n\t\tversion: 1,\n\t\tdescription: 'Consume Google Perspective API',\n\t\tsubtitle: '={{$parameter[\"operation\"]}}',\n\t\tdefaults: {\n\t\t\tname: 'Google Perspective',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'googlePerspectiveOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Analyze Comment',\n\t\t\t\t\t\tvalue: 'analyzeComment',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'analyzeComment',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Text',\n\t\t\t\tname: 'text',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['analyzeComment'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Attributes to Analyze',\n\t\t\t\tname: 'requestedAttributesUi',\n\t\t\t\ttype: 'fixedCollection',\n\t\t\t\tdefault: {},\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tmultipleValues: true,\n\t\t\t\t},\n\t\t\t\tplaceholder: 'Add Atrribute',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['analyzeComment'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Properties',\n\t\t\t\t\t\tname: 'requestedAttributesValues',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Attribute Name',\n\t\t\t\t\t\t\t\tname: 'attributeName',\n\t\t\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'Flirtation',\n\t\t\t\t\t\t\t\t\t\tvalue: 'flirtation',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'Identity Attack',\n\t\t\t\t\t\t\t\t\t\tvalue: 'identity_attack',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'Insult',\n\t\t\t\t\t\t\t\t\t\tvalue: 'insult',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'Profanity',\n\t\t\t\t\t\t\t\t\t\tvalue: 'profanity',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'Severe Toxicity',\n\t\t\t\t\t\t\t\t\t\tvalue: 'severe_toxicity',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'Sexually Explicit',\n\t\t\t\t\t\t\t\t\t\tvalue: 'sexually_explicit',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'Threat',\n\t\t\t\t\t\t\t\t\t\tvalue: 'threat',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'Toxicity',\n\t\t\t\t\t\t\t\t\t\tvalue: 'toxicity',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t'Attribute to analyze in the text. Details <a href=\"https://developers.perspectiveapi.com/s/about-the-api-attributes-and-languages\">here</a>.',\n\t\t\t\t\t\t\t\tdefault: 'flirtation',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Score Threshold',\n\t\t\t\t\t\t\t\tname: 'scoreThreshold',\n\t\t\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\t\t\tnumberPrecision: 2,\n\t\t\t\t\t\t\t\t\tminValue: 0,\n\t\t\t\t\t\t\t\t\tmaxValue: 1,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t'Score above which to return results. At zero, all scores are returned.',\n\t\t\t\t\t\t\t\tdefault: 0,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Options',\n\t\t\t\tname: 'options',\n\t\t\t\ttype: 'collection',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['analyzeComment'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: {},\n\t\t\t\tplaceholder: 'Add option',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Language Name or ID',\n\t\t\t\t\t\tname: 'languages',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tloadOptionsMethod: 'getLanguages',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Languages of the text input. If unspecified, the API will auto-detect the comment language. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get all the available languages to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getLanguages(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst supportedLanguages = [\n\t\t\t\t\t'English',\n\t\t\t\t\t'Spanish',\n\t\t\t\t\t'French',\n\t\t\t\t\t'German',\n\t\t\t\t\t'Portuguese',\n\t\t\t\t\t'Italian',\n\t\t\t\t\t'Russian',\n\t\t\t\t];\n\n\t\t\t\tconst languages = ISO6391.getAllNames().filter((language: string) =>\n\t\t\t\t\tsupportedLanguages.includes(language),\n\t\t\t\t);\n\t\t\t\tfor (const language of languages) {\n\t\t\t\t\tconst languageName = language;\n\t\t\t\t\tconst languageId = ISO6391.getCode(language);\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: languageName,\n\t\t\t\t\t\tvalue: languageId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tlet responseData;\n\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\ttry {\n\t\t\t\tif (operation === 'analyzeComment') {\n\t\t\t\t\t// https://developers.perspectiveapi.com/s/about-the-api-methods\n\n\t\t\t\t\tconst attributes = this.getNodeParameter(\n\t\t\t\t\t\t'requestedAttributesUi.requestedAttributesValues',\n\t\t\t\t\t\ti,\n\t\t\t\t\t\t[],\n\t\t\t\t\t) as AttributesValuesUi[];\n\n\t\t\t\t\tif (!attributes.length) {\n\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t'Please enter at least one attribute to analyze.',\n\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst requestedAttributes = attributes.reduce<RequestedAttributes>((acc, cur) => {\n\t\t\t\t\t\treturn Object.assign(acc, {\n\t\t\t\t\t\t\t[cur.attributeName.toUpperCase()]: {\n\t\t\t\t\t\t\t\tscoreType: 'probability',\n\t\t\t\t\t\t\t\tscoreThreshold: cur.scoreThreshold,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}, {});\n\n\t\t\t\t\tconst body: CommentAnalyzeBody = {\n\t\t\t\t\t\tcomment: {\n\t\t\t\t\t\t\ttype: 'PLAIN_TEXT',\n\t\t\t\t\t\t\ttext: this.getNodeParameter('text', i) as string,\n\t\t\t\t\t\t},\n\t\t\t\t\t\trequestedAttributes,\n\t\t\t\t\t};\n\n\t\t\t\t\tconst { languages } = this.getNodeParameter('options', i) as { languages: Language };\n\n\t\t\t\t\tif (languages?.length) {\n\t\t\t\t\t\tbody.languages = languages;\n\t\t\t\t\t}\n\n\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t'/v1alpha1/comments:analyze',\n\t\t\t\t\t\tbody,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\tthis.helpers.returnJsonArray(responseData as JsonObject),\n\t\t\t\t{ itemData: { item: i } },\n\t\t\t);\n\n\t\t\treturnData.push(...executionData);\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":["ISO6391"]}