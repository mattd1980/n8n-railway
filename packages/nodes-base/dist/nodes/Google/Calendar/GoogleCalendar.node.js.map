{"version":3,"sources":["../../../../nodes/Google/Calendar/GoogleCalendar.node.ts"],"sourcesContent":["import moment from 'moment-timezone';\nimport type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n\tJsonObject,\n\tNodeExecutionHint,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeApiError, NodeOperationError } from 'n8n-workflow';\nimport { v4 as uuid } from 'uuid';\n\nimport { calendarFields, calendarOperations } from './CalendarDescription';\nimport { eventFields, eventOperations } from './EventDescription';\nimport type { IEvent, RecurringEventInstance } from './EventInterface';\nimport {\n\taddNextOccurrence,\n\taddTimezoneToDate,\n\tdateObjectToISO,\n\tencodeURIComponentOnce,\n\teventExtendYearIntoFuture,\n\tgetCalendars,\n\tgetTimezones,\n\tgoogleApiRequest,\n\tgoogleApiRequestAllItems,\n\tgoogleApiRequestWithRetries,\n\ttype RecurrentEvent,\n} from './GenericFunctions';\nimport { sortItemKeysByPriorityList } from '../../../utils/utilities';\n\nexport class GoogleCalendar implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Google Calendar',\n\t\tname: 'googleCalendar',\n\t\ticon: 'file:googleCalendar.svg',\n\t\tgroup: ['input'],\n\t\tversion: [1, 1.1, 1.2, 1.3],\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume Google Calendar API',\n\t\tdefaults: {\n\t\t\tname: 'Google Calendar',\n\t\t},\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tusableAsTool: true,\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'googleCalendarOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Calendar',\n\t\t\t\t\t\tvalue: 'calendar',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Event',\n\t\t\t\t\t\tvalue: 'event',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'event',\n\t\t\t},\n\t\t\t...calendarOperations,\n\t\t\t...calendarFields,\n\t\t\t...eventOperations,\n\t\t\t...eventFields,\n\t\t\t{\n\t\t\t\tdisplayName:\n\t\t\t\t\t'This node will use the time zone set in n8nâ€™s settings, but you can override this in the workflow settings',\n\t\t\t\tname: 'useN8nTimeZone',\n\t\t\t\ttype: 'notice',\n\t\t\t\tdefault: '',\n\t\t\t},\n\t\t],\n\t};\n\n\tmethods = {\n\t\tlistSearch: {\n\t\t\tgetCalendars,\n\t\t\tgetTimezones,\n\t\t},\n\t\tloadOptions: {\n\t\t\t// Get all the calendars to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getConferenceSolutions(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst calendar = this.getCurrentNodeParameter('calendar', { extractValue: true }) as string;\n\t\t\t\tconst possibleSolutions: IDataObject = {\n\t\t\t\t\teventHangout: 'Google Hangout',\n\t\t\t\t\teventNamedHangout: 'Google Hangout Classic',\n\t\t\t\t\thangoutsMeet: 'Google Meet',\n\t\t\t\t};\n\t\t\t\tconst {\n\t\t\t\t\tconferenceProperties: { allowedConferenceSolutionTypes },\n\t\t\t\t} = await googleApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t`/calendar/v3/users/me/calendarList/${calendar}`,\n\t\t\t\t);\n\t\t\t\tfor (const solution of allowedConferenceSolutionTypes) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: possibleSolutions[solution] as string,\n\t\t\t\t\t\tvalue: solution,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the colors to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getColors(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst { event } = await googleApiRequest.call(this, 'GET', '/calendar/v3/colors');\n\t\t\t\tfor (const key of Object.keys(event as IDataObject)) {\n\t\t\t\t\tconst colorName = `Background: ${event[key].background} - Foreground: ${event[key].foreground}`;\n\t\t\t\t\tconst colorId = key;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: `${colorName}`,\n\t\t\t\t\t\tvalue: colorId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst length = items.length;\n\t\tconst qs: IDataObject = {};\n\t\tconst hints: NodeExecutionHint[] = [];\n\t\tlet responseData;\n\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\t\tconst timezone = this.getTimezone();\n\t\tconst nodeVersion = this.getNode().typeVersion;\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'calendar') {\n\t\t\t\t\t//https://developers.google.com/calendar/v3/reference/freebusy/query\n\t\t\t\t\tif (operation === 'availability') {\n\t\t\t\t\t\t// we need to decode once because calendar used to be saved encoded\n\t\t\t\t\t\tconst calendarId = decodeURIComponent(\n\t\t\t\t\t\t\tthis.getNodeParameter('calendar', i, '', { extractValue: true }) as string,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst timeMin = dateObjectToISO(this.getNodeParameter('timeMin', i));\n\t\t\t\t\t\tconst timeMax = dateObjectToISO(this.getNodeParameter('timeMax', i));\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tconst outputFormat = options.outputFormat || 'availability';\n\t\t\t\t\t\tconst tz = this.getNodeParameter('options.timezone', i, '', {\n\t\t\t\t\t\t\textractValue: true,\n\t\t\t\t\t\t}) as string;\n\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\ttimeMin: moment(timeMin).utc().format(),\n\t\t\t\t\t\t\ttimeMax: moment(timeMax).utc().format(),\n\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tid: calendarId,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\ttimeZone: tz || timezone,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/calendar/v3/freeBusy',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (responseData.calendars[calendarId].errors) {\n\t\t\t\t\t\t\tthrow new NodeApiError(\n\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\tresponseData.calendars[calendarId] as JsonObject,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (outputFormat === 'availability') {\n\t\t\t\t\t\t\tresponseData = {\n\t\t\t\t\t\t\t\tavailable: !responseData.calendars[calendarId].busy.length,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else if (outputFormat === 'bookedSlots') {\n\t\t\t\t\t\t\tresponseData = responseData.calendars[calendarId].busy;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'event') {\n\t\t\t\t\t//https://developers.google.com/calendar/v3/reference/events/insert\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst calendarId = encodeURIComponentOnce(\n\t\t\t\t\t\t\tthis.getNodeParameter('calendar', i, '', { extractValue: true }) as string,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst start = dateObjectToISO(this.getNodeParameter('start', i));\n\t\t\t\t\t\tconst end = dateObjectToISO(this.getNodeParameter('end', i));\n\t\t\t\t\t\tconst useDefaultReminders = this.getNodeParameter('useDefaultReminders', i) as boolean;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tif (additionalFields.maxAttendees) {\n\t\t\t\t\t\t\tqs.maxAttendees = additionalFields.maxAttendees as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.sendNotifications) {\n\t\t\t\t\t\t\tqs.sendNotifications = additionalFields.sendNotifications as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.sendUpdates) {\n\t\t\t\t\t\t\tqs.sendUpdates = additionalFields.sendUpdates as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst body: IEvent = {\n\t\t\t\t\t\t\tstart: {\n\t\t\t\t\t\t\t\tdateTime: moment.tz(start, timezone).utc().format(),\n\t\t\t\t\t\t\t\ttimeZone: timezone,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tend: {\n\t\t\t\t\t\t\t\tdateTime: moment.tz(end, timezone).utc().format(),\n\t\t\t\t\t\t\t\ttimeZone: timezone,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (additionalFields.attendees) {\n\t\t\t\t\t\t\tbody.attendees = [];\n\t\t\t\t\t\t\t(additionalFields.attendees as string[]).forEach((attendee) => {\n\t\t\t\t\t\t\t\tbody.attendees!.push.apply(\n\t\t\t\t\t\t\t\t\tbody.attendees,\n\t\t\t\t\t\t\t\t\tattendee\n\t\t\t\t\t\t\t\t\t\t.split(',')\n\t\t\t\t\t\t\t\t\t\t.map((a) => a.trim())\n\t\t\t\t\t\t\t\t\t\t.map((email) => ({ email })),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.color) {\n\t\t\t\t\t\t\tbody.colorId = additionalFields.color as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.description) {\n\t\t\t\t\t\t\tbody.description = additionalFields.description as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.guestsCanInviteOthers) {\n\t\t\t\t\t\t\tbody.guestsCanInviteOthers = additionalFields.guestsCanInviteOthers as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.guestsCanModify) {\n\t\t\t\t\t\t\tbody.guestsCanModify = additionalFields.guestsCanModify as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.guestsCanSeeOtherGuests) {\n\t\t\t\t\t\t\tbody.guestsCanSeeOtherGuests = additionalFields.guestsCanSeeOtherGuests as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.id) {\n\t\t\t\t\t\t\tbody.id = additionalFields.id as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.location) {\n\t\t\t\t\t\t\tbody.location = additionalFields.location as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.summary) {\n\t\t\t\t\t\t\tbody.summary = additionalFields.summary as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.showMeAs) {\n\t\t\t\t\t\t\tbody.transparency = additionalFields.showMeAs as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.visibility) {\n\t\t\t\t\t\t\tbody.visibility = additionalFields.visibility as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!useDefaultReminders) {\n\t\t\t\t\t\t\tconst reminders = (this.getNodeParameter('remindersUi', i) as IDataObject)\n\t\t\t\t\t\t\t\t.remindersValues as IDataObject[];\n\t\t\t\t\t\t\tbody.reminders = {\n\t\t\t\t\t\t\t\tuseDefault: false,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tif (reminders) {\n\t\t\t\t\t\t\t\tbody.reminders.overrides = reminders;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.allday === 'yes') {\n\t\t\t\t\t\t\tbody.start = {\n\t\t\t\t\t\t\t\tdate: timezone\n\t\t\t\t\t\t\t\t\t? moment.tz(start, timezone).utc(true).format('YYYY-MM-DD')\n\t\t\t\t\t\t\t\t\t: moment.tz(start, moment.tz.guess()).utc(true).format('YYYY-MM-DD'),\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tbody.end = {\n\t\t\t\t\t\t\t\tdate: timezone\n\t\t\t\t\t\t\t\t\t? moment.tz(end, timezone).utc(true).format('YYYY-MM-DD')\n\t\t\t\t\t\t\t\t\t: moment.tz(end, moment.tz.guess()).utc(true).format('YYYY-MM-DD'),\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//exampel: RRULE:FREQ=WEEKLY;INTERVAL=2;COUNT=10;UNTIL=20110701T170000Z\n\t\t\t\t\t\t//https://icalendar.org/iCalendar-RFC-5545/3-8-5-3-recurrence-rule.html\n\t\t\t\t\t\tbody.recurrence = [];\n\t\t\t\t\t\tif (additionalFields.rrule) {\n\t\t\t\t\t\t\tbody.recurrence = [`RRULE:${additionalFields.rrule}`];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (additionalFields.repeatHowManyTimes && additionalFields.repeatUntil) {\n\t\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t\t\"You can set either 'Repeat How Many Times' or 'Repeat Until' but not both\",\n\t\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.repeatFrecuency) {\n\t\t\t\t\t\t\t\tbody.recurrence?.push(\n\t\t\t\t\t\t\t\t\t`FREQ=${(additionalFields.repeatFrecuency as string).toUpperCase()};`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.repeatHowManyTimes) {\n\t\t\t\t\t\t\t\tbody.recurrence?.push(`COUNT=${additionalFields.repeatHowManyTimes};`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.repeatUntil) {\n\t\t\t\t\t\t\t\tconst repeatUntil = moment(additionalFields.repeatUntil as string)\n\t\t\t\t\t\t\t\t\t.utc()\n\t\t\t\t\t\t\t\t\t.format('YYYYMMDDTHHmmss');\n\t\t\t\t\t\t\t\tbody.recurrence?.push(`UNTIL=${repeatUntil}Z`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (body.recurrence.length !== 0) {\n\t\t\t\t\t\t\t\tbody.recurrence = [`RRULE:${body.recurrence.join('')}`];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.conferenceDataUi) {\n\t\t\t\t\t\t\tconst conferenceData = (additionalFields.conferenceDataUi as IDataObject)\n\t\t\t\t\t\t\t\t.conferenceDataValues as IDataObject;\n\t\t\t\t\t\t\tif (conferenceData) {\n\t\t\t\t\t\t\t\tqs.conferenceDataVersion = 1;\n\t\t\t\t\t\t\t\tbody.conferenceData = {\n\t\t\t\t\t\t\t\t\tcreateRequest: {\n\t\t\t\t\t\t\t\t\t\trequestId: uuid(),\n\t\t\t\t\t\t\t\t\t\tconferenceSolution: {\n\t\t\t\t\t\t\t\t\t\t\ttype: conferenceData.conferenceSolution as string,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/calendar/v3/calendars/${calendarId}/events`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developers.google.com/calendar/v3/reference/events/delete\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst calendarId = encodeURIComponentOnce(\n\t\t\t\t\t\t\tthis.getNodeParameter('calendar', i, '', { extractValue: true }) as string,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst eventId = this.getNodeParameter('eventId', i) as string;\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tif (options.sendUpdates) {\n\t\t\t\t\t\t\tqs.sendUpdates = options.sendUpdates as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/calendar/v3/calendars/${calendarId}/events/${eventId}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t\t//https://developers.google.com/calendar/v3/reference/events/get\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst calendarId = encodeURIComponentOnce(\n\t\t\t\t\t\t\tthis.getNodeParameter('calendar', i, '', { extractValue: true }) as string,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst eventId = this.getNodeParameter('eventId', i) as string;\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tconst tz = this.getNodeParameter('options.timeZone', i, '', {\n\t\t\t\t\t\t\textractValue: true,\n\t\t\t\t\t\t}) as string;\n\t\t\t\t\t\tif (options.maxAttendees) {\n\t\t\t\t\t\t\tqs.maxAttendees = options.maxAttendees as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tz) {\n\t\t\t\t\t\t\tqs.timeZone = tz;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = (await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/calendar/v3/calendars/${calendarId}/events/${eventId}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t)) as IDataObject;\n\n\t\t\t\t\t\tif (responseData) {\n\t\t\t\t\t\t\tif (nodeVersion >= 1.3 && options.returnNextInstance && responseData.recurrence) {\n\t\t\t\t\t\t\t\tconst eventInstances =\n\t\t\t\t\t\t\t\t\t((\n\t\t\t\t\t\t\t\t\t\t(await googleApiRequest.call(\n\t\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t\t\t`/calendar/v3/calendars/${calendarId}/events/${responseData.id}/instances`,\n\t\t\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\ttimeMin: new Date().toISOString(),\n\t\t\t\t\t\t\t\t\t\t\t\tmaxResults: 1,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t)) as IDataObject\n\t\t\t\t\t\t\t\t\t).items as IDataObject[]) || [];\n\t\t\t\t\t\t\t\tresponseData = eventInstances[0] ? [eventInstances[0]] : [responseData];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresponseData = addNextOccurrence([responseData as RecurrentEvent]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://developers.google.com/calendar/v3/reference/events/list\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst calendarId = encodeURIComponentOnce(\n\t\t\t\t\t\t\tthis.getNodeParameter('calendar', i, '', { extractValue: true }) as string,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tconst tz = this.getNodeParameter('options.timeZone', i, '', {\n\t\t\t\t\t\t\textractValue: true,\n\t\t\t\t\t\t}) as string;\n\n\t\t\t\t\t\tif (nodeVersion >= 1.3) {\n\t\t\t\t\t\t\tconst timeMin = dateObjectToISO(this.getNodeParameter('timeMin', i));\n\t\t\t\t\t\t\tconst timeMax = dateObjectToISO(this.getNodeParameter('timeMax', i));\n\t\t\t\t\t\t\tif (timeMin) {\n\t\t\t\t\t\t\t\tqs.timeMin = addTimezoneToDate(timeMin, tz || timezone);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (timeMax) {\n\t\t\t\t\t\t\t\tqs.timeMax = addTimezoneToDate(timeMax, tz || timezone);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (!options.recurringEventHandling || options.recurringEventHandling === 'expand') {\n\t\t\t\t\t\t\t\tqs.singleEvents = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (options.iCalUID) {\n\t\t\t\t\t\t\tqs.iCalUID = options.iCalUID as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.maxAttendees) {\n\t\t\t\t\t\t\tqs.maxAttendees = options.maxAttendees as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.orderBy) {\n\t\t\t\t\t\t\tqs.orderBy = options.orderBy as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.query) {\n\t\t\t\t\t\t\tqs.q = options.query as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.showDeleted) {\n\t\t\t\t\t\t\tqs.showDeleted = options.showDeleted as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.showHiddenInvitations) {\n\t\t\t\t\t\t\tqs.showHiddenInvitations = options.showHiddenInvitations as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.singleEvents) {\n\t\t\t\t\t\t\tqs.singleEvents = options.singleEvents as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.timeMax) {\n\t\t\t\t\t\t\tqs.timeMax = addTimezoneToDate(dateObjectToISO(options.timeMax), tz || timezone);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.timeMin) {\n\t\t\t\t\t\t\tqs.timeMin = addTimezoneToDate(dateObjectToISO(options.timeMin), tz || timezone);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tz) {\n\t\t\t\t\t\t\tqs.timeZone = tz;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.updatedMin) {\n\t\t\t\t\t\t\tqs.updatedMin = addTimezoneToDate(\n\t\t\t\t\t\t\t\tdateObjectToISO(options.updatedMin),\n\t\t\t\t\t\t\t\ttz || timezone,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.fields) {\n\t\t\t\t\t\t\tqs.fields = options.fields as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await googleApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'items',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/calendar/v3/calendars/${calendarId}/events`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.maxResults = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/calendar/v3/calendars/${calendarId}/events`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.items;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (responseData) {\n\t\t\t\t\t\t\tif (nodeVersion >= 1.3 && options.recurringEventHandling === 'next') {\n\t\t\t\t\t\t\t\tconst updatedEvents: IDataObject[] = [];\n\n\t\t\t\t\t\t\t\tfor (const event of responseData) {\n\t\t\t\t\t\t\t\t\tif (event.recurrence) {\n\t\t\t\t\t\t\t\t\t\tconst eventInstances =\n\t\t\t\t\t\t\t\t\t\t\t((\n\t\t\t\t\t\t\t\t\t\t\t\t(await googleApiRequestWithRetries({\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontext: this,\n\t\t\t\t\t\t\t\t\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\t\t\t\t\t\t\t\t\tresource: `/calendar/v3/calendars/${calendarId}/events/${event.id}/instances`,\n\t\t\t\t\t\t\t\t\t\t\t\t\tqs: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttimeMin: new Date().toISOString(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxResults: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t\t\t\t\t\t\t})) as IDataObject\n\t\t\t\t\t\t\t\t\t\t\t).items as IDataObject[]) || [];\n\t\t\t\t\t\t\t\t\t\tupdatedEvents.push(eventInstances[0] || event);\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tupdatedEvents.push(event);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tresponseData = updatedEvents;\n\t\t\t\t\t\t\t} else if (nodeVersion >= 1.3 && options.recurringEventHandling === 'first') {\n\t\t\t\t\t\t\t\tresponseData = responseData.filter((event: IDataObject) => {\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\tqs.timeMin &&\n\t\t\t\t\t\t\t\t\t\tevent.recurrence &&\n\t\t\t\t\t\t\t\t\t\tevent.created &&\n\t\t\t\t\t\t\t\t\t\tevent.created < qs.timeMin\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\tqs.timeMax &&\n\t\t\t\t\t\t\t\t\t\tevent.recurrence &&\n\t\t\t\t\t\t\t\t\t\tevent.created &&\n\t\t\t\t\t\t\t\t\t\tevent.created > qs.timeMax\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else if (nodeVersion < 1.3) {\n\t\t\t\t\t\t\t\t// in node version above or equal to 1.3, this would correspond to the 'expand' option,\n\t\t\t\t\t\t\t\t// so no need to add the next occurrence as event instances returned by the API\n\t\t\t\t\t\t\t\tresponseData = addNextOccurrence(responseData);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t!qs.timeMax &&\n\t\t\t\t\t\t\t\t(!options.recurringEventHandling || options.recurringEventHandling === 'expand')\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tconst suggestTrim = eventExtendYearIntoFuture(\n\t\t\t\t\t\t\t\t\tresponseData as RecurringEventInstance[],\n\t\t\t\t\t\t\t\t\ttimezone,\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tif (suggestTrim) {\n\t\t\t\t\t\t\t\t\thints.push({\n\t\t\t\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\t\t\t\"Some events repeat far into the future. To return less of them, add a 'Before' date or change the 'Recurring Event Handling' option.\",\n\t\t\t\t\t\t\t\t\t\tlocation: 'outputPane',\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://developers.google.com/calendar/v3/reference/events/patch\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst calendarId = encodeURIComponentOnce(\n\t\t\t\t\t\t\tthis.getNodeParameter('calendar', i, '', { extractValue: true }) as string,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tlet eventId = this.getNodeParameter('eventId', i) as string;\n\n\t\t\t\t\t\tif (nodeVersion >= 1.3) {\n\t\t\t\t\t\t\tconst modifyTarget = this.getNodeParameter('modifyTarget', i, 'instance') as string;\n\t\t\t\t\t\t\tif (modifyTarget === 'event') {\n\t\t\t\t\t\t\t\tconst instance = (await googleApiRequest.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t`/calendar/v3/calendars/${calendarId}/events/${eventId}`,\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t)) as IDataObject;\n\t\t\t\t\t\t\t\teventId = instance.recurringEventId as string;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst useDefaultReminders = this.getNodeParameter('useDefaultReminders', i) as boolean;\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\tlet updateTimezone = updateFields.timezone as string;\n\n\t\t\t\t\t\tif (nodeVersion > 1 && updateTimezone === undefined) {\n\t\t\t\t\t\t\tupdateTimezone = timezone;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateFields.maxAttendees) {\n\t\t\t\t\t\t\tqs.maxAttendees = updateFields.maxAttendees as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.sendNotifications) {\n\t\t\t\t\t\t\tqs.sendNotifications = updateFields.sendNotifications as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.sendUpdates) {\n\t\t\t\t\t\t\tqs.sendUpdates = updateFields.sendUpdates as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst body: IEvent = {};\n\t\t\t\t\t\tif (updateFields.start) {\n\t\t\t\t\t\t\tbody.start = {\n\t\t\t\t\t\t\t\tdateTime: moment.tz(updateFields.start, updateTimezone).utc().format(),\n\t\t\t\t\t\t\t\ttimeZone: updateTimezone,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.end) {\n\t\t\t\t\t\t\tbody.end = {\n\t\t\t\t\t\t\t\tdateTime: moment.tz(updateFields.end, updateTimezone).utc().format(),\n\t\t\t\t\t\t\t\ttimeZone: updateTimezone,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// nodeVersion < 1.2\n\t\t\t\t\t\tif (updateFields.attendees) {\n\t\t\t\t\t\t\tbody.attendees = [];\n\t\t\t\t\t\t\t(updateFields.attendees as string[]).forEach((attendee) => {\n\t\t\t\t\t\t\t\tbody.attendees!.push.apply(\n\t\t\t\t\t\t\t\t\tbody.attendees,\n\t\t\t\t\t\t\t\t\tattendee\n\t\t\t\t\t\t\t\t\t\t.split(',')\n\t\t\t\t\t\t\t\t\t\t.map((a) => a.trim())\n\t\t\t\t\t\t\t\t\t\t.map((email) => ({ email })),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// nodeVersion >= 1.2\n\t\t\t\t\t\tif (updateFields.attendeesUi) {\n\t\t\t\t\t\t\tconst { mode, attendees } = (\n\t\t\t\t\t\t\t\tupdateFields.attendeesUi as {\n\t\t\t\t\t\t\t\t\tvalues: {\n\t\t\t\t\t\t\t\t\t\tmode: string;\n\t\t\t\t\t\t\t\t\t\tattendees: string[];\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t).values;\n\t\t\t\t\t\t\tbody.attendees = [];\n\t\t\t\t\t\t\tif (mode === 'add') {\n\t\t\t\t\t\t\t\tconst event = await googleApiRequest.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t`/calendar/v3/calendars/${calendarId}/events/${eventId}`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t((event?.attendees as IDataObject[]) || []).forEach((attendee) => {\n\t\t\t\t\t\t\t\t\tbody.attendees?.push(attendee);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tattendees.forEach((attendee) => {\n\t\t\t\t\t\t\t\tbody.attendees!.push.apply(\n\t\t\t\t\t\t\t\t\tbody.attendees,\n\t\t\t\t\t\t\t\t\tattendee\n\t\t\t\t\t\t\t\t\t\t.split(',')\n\t\t\t\t\t\t\t\t\t\t.map((a) => a.trim())\n\t\t\t\t\t\t\t\t\t\t.map((email) => ({ email })),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.color) {\n\t\t\t\t\t\t\tbody.colorId = updateFields.color as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.description) {\n\t\t\t\t\t\t\tbody.description = updateFields.description as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.guestsCanInviteOthers) {\n\t\t\t\t\t\t\tbody.guestsCanInviteOthers = updateFields.guestsCanInviteOthers as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.guestsCanModify) {\n\t\t\t\t\t\t\tbody.guestsCanModify = updateFields.guestsCanModify as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.guestsCanSeeOtherGuests) {\n\t\t\t\t\t\t\tbody.guestsCanSeeOtherGuests = updateFields.guestsCanSeeOtherGuests as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.id) {\n\t\t\t\t\t\t\tbody.id = updateFields.id as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.location) {\n\t\t\t\t\t\t\tbody.location = updateFields.location as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.summary) {\n\t\t\t\t\t\t\tbody.summary = updateFields.summary as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.showMeAs) {\n\t\t\t\t\t\t\tbody.transparency = updateFields.showMeAs as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.visibility) {\n\t\t\t\t\t\t\tbody.visibility = updateFields.visibility as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!useDefaultReminders) {\n\t\t\t\t\t\t\tconst reminders = (this.getNodeParameter('remindersUi', i) as IDataObject)\n\t\t\t\t\t\t\t\t.remindersValues as IDataObject[];\n\t\t\t\t\t\t\tbody.reminders = {\n\t\t\t\t\t\t\t\tuseDefault: false,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tif (reminders) {\n\t\t\t\t\t\t\t\tbody.reminders.overrides = reminders;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateFields.allday === 'yes' && updateFields.start && updateFields.end) {\n\t\t\t\t\t\t\tbody.start = {\n\t\t\t\t\t\t\t\tdate: updateTimezone\n\t\t\t\t\t\t\t\t\t? moment.tz(updateFields.start, updateTimezone).utc(true).format('YYYY-MM-DD')\n\t\t\t\t\t\t\t\t\t: moment.tz(updateFields.start, moment.tz.guess()).utc(true).format('YYYY-MM-DD'),\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tbody.end = {\n\t\t\t\t\t\t\t\tdate: updateTimezone\n\t\t\t\t\t\t\t\t\t? moment.tz(updateFields.end, updateTimezone).utc(true).format('YYYY-MM-DD')\n\t\t\t\t\t\t\t\t\t: moment.tz(updateFields.end, moment.tz.guess()).utc(true).format('YYYY-MM-DD'),\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//example: RRULE:FREQ=WEEKLY;INTERVAL=2;COUNT=10;UNTIL=20110701T170000Z\n\t\t\t\t\t\t//https://icalendar.org/iCalendar-RFC-5545/3-8-5-3-recurrence-rule.html\n\t\t\t\t\t\tbody.recurrence = [];\n\t\t\t\t\t\tif (updateFields.rrule) {\n\t\t\t\t\t\t\tbody.recurrence = [`RRULE:${updateFields.rrule}`];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (updateFields.repeatHowManyTimes && updateFields.repeatUntil) {\n\t\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t\t\"You can set either 'Repeat How Many Times' or 'Repeat Until' but not both\",\n\t\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (updateFields.repeatFrecuency) {\n\t\t\t\t\t\t\t\tbody.recurrence?.push(\n\t\t\t\t\t\t\t\t\t`FREQ=${(updateFields.repeatFrecuency as string).toUpperCase()};`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (updateFields.repeatHowManyTimes) {\n\t\t\t\t\t\t\t\tbody.recurrence?.push(`COUNT=${updateFields.repeatHowManyTimes};`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (updateFields.repeatUntil) {\n\t\t\t\t\t\t\t\tconst repeatUntil = moment(updateFields.repeatUntil as string)\n\t\t\t\t\t\t\t\t\t.utc()\n\t\t\t\t\t\t\t\t\t.format('YYYYMMDDTHHmmss');\n\n\t\t\t\t\t\t\t\tbody.recurrence?.push(`UNTIL=${repeatUntil}Z`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (body.recurrence.length !== 0) {\n\t\t\t\t\t\t\t\tbody.recurrence = [`RRULE:${body.recurrence.join('')}`];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tdelete body.recurrence;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PATCH',\n\t\t\t\t\t\t\t`/calendar/v3/calendars/${calendarId}/events/${eventId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject),\n\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t);\n\t\t\t\treturnData.push(...executionData);\n\t\t\t} catch (error) {\n\t\t\t\tif (!this.continueOnFail()) {\n\t\t\t\t\tthrow error;\n\t\t\t\t} else {\n\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst keysPriorityList = [\n\t\t\t'id',\n\t\t\t'summary',\n\t\t\t'start',\n\t\t\t'end',\n\t\t\t'attendees',\n\t\t\t'creator',\n\t\t\t'organizer',\n\t\t\t'description',\n\t\t\t'location',\n\t\t\t'created',\n\t\t\t'updated',\n\t\t];\n\n\t\tlet nodeExecutionData = returnData;\n\t\tif (nodeVersion >= 1.3) {\n\t\t\tnodeExecutionData = sortItemKeysByPriorityList(returnData, keysPriorityList);\n\t\t}\n\n\t\tif (hints.length) {\n\t\t\tthis.addExecutionHints(...hints);\n\t\t}\n\n\t\treturn [nodeExecutionData];\n\t}\n}\n"],"mappings":"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","names":["moment","uuid"]}