{"version":3,"sources":["../../../../nodes/Google/Calendar/CalendarDescription.ts"],"sourcesContent":["import type { INodeProperties } from 'n8n-workflow';\n\nimport { TIMEZONE_VALIDATION_REGEX } from './GenericFunctions';\n\nexport const calendarOperations: INodeProperties[] = [\n\t{\n\t\tdisplayName: 'Operation',\n\t\tname: 'operation',\n\t\ttype: 'options',\n\t\tnoDataExpression: true,\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['calendar'],\n\t\t\t},\n\t\t},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tname: 'Availability',\n\t\t\t\tvalue: 'availability',\n\t\t\t\tdescription: 'If a time-slot is available in a calendar',\n\t\t\t\taction: 'Get availability in a calendar',\n\t\t\t},\n\t\t],\n\t\tdefault: 'availability',\n\t},\n];\n\nexport const calendarFields: INodeProperties[] = [\n\t/* -------------------------------------------------------------------------- */\n\t/*                                 calendar:availability                      */\n\t/* -------------------------------------------------------------------------- */\n\t{\n\t\tdisplayName: 'Calendar',\n\t\tname: 'calendar',\n\t\ttype: 'resourceLocator',\n\t\tdefault: { mode: 'list', value: '' },\n\t\trequired: true,\n\t\tdescription: 'Google Calendar to operate on',\n\t\tmodes: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Calendar',\n\t\t\t\tname: 'list',\n\t\t\t\ttype: 'list',\n\t\t\t\tplaceholder: 'Select a Calendar...',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tsearchListMethod: 'getCalendars',\n\t\t\t\t\tsearchable: true,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'ID',\n\t\t\t\tname: 'id',\n\t\t\t\ttype: 'string',\n\t\t\t\tvalidation: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'regex',\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t// calendar ids are emails. W3C email regex with optional trailing whitespace.\n\t\t\t\t\t\t\tregex:\n\t\t\t\t\t\t\t\t'(^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*(?:[ \\t]+)*$)',\n\t\t\t\t\t\t\terrorMessage: 'Not a valid Google Calendar ID',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\textractValue: {\n\t\t\t\t\ttype: 'regex',\n\t\t\t\t\tregex: '(^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*)',\n\t\t\t\t},\n\t\t\t\tplaceholder: 'name@google.com',\n\t\t\t},\n\t\t],\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['calendar'],\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tdisplayName: 'Start Time',\n\t\tname: 'timeMin',\n\t\ttype: 'dateTime',\n\t\trequired: true,\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\toperation: ['availability'],\n\t\t\t\tresource: ['calendar'],\n\t\t\t\t'@version': [{ _cnd: { lt: 1.3 } }],\n\t\t\t},\n\t\t},\n\t\tdefault: '',\n\t\tdescription: 'Start of the interval',\n\t},\n\t{\n\t\tdisplayName: 'End Time',\n\t\tname: 'timeMax',\n\t\ttype: 'dateTime',\n\t\trequired: true,\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\toperation: ['availability'],\n\t\t\t\tresource: ['calendar'],\n\t\t\t\t'@version': [{ _cnd: { lt: 1.3 } }],\n\t\t\t},\n\t\t},\n\t\tdefault: '',\n\t\tdescription: 'End of the interval',\n\t},\n\t{\n\t\tdisplayName: 'Start Time',\n\t\tname: 'timeMin',\n\t\ttype: 'dateTime',\n\t\trequired: true,\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\toperation: ['availability'],\n\t\t\t\tresource: ['calendar'],\n\t\t\t\t'@version': [{ _cnd: { gte: 1.3 } }],\n\t\t\t},\n\t\t},\n\t\tdefault: '={{ $now }}',\n\t\tdescription:\n\t\t\t'Start of the interval, use <a href=\"https://docs.n8n.io/code/cookbook/luxon/\" target=\"_blank\">expression</a> to set a date, or switch to fixed mode to choose date from widget',\n\t},\n\t{\n\t\tdisplayName: 'End Time',\n\t\tname: 'timeMax',\n\t\ttype: 'dateTime',\n\t\trequired: true,\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\toperation: ['availability'],\n\t\t\t\tresource: ['calendar'],\n\t\t\t\t'@version': [{ _cnd: { gte: 1.3 } }],\n\t\t\t},\n\t\t},\n\t\tdefault: \"={{ $now.plus(1, 'hour') }}\",\n\t\tdescription:\n\t\t\t'End of the interval, use <a href=\"https://docs.n8n.io/code/cookbook/luxon/\" target=\"_blank\">expression</a> to set a date, or switch to fixed mode to choose date from widget',\n\t},\n\t{\n\t\tdisplayName: 'Options',\n\t\tname: 'options',\n\t\ttype: 'collection',\n\t\tplaceholder: 'Add option',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\toperation: ['availability'],\n\t\t\t\tresource: ['calendar'],\n\t\t\t},\n\t\t},\n\t\tdefault: {},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Output Format',\n\t\t\t\tname: 'outputFormat',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Availability',\n\t\t\t\t\t\tvalue: 'availability',\n\t\t\t\t\t\tdescription: 'Returns if there are any events in the given time or not',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Booked Slots',\n\t\t\t\t\t\tvalue: 'bookedSlots',\n\t\t\t\t\t\tdescription: 'Returns the booked slots',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'RAW',\n\t\t\t\t\t\tvalue: 'raw',\n\t\t\t\t\t\tdescription: 'Returns the RAW data from the API',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'availability',\n\t\t\t\tdescription: 'The format to return the data in',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Timezone',\n\t\t\t\tname: 'timezone',\n\t\t\t\ttype: 'resourceLocator',\n\t\t\t\tdefault: { mode: 'list', value: '' },\n\t\t\t\tdescription: 'Time zone used in the response. By default n8n timezone is used.',\n\t\t\t\tmodes: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Timezone',\n\t\t\t\t\t\tname: 'list',\n\t\t\t\t\t\ttype: 'list',\n\t\t\t\t\t\tplaceholder: 'Select a Timezone...',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tsearchListMethod: 'getTimezones',\n\t\t\t\t\t\t\tsearchable: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'ID',\n\t\t\t\t\t\tname: 'id',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tvalidation: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'regex',\n\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\tregex: TIMEZONE_VALIDATION_REGEX,\n\t\t\t\t\t\t\t\t\terrorMessage: 'Not a valid Timezone',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\textractValue: {\n\t\t\t\t\t\t\ttype: 'regex',\n\t\t\t\t\t\t\tregex: '([-+/_a-zA-Z0-9]*)',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tplaceholder: 'Europe/Berlin',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t},\n];\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,8BAA0C;AAEnC,MAAM,qBAAwC;AAAA,EACpD;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,kBAAkB;AAAA,IAClB,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,UAAU,CAAC,UAAU;AAAA,MACtB;AAAA,IACD;AAAA,IACA,SAAS;AAAA,MACR;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,QACP,aAAa;AAAA,QACb,QAAQ;AAAA,MACT;AAAA,IACD;AAAA,IACA,SAAS;AAAA,EACV;AACD;AAEO,MAAM,iBAAoC;AAAA;AAAA;AAAA;AAAA,EAIhD;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS,EAAE,MAAM,QAAQ,OAAO,GAAG;AAAA,IACnC,UAAU;AAAA,IACV,aAAa;AAAA,IACb,OAAO;AAAA,MACN;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,aAAa;AAAA,QACb,aAAa;AAAA,UACZ,kBAAkB;AAAA,UAClB,YAAY;AAAA,QACb;AAAA,MACD;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,YAAY;AAAA,UACX;AAAA,YACC,MAAM;AAAA,YACN,YAAY;AAAA;AAAA,cAEX,OACC;AAAA,cACD,cAAc;AAAA,YACf;AAAA,UACD;AAAA,QACD;AAAA,QACA,cAAc;AAAA,UACb,MAAM;AAAA,UACN,OAAO;AAAA,QACR;AAAA,QACA,aAAa;AAAA,MACd;AAAA,IACD;AAAA,IACA,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,UAAU,CAAC,UAAU;AAAA,MACtB;AAAA,IACD;AAAA,EACD;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,WAAW,CAAC,cAAc;AAAA,QAC1B,UAAU,CAAC,UAAU;AAAA,QACrB,YAAY,CAAC,EAAE,MAAM,EAAE,IAAI,IAAI,EAAE,CAAC;AAAA,MACnC;AAAA,IACD;AAAA,IACA,SAAS;AAAA,IACT,aAAa;AAAA,EACd;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,WAAW,CAAC,cAAc;AAAA,QAC1B,UAAU,CAAC,UAAU;AAAA,QACrB,YAAY,CAAC,EAAE,MAAM,EAAE,IAAI,IAAI,EAAE,CAAC;AAAA,MACnC;AAAA,IACD;AAAA,IACA,SAAS;AAAA,IACT,aAAa;AAAA,EACd;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,WAAW,CAAC,cAAc;AAAA,QAC1B,UAAU,CAAC,UAAU;AAAA,QACrB,YAAY,CAAC,EAAE,MAAM,EAAE,KAAK,IAAI,EAAE,CAAC;AAAA,MACpC;AAAA,IACD;AAAA,IACA,SAAS;AAAA,IACT,aACC;AAAA,EACF;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,WAAW,CAAC,cAAc;AAAA,QAC1B,UAAU,CAAC,UAAU;AAAA,QACrB,YAAY,CAAC,EAAE,MAAM,EAAE,KAAK,IAAI,EAAE,CAAC;AAAA,MACpC;AAAA,IACD;AAAA,IACA,SAAS;AAAA,IACT,aACC;AAAA,EACF;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,WAAW,CAAC,cAAc;AAAA,QAC1B,UAAU,CAAC,UAAU;AAAA,MACtB;AAAA,IACD;AAAA,IACA,SAAS,CAAC;AAAA,IACV,SAAS;AAAA,MACR;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,UACR;AAAA,YACC,MAAM;AAAA,YACN,OAAO;AAAA,YACP,aAAa;AAAA,UACd;AAAA,UACA;AAAA,YACC,MAAM;AAAA,YACN,OAAO;AAAA,YACP,aAAa;AAAA,UACd;AAAA,UACA;AAAA,YACC,MAAM;AAAA,YACN,OAAO;AAAA,YACP,aAAa;AAAA,UACd;AAAA,QACD;AAAA,QACA,SAAS;AAAA,QACT,aAAa;AAAA,MACd;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS,EAAE,MAAM,QAAQ,OAAO,GAAG;AAAA,QACnC,aAAa;AAAA,QACb,OAAO;AAAA,UACN;AAAA,YACC,aAAa;AAAA,YACb,MAAM;AAAA,YACN,MAAM;AAAA,YACN,aAAa;AAAA,YACb,aAAa;AAAA,cACZ,kBAAkB;AAAA,cAClB,YAAY;AAAA,YACb;AAAA,UACD;AAAA,UACA;AAAA,YACC,aAAa;AAAA,YACb,MAAM;AAAA,YACN,MAAM;AAAA,YACN,YAAY;AAAA,cACX;AAAA,gBACC,MAAM;AAAA,gBACN,YAAY;AAAA,kBACX,OAAO;AAAA,kBACP,cAAc;AAAA,gBACf;AAAA,cACD;AAAA,YACD;AAAA,YACA,cAAc;AAAA,cACb,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA,aAAa;AAAA,UACd;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;","names":[]}