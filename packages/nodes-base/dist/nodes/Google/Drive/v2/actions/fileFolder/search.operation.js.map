{"version":3,"sources":["../../../../../../../nodes/Google/Drive/v2/actions/fileFolder/search.operation.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tINodeProperties,\n} from 'n8n-workflow';\n\nimport { updateDisplayOptions } from '@utils/utilities';\n\nimport type { SearchFilter } from '../../helpers/interfaces';\nimport { DRIVE, RLC_FOLDER_DEFAULT } from '../../helpers/interfaces';\nimport { prepareQueryString, updateDriveScopes } from '../../helpers/utils';\nimport { googleApiRequest, googleApiRequestAllItems } from '../../transport';\nimport { driveRLC, fileTypesOptions, folderRLC } from '../common.descriptions';\n\nconst properties: INodeProperties[] = [\n\t{\n\t\tdisplayName: 'Search Method',\n\t\tname: 'searchMethod',\n\t\ttype: 'options',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tname: 'Search File/Folder Name',\n\t\t\t\tvalue: 'name',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Advanced Search',\n\t\t\t\tvalue: 'query',\n\t\t\t},\n\t\t],\n\t\tdefault: 'name',\n\t\tdescription: 'Whether to search for the file/folder name or use a query string',\n\t},\n\t{\n\t\tdisplayName: 'Search Query',\n\t\tname: 'queryString',\n\t\ttype: 'string',\n\t\tdefault: '',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tsearchMethod: ['name'],\n\t\t\t},\n\t\t},\n\t\tplaceholder: 'e.g. My File / My Folder',\n\t\tdescription:\n\t\t\t'The name of the file or folder to search for. Returns also files and folders whose names partially match this search term.',\n\t},\n\t{\n\t\tdisplayName: 'Query String',\n\t\tname: 'queryString',\n\t\ttype: 'string',\n\t\tdefault: '',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tsearchMethod: ['query'],\n\t\t\t},\n\t\t},\n\t\tplaceholder: \"e.g. not name contains 'hello'\",\n\t\tdescription:\n\t\t\t'Use the Google query strings syntax to search for a specific set of files or folders. <a href=\"https://developers.google.com/drive/api/v3/search-files\" target=\"_blank\">Learn more</a>.',\n\t},\n\t{\n\t\tdisplayName: 'Return All',\n\t\tname: 'returnAll',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tdescription: 'Whether to return all results or only up to a given limit',\n\t},\n\t{\n\t\tdisplayName: 'Limit',\n\t\tname: 'limit',\n\t\ttype: 'number',\n\t\tdefault: 50,\n\t\tdescription: 'Max number of results to return',\n\t\ttypeOptions: {\n\t\t\tminValue: 1,\n\t\t},\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\treturnAll: [false],\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tdisplayName: 'Filter',\n\t\tname: 'filter',\n\t\ttype: 'collection',\n\t\tplaceholder: 'Add Filter',\n\t\tdefault: {},\n\t\toptions: [\n\t\t\t{\n\t\t\t\t...driveRLC,\n\t\t\t\tdescription:\n\t\t\t\t\t'The drive you want to search in. By default, the personal \"My Drive\" is used.',\n\t\t\t\trequired: false,\n\t\t\t},\n\t\t\t{\n\t\t\t\t...folderRLC,\n\t\t\t\tdescription:\n\t\t\t\t\t'The folder you want to search in. By default, the root folder of the drive is used. If you select a folder other than the root folder, only the direct children will be included.',\n\t\t\t\trequired: false,\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'What to Search',\n\t\t\t\tname: 'whatToSearch',\n\t\t\t\ttype: 'options',\n\t\t\t\tdefault: 'all',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Files and Folders',\n\t\t\t\t\t\tvalue: 'all',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Files',\n\t\t\t\t\t\tvalue: 'files',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Folders',\n\t\t\t\t\t\tvalue: 'folders',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'File Types',\n\t\t\t\tname: 'fileTypes',\n\t\t\t\ttype: 'multiOptions',\n\t\t\t\tdefault: [],\n\t\t\t\tdescription: 'Return only items corresponding to the selected MIME types',\n\t\t\t\toptions: fileTypesOptions,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\twhatToSearch: ['all'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'File Types',\n\t\t\t\tname: 'fileTypes',\n\t\t\t\ttype: 'multiOptions',\n\t\t\t\tdefault: [],\n\t\t\t\tdescription: 'Return only items corresponding to the selected MIME types',\n\t\t\t\toptions: fileTypesOptions.filter((option) => option.name !== 'Folder'),\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\twhatToSearch: ['files'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Include Trashed Items',\n\t\t\t\tname: 'includeTrashed',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: \"Whether to return also items in the Drive's bin\",\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tdisplayName: 'Options',\n\t\tname: 'options',\n\t\ttype: 'collection',\n\t\tplaceholder: 'Add option',\n\t\tdefault: {},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Fields',\n\t\t\t\tname: 'fields',\n\t\t\t\ttype: 'multiOptions',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: '*',\n\t\t\t\t\t\tvalue: '*',\n\t\t\t\t\t\tdescription: 'All fields',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'explicitlyTrashed',\n\t\t\t\t\t\tvalue: 'explicitlyTrashed',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'exportLinks',\n\t\t\t\t\t\tvalue: 'exportLinks',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'hasThumbnail',\n\t\t\t\t\t\tvalue: 'hasThumbnail',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'iconLink',\n\t\t\t\t\t\tvalue: 'iconLink',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'ID',\n\t\t\t\t\t\tvalue: 'id',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Kind',\n\t\t\t\t\t\tvalue: 'kind',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'mimeType',\n\t\t\t\t\t\tvalue: 'mimeType',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Name',\n\t\t\t\t\t\tvalue: 'name',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Permissions',\n\t\t\t\t\t\tvalue: 'permissions',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Shared',\n\t\t\t\t\t\tvalue: 'shared',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Spaces',\n\t\t\t\t\t\tvalue: 'spaces',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Starred',\n\t\t\t\t\t\tvalue: 'starred',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'thumbnailLink',\n\t\t\t\t\t\tvalue: 'thumbnailLink',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Trashed',\n\t\t\t\t\t\tvalue: 'trashed',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Version',\n\t\t\t\t\t\tvalue: 'version',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'webViewLink',\n\t\t\t\t\t\tvalue: 'webViewLink',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: [],\n\t\t\t\tdescription: 'The fields to return',\n\t\t\t},\n\t\t],\n\t},\n];\n\nconst displayOptions = {\n\tshow: {\n\t\tresource: ['fileFolder'],\n\t\toperation: ['search'],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n\nexport async function execute(this: IExecuteFunctions, i: number): Promise<INodeExecutionData[]> {\n\tconst searchMethod = this.getNodeParameter('searchMethod', i) as string;\n\tconst options = this.getNodeParameter('options', i, {});\n\n\tconst query = [];\n\n\tconst queryString = this.getNodeParameter('queryString', i) as string;\n\n\tif (searchMethod === 'name') {\n\t\tquery.push(`name contains '${queryString}'`);\n\t} else {\n\t\tquery.push(queryString);\n\t}\n\n\tconst filter = this.getNodeParameter('filter', i, {}) as SearchFilter;\n\n\tlet driveId = '';\n\tlet folderId = '';\n\tconst returnedTypes: string[] = [];\n\n\tif (Object.keys(filter)?.length) {\n\t\tif (filter.folderId) {\n\t\t\tif (filter.folderId.mode === 'url') {\n\t\t\t\tfolderId = this.getNodeParameter('filter.folderId', i, undefined, {\n\t\t\t\t\textractValue: true,\n\t\t\t\t}) as string;\n\t\t\t} else {\n\t\t\t\tfolderId = filter.folderId.value;\n\t\t\t}\n\t\t}\n\n\t\tif (folderId && folderId !== RLC_FOLDER_DEFAULT) {\n\t\t\tquery.push(`'${folderId}' in parents`);\n\t\t}\n\n\t\tif (filter.driveId) {\n\t\t\tlet value;\n\t\t\tif (filter.driveId.mode === 'url') {\n\t\t\t\tvalue = this.getNodeParameter('filter.driveId', i, undefined, {\n\t\t\t\t\textractValue: true,\n\t\t\t\t}) as string;\n\t\t\t} else {\n\t\t\t\tvalue = filter.driveId.value;\n\t\t\t}\n\t\t\tdriveId = value;\n\t\t}\n\n\t\tconst whatToSearch = filter.whatToSearch || 'all';\n\t\tif (whatToSearch === 'folders') {\n\t\t\tquery.push(`mimeType = '${DRIVE.FOLDER}'`);\n\t\t} else {\n\t\t\tif (whatToSearch === 'files') {\n\t\t\t\tquery.push(`mimeType != '${DRIVE.FOLDER}'`);\n\t\t\t}\n\n\t\t\tif (filter?.fileTypes?.length && !filter.fileTypes.includes('*')) {\n\t\t\t\tfilter.fileTypes.forEach((fileType: string) => {\n\t\t\t\t\treturnedTypes.push(`mimeType = '${fileType}'`);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (!filter.includeTrashed) {\n\t\t\tquery.push('trashed = false');\n\t\t}\n\t}\n\n\tif (returnedTypes.length) {\n\t\tquery.push(`(${returnedTypes.join(' or ')})`);\n\t}\n\n\tconst queryFields = prepareQueryString(options.fields as string[]);\n\n\tconst qs: IDataObject = {\n\t\tfields: `nextPageToken, files(${queryFields})`,\n\t\tq: query.filter((q) => q).join(' and '),\n\t\tincludeItemsFromAllDrives: true,\n\t\tsupportsAllDrives: true,\n\t\tspaces: 'appDataFolder, drive',\n\t\tcorpora: 'allDrives',\n\t};\n\n\tupdateDriveScopes(qs, driveId);\n\n\tif (!driveId && folderId === RLC_FOLDER_DEFAULT) {\n\t\tqs.corpora = 'user';\n\t\tqs.spaces = 'drive';\n\t\tqs.includeItemsFromAllDrives = false;\n\t\tqs.supportsAllDrives = false;\n\t}\n\n\tconst returnAll = this.getNodeParameter('returnAll', i, false);\n\n\tlet response;\n\tif (returnAll) {\n\t\tresponse = await googleApiRequestAllItems.call(this, 'GET', 'files', '/drive/v3/files', {}, qs);\n\t} else {\n\t\tqs.pageSize = this.getNodeParameter('limit', i);\n\t\tresponse = await googleApiRequest.call(this, 'GET', '/drive/v3/files', undefined, qs);\n\t\tresponse = response.files;\n\t}\n\n\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\tthis.helpers.returnJsonArray(response as IDataObject[]),\n\t\t{ itemData: { item: i } },\n\t);\n\n\treturn executionData;\n}\n"],"mappings":"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","names":[]}