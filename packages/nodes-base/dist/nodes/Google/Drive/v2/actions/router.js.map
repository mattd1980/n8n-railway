{"version":3,"sources":["../../../../../../nodes/Google/Drive/v2/actions/router.ts"],"sourcesContent":["import type { IExecuteFunctions, INodeExecutionData } from 'n8n-workflow';\nimport { NodeOperationError } from 'n8n-workflow';\n\nimport * as drive from './drive/Drive.resource';\nimport * as file from './file/File.resource';\nimport * as fileFolder from './fileFolder/FileFolder.resource';\nimport * as folder from './folder/Folder.resource';\nimport type { GoogleDriveType } from './node.type';\n\nexport async function router(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\tconst items = this.getInputData();\n\tconst returnData: INodeExecutionData[] = [];\n\n\tconst resource = this.getNodeParameter<GoogleDriveType>('resource', 0);\n\tconst operation = this.getNodeParameter('operation', 0);\n\n\tconst googleDrive = {\n\t\tresource,\n\t\toperation,\n\t} as GoogleDriveType;\n\n\tfor (let i = 0; i < items.length; i++) {\n\t\ttry {\n\t\t\tswitch (googleDrive.resource) {\n\t\t\t\tcase 'drive':\n\t\t\t\t\treturnData.push(...(await drive[googleDrive.operation].execute.call(this, i)));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'file':\n\t\t\t\t\treturnData.push(...(await file[googleDrive.operation].execute.call(this, i, items[i])));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'fileFolder':\n\t\t\t\t\treturnData.push(...(await fileFolder[googleDrive.operation].execute.call(this, i)));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'folder':\n\t\t\t\t\treturnData.push(...(await folder[googleDrive.operation].execute.call(this, i)));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new NodeOperationError(this.getNode(), `The resource \"${resource}\" is not known`);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (this.continueOnFail()) {\n\t\t\t\tif (resource === 'file' && operation === 'download') {\n\t\t\t\t\titems[i].json = { error: error.message };\n\t\t\t\t} else {\n\t\t\t\t\treturnData.push({ json: { error: error.message } });\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\treturn [returnData];\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,0BAAmC;AAEnC,YAAuB;AACvB,WAAsB;AACtB,iBAA4B;AAC5B,aAAwB;AAGxB,eAAsB,SAAiE;AACtF,QAAM,QAAQ,KAAK,aAAa;AAChC,QAAM,aAAmC,CAAC;AAE1C,QAAM,WAAW,KAAK,iBAAkC,YAAY,CAAC;AACrE,QAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AAEtD,QAAM,cAAc;AAAA,IACnB;AAAA,IACA;AAAA,EACD;AAEA,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACtC,QAAI;AACH,cAAQ,YAAY,UAAU;AAAA,QAC7B,KAAK;AACJ,qBAAW,KAAK,GAAI,MAAM,MAAM,YAAY,SAAS,EAAE,QAAQ,KAAK,MAAM,CAAC,CAAE;AAC7E;AAAA,QACD,KAAK;AACJ,qBAAW,KAAK,GAAI,MAAM,KAAK,YAAY,SAAS,EAAE,QAAQ,KAAK,MAAM,GAAG,MAAM,CAAC,CAAC,CAAE;AACtF;AAAA,QACD,KAAK;AACJ,qBAAW,KAAK,GAAI,MAAM,WAAW,YAAY,SAAS,EAAE,QAAQ,KAAK,MAAM,CAAC,CAAE;AAClF;AAAA,QACD,KAAK;AACJ,qBAAW,KAAK,GAAI,MAAM,OAAO,YAAY,SAAS,EAAE,QAAQ,KAAK,MAAM,CAAC,CAAE;AAC9E;AAAA,QACD;AACC,gBAAM,IAAI,uCAAmB,KAAK,QAAQ,GAAG,iBAAiB,QAAQ,gBAAgB;AAAA,MACxF;AAAA,IACD,SAAS,OAAO;AACf,UAAI,KAAK,eAAe,GAAG;AAC1B,YAAI,aAAa,UAAU,cAAc,YAAY;AACpD,gBAAM,CAAC,EAAE,OAAO,EAAE,OAAO,MAAM,QAAQ;AAAA,QACxC,OAAO;AACN,qBAAW,KAAK,EAAE,MAAM,EAAE,OAAO,MAAM,QAAQ,EAAE,CAAC;AAAA,QACnD;AACA;AAAA,MACD;AACA,YAAM;AAAA,IACP;AAAA,EACD;AAEA,SAAO,CAAC,UAAU;AACnB;","names":[]}