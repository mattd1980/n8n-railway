{"version":3,"sources":["../../../../../nodes/Google/Chat/descriptions/MessageDescription.ts"],"sourcesContent":["import { SEND_AND_WAIT_OPERATION, type INodeProperties } from 'n8n-workflow';\n\nexport const messageOperations: INodeProperties[] = [\n\t{\n\t\tdisplayName: 'Operation',\n\t\tname: 'operation',\n\t\tnoDataExpression: true,\n\t\ttype: 'options',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['message'],\n\t\t\t},\n\t\t},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tname: 'Create',\n\t\t\t\tvalue: 'create',\n\t\t\t\tdescription: 'Create a message',\n\t\t\t\taction: 'Create a message',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Delete',\n\t\t\t\tvalue: 'delete',\n\t\t\t\tdescription: 'Delete a message',\n\t\t\t\taction: 'Delete a message',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Get',\n\t\t\t\tvalue: 'get',\n\t\t\t\tdescription: 'Get a message',\n\t\t\t\taction: 'Get a message',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Send and Wait for Response',\n\t\t\t\tvalue: SEND_AND_WAIT_OPERATION,\n\t\t\t\tdescription: 'Send a message and wait for response',\n\t\t\t\taction: 'Send message and wait for response',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Update',\n\t\t\t\tvalue: 'update',\n\t\t\t\tdescription: 'Update a message',\n\t\t\t\taction: 'Update a message',\n\t\t\t},\n\t\t],\n\t\tdefault: 'create',\n\t},\n];\n\nexport const spaceIdProperty: INodeProperties = {\n\tdisplayName: 'Space Name or ID',\n\tname: 'spaceId',\n\ttype: 'options',\n\trequired: true,\n\ttypeOptions: {\n\t\tloadOptionsMethod: 'getSpaces',\n\t},\n\tdefault: '',\n\tdescription:\n\t\t'Space resource name, in the form \"spaces/*\". Example: spaces/AAAAMpdlehY. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n};\n\nexport const messageFields: INodeProperties[] = [\n\t/* -------------------------------------------------------------------------- */\n\t/*                                 message:create                              */\n\t/* -------------------------------------------------------------------------- */\n\t{\n\t\t...spaceIdProperty,\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['message'],\n\t\t\t\toperation: ['create'],\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tdisplayName: 'JSON Parameters',\n\t\tname: 'jsonParameters',\n\t\ttype: 'boolean',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['message'],\n\t\t\t\toperation: ['create'],\n\t\t\t},\n\t\t},\n\t\tdefault: false,\n\t\tdescription: 'Whether to pass the message object as JSON',\n\t},\n\t{\n\t\tdisplayName: 'Message',\n\t\tname: 'messageUi',\n\t\ttype: 'collection',\n\t\trequired: true,\n\t\tplaceholder: 'Add Message',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['message'],\n\t\t\t\toperation: ['create'],\n\t\t\t\tjsonParameters: [false],\n\t\t\t},\n\t\t},\n\t\tdefault: {},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Text',\n\t\t\t\tname: 'text',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t},\n\t\t\t// {\t// TODO: get cards from the UI (check the Slack node, specifically the blocks parameter under message: post)\n\t\t\t// \tdisplayName: 'Cards',\n\t\t\t// \tname: 'cards',\n\t\t\t// \tplaceholder: 'Add Cards',\n\t\t\t// \ttype: 'fixedCollection',\n\t\t\t// \tdefault: '',\n\t\t\t// \ttypeOptions: {\n\t\t\t// \t\tmultipleValues: true,\n\t\t\t// \t},\n\t\t\t// \tdescription: 'Rich, formatted and interactive cards that can be used to display UI elements such as: formatted texts, buttons, clickable images',\n\t\t\t// \toptions: [\n\t\t\t// \t\t{\n\t\t\t// \t\t\tname: 'metadataValues',\n\t\t\t// \t\t\tdisplayName: 'Metadata',\n\t\t\t// \t\t\tvalues: [\n\t\t\t// \t\t\t\t{\n\t\t\t// \t\t\t\t\tdisplayName: 'Name',\n\t\t\t// \t\t\t\t\tname: 'name',\n\t\t\t// \t\t\t\t\ttype: 'string',\n\t\t\t// \t\t\t\t\tdefault: '',\n\t\t\t// \t\t\t\t\tdescription: 'Name of the card',\n\t\t\t// \t\t\t\t},\n\t\t\t// \t\t\t\t{\n\t\t\t// \t\t\t\t\tdisplayName: 'Header',\n\t\t\t// \t\t\t\t\tname: 'header',\n\t\t\t// \t\t\t\t\ttype: 'json',\n\t\t\t// \t\t\t\t\tdefault: '',\n\t\t\t// \t\t\t\t\tdescription: 'Header of the card',\n\t\t\t// \t\t\t\t},\n\t\t\t// \t\t\t\t{\n\t\t\t// \t\t\t\t\tdisplayName: 'Sections',\n\t\t\t// \t\t\t\t\tname: 'sections',\n\t\t\t// \t\t\t\t\ttype: 'json',\n\t\t\t// \t\t\t\t\tdefault: '',\n\t\t\t// \t\t\t\t\tdescription: 'Sections of the card',\n\t\t\t// \t\t\t\t},\n\t\t\t// \t\t\t\t{\n\t\t\t// \t\t\t\t\tdisplayName: 'Actions',\n\t\t\t// \t\t\t\t\tname: 'cardActions',\n\t\t\t// \t\t\t\t\ttype: 'json',\n\t\t\t// \t\t\t\t\tdefault: '',\n\t\t\t// \t\t\t\t\tdescription: 'Actions of the card',\n\t\t\t// \t\t\t\t},\n\t\t\t// \t\t\t],\n\t\t\t// \t\t},\n\t\t\t// \t],\n\t\t\t// },\n\t\t],\n\t},\n\t{\n\t\tdisplayName:\n\t\t\t'See <a href=\"https://developers.google.com/chat/reference/rest/v1/spaces.messages#Message\" target=\"_blank\">Google Chat Guide</a> To Creating Messages',\n\t\tname: 'jsonNotice',\n\t\ttype: 'notice',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['message'],\n\t\t\t\toperation: ['create'],\n\t\t\t\tjsonParameters: [true],\n\t\t\t},\n\t\t},\n\t\tdefault: '',\n\t},\n\t{\n\t\tdisplayName: 'Message (JSON)',\n\t\tname: 'messageJson',\n\t\ttype: 'json',\n\t\trequired: true,\n\t\ttypeOptions: {\n\t\t\talwaysOpenEditWindow: true,\n\t\t},\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['message'],\n\t\t\t\toperation: ['create'],\n\t\t\t\tjsonParameters: [true],\n\t\t\t},\n\t\t},\n\t\tdefault: '',\n\t\tdescription: 'Message input as JSON Object or JSON String',\n\t},\n\t{\n\t\tdisplayName: 'Additional Fields',\n\t\tname: 'additionalFields',\n\t\ttype: 'collection',\n\t\tplaceholder: 'Add Field',\n\t\tdefault: {},\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['message'],\n\t\t\t\toperation: ['create'],\n\t\t\t},\n\t\t},\n\t\toptions: [\n\t\t\t// {\n\t\t\t// \tdisplayName: 'Thread Key',\n\t\t\t// \tname: 'threadKey',\n\t\t\t// \ttype: 'string',\n\t\t\t// \tdefault: '',\n\t\t\t// \tdescription: 'Thread identifier which groups messages into a single thread. Has no effect if thread field, corresponding to an existing thread, is set in message. Example: spaces/AAAAMpdlehY/threads/MZ8fXhZXGkk.',\n\t\t\t// },\n\t\t\t{\n\t\t\t\tdisplayName: 'Request ID',\n\t\t\t\tname: 'requestId',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tdescription:\n\t\t\t\t\t'A unique request ID for this message. If a message has already been created in the space with this request ID, the subsequent request will return the existing message and no new message will be created.',\n\t\t\t},\n\t\t],\n\t},\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                                 messages:delete                            */\n\t/* -------------------------------------------------------------------------- */\n\t{\n\t\tdisplayName: 'Message ID',\n\t\tname: 'messageId',\n\t\ttype: 'string',\n\t\trequired: true,\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['message'],\n\t\t\t\toperation: ['delete'],\n\t\t\t},\n\t\t},\n\t\tdefault: '',\n\t\tdescription: 'Resource name of the message to be deleted, in the form \"spaces//messages/\"',\n\t},\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                                 message:get                                */\n\t/* -------------------------------------------------------------------------- */\n\t{\n\t\tdisplayName: 'Message ID',\n\t\tname: 'messageId',\n\t\ttype: 'string',\n\t\trequired: true,\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['message'],\n\t\t\t\toperation: ['get'],\n\t\t\t},\n\t\t},\n\t\tdefault: '',\n\t\tdescription: 'Resource name of the message to be retrieved, in the form \"spaces//messages/\"',\n\t},\n\n\t/* -------------------------------------------------------------------------- */\n\t/*                                 message:update                             */\n\t/* -------------------------------------------------------------------------- */\n\t{\n\t\tdisplayName: 'Message ID',\n\t\tname: 'messageId',\n\t\ttype: 'string',\n\t\trequired: true,\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['message'],\n\t\t\t\toperation: ['update'],\n\t\t\t},\n\t\t},\n\t\tdefault: '',\n\t\tdescription: 'Resource name of the message to be updated, in the form \"spaces//messages/\"',\n\t},\n\t{\n\t\tdisplayName: 'JSON Parameters',\n\t\tname: 'jsonParameters',\n\t\ttype: 'boolean',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['message'],\n\t\t\t\toperation: ['update'],\n\t\t\t},\n\t\t},\n\t\tdefault: false,\n\t\tdescription: 'Whether to pass the update fields object as JSON',\n\t},\n\t{\n\t\tdisplayName: 'Update Fields',\n\t\tname: 'updateFieldsUi',\n\t\ttype: 'collection',\n\t\trequired: true,\n\t\tplaceholder: 'Add option',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['message'],\n\t\t\t\toperation: ['update'],\n\t\t\t\tjsonParameters: [false],\n\t\t\t},\n\t\t},\n\t\tdefault: {},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Text',\n\t\t\t\tname: 'text',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t},\n\t\t\t// {\t// TODO: get cards from the UI (check the Slack node, specifically the blocks parameter under message: post)\n\t\t\t// \tdisplayName: 'Cards',\n\t\t\t// \tname: 'cards',\n\t\t\t// \tplaceholder: 'Add Cards',\n\t\t\t// \ttype: 'fixedCollection',\n\t\t\t// \tdefault: '',\n\t\t\t// \ttypeOptions: {\n\t\t\t// \t\tmultipleValues: true,\n\t\t\t// \t},\n\t\t\t// \tdescription: 'Rich, formatted and interactive cards that can be used to display UI elements such as: formatted texts, buttons, clickable images',\n\t\t\t// \toptions: [\n\t\t\t// \t\t{\n\t\t\t// \t\t\tname: 'metadataValues',\n\t\t\t// \t\t\tdisplayName: 'Metadata',\n\t\t\t// \t\t\tvalues: [\n\t\t\t// \t\t\t\t{\n\t\t\t// \t\t\t\t\tdisplayName: 'Name',\n\t\t\t// \t\t\t\t\tname: 'name',\n\t\t\t// \t\t\t\t\ttype: 'string',\n\t\t\t// \t\t\t\t\tdefault: '',\n\t\t\t// \t\t\t\t\tdescription: 'Name of the card',\n\t\t\t// \t\t\t\t},\n\t\t\t// \t\t\t\t{\n\t\t\t// \t\t\t\t\tdisplayName: 'Header',\n\t\t\t// \t\t\t\t\tname: 'header',\n\t\t\t// \t\t\t\t\ttype: 'json',\n\t\t\t// \t\t\t\t\tdefault: '',\n\t\t\t// \t\t\t\t\tdescription: 'Header of the card',\n\t\t\t// \t\t\t\t},\n\t\t\t// \t\t\t\t{\n\t\t\t// \t\t\t\t\tdisplayName: 'Sections',\n\t\t\t// \t\t\t\t\tname: 'sections',\n\t\t\t// \t\t\t\t\ttype: 'json',\n\t\t\t// \t\t\t\t\tdefault: '',\n\t\t\t// \t\t\t\t\tdescription: 'Sections of the card',\n\t\t\t// \t\t\t\t},\n\t\t\t// \t\t\t\t{\n\t\t\t// \t\t\t\t\tdisplayName: 'Actions',\n\t\t\t// \t\t\t\t\tname: 'cardActions',\n\t\t\t// \t\t\t\t\ttype: 'json',\n\t\t\t// \t\t\t\t\tdefault: '',\n\t\t\t// \t\t\t\t\tdescription: 'Actions of the card',\n\t\t\t// \t\t\t\t},\n\t\t\t// \t\t\t],\n\t\t\t// \t\t},\n\t\t\t// \t],\n\t\t\t// },\n\t\t],\n\t},\n\t{\n\t\tdisplayName:\n\t\t\t'See <a href=\"https://developers.google.com/chat/reference/rest/v1/spaces.messages#Message\" target=\"_blank\">Google Chat Guide</a> To Creating Messages',\n\t\tname: 'jsonNotice',\n\t\ttype: 'notice',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['message'],\n\t\t\t\toperation: ['update'],\n\t\t\t\tjsonParameters: [true],\n\t\t\t},\n\t\t},\n\t\tdefault: '',\n\t},\n\t{\n\t\tdisplayName: 'Update Fields (JSON)',\n\t\tname: 'updateFieldsJson',\n\t\ttype: 'json',\n\t\trequired: true,\n\t\ttypeOptions: {\n\t\t\talwaysOpenEditWindow: true,\n\t\t},\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['message'],\n\t\t\t\toperation: ['update'],\n\t\t\t\tjsonParameters: [true],\n\t\t\t},\n\t\t},\n\t\tdefault: '',\n\t\tdescription: 'Message input as JSON Object or JSON String',\n\t},\n];\n"],"mappings":"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","names":[]}