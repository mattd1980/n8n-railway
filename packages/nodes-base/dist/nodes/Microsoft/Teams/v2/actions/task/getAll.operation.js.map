{"version":3,"sources":["../../../../../../../nodes/Microsoft/Teams/v2/actions/task/getAll.operation.ts"],"sourcesContent":["import type { INodeProperties, IExecuteFunctions } from 'n8n-workflow';\n\nimport { returnAllOrLimit } from '@utils/descriptions';\nimport { updateDisplayOptions } from '@utils/utilities';\n\nimport { groupRLC, planRLC } from '../../descriptions';\nimport { microsoftApiRequest, microsoftApiRequestAllItems } from '../../transport';\n\nconst properties: INodeProperties[] = [\n\t{\n\t\tdisplayName: 'Tasks For',\n\t\tname: 'tasksFor',\n\t\tdefault: 'member',\n\t\trequired: true,\n\t\ttype: 'options',\n\t\tdescription: 'Whether to retrieve the tasks for a user or for a plan',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tname: 'Group Member',\n\t\t\t\tvalue: 'member',\n\t\t\t\tdescription: 'Tasks assigned to group member',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Plan',\n\t\t\t\tvalue: 'plan',\n\t\t\t\tdescription: 'Tasks in group plan',\n\t\t\t},\n\t\t],\n\t},\n\tgroupRLC,\n\t{\n\t\t...planRLC,\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\ttasksFor: ['plan'],\n\t\t\t},\n\t\t},\n\t},\n\t...returnAllOrLimit,\n];\n\nconst displayOptions = {\n\tshow: {\n\t\tresource: ['task'],\n\t\toperation: ['getAll'],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n\nexport async function execute(this: IExecuteFunctions, i: number) {\n\tconst tasksFor = this.getNodeParameter('tasksFor', i) as string;\n\tconst returnAll = this.getNodeParameter('returnAll', i);\n\n\tif (tasksFor === 'member') {\n\t\t//https://docs.microsoft.com/en-us/graph/api/planneruser-list-tasks?view=graph-rest-1.0&tabs=http\n\t\tconst memberId = ((await microsoftApiRequest.call(this, 'GET', '/v1.0/me')) as { id: string })\n\t\t\t.id;\n\t\tif (returnAll) {\n\t\t\treturn await microsoftApiRequestAllItems.call(\n\t\t\t\tthis,\n\t\t\t\t'value',\n\t\t\t\t'GET',\n\t\t\t\t`/v1.0/users/${memberId}/planner/tasks`,\n\t\t\t);\n\t\t} else {\n\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\tconst responseData = await microsoftApiRequestAllItems.call(\n\t\t\t\tthis,\n\t\t\t\t'value',\n\t\t\t\t'GET',\n\t\t\t\t`/v1.0/users/${memberId}/planner/tasks`,\n\t\t\t\t{},\n\t\t\t);\n\t\t\treturn responseData.splice(0, limit);\n\t\t}\n\t} else {\n\t\t//https://docs.microsoft.com/en-us/graph/api/plannerplan-list-tasks?view=graph-rest-1.0&tabs=http\n\t\tconst planId = this.getNodeParameter('planId', i, '', { extractValue: true }) as string;\n\t\tif (returnAll) {\n\t\t\treturn await microsoftApiRequestAllItems.call(\n\t\t\t\tthis,\n\t\t\t\t'value',\n\t\t\t\t'GET',\n\t\t\t\t`/v1.0/planner/plans/${planId}/tasks`,\n\t\t\t);\n\t\t} else {\n\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\tconst responseData = await microsoftApiRequestAllItems.call(\n\t\t\t\tthis,\n\t\t\t\t'value',\n\t\t\t\t'GET',\n\t\t\t\t`/v1.0/planner/plans/${planId}/tasks`,\n\t\t\t\t{},\n\t\t\t);\n\t\t\treturn responseData.splice(0, limit);\n\t\t}\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,0BAAiC;AACjC,uBAAqC;AAErC,IAAAA,uBAAkC;AAClC,uBAAiE;AAEjE,MAAM,aAAgC;AAAA,EACrC;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,UAAU;AAAA,IACV,MAAM;AAAA,IACN,aAAa;AAAA,IACb,SAAS;AAAA,MACR;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,QACP,aAAa;AAAA,MACd;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,QACP,aAAa;AAAA,MACd;AAAA,IACD;AAAA,EACD;AAAA,EACA;AAAA,EACA;AAAA,IACC,GAAG;AAAA,IACH,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,UAAU,CAAC,MAAM;AAAA,MAClB;AAAA,IACD;AAAA,EACD;AAAA,EACA,GAAG;AACJ;AAEA,MAAM,iBAAiB;AAAA,EACtB,MAAM;AAAA,IACL,UAAU,CAAC,MAAM;AAAA,IACjB,WAAW,CAAC,QAAQ;AAAA,EACrB;AACD;AAEO,MAAM,kBAAc,uCAAqB,gBAAgB,UAAU;AAE1E,eAAsB,QAAiC,GAAW;AACjE,QAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AACpD,QAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AAEtD,MAAI,aAAa,UAAU;AAE1B,UAAM,YAAa,MAAM,qCAAoB,KAAK,MAAM,OAAO,UAAU,GACvE;AACF,QAAI,WAAW;AACd,aAAO,MAAM,6CAA4B;AAAA,QACxC;AAAA,QACA;AAAA,QACA;AAAA,QACA,eAAe,QAAQ;AAAA,MACxB;AAAA,IACD,OAAO;AACN,YAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC9C,YAAM,eAAe,MAAM,6CAA4B;AAAA,QACtD;AAAA,QACA;AAAA,QACA;AAAA,QACA,eAAe,QAAQ;AAAA,QACvB,CAAC;AAAA,MACF;AACA,aAAO,aAAa,OAAO,GAAG,KAAK;AAAA,IACpC;AAAA,EACD,OAAO;AAEN,UAAM,SAAS,KAAK,iBAAiB,UAAU,GAAG,IAAI,EAAE,cAAc,KAAK,CAAC;AAC5E,QAAI,WAAW;AACd,aAAO,MAAM,6CAA4B;AAAA,QACxC;AAAA,QACA;AAAA,QACA;AAAA,QACA,uBAAuB,MAAM;AAAA,MAC9B;AAAA,IACD,OAAO;AACN,YAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC9C,YAAM,eAAe,MAAM,6CAA4B;AAAA,QACtD;AAAA,QACA;AAAA,QACA;AAAA,QACA,uBAAuB,MAAM;AAAA,QAC7B,CAAC;AAAA,MACF;AACA,aAAO,aAAa,OAAO,GAAG,KAAK;AAAA,IACpC;AAAA,EACD;AACD;","names":["import_descriptions"]}