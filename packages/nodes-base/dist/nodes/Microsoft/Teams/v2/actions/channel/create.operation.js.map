{"version":3,"sources":["../../../../../../../nodes/Microsoft/Teams/v2/actions/channel/create.operation.ts"],"sourcesContent":["import type { INodeProperties, IExecuteFunctions, IDataObject } from 'n8n-workflow';\n\nimport { updateDisplayOptions } from '@utils/utilities';\n\nimport { teamRLC } from '../../descriptions';\nimport { microsoftApiRequest } from '../../transport';\n\nconst properties: INodeProperties[] = [\n\tteamRLC,\n\t{\n\t\tdisplayName: 'New Channel Name',\n\t\tname: 'name',\n\t\trequired: true,\n\t\ttype: 'string',\n\t\tdefault: '',\n\t\tplaceholder: 'e.g. My New Channel',\n\t\tdescription: 'The name of the new channel you want to create',\n\t},\n\t{\n\t\tdisplayName: 'Options',\n\t\tname: 'options',\n\t\ttype: 'collection',\n\t\tdefault: {},\n\t\tplaceholder: 'Add option',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Description',\n\t\t\t\tname: 'description',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tdescription: 'The description of the channel',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\trows: 2,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Type',\n\t\t\t\tname: 'type',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Private',\n\t\t\t\t\t\tvalue: 'private',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Standard',\n\t\t\t\t\t\tvalue: 'standard',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'standard',\n\t\t\t\tdescription:\n\t\t\t\t\t'Standard: Accessible to everyone on the team. Private: Accessible only to a specific group of people within the team.',\n\t\t\t},\n\t\t],\n\t},\n];\n\nconst displayOptions = {\n\tshow: {\n\t\tresource: ['channel'],\n\t\toperation: ['create'],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n\nexport async function execute(this: IExecuteFunctions, i: number) {\n\t//https://docs.microsoft.com/en-us/graph/api/channel-post?view=graph-rest-beta&tabs=http\n\tconst teamId = this.getNodeParameter('teamId', i, '', { extractValue: true }) as string;\n\tconst name = this.getNodeParameter('name', i) as string;\n\tconst options = this.getNodeParameter('options', i);\n\n\tconst body: IDataObject = {\n\t\tdisplayName: name,\n\t};\n\tif (options.description) {\n\t\tbody.description = options.description as string;\n\t}\n\tif (options.type) {\n\t\tbody.membershipType = options.type as string;\n\t}\n\treturn await microsoftApiRequest.call(this, 'POST', `/v1.0/teams/${teamId}/channels`, body);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,uBAAqC;AAErC,0BAAwB;AACxB,uBAAoC;AAEpC,MAAM,aAAgC;AAAA,EACrC;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,IACb,aAAa;AAAA,EACd;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,IACV,aAAa;AAAA,IACb,SAAS;AAAA,MACR;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aAAa;AAAA,QACb,aAAa;AAAA,UACZ,MAAM;AAAA,QACP;AAAA,MACD;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,UACR;AAAA,YACC,MAAM;AAAA,YACN,OAAO;AAAA,UACR;AAAA,UACA;AAAA,YACC,MAAM;AAAA,YACN,OAAO;AAAA,UACR;AAAA,QACD;AAAA,QACA,SAAS;AAAA,QACT,aACC;AAAA,MACF;AAAA,IACD;AAAA,EACD;AACD;AAEA,MAAM,iBAAiB;AAAA,EACtB,MAAM;AAAA,IACL,UAAU,CAAC,SAAS;AAAA,IACpB,WAAW,CAAC,QAAQ;AAAA,EACrB;AACD;AAEO,MAAM,kBAAc,uCAAqB,gBAAgB,UAAU;AAE1E,eAAsB,QAAiC,GAAW;AAEjE,QAAM,SAAS,KAAK,iBAAiB,UAAU,GAAG,IAAI,EAAE,cAAc,KAAK,CAAC;AAC5E,QAAM,OAAO,KAAK,iBAAiB,QAAQ,CAAC;AAC5C,QAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAElD,QAAM,OAAoB;AAAA,IACzB,aAAa;AAAA,EACd;AACA,MAAI,QAAQ,aAAa;AACxB,SAAK,cAAc,QAAQ;AAAA,EAC5B;AACA,MAAI,QAAQ,MAAM;AACjB,SAAK,iBAAiB,QAAQ;AAAA,EAC/B;AACA,SAAO,MAAM,qCAAoB,KAAK,MAAM,QAAQ,eAAe,MAAM,aAAa,IAAI;AAC3F;","names":[]}