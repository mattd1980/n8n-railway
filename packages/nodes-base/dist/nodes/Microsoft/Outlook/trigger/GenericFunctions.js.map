{"version":3,"sources":["../../../../../nodes/Microsoft/Outlook/trigger/GenericFunctions.ts"],"sourcesContent":["import { NodeApiError } from 'n8n-workflow';\nimport type { JsonObject, IDataObject, INodeExecutionData, IPollFunctions } from 'n8n-workflow';\n\nimport { prepareFilterString, simplifyOutputMessages } from '../v2/helpers/utils';\nimport {\n\tdownloadAttachments,\n\tmicrosoftApiRequest,\n\tmicrosoftApiRequestAllItems,\n} from '../v2/transport';\n\nexport async function getPollResponse(\n\tthis: IPollFunctions,\n\tpollStartDate: string,\n\tpollEndDate: string,\n) {\n\tlet responseData;\n\tconst qs = {} as IDataObject;\n\ttry {\n\t\tconst filters = this.getNodeParameter('filters', {}) as IDataObject;\n\t\tconst options = this.getNodeParameter('options', {}) as IDataObject;\n\t\tconst output = this.getNodeParameter('output') as string;\n\t\tif (output === 'fields') {\n\t\t\tconst fields = this.getNodeParameter('fields') as string[];\n\n\t\t\tif (options.downloadAttachments) {\n\t\t\t\tfields.push('hasAttachments');\n\t\t\t}\n\n\t\t\tqs.$select = fields.join(',');\n\t\t}\n\n\t\tif (output === 'simple') {\n\t\t\tqs.$select =\n\t\t\t\t'id,conversationId,subject,bodyPreview,from,toRecipients,categories,hasAttachments';\n\t\t}\n\n\t\tconst filterString = prepareFilterString({ filters });\n\n\t\tif (filterString) {\n\t\t\tqs.$filter = filterString;\n\t\t}\n\n\t\tconst endpoint = '/messages';\n\t\tif (this.getMode() !== 'manual') {\n\t\t\tif (qs.$filter) {\n\t\t\t\tqs.$filter = `${qs.$filter} and receivedDateTime ge ${pollStartDate} and receivedDateTime lt ${pollEndDate}`;\n\t\t\t} else {\n\t\t\t\tqs.$filter = `receivedDateTime ge ${pollStartDate} and receivedDateTime lt ${pollEndDate}`;\n\t\t\t}\n\t\t\tresponseData = await microsoftApiRequestAllItems.call(\n\t\t\t\tthis,\n\t\t\t\t'value',\n\t\t\t\t'GET',\n\t\t\t\tendpoint,\n\t\t\t\tundefined,\n\t\t\t\tqs,\n\t\t\t);\n\t\t} else {\n\t\t\tqs.$top = 1;\n\t\t\tresponseData = await microsoftApiRequest.call(this, 'GET', endpoint, undefined, qs);\n\t\t\tresponseData = responseData.value;\n\t\t}\n\n\t\tif (output === 'simple') {\n\t\t\tresponseData = simplifyOutputMessages(responseData as IDataObject[]);\n\t\t}\n\n\t\tlet executionData: INodeExecutionData[] = [];\n\n\t\tif (options.downloadAttachments) {\n\t\t\tconst prefix = (options.attachmentsPrefix as string) || 'attachment_';\n\t\t\texecutionData = await downloadAttachments.call(this, responseData as IDataObject[], prefix);\n\t\t} else {\n\t\t\texecutionData = this.helpers.returnJsonArray(responseData as IDataObject[]);\n\t\t}\n\n\t\treturn executionData;\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject, {\n\t\t\tmessage: error.message,\n\t\t\tdescription: error.description,\n\t\t});\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA6B;AAG7B,mBAA4D;AAC5D,uBAIO;AAEP,eAAsB,gBAErB,eACA,aACC;AACD,MAAI;AACJ,QAAM,KAAK,CAAC;AACZ,MAAI;AACH,UAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC,CAAC;AACnD,UAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC,CAAC;AACnD,UAAM,SAAS,KAAK,iBAAiB,QAAQ;AAC7C,QAAI,WAAW,UAAU;AACxB,YAAM,SAAS,KAAK,iBAAiB,QAAQ;AAE7C,UAAI,QAAQ,qBAAqB;AAChC,eAAO,KAAK,gBAAgB;AAAA,MAC7B;AAEA,SAAG,UAAU,OAAO,KAAK,GAAG;AAAA,IAC7B;AAEA,QAAI,WAAW,UAAU;AACxB,SAAG,UACF;AAAA,IACF;AAEA,UAAM,mBAAe,kCAAoB,EAAE,QAAQ,CAAC;AAEpD,QAAI,cAAc;AACjB,SAAG,UAAU;AAAA,IACd;AAEA,UAAM,WAAW;AACjB,QAAI,KAAK,QAAQ,MAAM,UAAU;AAChC,UAAI,GAAG,SAAS;AACf,WAAG,UAAU,GAAG,GAAG,OAAO,4BAA4B,aAAa,4BAA4B,WAAW;AAAA,MAC3G,OAAO;AACN,WAAG,UAAU,uBAAuB,aAAa,4BAA4B,WAAW;AAAA,MACzF;AACA,qBAAe,MAAM,6CAA4B;AAAA,QAChD;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,IACD,OAAO;AACN,SAAG,OAAO;AACV,qBAAe,MAAM,qCAAoB,KAAK,MAAM,OAAO,UAAU,QAAW,EAAE;AAClF,qBAAe,aAAa;AAAA,IAC7B;AAEA,QAAI,WAAW,UAAU;AACxB,yBAAe,qCAAuB,YAA6B;AAAA,IACpE;AAEA,QAAI,gBAAsC,CAAC;AAE3C,QAAI,QAAQ,qBAAqB;AAChC,YAAM,SAAU,QAAQ,qBAAgC;AACxD,sBAAgB,MAAM,qCAAoB,KAAK,MAAM,cAA+B,MAAM;AAAA,IAC3F,OAAO;AACN,sBAAgB,KAAK,QAAQ,gBAAgB,YAA6B;AAAA,IAC3E;AAEA,WAAO;AAAA,EACR,SAAS,OAAO;AACf,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,OAAqB;AAAA,MAC3D,SAAS,MAAM;AAAA,MACf,aAAa,MAAM;AAAA,IACpB,CAAC;AAAA,EACF;AACD;","names":[]}