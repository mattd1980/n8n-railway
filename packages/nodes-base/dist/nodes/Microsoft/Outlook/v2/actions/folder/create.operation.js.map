{"version":3,"sources":["../../../../../../../nodes/Microsoft/Outlook/v2/actions/folder/create.operation.ts"],"sourcesContent":["import type { IDataObject, IExecuteFunctions, INodeProperties } from 'n8n-workflow';\n\nimport { updateDisplayOptions } from '@utils/utilities';\n\nimport { folderRLC } from '../../descriptions';\nimport { decodeOutlookId } from '../../helpers/utils';\nimport { microsoftApiRequest } from '../../transport';\n\nexport const properties: INodeProperties[] = [\n\t{\n\t\tdisplayName: 'Name',\n\t\tname: 'displayName',\n\t\tdescription: 'Name of the folder',\n\t\ttype: 'string',\n\t\trequired: true,\n\t\tdefault: '',\n\t\tplaceholder: 'e.g. My Folder',\n\t},\n\t{\n\t\tdisplayName: 'Options',\n\t\tname: 'options',\n\t\ttype: 'collection',\n\t\tplaceholder: 'Add option',\n\t\tdefault: {},\n\t\toptions: [{ ...folderRLC, displayName: 'Parent Folder', required: false }],\n\t},\n];\n\nconst displayOptions = {\n\tshow: {\n\t\tresource: ['folder'],\n\t\toperation: ['create'],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n\nexport async function execute(this: IExecuteFunctions, index: number) {\n\tconst displayName = this.getNodeParameter('displayName', index) as string;\n\n\tconst folderId = decodeOutlookId(\n\t\tthis.getNodeParameter('options.folderId', index, '', {\n\t\t\textractValue: true,\n\t\t}) as string,\n\t);\n\n\tconst body: IDataObject = {\n\t\tdisplayName,\n\t};\n\n\tlet endpoint;\n\n\tif (folderId) {\n\t\tendpoint = `/mailFolders/${folderId}/childFolders`;\n\t} else {\n\t\tendpoint = '/mailFolders';\n\t}\n\n\tconst responseData = await microsoftApiRequest.call(this, 'POST', endpoint, body);\n\n\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t{ itemData: { item: index } },\n\t);\n\n\treturn executionData;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,uBAAqC;AAErC,0BAA0B;AAC1B,mBAAgC;AAChC,uBAAoC;AAE7B,MAAM,aAAgC;AAAA,EAC5C;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,aAAa;AAAA,IACb,MAAM;AAAA,IACN,UAAU;AAAA,IACV,SAAS;AAAA,IACT,aAAa;AAAA,EACd;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,SAAS,CAAC;AAAA,IACV,SAAS,CAAC,EAAE,GAAG,+BAAW,aAAa,iBAAiB,UAAU,MAAM,CAAC;AAAA,EAC1E;AACD;AAEA,MAAM,iBAAiB;AAAA,EACtB,MAAM;AAAA,IACL,UAAU,CAAC,QAAQ;AAAA,IACnB,WAAW,CAAC,QAAQ;AAAA,EACrB;AACD;AAEO,MAAM,kBAAc,uCAAqB,gBAAgB,UAAU;AAE1E,eAAsB,QAAiC,OAAe;AACrE,QAAM,cAAc,KAAK,iBAAiB,eAAe,KAAK;AAE9D,QAAM,eAAW;AAAA,IAChB,KAAK,iBAAiB,oBAAoB,OAAO,IAAI;AAAA,MACpD,cAAc;AAAA,IACf,CAAC;AAAA,EACF;AAEA,QAAM,OAAoB;AAAA,IACzB;AAAA,EACD;AAEA,MAAI;AAEJ,MAAI,UAAU;AACb,eAAW,gBAAgB,QAAQ;AAAA,EACpC,OAAO;AACN,eAAW;AAAA,EACZ;AAEA,QAAM,eAAe,MAAM,qCAAoB,KAAK,MAAM,QAAQ,UAAU,IAAI;AAEhF,QAAM,gBAAgB,KAAK,QAAQ;AAAA,IAClC,KAAK,QAAQ,gBAAgB,YAA6B;AAAA,IAC1D,EAAE,UAAU,EAAE,MAAM,MAAM,EAAE;AAAA,EAC7B;AAEA,SAAO;AACR;","names":[]}