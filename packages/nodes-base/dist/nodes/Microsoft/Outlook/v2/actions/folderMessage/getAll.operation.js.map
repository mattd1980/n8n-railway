{"version":3,"sources":["../../../../../../../nodes/Microsoft/Outlook/v2/actions/folderMessage/getAll.operation.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tINodeProperties,\n} from 'n8n-workflow';\n\nimport { updateDisplayOptions } from '@utils/utilities';\n\nimport { folderRLC, returnAllOrLimit } from '../../descriptions';\nimport {\n\tdecodeOutlookId,\n\tmessageFields,\n\tprepareFilterString,\n\tsimplifyOutputMessages,\n} from '../../helpers/utils';\nimport {\n\tdownloadAttachments,\n\tmicrosoftApiRequest,\n\tmicrosoftApiRequestAllItems,\n} from '../../transport';\n\nexport const properties: INodeProperties[] = [\n\tfolderRLC,\n\t...returnAllOrLimit,\n\t{\n\t\tdisplayName: 'Output',\n\t\tname: 'output',\n\t\ttype: 'options',\n\t\tdefault: 'simple',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tname: 'Simplified',\n\t\t\t\tvalue: 'simple',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Raw',\n\t\t\t\tvalue: 'raw',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Select Included Fields',\n\t\t\t\tvalue: 'fields',\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tdisplayName: 'Fields',\n\t\tname: 'fields',\n\t\ttype: 'multiOptions',\n\t\tdescription: 'The fields to add to the output',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\toutput: ['fields'],\n\t\t\t},\n\t\t},\n\t\toptions: messageFields,\n\t\tdefault: [],\n\t},\n\t{\n\t\tdisplayName:\n\t\t\t'Fetching a lot of messages may take a long time. Consider using filters to speed things up',\n\t\tname: 'filtersNotice',\n\t\ttype: 'notice',\n\t\tdefault: '',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\treturnAll: [true],\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tdisplayName: 'Filters',\n\t\tname: 'filtersUI',\n\t\ttype: 'fixedCollection',\n\t\tplaceholder: 'Add Filters',\n\t\tdefault: {},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Values',\n\t\t\t\tname: 'values',\n\t\t\t\tvalues: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Filter By',\n\t\t\t\t\t\tname: 'filterBy',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Filters',\n\t\t\t\t\t\t\t\tvalue: 'filters',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Search',\n\t\t\t\t\t\t\t\tvalue: 'search',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: 'filters',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Search',\n\t\t\t\t\t\tname: 'search',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tplaceholder: 'e.g. automation',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Only return messages that contains search term. Without specific message properties, the search is carried out on the default search properties of from, subject, and body. <a href=\"https://docs.microsoft.com/en-us/graph/query-parameters#search-parameter target=\"_blank\">More info</a>.',\n\t\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\t\tfilterBy: ['search'],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Filters',\n\t\t\t\t\t\tname: 'filters',\n\t\t\t\t\t\ttype: 'collection',\n\t\t\t\t\t\tplaceholder: 'Add Filter',\n\t\t\t\t\t\tdefault: {},\n\t\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\t\tfilterBy: ['filters'],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Filter Query',\n\t\t\t\t\t\t\t\tname: 'custom',\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\tplaceholder: 'e.g. isRead eq false',\n\t\t\t\t\t\t\t\thint: 'Search query to filter messages. <a href=\"https://learn.microsoft.com/en-us/graph/filter-query-parameter\">More info</a>.',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Has Attachments',\n\t\t\t\t\t\t\t\tname: 'hasAttachments',\n\t\t\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Read Status',\n\t\t\t\t\t\t\t\tname: 'readStatus',\n\t\t\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\t\t\tdefault: 'unread',\n\t\t\t\t\t\t\t\thint: 'Filter messages by whether they have been read or not',\n\t\t\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-display-name-miscased\n\t\t\t\t\t\t\t\t\t\tname: 'Unread and read messages',\n\t\t\t\t\t\t\t\t\t\tvalue: 'both',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-display-name-miscased\n\t\t\t\t\t\t\t\t\t\tname: 'Unread messages only',\n\t\t\t\t\t\t\t\t\t\tvalue: 'unread',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-display-name-miscased\n\t\t\t\t\t\t\t\t\t\tname: 'Read messages only',\n\t\t\t\t\t\t\t\t\t\tvalue: 'read',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Received After',\n\t\t\t\t\t\t\t\tname: 'receivedAfter',\n\t\t\t\t\t\t\t\ttype: 'dateTime',\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t'Get all messages received after the specified date. In an expression you can set date using string in ISO format or a timestamp in miliseconds.',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Received Before',\n\t\t\t\t\t\t\t\tname: 'receivedBefore',\n\t\t\t\t\t\t\t\ttype: 'dateTime',\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t'Get all messages received before the specified date. In an expression you can set date using string in ISO format or a timestamp in miliseconds.',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Sender',\n\t\t\t\t\t\t\t\tname: 'sender',\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\tdescription: 'Sender name or email to filter by',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tdisplayName: 'Options',\n\t\tname: 'options',\n\t\ttype: 'collection',\n\t\tplaceholder: 'Add option',\n\t\tdefault: {},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Attachments Prefix',\n\t\t\t\tname: 'attachmentsPrefix',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: 'attachment_',\n\t\t\t\tdescription:\n\t\t\t\t\t'Prefix for name of the output fields to put the binary files data in. An index starting from 0 will be added. So if name is \"attachment_\" the first attachment is saved to \"attachment_0\".',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Download Attachments',\n\t\t\t\tname: 'downloadAttachments',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\tdescription:\n\t\t\t\t\t\"Whether the message's attachments will be downloaded and included in the output\",\n\t\t\t},\n\t\t],\n\t},\n];\n\nconst displayOptions = {\n\tshow: {\n\t\tresource: ['folderMessage'],\n\t\toperation: ['getAll'],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n\nexport async function execute(this: IExecuteFunctions, index: number) {\n\tlet responseData;\n\tconst qs: IDataObject = {};\n\n\tconst folderId = decodeOutlookId(\n\t\tthis.getNodeParameter('folderId', index, undefined, {\n\t\t\textractValue: true,\n\t\t}) as string,\n\t);\n\n\tconst returnAll = this.getNodeParameter('returnAll', index);\n\tconst filters = this.getNodeParameter('filtersUI.values', index, {}) as IDataObject;\n\tconst options = this.getNodeParameter('options', index, {});\n\tconst output = this.getNodeParameter('output', index) as string;\n\n\tif (output === 'fields') {\n\t\tconst fields = this.getNodeParameter('fields', index) as string[];\n\n\t\tif (options.downloadAttachments) {\n\t\t\tfields.push('hasAttachments');\n\t\t}\n\n\t\tqs.$select = fields.join(',');\n\t}\n\n\tif (output === 'simple') {\n\t\tqs.$select =\n\t\t\t'id,conversationId,subject,bodyPreview,from,toRecipients,categories,hasAttachments';\n\t}\n\n\tif (filters.filterBy === 'search' && filters.search !== '') {\n\t\tqs.$search = `\"${filters.search}\"`;\n\t}\n\n\tif (filters.filterBy === 'filters') {\n\t\tconst filterString = prepareFilterString(filters);\n\n\t\tif (filterString) {\n\t\t\tqs.$filter = filterString;\n\t\t}\n\t}\n\n\tconst endpoint = `/mailFolders/${folderId}/messages`;\n\n\tif (returnAll) {\n\t\tresponseData = await microsoftApiRequestAllItems.call(\n\t\t\tthis,\n\t\t\t'value',\n\t\t\t'GET',\n\t\t\tendpoint,\n\t\t\tundefined,\n\t\t\tqs,\n\t\t);\n\t} else {\n\t\tqs.$top = this.getNodeParameter('limit', index);\n\t\tresponseData = await microsoftApiRequest.call(this, 'GET', endpoint, undefined, qs);\n\t\tresponseData = responseData.value;\n\t}\n\n\tif (output === 'simple') {\n\t\tresponseData = simplifyOutputMessages(responseData as IDataObject[]);\n\t}\n\n\tlet executionData: INodeExecutionData[] = [];\n\n\tif (options.downloadAttachments) {\n\t\tconst prefix = (options.attachmentsPrefix as string) || 'attachment_';\n\t\texecutionData = await downloadAttachments.call(this, responseData as IDataObject, prefix);\n\t} else {\n\t\texecutionData = this.helpers.constructExecutionMetaData(\n\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t{ itemData: { item: index } },\n\t\t);\n\t}\n\n\treturn executionData;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,uBAAqC;AAErC,0BAA4C;AAC5C,mBAKO;AACP,uBAIO;AAEA,MAAM,aAAgC;AAAA,EAC5C;AAAA,EACA,GAAG;AAAA,EACH;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS;AAAA,IACT,SAAS;AAAA,MACR;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,IACD;AAAA,EACD;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,QAAQ,CAAC,QAAQ;AAAA,MAClB;AAAA,IACD;AAAA,IACA,SAAS;AAAA,IACT,SAAS,CAAC;AAAA,EACX;AAAA,EACA;AAAA,IACC,aACC;AAAA,IACD,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS;AAAA,IACT,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,WAAW,CAAC,IAAI;AAAA,MACjB;AAAA,IACD;AAAA,EACD;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,SAAS,CAAC;AAAA,IACV,SAAS;AAAA,MACR;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,QAAQ;AAAA,UACP;AAAA,YACC,aAAa;AAAA,YACb,MAAM;AAAA,YACN,MAAM;AAAA,YACN,SAAS;AAAA,cACR;AAAA,gBACC,MAAM;AAAA,gBACN,OAAO;AAAA,cACR;AAAA,cACA;AAAA,gBACC,MAAM;AAAA,gBACN,OAAO;AAAA,cACR;AAAA,YACD;AAAA,YACA,SAAS;AAAA,UACV;AAAA,UACA;AAAA,YACC,aAAa;AAAA,YACb,MAAM;AAAA,YACN,MAAM;AAAA,YACN,SAAS;AAAA,YACT,aAAa;AAAA,YACb,aACC;AAAA,YACD,gBAAgB;AAAA,cACf,MAAM;AAAA,gBACL,UAAU,CAAC,QAAQ;AAAA,cACpB;AAAA,YACD;AAAA,UACD;AAAA,UACA;AAAA,YACC,aAAa;AAAA,YACb,MAAM;AAAA,YACN,MAAM;AAAA,YACN,aAAa;AAAA,YACb,SAAS,CAAC;AAAA,YACV,gBAAgB;AAAA,cACf,MAAM;AAAA,gBACL,UAAU,CAAC,SAAS;AAAA,cACrB;AAAA,YACD;AAAA,YACA,SAAS;AAAA,cACR;AAAA,gBACC,aAAa;AAAA,gBACb,MAAM;AAAA,gBACN,MAAM;AAAA,gBACN,SAAS;AAAA,gBACT,aAAa;AAAA,gBACb,MAAM;AAAA,cACP;AAAA,cACA;AAAA,gBACC,aAAa;AAAA,gBACb,MAAM;AAAA,gBACN,MAAM;AAAA,gBACN,SAAS;AAAA,cACV;AAAA,cACA;AAAA,gBACC,aAAa;AAAA,gBACb,MAAM;AAAA,gBACN,MAAM;AAAA,gBACN,SAAS;AAAA,gBACT,MAAM;AAAA,gBACN,SAAS;AAAA,kBACR;AAAA;AAAA,oBAEC,MAAM;AAAA,oBACN,OAAO;AAAA,kBACR;AAAA,kBACA;AAAA;AAAA,oBAEC,MAAM;AAAA,oBACN,OAAO;AAAA,kBACR;AAAA,kBACA;AAAA;AAAA,oBAEC,MAAM;AAAA,oBACN,OAAO;AAAA,kBACR;AAAA,gBACD;AAAA,cACD;AAAA,cACA;AAAA,gBACC,aAAa;AAAA,gBACb,MAAM;AAAA,gBACN,MAAM;AAAA,gBACN,SAAS;AAAA,gBACT,aACC;AAAA,cACF;AAAA,cACA;AAAA,gBACC,aAAa;AAAA,gBACb,MAAM;AAAA,gBACN,MAAM;AAAA,gBACN,SAAS;AAAA,gBACT,aACC;AAAA,cACF;AAAA,cACA;AAAA,gBACC,aAAa;AAAA,gBACb,MAAM;AAAA,gBACN,MAAM;AAAA,gBACN,SAAS;AAAA,gBACT,aAAa;AAAA,cACd;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,SAAS,CAAC;AAAA,IACV,SAAS;AAAA,MACR;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aACC;AAAA,MACF;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aACC;AAAA,MACF;AAAA,IACD;AAAA,EACD;AACD;AAEA,MAAM,iBAAiB;AAAA,EACtB,MAAM;AAAA,IACL,UAAU,CAAC,eAAe;AAAA,IAC1B,WAAW,CAAC,QAAQ;AAAA,EACrB;AACD;AAEO,MAAM,kBAAc,uCAAqB,gBAAgB,UAAU;AAE1E,eAAsB,QAAiC,OAAe;AACrE,MAAI;AACJ,QAAM,KAAkB,CAAC;AAEzB,QAAM,eAAW;AAAA,IAChB,KAAK,iBAAiB,YAAY,OAAO,QAAW;AAAA,MACnD,cAAc;AAAA,IACf,CAAC;AAAA,EACF;AAEA,QAAM,YAAY,KAAK,iBAAiB,aAAa,KAAK;AAC1D,QAAM,UAAU,KAAK,iBAAiB,oBAAoB,OAAO,CAAC,CAAC;AACnE,QAAM,UAAU,KAAK,iBAAiB,WAAW,OAAO,CAAC,CAAC;AAC1D,QAAM,SAAS,KAAK,iBAAiB,UAAU,KAAK;AAEpD,MAAI,WAAW,UAAU;AACxB,UAAM,SAAS,KAAK,iBAAiB,UAAU,KAAK;AAEpD,QAAI,QAAQ,qBAAqB;AAChC,aAAO,KAAK,gBAAgB;AAAA,IAC7B;AAEA,OAAG,UAAU,OAAO,KAAK,GAAG;AAAA,EAC7B;AAEA,MAAI,WAAW,UAAU;AACxB,OAAG,UACF;AAAA,EACF;AAEA,MAAI,QAAQ,aAAa,YAAY,QAAQ,WAAW,IAAI;AAC3D,OAAG,UAAU,IAAI,QAAQ,MAAM;AAAA,EAChC;AAEA,MAAI,QAAQ,aAAa,WAAW;AACnC,UAAM,mBAAe,kCAAoB,OAAO;AAEhD,QAAI,cAAc;AACjB,SAAG,UAAU;AAAA,IACd;AAAA,EACD;AAEA,QAAM,WAAW,gBAAgB,QAAQ;AAEzC,MAAI,WAAW;AACd,mBAAe,MAAM,6CAA4B;AAAA,MAChD;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACD,OAAO;AACN,OAAG,OAAO,KAAK,iBAAiB,SAAS,KAAK;AAC9C,mBAAe,MAAM,qCAAoB,KAAK,MAAM,OAAO,UAAU,QAAW,EAAE;AAClF,mBAAe,aAAa;AAAA,EAC7B;AAEA,MAAI,WAAW,UAAU;AACxB,uBAAe,qCAAuB,YAA6B;AAAA,EACpE;AAEA,MAAI,gBAAsC,CAAC;AAE3C,MAAI,QAAQ,qBAAqB;AAChC,UAAM,SAAU,QAAQ,qBAAgC;AACxD,oBAAgB,MAAM,qCAAoB,KAAK,MAAM,cAA6B,MAAM;AAAA,EACzF,OAAO;AACN,oBAAgB,KAAK,QAAQ;AAAA,MAC5B,KAAK,QAAQ,gBAAgB,YAA6B;AAAA,MAC1D,EAAE,UAAU,EAAE,MAAM,MAAM,EAAE;AAAA,IAC7B;AAAA,EACD;AAEA,SAAO;AACR;","names":[]}