{"version":3,"sources":["../../../../../../../nodes/Microsoft/Excel/v2/actions/table/lookup.operation.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tINodeProperties,\n\tJsonObject,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\nimport { updateDisplayOptions } from '@utils/utilities';\n\nimport { microsoftApiRequestAllItemsSkip } from '../../transport';\nimport { tableRLC, workbookRLC, worksheetRLC } from '../common.descriptions';\n\nconst properties: INodeProperties[] = [\n\tworkbookRLC,\n\tworksheetRLC,\n\ttableRLC,\n\t{\n\t\tdisplayName: 'Lookup Column',\n\t\tname: 'lookupColumn',\n\t\ttype: 'string',\n\t\tdefault: '',\n\t\tplaceholder: 'Email',\n\t\trequired: true,\n\t\tdescription: 'The name of the column in which to look for value',\n\t},\n\t{\n\t\tdisplayName: 'Lookup Value',\n\t\tname: 'lookupValue',\n\t\ttype: 'string',\n\t\tdefault: '',\n\t\tplaceholder: 'frank@example.com',\n\t\trequired: true,\n\t\tdescription: 'The value to look for in column',\n\t},\n\t{\n\t\tdisplayName: 'Options',\n\t\tname: 'options',\n\t\ttype: 'collection',\n\t\tplaceholder: 'Add option',\n\t\tdefault: {},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Return All Matches',\n\t\t\t\tname: 'returnAllMatches',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-description-boolean-without-whether\n\t\t\t\tdescription:\n\t\t\t\t\t'By default only the first result gets returned. If options gets set all found matches get returned.',\n\t\t\t},\n\t\t],\n\t},\n];\n\nconst displayOptions = {\n\tshow: {\n\t\tresource: ['table'],\n\t\toperation: ['lookup'],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n\nexport async function execute(\n\tthis: IExecuteFunctions,\n\titems: INodeExecutionData[],\n): Promise<INodeExecutionData[]> {\n\tconst returnData: INodeExecutionData[] = [];\n\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst qs: IDataObject = {};\n\t\ttry {\n\t\t\tconst workbookId = this.getNodeParameter('workbook', i, undefined, {\n\t\t\t\textractValue: true,\n\t\t\t}) as string;\n\n\t\t\tconst worksheetId = this.getNodeParameter('worksheet', i, undefined, {\n\t\t\t\textractValue: true,\n\t\t\t}) as string;\n\n\t\t\tconst tableId = this.getNodeParameter('table', i, undefined, {\n\t\t\t\textractValue: true,\n\t\t\t}) as string;\n\n\t\t\tconst lookupColumn = this.getNodeParameter('lookupColumn', i) as string;\n\t\t\tconst lookupValue = this.getNodeParameter('lookupValue', i) as string;\n\t\t\tconst options = this.getNodeParameter('options', i);\n\n\t\t\tlet responseData = await microsoftApiRequestAllItemsSkip.call(\n\t\t\t\tthis,\n\t\t\t\t'value',\n\t\t\t\t'GET',\n\t\t\t\t`/drive/items/${workbookId}/workbook/worksheets/${worksheetId}/tables/${tableId}/rows`,\n\t\t\t\t{},\n\t\t\t\t{},\n\t\t\t);\n\n\t\t\tqs.$select = 'name';\n\t\t\t// TODO: That should probably be cached in the future\n\t\t\tlet columns = await microsoftApiRequestAllItemsSkip.call(\n\t\t\t\tthis,\n\t\t\t\t'value',\n\t\t\t\t'GET',\n\t\t\t\t`/drive/items/${workbookId}/workbook/worksheets/${worksheetId}/tables/${tableId}/columns`,\n\t\t\t\t{},\n\t\t\t\tqs,\n\t\t\t);\n\t\t\tcolumns = columns.map((column: IDataObject) => column.name);\n\n\t\t\tif (!columns.includes(lookupColumn)) {\n\t\t\t\tthrow new NodeApiError(this.getNode(), responseData as JsonObject, {\n\t\t\t\t\tmessage: `Column ${lookupColumn} does not exist on the table selected`,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst result: IDataObject[] = [];\n\n\t\t\tfor (let index = 0; index < responseData.length; index++) {\n\t\t\t\tconst object: IDataObject = {};\n\t\t\t\tfor (let y = 0; y < columns.length; y++) {\n\t\t\t\t\tobject[columns[y]] = responseData[index].values[0][y];\n\t\t\t\t}\n\t\t\t\tresult.push({ ...object });\n\t\t\t}\n\n\t\t\tif (options.returnAllMatches) {\n\t\t\t\tresponseData = result.filter((data: IDataObject) => {\n\t\t\t\t\treturn data[lookupColumn]?.toString() === lookupValue;\n\t\t\t\t});\n\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject),\n\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t);\n\n\t\t\t\treturnData.push(...executionData);\n\t\t\t} else {\n\t\t\t\tresponseData = result.find((data: IDataObject) => {\n\t\t\t\t\treturn data[lookupColumn]?.toString() === lookupValue;\n\t\t\t\t});\n\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject),\n\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t);\n\n\t\t\t\treturnData.push(...executionData);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (this.continueOnFail()) {\n\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t);\n\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\treturn returnData;\n}\n"],"mappings":"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","names":[]}