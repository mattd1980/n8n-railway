{"version":3,"sources":["../../../../../nodes/Microsoft/SharePoint/methods/resourceMapping.ts"],"sourcesContent":["import type {\n\tFieldType,\n\tILoadOptionsFunctions,\n\tResourceMapperField,\n\tResourceMapperFields,\n} from 'n8n-workflow';\n\nimport type { IListColumnType } from '../helpers/interfaces';\nimport { microsoftSharePointApiRequest } from '../transport';\n\nconst unsupportedFields = ['geoLocation', 'location', 'term', 'url'];\nconst fieldTypeMapping: Partial<Record<FieldType, string[]>> = {\n\tstring: ['text', 'user', 'lookup'],\n\t// unknownFutureValue: rating\n\tnumber: ['number', 'currency', 'unknownFutureValue'],\n\tboolean: ['boolean'],\n\tdateTime: ['dateTime'],\n\tobject: ['thumbnail'],\n\toptions: ['choice'],\n};\n\nfunction mapType(column: IListColumnType): FieldType | undefined {\n\tif (unsupportedFields.includes(column.type)) {\n\t\treturn undefined;\n\t}\n\tlet mappedType: FieldType = 'string';\n\tfor (const t of Object.keys(fieldTypeMapping)) {\n\t\tconst postgresTypes = fieldTypeMapping[t as FieldType];\n\t\tif (postgresTypes?.includes(column.type)) {\n\t\t\tmappedType = t as FieldType;\n\t\t}\n\t}\n\treturn mappedType;\n}\n\nexport async function getMappingColumns(\n\tthis: ILoadOptionsFunctions,\n): Promise<ResourceMapperFields> {\n\tconst site = this.getNodeParameter('site', undefined, { extractValue: true }) as string;\n\tconst list = this.getNodeParameter('list', undefined, { extractValue: true }) as string;\n\tconst operation = this.getNodeParameter('operation') as string;\n\n\tconst response = await microsoftSharePointApiRequest.call(\n\t\tthis,\n\t\t'GET',\n\t\t`/sites/${site}/lists/${list}/contentTypes`,\n\t\t{},\n\t\t{ expand: 'columns' },\n\t);\n\n\tconst columns: IListColumnType[] = response.value[0].columns;\n\n\tconst fields: ResourceMapperField[] = [];\n\n\tfor (const column of columns.filter((x) => !x.hidden && !x.readOnly)) {\n\t\tconst fieldType = mapType(column);\n\t\tconst field = {\n\t\t\tid: column.name,\n\t\t\tcanBeUsedToMatch: column.enforceUniqueValues && column.required,\n\t\t\tdefaultMatch: false,\n\t\t\tdisplay: true,\n\t\t\tdisplayName: column.displayName,\n\t\t\treadOnly: column.readOnly || !fieldType,\n\t\t\trequired: column.required,\n\t\t\ttype: fieldType,\n\t\t} as ResourceMapperField;\n\t\tif (field.type === 'options') {\n\t\t\tfield.options = [];\n\t\t\tif (Array.isArray(column.choice?.choices)) {\n\t\t\t\tfor (const choice of column.choice.choices) {\n\t\t\t\t\tfield.options.push({\n\t\t\t\t\t\tname: choice,\n\t\t\t\t\t\tvalue: choice,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfields.push(field);\n\t}\n\n\tif (operation === 'update') {\n\t\tfields.push({\n\t\t\tid: 'id',\n\t\t\tcanBeUsedToMatch: true,\n\t\t\tdefaultMatch: false,\n\t\t\tdisplay: true,\n\t\t\tdisplayName: 'ID',\n\t\t\treadOnly: true,\n\t\t\trequired: true,\n\t\t\ttype: 'string',\n\t\t});\n\t}\n\n\treturn { fields };\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,uBAA8C;AAE9C,MAAM,oBAAoB,CAAC,eAAe,YAAY,QAAQ,KAAK;AACnE,MAAM,mBAAyD;AAAA,EAC9D,QAAQ,CAAC,QAAQ,QAAQ,QAAQ;AAAA;AAAA,EAEjC,QAAQ,CAAC,UAAU,YAAY,oBAAoB;AAAA,EACnD,SAAS,CAAC,SAAS;AAAA,EACnB,UAAU,CAAC,UAAU;AAAA,EACrB,QAAQ,CAAC,WAAW;AAAA,EACpB,SAAS,CAAC,QAAQ;AACnB;AAEA,SAAS,QAAQ,QAAgD;AAChE,MAAI,kBAAkB,SAAS,OAAO,IAAI,GAAG;AAC5C,WAAO;AAAA,EACR;AACA,MAAI,aAAwB;AAC5B,aAAW,KAAK,OAAO,KAAK,gBAAgB,GAAG;AAC9C,UAAM,gBAAgB,iBAAiB,CAAc;AACrD,QAAI,eAAe,SAAS,OAAO,IAAI,GAAG;AACzC,mBAAa;AAAA,IACd;AAAA,EACD;AACA,SAAO;AACR;AAEA,eAAsB,oBAEW;AAChC,QAAM,OAAO,KAAK,iBAAiB,QAAQ,QAAW,EAAE,cAAc,KAAK,CAAC;AAC5E,QAAM,OAAO,KAAK,iBAAiB,QAAQ,QAAW,EAAE,cAAc,KAAK,CAAC;AAC5E,QAAM,YAAY,KAAK,iBAAiB,WAAW;AAEnD,QAAM,WAAW,MAAM,+CAA8B;AAAA,IACpD;AAAA,IACA;AAAA,IACA,UAAU,IAAI,UAAU,IAAI;AAAA,IAC5B,CAAC;AAAA,IACD,EAAE,QAAQ,UAAU;AAAA,EACrB;AAEA,QAAM,UAA6B,SAAS,MAAM,CAAC,EAAE;AAErD,QAAM,SAAgC,CAAC;AAEvC,aAAW,UAAU,QAAQ,OAAO,CAAC,MAAM,CAAC,EAAE,UAAU,CAAC,EAAE,QAAQ,GAAG;AACrE,UAAM,YAAY,QAAQ,MAAM;AAChC,UAAM,QAAQ;AAAA,MACb,IAAI,OAAO;AAAA,MACX,kBAAkB,OAAO,uBAAuB,OAAO;AAAA,MACvD,cAAc;AAAA,MACd,SAAS;AAAA,MACT,aAAa,OAAO;AAAA,MACpB,UAAU,OAAO,YAAY,CAAC;AAAA,MAC9B,UAAU,OAAO;AAAA,MACjB,MAAM;AAAA,IACP;AACA,QAAI,MAAM,SAAS,WAAW;AAC7B,YAAM,UAAU,CAAC;AACjB,UAAI,MAAM,QAAQ,OAAO,QAAQ,OAAO,GAAG;AAC1C,mBAAW,UAAU,OAAO,OAAO,SAAS;AAC3C,gBAAM,QAAQ,KAAK;AAAA,YAClB,MAAM;AAAA,YACN,OAAO;AAAA,UACR,CAAC;AAAA,QACF;AAAA,MACD;AAAA,IACD;AACA,WAAO,KAAK,KAAK;AAAA,EAClB;AAEA,MAAI,cAAc,UAAU;AAC3B,WAAO,KAAK;AAAA,MACX,IAAI;AAAA,MACJ,kBAAkB;AAAA,MAClB,cAAc;AAAA,MACd,SAAS;AAAA,MACT,aAAa;AAAA,MACb,UAAU;AAAA,MACV,UAAU;AAAA,MACV,MAAM;AAAA,IACP,CAAC;AAAA,EACF;AAEA,SAAO,EAAE,OAAO;AACjB;","names":[]}