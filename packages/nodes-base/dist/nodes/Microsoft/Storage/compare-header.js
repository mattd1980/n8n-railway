"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var compare_header_exports = {};
__export(compare_header_exports, {
  compareHeader: () => compareHeader
});
module.exports = __toCommonJS(compare_header_exports);
const table_lv0 = new Uint32Array([
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  1820,
  0,
  1823,
  1825,
  1827,
  1829,
  0,
  0,
  0,
  1837,
  2051,
  0,
  0,
  1843,
  0,
  3331,
  3354,
  3356,
  3358,
  3360,
  3362,
  3364,
  3366,
  3368,
  3370,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  3586,
  3593,
  3594,
  3610,
  3617,
  3619,
  3621,
  3628,
  3634,
  3637,
  3638,
  3656,
  3665,
  3696,
  3708,
  3710,
  3721,
  3722,
  3729,
  3737,
  3743,
  3746,
  3748,
  3750,
  3751,
  3753,
  0,
  0,
  0,
  1859,
  1860,
  1864,
  3586,
  3593,
  3594,
  3610,
  3617,
  3619,
  3621,
  3628,
  3634,
  3637,
  3638,
  3656,
  3665,
  3696,
  3708,
  3710,
  3721,
  3722,
  3729,
  3737,
  3743,
  3746,
  3748,
  3750,
  3751,
  3753,
  0,
  1868,
  0,
  1872,
  0
]);
const table_lv2 = new Uint32Array([
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  18,
  18,
  18,
  18,
  18,
  18,
  18,
  18,
  18,
  18,
  18,
  18,
  18,
  18,
  18,
  18,
  18,
  18,
  18,
  18,
  18,
  18,
  18,
  18,
  18,
  18,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0
]);
const table_lv4 = new Uint32Array([
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  32786,
  0,
  0,
  0,
  0,
  0,
  33298,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0
]);
function isLessThan(lhs, rhs) {
  const tables = [table_lv0, table_lv2, table_lv4];
  let curr_level = 0;
  let i = 0;
  let j = 0;
  while (curr_level < tables.length) {
    if (curr_level === tables.length - 1 && i !== j) {
      return i > j;
    }
    const weight1 = i < lhs.length ? tables[curr_level][lhs[i].charCodeAt(0)] : 1;
    const weight2 = j < rhs.length ? tables[curr_level][rhs[j].charCodeAt(0)] : 1;
    if (weight1 === 1 && weight2 === 1) {
      i = 0;
      j = 0;
      ++curr_level;
    } else if (weight1 === weight2) {
      ++i;
      ++j;
    } else if (weight1 === 0) {
      ++i;
    } else if (weight2 === 0) {
      ++j;
    } else {
      return weight1 < weight2;
    }
  }
  return false;
}
function compareHeader(lhs, rhs) {
  if (isLessThan(lhs, rhs)) return -1;
  return 1;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  compareHeader
});
//# sourceMappingURL=compare-header.js.map