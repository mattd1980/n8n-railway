{"version":3,"sources":["../../../../nodes/Microsoft/OneDrive/MicrosoftOneDrive.node.ts"],"sourcesContent":["import { IncomingMessage } from 'http';\nimport type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n\tJsonObject,\n} from 'n8n-workflow';\nimport { NodeApiError, NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport { fileFields, fileOperations } from './FileDescription';\nimport { folderFields, folderOperations } from './FolderDescription';\nimport { microsoftApiRequest, microsoftApiRequestAllItems } from './GenericFunctions';\n\nexport class MicrosoftOneDrive implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Microsoft OneDrive',\n\t\tname: 'microsoftOneDrive',\n\t\ticon: 'file:oneDrive.svg',\n\t\tgroup: ['input'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume Microsoft OneDrive API',\n\t\tdefaults: {\n\t\t\tname: 'Microsoft OneDrive',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'microsoftOneDriveOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'File',\n\t\t\t\t\t\tvalue: 'file',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Folder',\n\t\t\t\t\t\tvalue: 'folder',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'file',\n\t\t\t},\n\t\t\t...fileOperations,\n\t\t\t...fileFields,\n\t\t\t...folderOperations,\n\t\t\t...folderFields,\n\t\t],\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst length = items.length;\n\t\tlet responseData;\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'file') {\n\t\t\t\t\t//https://docs.microsoft.com/en-us/onedrive/developer/rest-api/api/driveitem_copy?view=odsp-graph-online\n\t\t\t\t\tif (operation === 'copy') {\n\t\t\t\t\t\tconst fileId = this.getNodeParameter('fileId', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst parentReference = this.getNodeParameter('parentReference', i) as IDataObject;\n\t\t\t\t\t\tconst body: IDataObject = {};\n\t\t\t\t\t\tif (parentReference) {\n\t\t\t\t\t\t\tbody.parentReference = { ...parentReference };\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.name) {\n\t\t\t\t\t\t\tbody.name = additionalFields.name as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/drive/items/${fileId}/copy`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t{ json: true, resolveWithFullResponse: true },\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = { location: responseData.headers.location };\n\t\t\t\t\t}\n\t\t\t\t\t//https://docs.microsoft.com/en-us/onedrive/developer/rest-api/api/driveitem_delete?view=odsp-graph-online\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst fileId = this.getNodeParameter('fileId', i) as string;\n\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(this, 'DELETE', `/drive/items/${fileId}`);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t\t//https://docs.microsoft.com/en-us/onedrive/developer/rest-api/api/driveitem_list_children?view=odsp-graph-online\n\t\t\t\t\tif (operation === 'download') {\n\t\t\t\t\t\tconst fileId = this.getNodeParameter('fileId', i) as string;\n\t\t\t\t\t\tconst dataPropertyNameDownload = this.getNodeParameter('binaryPropertyName', i);\n\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(this, 'GET', `/drive/items/${fileId}`);\n\n\t\t\t\t\t\tconst fileName = responseData.name;\n\t\t\t\t\t\tconst downloadUrl = responseData['@microsoft.graph.downloadUrl'];\n\n\t\t\t\t\t\tif (responseData.file === undefined) {\n\t\t\t\t\t\t\tthrow new NodeApiError(this.getNode(), responseData as JsonObject, {\n\t\t\t\t\t\t\t\tmessage: 'The ID you provided does not belong to a file.',\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet mimeType: string | undefined;\n\t\t\t\t\t\tif (responseData.file.mimeType) {\n\t\t\t\t\t\t\tmimeType = responseData.file.mimeType;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/drive/items/${fileId}/content`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t{ encoding: null, resolveWithFullResponse: true },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tif (downloadUrl) {\n\t\t\t\t\t\t\t\tresponseData = await this.helpers.httpRequest({\n\t\t\t\t\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\t\t\t\t\turl: downloadUrl,\n\t\t\t\t\t\t\t\t\treturnFullResponse: true,\n\t\t\t\t\t\t\t\t\tencoding: 'arraybuffer',\n\t\t\t\t\t\t\t\t\tjson: false,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst newItem: INodeExecutionData = {\n\t\t\t\t\t\t\tjson: items[i].json,\n\t\t\t\t\t\t\tbinary: {},\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (mimeType === undefined && responseData.headers['content-type']) {\n\t\t\t\t\t\t\tmimeType = responseData.headers['content-type'];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (items[i].binary !== undefined) {\n\t\t\t\t\t\t\t// Create a shallow copy of the binary data so that the old\n\t\t\t\t\t\t\t// data references which do not get changed still stay behind\n\t\t\t\t\t\t\t// but the incoming data does not get changed.\n\t\t\t\t\t\t\tObject.assign(newItem.binary!, items[i].binary);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\titems[i] = newItem;\n\n\t\t\t\t\t\tlet data;\n\t\t\t\t\t\tif (responseData?.body instanceof IncomingMessage) {\n\t\t\t\t\t\t\tdata = responseData.body;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdata = Buffer.from(responseData.body as Buffer);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\titems[i].binary![dataPropertyNameDownload] = await this.helpers.prepareBinaryData(\n\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\tfileName as string,\n\t\t\t\t\t\t\tmimeType,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://docs.microsoft.com/en-us/onedrive/developer/rest-api/api/driveitem_get?view=odsp-graph-online\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst fileId = this.getNodeParameter('fileId', i) as string;\n\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(this, 'GET', `/drive/items/${fileId}`);\n\t\t\t\t\t}\n\t\t\t\t\t//https://docs.microsoft.com/en-us/onedrive/developer/rest-api/api/driveitem_search?view=odsp-graph-online\n\t\t\t\t\tif (operation === 'search') {\n\t\t\t\t\t\tconst query = this.getNodeParameter('query', i) as string;\n\t\t\t\t\t\tresponseData = await microsoftApiRequestAllItems.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'value',\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/drive/root/search(q='${query}')`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.filter((item: IDataObject) => item.file);\n\t\t\t\t\t}\n\t\t\t\t\t//https://docs.microsoft.com/en-us/onedrive/developer/rest-api/api/driveitem_createlink?view=odsp-graph-online\n\t\t\t\t\tif (operation === 'share') {\n\t\t\t\t\t\tconst fileId = this.getNodeParameter('fileId', i) as string;\n\t\t\t\t\t\tconst type = this.getNodeParameter('type', i) as string;\n\t\t\t\t\t\tconst scope = this.getNodeParameter('scope', i) as string;\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\tscope,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/drive/items/${fileId}/createLink`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://docs.microsoft.com/en-us/onedrive/developer/rest-api/api/driveitem_put_content?view=odsp-graph-online#example-upload-a-new-file\n\t\t\t\t\tif (operation === 'upload') {\n\t\t\t\t\t\tconst parentId = this.getNodeParameter('parentId', i) as string;\n\t\t\t\t\t\tconst isBinaryData = this.getNodeParameter('binaryData', i);\n\t\t\t\t\t\tconst fileName = this.getNodeParameter('fileName', i) as string;\n\n\t\t\t\t\t\tif (isBinaryData) {\n\t\t\t\t\t\t\tconst binaryPropertyName = this.getNodeParameter('binaryPropertyName', 0);\n\t\t\t\t\t\t\tconst binaryData = this.helpers.assertBinaryData(i, binaryPropertyName);\n\t\t\t\t\t\t\tconst body = await this.helpers.getBinaryDataBuffer(i, binaryPropertyName);\n\t\t\t\t\t\t\tlet encodedFilename;\n\n\t\t\t\t\t\t\tif (fileName !== '') {\n\t\t\t\t\t\t\t\tencodedFilename = encodeURIComponent(fileName);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (binaryData.fileName !== undefined) {\n\t\t\t\t\t\t\t\tencodedFilename = encodeURIComponent(binaryData.fileName);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t\t\t`/drive/items/${parentId}:/${encodedFilename}:/content`,\n\t\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t{ 'Content-Type': binaryData.mimeType, 'Content-length': body.length },\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tresponseData = JSON.parse(responseData as string);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst body = this.getNodeParameter('fileContent', i) as string;\n\t\t\t\t\t\t\tif (fileName === '') {\n\t\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'File name must be set!', {\n\t\t\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst encodedFilename = encodeURIComponent(fileName);\n\t\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t\t\t`/drive/items/${parentId}:/${encodedFilename}:/content`,\n\t\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t{ 'Content-Type': 'text/plain' },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'folder') {\n\t\t\t\t\t//https://docs.microsoft.com/en-us/onedrive/developer/rest-api/api/driveitem_post_children?view=odsp-graph-online\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst names = (this.getNodeParameter('name', i) as string)\n\t\t\t\t\t\t\t.split('/')\n\t\t\t\t\t\t\t.filter((s) => s.trim() !== '');\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tlet parentFolderId = options.parentFolderId ? options.parentFolderId : null;\n\t\t\t\t\t\tfor (const name of names) {\n\t\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\tfolder: {},\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tlet endpoint = '/drive/root/children';\n\t\t\t\t\t\t\tif (parentFolderId) {\n\t\t\t\t\t\t\t\tendpoint = `/drive/items/${parentFolderId}/children`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(this, 'POST', endpoint, body);\n\t\t\t\t\t\t\tif (!responseData.id) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tparentFolderId = responseData.id;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://docs.microsoft.com/en-us/onedrive/developer/rest-api/api/driveitem_delete?view=odsp-graph-online\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst folderId = this.getNodeParameter('folderId', i) as string;\n\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/drive/items/${folderId}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t\t//https://docs.microsoft.com/en-us/onedrive/developer/rest-api/api/driveitem_list_children?view=odsp-graph-online\n\t\t\t\t\tif (operation === 'getChildren') {\n\t\t\t\t\t\tconst folderId = this.getNodeParameter('folderId', i) as string;\n\t\t\t\t\t\tresponseData = await microsoftApiRequestAllItems.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'value',\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/drive/items/${folderId}/children`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://docs.microsoft.com/en-us/onedrive/developer/rest-api/api/driveitem_search?view=odsp-graph-online\n\t\t\t\t\tif (operation === 'search') {\n\t\t\t\t\t\tconst query = this.getNodeParameter('query', i) as string;\n\t\t\t\t\t\tresponseData = await microsoftApiRequestAllItems.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'value',\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/drive/root/search(q='${query}')`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.filter((item: IDataObject) => item.folder);\n\t\t\t\t\t}\n\t\t\t\t\t//https://docs.microsoft.com/en-us/onedrive/developer/rest-api/api/driveitem_createlink?view=odsp-graph-online\n\t\t\t\t\tif (operation === 'share') {\n\t\t\t\t\t\tconst folderId = this.getNodeParameter('folderId', i) as string;\n\t\t\t\t\t\tconst type = this.getNodeParameter('type', i) as string;\n\t\t\t\t\t\tconst scope = this.getNodeParameter('scope', i) as string;\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\tscope,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/drive/items/${folderId}/createLink`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'file' || resource === 'folder') {\n\t\t\t\t\tif (operation === 'rename') {\n\t\t\t\t\t\tconst itemId = this.getNodeParameter('itemId', i) as string;\n\t\t\t\t\t\tconst newName = this.getNodeParameter('newName', i) as string;\n\t\t\t\t\t\tconst body = { name: newName };\n\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PATCH',\n\t\t\t\t\t\t\t`/drive/items/${itemId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tif (resource === 'file' && operation === 'download') {\n\t\t\t\t\t\titems[i].json = { error: error.message };\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject),\n\t\t\t\t{ itemData: { item: i } },\n\t\t\t);\n\n\t\t\treturnData.push(...executionData);\n\t\t}\n\t\tif (resource === 'file' && operation === 'download') {\n\t\t\t// For file downloads the files get attached to the existing items\n\t\t\treturn [items];\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":[]}