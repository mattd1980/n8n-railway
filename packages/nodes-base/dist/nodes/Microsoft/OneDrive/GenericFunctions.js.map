{"version":3,"sources":["../../../../nodes/Microsoft/OneDrive/GenericFunctions.ts"],"sourcesContent":["import { DateTime } from 'luxon';\nimport type {\n\tIExecuteFunctions,\n\tILoadOptionsFunctions,\n\tIDataObject,\n\tJsonObject,\n\tIHttpRequestMethods,\n\tIRequestOptions,\n\tIPollFunctions,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\nexport async function microsoftApiRequest(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions | IPollFunctions,\n\tmethod: IHttpRequestMethods,\n\tresource: string,\n\n\tbody: any = {},\n\tqs: IDataObject = {},\n\turi?: string,\n\theaders: IDataObject = {},\n\toption: IDataObject = { json: true },\n): Promise<any> {\n\tconst options: IRequestOptions = {\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tmethod,\n\t\tbody,\n\t\tqs,\n\t\turi: uri || `https://graph.microsoft.com/v1.0/me${resource}`,\n\t};\n\ttry {\n\t\tObject.assign(options, option);\n\t\tif (Object.keys(headers).length !== 0) {\n\t\t\toptions.headers = Object.assign({}, options.headers, headers);\n\t\t}\n\t\tif (Object.keys(qs).length === 0) {\n\t\t\tdelete options.qs;\n\t\t}\n\t\tif (Object.keys(body as IDataObject).length === 0) {\n\t\t\tdelete options.body;\n\t\t}\n\t\treturn await this.helpers.requestOAuth2.call(this, 'microsoftOneDriveOAuth2Api', options);\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\nexport async function microsoftApiRequestAllItems(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions | IPollFunctions,\n\tpropertyName: string,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\n\tbody: any = {},\n\tquery: IDataObject = {},\n): Promise<any> {\n\tconst returnData: IDataObject[] = [];\n\n\tlet responseData;\n\tlet uri: string | undefined;\n\tquery.$top = 100;\n\n\tdo {\n\t\tresponseData = await microsoftApiRequest.call(this, method, endpoint, body, query, uri);\n\t\turi = responseData['@odata.nextLink'];\n\t\tif (uri?.includes('$top')) {\n\t\t\tdelete query.$top;\n\t\t}\n\t\treturnData.push.apply(returnData, responseData[propertyName] as IDataObject[]);\n\t} while (responseData['@odata.nextLink'] !== undefined);\n\n\treturn returnData;\n}\n\nexport async function microsoftApiRequestAllItemsSkip(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions | IPollFunctions,\n\tpropertyName: string,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\n\tbody: any = {},\n\tquery: IDataObject = {},\n): Promise<any> {\n\tconst returnData: IDataObject[] = [];\n\n\tlet responseData;\n\tquery.$top = 100;\n\tquery.$skip = 0;\n\n\tdo {\n\t\tresponseData = await microsoftApiRequest.call(this, method, endpoint, body, query);\n\t\tquery.$skip += query.$top;\n\t\treturnData.push.apply(returnData, responseData[propertyName] as IDataObject[]);\n\t} while (responseData.value.length !== 0);\n\n\treturn returnData;\n}\n\nexport async function microsoftApiRequestAllItemsDelta(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions | IPollFunctions,\n\tlink: string,\n\tlastDate: DateTime,\n\teventType: string,\n): Promise<any> {\n\tconst returnData: IDataObject[] = [];\n\n\tlet responseData;\n\tlet deltaLink: string = '';\n\tlet uri: string = link;\n\n\tdo {\n\t\tresponseData = (await microsoftApiRequest.call(this, 'GET', '', {}, {}, uri)) as IDataObject;\n\t\turi = responseData['@odata.nextLink'] as string;\n\n\t\tfor (const value of responseData.value as IDataObject[]) {\n\t\t\tif (value.fileSystemInfo as IDataObject) {\n\t\t\t\tconst updatedTimeStamp = (value.fileSystemInfo as IDataObject)\n\t\t\t\t\t?.lastModifiedDateTime as string;\n\t\t\t\tconst createdTimeStamp = (value.fileSystemInfo as IDataObject)?.createdDateTime as string;\n\t\t\t\tif (eventType === 'created') {\n\t\t\t\t\tif (DateTime.fromISO(createdTimeStamp) >= lastDate) {\n\t\t\t\t\t\treturnData.push(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (eventType === 'updated') {\n\t\t\t\t\tif (\n\t\t\t\t\t\tDateTime.fromISO(updatedTimeStamp) >= lastDate &&\n\t\t\t\t\t\tDateTime.fromISO(createdTimeStamp) < lastDate\n\t\t\t\t\t) {\n\t\t\t\t\t\treturnData.push(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//returnData.push.apply(returnData, responseData.value as IDataObject[]);\n\t\tdeltaLink = (responseData['@odata.deltaLink'] as string) || '';\n\t} while (responseData['@odata.nextLink'] !== undefined);\n\n\treturn { deltaLink, returnData };\n}\n\nexport async function getPath(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions | IPollFunctions,\n\titemId: string,\n): Promise<string> {\n\tconst responseData = (await microsoftApiRequest.call(\n\t\tthis,\n\t\t'GET',\n\t\t'',\n\t\t{},\n\t\t{},\n\t\t`https://graph.microsoft.com/v1.0/me/drive/items/${itemId}`,\n\t)) as IDataObject;\n\tif (responseData.folder) {\n\t\treturn (responseData?.parentReference as IDataObject)?.path + `/${responseData?.name}`;\n\t} else {\n\t\tconst workflow = this.getWorkflow();\n\t\tconst node = this.getNode();\n\t\tthis.logger.error(\n\t\t\t`There was a problem in '${node.name}' node in workflow '${workflow.id}': 'Item to watch is not a folder'`,\n\t\t\t{\n\t\t\t\tnode: node.name,\n\t\t\t\tworkflowId: workflow.id,\n\t\t\t\terror: 'Item to watch is not a folder',\n\t\t\t},\n\t\t);\n\t\tthrow new NodeApiError(this.getNode(), {\n\t\t\terror: 'Item to watch is not a folder',\n\t\t} as JsonObject);\n\t}\n}\n"],"mappings":"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","names":[]}