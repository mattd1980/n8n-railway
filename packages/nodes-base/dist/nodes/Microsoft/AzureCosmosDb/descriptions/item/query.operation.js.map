{"version":3,"sources":["../../../../../../nodes/Microsoft/AzureCosmosDb/descriptions/item/query.operation.ts"],"sourcesContent":["import { updateDisplayOptions, type INodeProperties } from 'n8n-workflow';\n\nimport { validateQueryParameters } from '../../helpers/utils';\nimport { containerResourceLocator } from '../common';\n\nconst properties: INodeProperties[] = [\n\t{ ...containerResourceLocator, description: 'Select the container you want to use' },\n\t{\n\t\tdisplayName: 'Query',\n\t\tname: 'query',\n\t\tdefault: '',\n\t\tdescription:\n\t\t\t\"The SQL query to execute. Use $1, $2, $3, etc., to reference the 'Query Parameters' set in the options below.\",\n\t\thint: 'Consider using query parameters to prevent SQL injection attacks. Add them in the options below.',\n\t\tnoDataExpression: true,\n\t\tplaceholder: 'e.g. SELECT id, name FROM c WHERE c.name = $1',\n\t\trequired: true,\n\t\trouting: {\n\t\t\tsend: {\n\t\t\t\ttype: 'body',\n\t\t\t\tproperty: 'query',\n\t\t\t\tvalue: \"={{ $value.replace(/\\\\$(\\\\d+)/g, '@Param$1') }}\",\n\t\t\t},\n\t\t},\n\t\ttype: 'string',\n\t\ttypeOptions: {\n\t\t\teditor: 'sqlEditor',\n\t\t\tsqlDialect: 'StandardSQL',\n\t\t},\n\t},\n\t{\n\t\tdisplayName: 'Simplify',\n\t\tname: 'simple',\n\t\tdefault: true,\n\t\tdescription: 'Whether to return a simplified version of the response instead of the raw data',\n\t\ttype: 'boolean',\n\t},\n\t{\n\t\tdisplayName: 'Options',\n\t\tname: 'options',\n\t\tdefault: {},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Query Options',\n\t\t\t\tname: 'queryOptions',\n\t\t\t\tvalues: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Query Parameters',\n\t\t\t\t\t\tname: 'queryParameters',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Comma-separated list of values used as query parameters. Use $1, $2, $3, etc., in your query.',\n\t\t\t\t\t\thint: 'Reference them in your query as $1, $2, $3â€¦',\n\t\t\t\t\t\tplaceholder: 'e.g. value1,value2,value3',\n\t\t\t\t\t\trouting: {\n\t\t\t\t\t\t\tsend: {\n\t\t\t\t\t\t\t\tpreSend: [validateQueryParameters],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t\tplaceholder: 'Add options',\n\t\ttype: 'fixedCollection',\n\t\ttypeOptions: {\n\t\t\tmultipleValues: false,\n\t\t},\n\t},\n];\n\nconst displayOptions = {\n\tshow: {\n\t\tresource: ['item'],\n\t\toperation: ['query'],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA2D;AAE3D,mBAAwC;AACxC,oBAAyC;AAEzC,MAAM,aAAgC;AAAA,EACrC,EAAE,GAAG,wCAA0B,aAAa,uCAAuC;AAAA,EACnF;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aACC;AAAA,IACD,MAAM;AAAA,IACN,kBAAkB;AAAA,IAClB,aAAa;AAAA,IACb,UAAU;AAAA,IACV,SAAS;AAAA,MACR,MAAM;AAAA,QACL,MAAM;AAAA,QACN,UAAU;AAAA,QACV,OAAO;AAAA,MACR;AAAA,IACD;AAAA,IACA,MAAM;AAAA,IACN,aAAa;AAAA,MACZ,QAAQ;AAAA,MACR,YAAY;AAAA,IACb;AAAA,EACD;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,IACb,MAAM;AAAA,EACP;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,IACV,SAAS;AAAA,MACR;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,QAAQ;AAAA,UACP;AAAA,YACC,aAAa;AAAA,YACb,MAAM;AAAA,YACN,SAAS;AAAA,YACT,aACC;AAAA,YACD,MAAM;AAAA,YACN,aAAa;AAAA,YACb,SAAS;AAAA,cACR,MAAM;AAAA,gBACL,SAAS,CAAC,oCAAuB;AAAA,cAClC;AAAA,YACD;AAAA,YACA,MAAM;AAAA,UACP;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,IACA,aAAa;AAAA,IACb,MAAM;AAAA,IACN,aAAa;AAAA,MACZ,gBAAgB;AAAA,IACjB;AAAA,EACD;AACD;AAEA,MAAM,iBAAiB;AAAA,EACtB,MAAM;AAAA,IACL,UAAU,CAAC,MAAM;AAAA,IACjB,WAAW,CAAC,OAAO;AAAA,EACpB;AACD;AAEO,MAAM,kBAAc,0CAAqB,gBAAgB,UAAU;","names":[]}