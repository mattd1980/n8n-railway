{"version":3,"sources":["../../../../nodes/Microsoft/Dynamics/MicrosoftDynamicsCrm.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes } from 'n8n-workflow';\n\nimport { accountFields, accountOperations } from './descriptions';\nimport type { IField } from './GenericFunctions';\nimport {\n\tadjustAddresses,\n\tgetEntityFields,\n\tgetPicklistOptions,\n\tmicrosoftApiRequest,\n\tmicrosoftApiRequestAllItems,\n\tsort,\n} from './GenericFunctions';\n\nexport class MicrosoftDynamicsCrm implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Microsoft Dynamics CRM',\n\t\tname: 'microsoftDynamicsCrm',\n\t\ticon: { light: 'file:microsoftDynamicsCrm.svg', dark: 'file:microsoftDynamicsCrm.dark.svg' },\n\t\tgroup: ['input'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume Microsoft Dynamics CRM API',\n\t\tdefaults: {\n\t\t\tname: 'Microsoft Dynamics CRM',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'microsoftDynamicsOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Account',\n\t\t\t\t\t\tvalue: 'account',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'account',\n\t\t\t},\n\t\t\t...accountOperations,\n\t\t\t...accountFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\tasync getAccountCategories(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\treturn await getPicklistOptions.call(this, 'account', 'accountcategorycode');\n\t\t\t},\n\t\t\tasync getAccountRatingCodes(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\treturn await getPicklistOptions.call(this, 'account', 'accountratingcode');\n\t\t\t},\n\t\t\tasync getAddressTypes(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\treturn await getPicklistOptions.call(this, 'account', 'address1_addresstypecode');\n\t\t\t},\n\t\t\tasync getBusinessTypes(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\treturn await getPicklistOptions.call(this, 'account', 'businesstypecode');\n\t\t\t},\n\t\t\tasync getCustomerSizeCodes(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\treturn await getPicklistOptions.call(this, 'account', 'customersizecode');\n\t\t\t},\n\t\t\tasync getCustomerTypeCodes(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\treturn await getPicklistOptions.call(this, 'account', 'customertypecode');\n\t\t\t},\n\t\t\tasync getIndustryCodes(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\treturn await getPicklistOptions.call(this, 'account', 'industrycode');\n\t\t\t},\n\t\t\tasync getPaymentTermsCodes(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\treturn await getPicklistOptions.call(this, 'account', 'paymenttermscode');\n\t\t\t},\n\t\t\tasync getPreferredAppointmentDayCodes(\n\t\t\t\tthis: ILoadOptionsFunctions,\n\t\t\t): Promise<INodePropertyOptions[]> {\n\t\t\t\treturn await getPicklistOptions.call(this, 'account', 'preferredappointmentdaycode');\n\t\t\t},\n\t\t\tasync getPreferredAppointmentTimeCodes(\n\t\t\t\tthis: ILoadOptionsFunctions,\n\t\t\t): Promise<INodePropertyOptions[]> {\n\t\t\t\treturn await getPicklistOptions.call(this, 'account', 'preferredappointmenttimecode');\n\t\t\t},\n\t\t\tasync getPreferredContactMethodCodes(\n\t\t\t\tthis: ILoadOptionsFunctions,\n\t\t\t): Promise<INodePropertyOptions[]> {\n\t\t\t\treturn await getPicklistOptions.call(this, 'account', 'preferredcontactmethodcode');\n\t\t\t},\n\t\t\tasync getShippingMethodCodes(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\treturn await getPicklistOptions.call(this, 'account', 'shippingmethodcode');\n\t\t\t},\n\t\t\tasync getTerritoryCodes(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\treturn await getPicklistOptions.call(this, 'account', 'territorycode');\n\t\t\t},\n\t\t\tasync getAccountFields(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst fields = await getEntityFields.call(this, 'account');\n\t\t\t\tconst isSelectable = (field: IField) =>\n\t\t\t\t\tfield.IsValidForRead &&\n\t\t\t\t\tfield.CanBeSecuredForRead &&\n\t\t\t\t\tfield.IsValidODataAttribute &&\n\t\t\t\t\tfield.LogicalName !== 'slaid';\n\t\t\t\treturn fields\n\t\t\t\t\t.filter(isSelectable)\n\t\t\t\t\t.filter((field) => field.DisplayName.UserLocalizedLabel?.Label)\n\t\t\t\t\t.map((field) => ({\n\t\t\t\t\t\tname: field.DisplayName.UserLocalizedLabel.Label,\n\t\t\t\t\t\tvalue: field.LogicalName,\n\t\t\t\t\t}))\n\t\t\t\t\t.sort(sort);\n\t\t\t},\n\t\t\tasync getExpandableAccountFields(\n\t\t\t\tthis: ILoadOptionsFunctions,\n\t\t\t): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst fields = await getEntityFields.call(this, 'account');\n\t\t\t\tconst isSelectable = (field: IField) =>\n\t\t\t\t\tfield.IsValidForRead &&\n\t\t\t\t\tfield.CanBeSecuredForRead &&\n\t\t\t\t\tfield.IsValidODataAttribute &&\n\t\t\t\t\tfield.AttributeType === 'Lookup' &&\n\t\t\t\t\tfield.LogicalName !== 'slaid';\n\t\t\t\treturn fields\n\t\t\t\t\t.filter(isSelectable)\n\t\t\t\t\t.map((field) => ({\n\t\t\t\t\t\tname: field.DisplayName.UserLocalizedLabel.Label,\n\t\t\t\t\t\tvalue: field.LogicalName,\n\t\t\t\t\t}))\n\t\t\t\t\t.sort(sort);\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst length = items.length;\n\t\tconst qs: IDataObject = {};\n\t\tlet responseData;\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'account') {\n\t\t\t\t\t//https://docs.microsoft.com/en-us/powerapps/developer/data-platform/webapi/create-entity-web-api\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst name = this.getNodeParameter('name', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i) as {\n\t\t\t\t\t\t\taddresses: { address: [{ [key: string]: any }] };\n\t\t\t\t\t\t};\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i) as { returnFields: string[] };\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t...additionalFields,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (body?.addresses?.address) {\n\t\t\t\t\t\t\tObject.assign(body, adjustAddresses(body.addresses.address));\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tdelete body?.addresses;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (options.returnFields) {\n\t\t\t\t\t\t\toptions.returnFields.push('accountid');\n\t\t\t\t\t\t\tqs.$select = options.returnFields.join(',');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.$select = 'accountid';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(this, 'POST', '/accounts', body, qs);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\t//https://docs.microsoft.com/en-us/powerapps/developer/data-platform/webapi/update-delete-entities-using-web-api#basic-delete\n\t\t\t\t\t\tconst accountId = this.getNodeParameter('accountId', i) as string;\n\t\t\t\t\t\tawait microsoftApiRequest.call(this, 'DELETE', `/accounts(${accountId})`, {}, qs);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\t//https://docs.microsoft.com/en-us/powerapps/developer/data-platform/webapi/retrieve-entity-using-web-api\n\t\t\t\t\t\tconst accountId = this.getNodeParameter('accountId', i) as string;\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tif (options.returnFields) {\n\t\t\t\t\t\t\tqs.$select = (options.returnFields as string[]).join(',');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.expandFields) {\n\t\t\t\t\t\t\tqs.$expand = (options.expandFields as string[]).join(',');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/accounts(${accountId})`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\t//https://docs.microsoft.com/en-us/powerapps/developer/data-platform/webapi/query-data-web-api\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\t\t\t\t\t\tif (options.returnFields) {\n\t\t\t\t\t\t\tqs.$select = (options.returnFields as string[]).join(',');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.expandFields) {\n\t\t\t\t\t\t\tqs.$expand = (options.expandFields as string[]).join(',');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (filters.query) {\n\t\t\t\t\t\t\tqs.$filter = filters.query as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await microsoftApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'value',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/accounts',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.$top = this.getNodeParameter('limit', 0);\n\t\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(this, 'GET', '/accounts', {}, qs);\n\t\t\t\t\t\t\tresponseData = responseData.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst accountId = this.getNodeParameter('accountId', i) as string;\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i) as {\n\t\t\t\t\t\t\taddresses: { address: [{ [key: string]: any }] };\n\t\t\t\t\t\t};\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i) as { returnFields: string[] };\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\t...updateFields,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (body?.addresses?.address) {\n\t\t\t\t\t\t\tObject.assign(body, adjustAddresses(body.addresses.address));\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tdelete body?.addresses;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (options.returnFields) {\n\t\t\t\t\t\t\toptions.returnFields.push('accountid');\n\t\t\t\t\t\t\tqs.$select = options.returnFields.join(',');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.$select = 'accountid';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PATCH',\n\t\t\t\t\t\t\t`/accounts(${accountId})`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject),\n\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t);\n\n\t\t\t\treturnData.push(...executionData);\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":[]}