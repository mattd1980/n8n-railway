{"version":3,"sources":["../../../nodes/CrowdDev/GenericFunctions.ts"],"sourcesContent":["import type { IExecuteSingleFunctions, IHttpRequestOptions } from 'n8n-workflow';\n\nconst addOptName = 'additionalOptions';\n\nconst getAllParams = (execFns: IExecuteSingleFunctions): Record<string, unknown> => {\n\tconst params = execFns.getNode().parameters;\n\tconst keys = Object.keys(params);\n\tconst paramsWithValues = keys\n\t\t.filter((i) => i !== addOptName)\n\t\t.map((name) => [name, execFns.getNodeParameter(name)]);\n\n\tconst paramsWithValuesObj = Object.fromEntries(paramsWithValues);\n\n\tif (keys.includes(addOptName)) {\n\t\tconst additionalOptions = execFns.getNodeParameter(addOptName);\n\t\treturn Object.assign(paramsWithValuesObj, additionalOptions);\n\t}\n\n\treturn paramsWithValuesObj;\n};\n\nconst formatParams = (\n\tobj: Record<string, unknown>,\n\tfilters?: { [paramName: string]: (value: any) => boolean },\n\tmappers?: { [paramName: string]: (value: any) => any },\n) => {\n\treturn Object.fromEntries(\n\t\tObject.entries(obj)\n\t\t\t.filter(([name, value]) => !filters || (name in filters ? filters[name](value) : false))\n\t\t\t.map(([name, value]) =>\n\t\t\t\t!mappers || !(name in mappers) ? [name, value] : [name, mappers[name](value)],\n\t\t\t),\n\t);\n};\n\nconst objectFromProps = (src: any, props: string[]) => {\n\tconst result = props.filter((p) => src.hasOwnProperty(p)).map((p) => [p, src[p]]);\n\treturn Object.fromEntries(result);\n};\n\nconst idFn = (i: any) => i;\n\nconst keyValueToObj = (arr: any[]) => {\n\tconst obj: any = {};\n\tarr.forEach((item) => {\n\t\tobj[item.key] = item.value;\n\t});\n\treturn obj;\n};\n\nconst transformSingleProp = (prop: string) => (values: any) =>\n\t(values.itemChoice || []).map((i: any) => i[prop]);\n\nexport async function activityPresend(\n\tthis: IExecuteSingleFunctions,\n\topts: IHttpRequestOptions,\n): Promise<IHttpRequestOptions> {\n\tconst params = getAllParams(this);\n\tconst isCreateWithMember = params.operation === 'createWithMember';\n\tconst isCreateForMember = params.operation === 'createForMember';\n\n\tif (isCreateWithMember) {\n\t\t// Move following props into \"member\" subproperty\n\t\tconst memberProps = ['displayName', 'emails', 'joinedAt', 'username'];\n\t\tparams.member = objectFromProps(params, memberProps);\n\t\tmemberProps.forEach((p) => delete params[p]);\n\t}\n\topts.body = formatParams(\n\t\tparams,\n\t\t{\n\t\t\tmember: (v) => (isCreateWithMember || isCreateForMember) && v,\n\t\t\ttype: idFn,\n\t\t\ttimestamp: idFn,\n\t\t\tplatform: idFn,\n\t\t\ttitle: idFn,\n\t\t\tbody: idFn,\n\t\t\tchannel: idFn,\n\t\t\tsourceId: idFn,\n\t\t\tsourceParentId: idFn,\n\t\t},\n\t\t{\n\t\t\tmember: (v) =>\n\t\t\t\ttypeof v === 'object'\n\t\t\t\t\t? formatParams(\n\t\t\t\t\t\t\tv as Record<string, unknown>,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tusername: (un) => un.itemChoice,\n\t\t\t\t\t\t\t\tdisplayName: idFn,\n\t\t\t\t\t\t\t\temails: idFn,\n\t\t\t\t\t\t\t\tjoinedAt: idFn,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tusername: (un) => keyValueToObj(un.itemChoice as any[]),\n\t\t\t\t\t\t\t\temails: transformSingleProp('email'),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t)\n\t\t\t\t\t: v,\n\t\t},\n\t);\n\treturn opts;\n}\n\nexport async function automationPresend(\n\tthis: IExecuteSingleFunctions,\n\topts: IHttpRequestOptions,\n): Promise<IHttpRequestOptions> {\n\tconst params = getAllParams(this);\n\topts.body = {\n\t\tdata: {\n\t\t\tsettings: {\n\t\t\t\turl: params.url,\n\t\t\t},\n\t\t\ttype: 'webhook',\n\t\t\ttrigger: params.trigger,\n\t\t},\n\t};\n\treturn opts;\n}\n\nexport async function memberPresend(\n\tthis: IExecuteSingleFunctions,\n\topts: IHttpRequestOptions,\n): Promise<IHttpRequestOptions> {\n\tconst params = getAllParams(this);\n\topts.body = formatParams(\n\t\tparams,\n\t\t{\n\t\t\tplatform: idFn,\n\t\t\tusername: idFn,\n\t\t\tdisplayName: idFn,\n\t\t\temails: (i) => i.itemChoice,\n\t\t\tjoinedAt: idFn,\n\t\t\torganizations: (i) => i.itemChoice,\n\t\t\ttags: (i) => i.itemChoice,\n\t\t\ttasks: (i) => i.itemChoice,\n\t\t\tnotes: (i) => i.itemChoice,\n\t\t\tactivities: (i) => i.itemChoice,\n\t\t},\n\t\t{\n\t\t\temails: transformSingleProp('email'),\n\t\t\torganizations: (i) =>\n\t\t\t\ti.itemChoice.map((org: any) =>\n\t\t\t\t\tformatParams(\n\t\t\t\t\t\torg as Record<string, unknown>,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: idFn,\n\t\t\t\t\t\t\turl: idFn,\n\t\t\t\t\t\t\tdescription: idFn,\n\t\t\t\t\t\t\tlogo: idFn,\n\t\t\t\t\t\t\temployees: idFn,\n\t\t\t\t\t\t\tmembers: (j) => j.itemChoice,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmembers: transformSingleProp('member'),\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\ttags: transformSingleProp('tag'),\n\t\t\ttasks: transformSingleProp('task'),\n\t\t\tnotes: transformSingleProp('note'),\n\t\t\tactivities: transformSingleProp('activity'),\n\t\t},\n\t);\n\treturn opts;\n}\n\nexport async function notePresend(\n\tthis: IExecuteSingleFunctions,\n\topts: IHttpRequestOptions,\n): Promise<IHttpRequestOptions> {\n\tconst params = getAllParams(this);\n\topts.body = {\n\t\tbody: params.body,\n\t};\n\treturn opts;\n}\n\nexport async function organizationPresend(\n\tthis: IExecuteSingleFunctions,\n\topts: IHttpRequestOptions,\n): Promise<IHttpRequestOptions> {\n\tconst params = getAllParams(this);\n\topts.body = formatParams(\n\t\tparams,\n\t\t{\n\t\t\tname: idFn,\n\t\t\turl: idFn,\n\t\t\tdescription: idFn,\n\t\t\tlogo: idFn,\n\t\t\temployees: idFn,\n\t\t\tmembers: (j) => j.itemChoice,\n\t\t},\n\t\t{\n\t\t\tmembers: transformSingleProp('member'),\n\t\t},\n\t);\n\treturn opts;\n}\n\nexport async function taskPresend(\n\tthis: IExecuteSingleFunctions,\n\topts: IHttpRequestOptions,\n): Promise<IHttpRequestOptions> {\n\tconst params = getAllParams(this);\n\topts.body = formatParams(\n\t\tparams,\n\t\t{\n\t\t\tname: idFn,\n\t\t\tbody: idFn,\n\t\t\tstatus: idFn,\n\t\t\tmembers: (i) => i.itemChoice,\n\t\t\tactivities: (i) => i.itemChoice,\n\t\t\tassigneess: idFn,\n\t\t},\n\t\t{\n\t\t\tmembers: transformSingleProp('member'),\n\t\t\tactivities: transformSingleProp('activity'),\n\t\t},\n\t);\n\treturn opts;\n}\n"],"mappings":"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","names":[]}