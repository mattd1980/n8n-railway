{"version":3,"sources":["../../../nodes/ClickUp/ClickUp.node.ts"],"sourcesContent":["import moment from 'moment-timezone';\nimport type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport { checklistFields, checklistOperations } from './ChecklistDescription';\nimport { checklistItemFields, checklistItemOperations } from './ChecklistItemDescription';\nimport { commentFields, commentOperations } from './CommentDescription';\nimport { folderFields, folderOperations } from './FolderDescription';\nimport { clickupApiRequest, clickupApiRequestAllItems, validateJSON } from './GenericFunctions';\nimport { goalFields, goalOperations } from './GoalDescription';\nimport { goalKeyResultFields, goalKeyResultOperations } from './GoalKeyResultDescription';\nimport { listFields, listOperations } from './ListDescription';\nimport type { IList } from './ListInterface';\nimport { spaceTagFields, spaceTagOperations } from './SpaceTagDescription';\nimport { taskDependencyFields, taskDependencyOperations } from './TaskDependencyDescription';\nimport { taskFields, taskOperations } from './TaskDescription';\nimport type { ITask } from './TaskInterface';\nimport { taskListFields, taskListOperations } from './TaskListDescription';\nimport { taskTagFields, taskTagOperations } from './TaskTagDescription';\nimport { timeEntryFields, timeEntryOperations } from './TimeEntryDescription';\nimport { timeEntryTagFields, timeEntryTagOperations } from './TimeEntryTagDescription';\n\nexport class ClickUp implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'ClickUp',\n\t\tname: 'clickUp',\n\t\ticon: 'file:clickup.svg',\n\t\tgroup: ['output'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \":\" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume ClickUp API (Beta)',\n\t\tdefaults: {\n\t\t\tname: 'ClickUp',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'clickUpApi',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['accessToken'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'clickUpOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['oAuth2'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Authentication',\n\t\t\t\tname: 'authentication',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Access Token',\n\t\t\t\t\t\tvalue: 'accessToken',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'OAuth2',\n\t\t\t\t\t\tvalue: 'oAuth2',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'accessToken',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Checklist',\n\t\t\t\t\t\tvalue: 'checklist',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Checklist Item',\n\t\t\t\t\t\tvalue: 'checklistItem',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Comment',\n\t\t\t\t\t\tvalue: 'comment',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Folder',\n\t\t\t\t\t\tvalue: 'folder',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Goal',\n\t\t\t\t\t\tvalue: 'goal',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Goal Key Result',\n\t\t\t\t\t\tvalue: 'goalKeyResult',\n\t\t\t\t\t},\n\t\t\t\t\t// {\n\t\t\t\t\t// \tname: 'Guest',\n\t\t\t\t\t// \tvalue: 'guest',\n\t\t\t\t\t// },\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'List',\n\t\t\t\t\t\tvalue: 'list',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Space Tag',\n\t\t\t\t\t\tvalue: 'spaceTag',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Task',\n\t\t\t\t\t\tvalue: 'task',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Task Dependency',\n\t\t\t\t\t\tvalue: 'taskDependency',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Task List',\n\t\t\t\t\t\tvalue: 'taskList',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Task Tag',\n\t\t\t\t\t\tvalue: 'taskTag',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Time Entry',\n\t\t\t\t\t\tvalue: 'timeEntry',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Time Entry Tag',\n\t\t\t\t\t\tvalue: 'timeEntryTag',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'task',\n\t\t\t},\n\t\t\t// CHECKLIST\n\t\t\t...checklistOperations,\n\t\t\t...checklistFields,\n\t\t\t// CHECKLIST ITEM\n\t\t\t...checklistItemOperations,\n\t\t\t...checklistItemFields,\n\t\t\t// COMMENT\n\t\t\t...commentOperations,\n\t\t\t...commentFields,\n\t\t\t// FOLDER\n\t\t\t...folderOperations,\n\t\t\t...folderFields,\n\t\t\t// GOAL\n\t\t\t...goalOperations,\n\t\t\t...goalFields,\n\t\t\t// GOAL kEY RESULT\n\t\t\t...goalKeyResultOperations,\n\t\t\t...goalKeyResultFields,\n\t\t\t// GUEST\n\t\t\t// ...guestOperations,\n\t\t\t// ...guestFields,\n\t\t\t// TASK TAG\n\t\t\t...taskTagOperations,\n\t\t\t...taskTagFields,\n\t\t\t// TASK LIST\n\t\t\t...taskListOperations,\n\t\t\t...taskListFields,\n\t\t\t// SPACE TAG\n\t\t\t...spaceTagOperations,\n\t\t\t...spaceTagFields,\n\t\t\t// TASK\n\t\t\t...taskOperations,\n\t\t\t...taskFields,\n\t\t\t// TASK DEPENDENCY\n\t\t\t...taskDependencyOperations,\n\t\t\t...taskDependencyFields,\n\t\t\t// TIME ENTRY\n\t\t\t...timeEntryOperations,\n\t\t\t...timeEntryFields,\n\t\t\t...taskDependencyFields,\n\t\t\t// TIME ENTRY TAG\n\t\t\t...timeEntryTagOperations,\n\t\t\t...timeEntryTagFields,\n\t\t\t// LIST\n\t\t\t...listOperations,\n\t\t\t...listFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get all the available teams to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getTeams(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst { teams } = await clickupApiRequest.call(this, 'GET', '/team');\n\t\t\t\tfor (const team of teams) {\n\t\t\t\t\tconst teamName = team.name;\n\t\t\t\t\tconst teamId = team.id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: teamName,\n\t\t\t\t\t\tvalue: teamId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the available spaces to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getSpaces(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst teamId = this.getCurrentNodeParameter('team') as string;\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst { spaces } = await clickupApiRequest.call(this, 'GET', `/team/${teamId}/space`);\n\t\t\t\tfor (const space of spaces) {\n\t\t\t\t\tconst spaceName = space.name;\n\t\t\t\t\tconst spaceId = space.id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: spaceName,\n\t\t\t\t\t\tvalue: spaceId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the available folders to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getFolders(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst spaceId = this.getCurrentNodeParameter('space') as string;\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst { folders } = await clickupApiRequest.call(this, 'GET', `/space/${spaceId}/folder`);\n\t\t\t\tfor (const folder of folders) {\n\t\t\t\t\tconst folderName = folder.name;\n\t\t\t\t\tconst folderId = folder.id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: folderName,\n\t\t\t\t\t\tvalue: folderId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the available lists to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getLists(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst folderId = this.getCurrentNodeParameter('folder') as string;\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst { lists } = await clickupApiRequest.call(this, 'GET', `/folder/${folderId}/list`);\n\t\t\t\tfor (const list of lists) {\n\t\t\t\t\tconst listName = list.name;\n\t\t\t\t\tconst listId = list.id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: listName,\n\t\t\t\t\t\tvalue: listId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the available lists without a folder to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getFolderlessLists(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst spaceId = this.getCurrentNodeParameter('space') as string;\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst { lists } = await clickupApiRequest.call(this, 'GET', `/space/${spaceId}/list`);\n\t\t\t\tfor (const list of lists) {\n\t\t\t\t\tconst listName = list.name;\n\t\t\t\t\tconst listId = list.id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: listName,\n\t\t\t\t\t\tvalue: listId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the available assignees to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getAssignees(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst listId = this.getCurrentNodeParameter('list') as string;\n\t\t\t\tconst taskId = this.getCurrentNodeParameter('task') as string;\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tlet url: string;\n\t\t\t\tif (listId) {\n\t\t\t\t\turl = `/list/${listId}/member`;\n\t\t\t\t} else if (taskId) {\n\t\t\t\t\turl = `/task/${taskId}/member`;\n\t\t\t\t} else {\n\t\t\t\t\treturn returnData;\n\t\t\t\t}\n\n\t\t\t\tconst { members } = await clickupApiRequest.call(this, 'GET', url);\n\t\t\t\tfor (const member of members) {\n\t\t\t\t\tconst memberName = member.username;\n\t\t\t\t\tconst menberId = member.id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: memberName,\n\t\t\t\t\t\tvalue: menberId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the available tags to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getTags(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst spaceId = this.getCurrentNodeParameter('space') as string;\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst { tags } = await clickupApiRequest.call(this, 'GET', `/space/${spaceId}/tag`);\n\t\t\t\tfor (const tag of tags) {\n\t\t\t\t\tconst tagName = tag.name;\n\t\t\t\t\tconst tagId = tag.name;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: tagName,\n\t\t\t\t\t\tvalue: tagId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the available tags to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getTimeEntryTags(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst teamId = this.getCurrentNodeParameter('team') as string;\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst { data: tags } = await clickupApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t`/team/${teamId}/time_entries/tags`,\n\t\t\t\t);\n\t\t\t\tfor (const tag of tags) {\n\t\t\t\t\tconst tagName = tag.name;\n\t\t\t\t\tconst tagId = JSON.stringify(tag);\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: tagName,\n\t\t\t\t\t\tvalue: tagId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the available tags to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getStatuses(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst listId = this.getCurrentNodeParameter('list') as string;\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst { statuses } = await clickupApiRequest.call(this, 'GET', `/list/${listId}`);\n\t\t\t\tfor (const status of statuses) {\n\t\t\t\t\tconst statusName = status.status;\n\t\t\t\t\tconst statusId = status.status;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: statusName,\n\t\t\t\t\t\tvalue: statusId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\n\t\t\t// Get all the custom fields to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getCustomFields(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst listId = this.getCurrentNodeParameter('list') as string;\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst { fields } = await clickupApiRequest.call(this, 'GET', `/list/${listId}/field`);\n\t\t\t\tfor (const field of fields) {\n\t\t\t\t\tconst fieldName = field.name;\n\t\t\t\t\tconst fieldId = field.id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: fieldName,\n\t\t\t\t\t\tvalue: fieldId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\n\t\t\t// Get all the available lists to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getTasks(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst listId = this.getCurrentNodeParameter('list') as string;\n\t\t\t\tconst archived = this.getCurrentNodeParameter('archived') as string;\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst { tasks } = await clickupApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t`/list/${listId}/task?archived=${archived}`,\n\t\t\t\t);\n\t\t\t\tfor (const task of tasks) {\n\t\t\t\t\tconst taskName = task.name;\n\t\t\t\t\tconst taskId = task.id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: taskName,\n\t\t\t\t\t\tvalue: taskId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst length = items.length;\n\t\tconst qs: IDataObject = {};\n\t\tlet responseData;\n\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'checklist') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst taskId = this.getNodeParameter('task', i) as string;\n\t\t\t\t\t\tconst name = this.getNodeParameter('name', i) as string;\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/task/${taskId}/checklist`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.checklist;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst checklistId = this.getNodeParameter('checklist', i) as string;\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/checklist/${checklistId}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst checklistId = this.getNodeParameter('checklist', i) as string;\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\tconst body: IDataObject = {};\n\t\t\t\t\t\tif (updateFields.name) {\n\t\t\t\t\t\t\tbody.name = updateFields.name as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.position) {\n\t\t\t\t\t\t\tbody.position = updateFields.position as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t\t`/checklist/${checklistId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.checklist;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'checklistItem') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst checklistId = this.getNodeParameter('checklist', i) as string;\n\t\t\t\t\t\tconst name = this.getNodeParameter('name', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (additionalFields.assignee) {\n\t\t\t\t\t\t\tbody.assignee = parseInt(additionalFields.assignee as string, 10);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/checklist/${checklistId}/checklist_item`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.checklist;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst checklistId = this.getNodeParameter('checklist', i) as string;\n\t\t\t\t\t\tconst checklistItemId = this.getNodeParameter('checklistItem', i) as string;\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/checklist/${checklistId}/checklist_item/${checklistItemId}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst checklistId = this.getNodeParameter('checklist', i) as string;\n\t\t\t\t\t\tconst checklistItemId = this.getNodeParameter('checklistItem', i) as string;\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\tconst body: IDataObject = {};\n\t\t\t\t\t\tif (updateFields.name) {\n\t\t\t\t\t\t\tbody.name = updateFields.name as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.parent) {\n\t\t\t\t\t\t\tbody.parent = updateFields.parent as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.assignee) {\n\t\t\t\t\t\t\tbody.assignee = parseInt(updateFields.assignee as string, 10);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.resolved) {\n\t\t\t\t\t\t\tbody.resolved = updateFields.resolved as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t\t`/checklist/${checklistId}/checklist_item/${checklistItemId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.checklist;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'comment') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst commentOn = this.getNodeParameter('commentOn', i) as string;\n\t\t\t\t\t\tconst id = this.getNodeParameter('id', i) as string;\n\t\t\t\t\t\tconst commentText = this.getNodeParameter('commentText', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tcomment_text: commentText,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (additionalFields.assignee) {\n\t\t\t\t\t\t\tbody.assignee = parseInt(additionalFields.assignee as string, 10);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.notifyAll) {\n\t\t\t\t\t\t\tbody.notify_all = additionalFields.notifyAll as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/${commentOn}/${id}/comment`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst commentId = this.getNodeParameter('comment', i) as string;\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(this, 'DELETE', `/comment/${commentId}`);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst commentsOn = this.getNodeParameter('commentsOn', i) as string;\n\t\t\t\t\t\tconst id = this.getNodeParameter('id', i) as string;\n\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/${commentsOn}/${id}/comment`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.comments;\n\t\t\t\t\t\tresponseData = responseData.splice(0, qs.limit);\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst commentId = this.getNodeParameter('comment', i) as string;\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\tconst body: IDataObject = {};\n\t\t\t\t\t\tif (updateFields.commentText) {\n\t\t\t\t\t\t\tbody.comment_text = updateFields.commentText as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.assignee) {\n\t\t\t\t\t\t\tbody.assignee = parseInt(updateFields.assignee as string, 10);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.resolved) {\n\t\t\t\t\t\t\tbody.resolved = updateFields.resolved as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(this, 'PUT', `/comment/${commentId}`, body);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'folder') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst spaceId = this.getNodeParameter('space', i) as string;\n\t\t\t\t\t\tconst name = this.getNodeParameter('name', i) as string;\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/space/${spaceId}/folder`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst folderId = this.getNodeParameter('folder', i) as string;\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(this, 'DELETE', `/folder/${folderId}`);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst folderId = this.getNodeParameter('folder', i) as string;\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(this, 'GET', `/folder/${folderId}`);\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\t\t\t\t\t\tconst spaceId = this.getNodeParameter('space', i) as string;\n\t\t\t\t\t\tif (filters.archived) {\n\t\t\t\t\t\t\tqs.archived = filters.archived as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/space/${spaceId}/folder`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.folders;\n\t\t\t\t\t\tresponseData = responseData.splice(0, qs.limit);\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst folderId = this.getNodeParameter('folder', i) as string;\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\tconst body: IDataObject = {};\n\t\t\t\t\t\tif (updateFields.name) {\n\t\t\t\t\t\t\tbody.name = updateFields.name as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(this, 'PUT', `/folder/${folderId}`, body);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'goal') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst teamId = this.getNodeParameter('team', i) as string;\n\t\t\t\t\t\tconst name = this.getNodeParameter('name', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (additionalFields.dueDate) {\n\t\t\t\t\t\t\tbody.due_date = new Date(additionalFields.dueDate as string).getTime();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.description) {\n\t\t\t\t\t\t\tbody.description = additionalFields.description as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.multipleOwners) {\n\t\t\t\t\t\t\tbody.multiple_owners = additionalFields.multipleOwners as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.color) {\n\t\t\t\t\t\t\tbody.color = additionalFields.color as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.owners) {\n\t\t\t\t\t\t\tbody.owners = (additionalFields.owners as string)\n\t\t\t\t\t\t\t\t.split(',')\n\t\t\t\t\t\t\t\t.map((e: string) => parseInt(e, 10));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(this, 'POST', `/team/${teamId}/goal`, body);\n\t\t\t\t\t\tresponseData = responseData.goal;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst goalId = this.getNodeParameter('goal', i) as string;\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(this, 'DELETE', `/goal/${goalId}`);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst goalId = this.getNodeParameter('goal', i) as string;\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(this, 'GET', `/goal/${goalId}`);\n\t\t\t\t\t\tresponseData = responseData.goal;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst teamId = this.getNodeParameter('team', i) as string;\n\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/team/${teamId}/goal`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.goals;\n\t\t\t\t\t\tresponseData = responseData.splice(0, qs.limit);\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst goalId = this.getNodeParameter('goal', i) as string;\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\tconst body: IDataObject = {};\n\t\t\t\t\t\tif (updateFields.name) {\n\t\t\t\t\t\t\tbody.name = updateFields.name as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.dueDate) {\n\t\t\t\t\t\t\tbody.due_date = new Date(updateFields.dueDate as string).getTime();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.description) {\n\t\t\t\t\t\t\tbody.description = updateFields.description as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.color) {\n\t\t\t\t\t\t\tbody.color = updateFields.color as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.addOwners) {\n\t\t\t\t\t\t\tbody.add_owners = (updateFields.addOwners as string)\n\t\t\t\t\t\t\t\t.split(',')\n\t\t\t\t\t\t\t\t.map((e: string) => parseInt(e, 10));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.removeOwners) {\n\t\t\t\t\t\t\tbody.rem_owners = (updateFields.removeOwners as string)\n\t\t\t\t\t\t\t\t.split(',')\n\t\t\t\t\t\t\t\t.map((e: string) => parseInt(e, 10));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(this, 'PUT', `/goal/${goalId}`, body);\n\t\t\t\t\t\tresponseData = responseData.goal;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'goalKeyResult') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst goalId = this.getNodeParameter('goal', i) as string;\n\t\t\t\t\t\tconst name = this.getNodeParameter('name', i) as string;\n\t\t\t\t\t\tconst type = this.getNodeParameter('type', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (type === 'number' || type === 'currency') {\n\t\t\t\t\t\t\tif (!additionalFields.unit) {\n\t\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'Unit field must be set', {\n\t\t\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttype === 'number' ||\n\t\t\t\t\t\t\ttype === 'percentaje' ||\n\t\t\t\t\t\t\ttype === 'automatic' ||\n\t\t\t\t\t\t\ttype === 'currency'\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tadditionalFields.stepsStart === undefined ||\n\t\t\t\t\t\t\t\tadditionalFields.stepsEnd === undefined\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t\t'Steps start and steps end fields must be set',\n\t\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.unit) {\n\t\t\t\t\t\t\tbody.unit = additionalFields.unit as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.stepsStart) {\n\t\t\t\t\t\t\tbody.steps_start = additionalFields.stepsStart as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.stepsEnd) {\n\t\t\t\t\t\t\tbody.steps_end = additionalFields.stepsEnd as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.taskIds) {\n\t\t\t\t\t\t\tbody.task_ids = (additionalFields.taskIds as string).split(',');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.listIds) {\n\t\t\t\t\t\t\tbody.list_ids = (additionalFields.listIds as string).split(',');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.owners) {\n\t\t\t\t\t\t\tbody.owners = (additionalFields.owners as string)\n\t\t\t\t\t\t\t\t.split(',')\n\t\t\t\t\t\t\t\t.map((e: string) => parseInt(e, 10));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/goal/${goalId}/key_result`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.key_result;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst keyResultId = this.getNodeParameter('keyResult', i) as string;\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/key_result/${keyResultId}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst keyResultId = this.getNodeParameter('keyResult', i) as string;\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\tconst body: IDataObject = {};\n\t\t\t\t\t\tif (updateFields.name) {\n\t\t\t\t\t\t\tbody.name = updateFields.name as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.note) {\n\t\t\t\t\t\t\tbody.note = updateFields.note as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.stepsCurrent) {\n\t\t\t\t\t\t\tbody.steps_current = updateFields.stepsCurrent as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.stepsStart) {\n\t\t\t\t\t\t\tbody.steps_start = updateFields.stepsStart as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.stepsEnd) {\n\t\t\t\t\t\t\tbody.steps_end = updateFields.stepsEnd as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.unit) {\n\t\t\t\t\t\t\tbody.unit = updateFields.unit as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t\t`/key_result/${keyResultId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.key_result;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'guest') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst teamId = this.getNodeParameter('team', i) as string;\n\t\t\t\t\t\tconst email = this.getNodeParameter('email', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\temail,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (additionalFields.canEditTags) {\n\t\t\t\t\t\t\tbody.can_edit_tags = additionalFields.canEditTags as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.canSeeTimeSpend) {\n\t\t\t\t\t\t\tbody.can_see_time_spend = additionalFields.canSeeTimeSpend as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.canSeeTimeEstimated) {\n\t\t\t\t\t\t\tbody.can_see_time_estimated = additionalFields.canSeeTimeEstimated as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/team/${teamId}/guest`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.team;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst teamId = this.getNodeParameter('team', i) as string;\n\t\t\t\t\t\tconst guestId = this.getNodeParameter('guest', i) as string;\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/team/${teamId}/guest/${guestId}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst teamId = this.getNodeParameter('team', i) as string;\n\t\t\t\t\t\tconst guestId = this.getNodeParameter('guest', i) as string;\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/team/${teamId}/guest/${guestId}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.team;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst teamId = this.getNodeParameter('team', i) as string;\n\t\t\t\t\t\tconst guestId = this.getNodeParameter('guest', i) as string;\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\tconst body: IDataObject = {};\n\t\t\t\t\t\tif (updateFields.username) {\n\t\t\t\t\t\t\tbody.username = updateFields.username as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.canEditTags) {\n\t\t\t\t\t\t\tbody.can_edit_tags = updateFields.canEditTags as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.canSeeTimeSpend) {\n\t\t\t\t\t\t\tbody.can_see_time_spend = updateFields.canSeeTimeSpend as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.canSeeTimeEstimated) {\n\t\t\t\t\t\t\tbody.can_see_time_estimated = updateFields.canSeeTimeEstimated as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t\t`/team/${teamId}/guest/${guestId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.team;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'task') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst listId = this.getNodeParameter('list', i) as string;\n\t\t\t\t\t\tconst name = this.getNodeParameter('name', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst body: ITask = {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (additionalFields.customFieldsJson) {\n\t\t\t\t\t\t\tconst customFields = validateJSON(additionalFields.customFieldsJson as string);\n\t\t\t\t\t\t\tif (customFields === undefined) {\n\t\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'Custom Fields: Invalid JSON', {\n\t\t\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbody.custom_fields = customFields;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.content) {\n\t\t\t\t\t\t\tbody.content = additionalFields.content as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.assignees) {\n\t\t\t\t\t\t\tbody.assignees = additionalFields.assignees as string[];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.tags) {\n\t\t\t\t\t\t\tbody.tags = additionalFields.tags as string[];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.status) {\n\t\t\t\t\t\t\tbody.status = additionalFields.status as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.priority) {\n\t\t\t\t\t\t\tbody.priority = additionalFields.priority as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.dueDate) {\n\t\t\t\t\t\t\tbody.due_date = new Date(additionalFields.dueDate as string).getTime();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.dueDateTime) {\n\t\t\t\t\t\t\tbody.due_date_time = additionalFields.dueDateTime as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.timeEstimate) {\n\t\t\t\t\t\t\tbody.time_estimate = (additionalFields.timeEstimate as number) * 6000;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.startDate) {\n\t\t\t\t\t\t\tbody.start_date = new Date(additionalFields.startDate as string).getTime();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.startDateTime) {\n\t\t\t\t\t\t\tbody.start_date_time = additionalFields.startDateTime as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.notifyAll) {\n\t\t\t\t\t\t\tbody.notify_all = additionalFields.notifyAll as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.parentId) {\n\t\t\t\t\t\t\tbody.parent = additionalFields.parentId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.markdownContent) {\n\t\t\t\t\t\t\tdelete body.content;\n\t\t\t\t\t\t\tbody.markdown_content = additionalFields.content as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(this, 'POST', `/list/${listId}/task`, body);\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst taskId = this.getNodeParameter('id', i) as string;\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\tconst body: ITask = {\n\t\t\t\t\t\t\tassignees: {\n\t\t\t\t\t\t\t\tadd: [],\n\t\t\t\t\t\t\t\trem: [],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (updateFields.content) {\n\t\t\t\t\t\t\tbody.content = updateFields.content as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.priority) {\n\t\t\t\t\t\t\tbody.priority = updateFields.priority as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.dueDate) {\n\t\t\t\t\t\t\tbody.due_date = new Date(updateFields.dueDate as string).getTime();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.dueDateTime) {\n\t\t\t\t\t\t\tbody.due_date_time = updateFields.dueDateTime as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.timeEstimate) {\n\t\t\t\t\t\t\tbody.time_estimate = (updateFields.timeEstimate as number) * 6000;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.startDate) {\n\t\t\t\t\t\t\tbody.start_date = new Date(updateFields.startDate as string).getTime();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.startDateTime) {\n\t\t\t\t\t\t\tbody.start_date_time = updateFields.startDateTime as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.notifyAll) {\n\t\t\t\t\t\t\tbody.notify_all = updateFields.notifyAll as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.name) {\n\t\t\t\t\t\t\tbody.name = updateFields.name as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.parentId) {\n\t\t\t\t\t\t\tbody.parent = updateFields.parentId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.addAssignees) {\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tbody.assignees.add = (updateFields.addAssignees as string)\n\t\t\t\t\t\t\t\t.split(',')\n\t\t\t\t\t\t\t\t.map((e: string) => parseInt(e, 10));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.removeAssignees) {\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tbody.assignees.rem = (updateFields.removeAssignees as string)\n\t\t\t\t\t\t\t\t.split(',')\n\t\t\t\t\t\t\t\t.map((e: string) => parseInt(e, 10));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.status) {\n\t\t\t\t\t\t\tbody.status = updateFields.status as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.markdownContent) {\n\t\t\t\t\t\t\tdelete body.content;\n\t\t\t\t\t\t\tbody.markdown_content = updateFields.content as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(this, 'PUT', `/task/${taskId}`, body);\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst taskId = this.getNodeParameter('id', i) as string;\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(this, 'GET', `/task/${taskId}`);\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\t\t\t\t\t\tif (filters.archived) {\n\t\t\t\t\t\t\tqs.archived = filters.archived as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (filters.subtasks) {\n\t\t\t\t\t\t\tqs.subtasks = filters.subtasks as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (filters.includeClosed) {\n\t\t\t\t\t\t\tqs.include_closed = filters.includeClosed as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (filters.orderBy) {\n\t\t\t\t\t\t\tqs.order_by = filters.orderBy as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (filters.statuses) {\n\t\t\t\t\t\t\tqs.statuses = filters.statuses as string[];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (filters.assignees) {\n\t\t\t\t\t\t\tqs.assignees = filters.assignees as string[];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (filters.tags) {\n\t\t\t\t\t\t\tqs.tags = filters.tags as string[];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (filters.dueDateGt) {\n\t\t\t\t\t\t\tqs.due_date_gt = new Date(filters.dueDateGt as string).getTime();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (filters.dueDateLt) {\n\t\t\t\t\t\t\tqs.due_date_lt = new Date(filters.dueDateLt as string).getTime();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (filters.dateCreatedGt) {\n\t\t\t\t\t\t\tqs.date_created_gt = new Date(filters.dateCreatedGt as string).getTime();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (filters.dateCreatedLt) {\n\t\t\t\t\t\t\tqs.date_created_lt = new Date(filters.dateCreatedLt as string).getTime();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (filters.dateUpdatedGt) {\n\t\t\t\t\t\t\tqs.date_updated_gt = new Date(filters.dateUpdatedGt as string).getTime();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (filters.dateUpdatedLt) {\n\t\t\t\t\t\t\tqs.date_updated_lt = new Date(filters.dateUpdatedLt as string).getTime();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (filters.customFieldsUi) {\n\t\t\t\t\t\t\tconst customFieldsValues = (filters.customFieldsUi as IDataObject)\n\t\t\t\t\t\t\t\t.customFieldsValues as IDataObject[];\n\t\t\t\t\t\t\tif (customFieldsValues) {\n\t\t\t\t\t\t\t\tconst customFields: IDataObject[] = [];\n\t\t\t\t\t\t\t\tfor (const customFieldValue of customFieldsValues) {\n\t\t\t\t\t\t\t\t\tcustomFields.push({\n\t\t\t\t\t\t\t\t\t\tfield_id: customFieldValue.fieldId,\n\t\t\t\t\t\t\t\t\t\toperator:\n\t\t\t\t\t\t\t\t\t\t\tcustomFieldValue.operator === 'equal' ? '=' : customFieldValue.operator,\n\t\t\t\t\t\t\t\t\t\tvalue: customFieldValue.value as string,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tqs.custom_fields = JSON.stringify(customFields);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst listId = this.getNodeParameter('list', i) as string;\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await clickupApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'tasks',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/list/${listId}/task`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await clickupApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'tasks',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/list/${listId}/task`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.splice(0, qs.limit);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'member') {\n\t\t\t\t\t\tconst taskId = this.getNodeParameter('id', i) as string;\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/task/${taskId}/member`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.members;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/task/${taskId}/member`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.members;\n\t\t\t\t\t\t\tresponseData = responseData.splice(0, qs.limit);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'setCustomField') {\n\t\t\t\t\t\tconst taskId = this.getNodeParameter('task', i) as string;\n\t\t\t\t\t\tconst fieldId = this.getNodeParameter('field', i) as string;\n\t\t\t\t\t\tconst value = this.getNodeParameter('value', i) as string;\n\t\t\t\t\t\tconst jsonParse = this.getNodeParameter('jsonParse', i) as boolean;\n\n\t\t\t\t\t\tconst body: IDataObject = {};\n\t\t\t\t\t\tbody.value = value;\n\t\t\t\t\t\tif (jsonParse) {\n\t\t\t\t\t\t\tbody.value = validateJSON(body.value);\n\t\t\t\t\t\t\tif (body.value === undefined) {\n\t\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'Value is invalid JSON!', {\n\t\t\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tif (!isNaN(body.value)) {\n\t\t\t\t\t\t\t\tbody.value = parseInt(body.value, 10);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/task/${taskId}/field/${fieldId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst taskId = this.getNodeParameter('id', i) as string;\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(this, 'DELETE', `/task/${taskId}`, {});\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'taskTag') {\n\t\t\t\t\tif (operation === 'add') {\n\t\t\t\t\t\tconst taskId = this.getNodeParameter('taskId', i) as string;\n\t\t\t\t\t\tconst name = this.getNodeParameter('tagName', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/task/${taskId}/tag/${name}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tadditionalFields,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'remove') {\n\t\t\t\t\t\tconst taskId = this.getNodeParameter('taskId', i) as string;\n\t\t\t\t\t\tconst name = this.getNodeParameter('tagName', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/task/${taskId}/tag/${name}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tadditionalFields,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'taskList') {\n\t\t\t\t\tif (operation === 'add') {\n\t\t\t\t\t\tconst taskId = this.getNodeParameter('taskId', i) as string;\n\t\t\t\t\t\tconst listId = this.getNodeParameter('listId', i) as string;\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/list/${listId}/task/${taskId}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'remove') {\n\t\t\t\t\t\tconst taskId = this.getNodeParameter('taskId', i) as string;\n\t\t\t\t\t\tconst listId = this.getNodeParameter('listId', i) as string;\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/list/${listId}/task/${taskId}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'taskDependency') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst taskId = this.getNodeParameter('task', i) as string;\n\t\t\t\t\t\tconst dependsOnTaskId = this.getNodeParameter('dependsOnTask', i) as string;\n\t\t\t\t\t\tconst body: IDataObject = {};\n\n\t\t\t\t\t\tbody.depends_on = dependsOnTaskId;\n\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/task/${taskId}/dependency`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst taskId = this.getNodeParameter('task', i) as string;\n\t\t\t\t\t\tconst dependsOnTaskId = this.getNodeParameter('dependsOnTask', i) as string;\n\n\t\t\t\t\t\tqs.depends_on = dependsOnTaskId;\n\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/task/${taskId}/dependency`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'timeEntry') {\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst teamId = this.getNodeParameter('team', i) as string;\n\t\t\t\t\t\tconst timeEntryId = this.getNodeParameter('timeEntry', i) as string;\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\tconst timezone = this.getTimezone();\n\t\t\t\t\t\tconst body: IDataObject = {};\n\t\t\t\t\t\tObject.assign(body, updateFields);\n\n\t\t\t\t\t\tif (body.start) {\n\t\t\t\t\t\t\tbody.start = moment.tz(body.start, timezone).valueOf();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (body.duration) {\n\t\t\t\t\t\t\tbody.duration = (body.duration as number) * 60000;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (body.task) {\n\t\t\t\t\t\t\tbody.tid = body.task;\n\t\t\t\t\t\t\tbody.custom_task_ids = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t\t`/team/${teamId}/time_entries/${timeEntryId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst teamId = this.getNodeParameter('team', i) as string;\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\t\t\t\t\t\tconst timezone = this.getTimezone();\n\t\t\t\t\t\tObject.assign(qs, filters);\n\n\t\t\t\t\t\tif (filters.start_date) {\n\t\t\t\t\t\t\tqs.start_date = moment.tz(qs.start_date, timezone).valueOf();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (filters.end_date) {\n\t\t\t\t\t\t\tqs.end_date = moment.tz(qs.end_date, timezone).valueOf();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/team/${teamId}/time_entries`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData = responseData.data;\n\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = responseData.splice(0, limit);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst teamId = this.getNodeParameter('team', i) as string;\n\t\t\t\t\t\tconst running = this.getNodeParameter('running', i) as boolean;\n\n\t\t\t\t\t\tlet endpoint = `/team/${teamId}/time_entries/current`;\n\n\t\t\t\t\t\tif (!running) {\n\t\t\t\t\t\t\tconst timeEntryId = this.getNodeParameter('timeEntry', i) as string;\n\t\t\t\t\t\t\tendpoint = `/team/${teamId}/time_entries/${timeEntryId}`;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(this, 'GET', endpoint);\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst teamId = this.getNodeParameter('team', i) as string;\n\t\t\t\t\t\tconst taskId = this.getNodeParameter('task', i) as string;\n\t\t\t\t\t\tconst start = this.getNodeParameter('start', i) as string;\n\t\t\t\t\t\tconst duration = this.getNodeParameter('duration', i) as number;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst timezone = this.getTimezone();\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tstart: moment.tz(start, timezone).valueOf(),\n\t\t\t\t\t\t\tduration: duration * 60000,\n\t\t\t\t\t\t\ttid: taskId,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tObject.assign(body, additionalFields);\n\n\t\t\t\t\t\tif (body.tags) {\n\t\t\t\t\t\t\tbody.tags = (body.tags as string[]).map((tag) => JSON.parse(tag));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/team/${teamId}/time_entries`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'start') {\n\t\t\t\t\t\tconst teamId = this.getNodeParameter('team', i) as string;\n\t\t\t\t\t\tconst taskId = this.getNodeParameter('task', i) as string;\n\t\t\t\t\t\tconst body: IDataObject = {};\n\t\t\t\t\t\tbody.tid = taskId;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tObject.assign(body, additionalFields);\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/team/${teamId}/time_entries/start`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'stop') {\n\t\t\t\t\t\tconst teamId = this.getNodeParameter('team', i) as string;\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/team/${teamId}/time_entries/stop`,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (responseData.data) {\n\t\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'There seems to be nothing to stop.', {\n\t\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst teamId = this.getNodeParameter('team', i) as string;\n\t\t\t\t\t\tconst timeEntryId = this.getNodeParameter('timeEntry', i) as string;\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/team/${teamId}/time_entries/${timeEntryId}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'timeEntryTag') {\n\t\t\t\t\tif (operation === 'add') {\n\t\t\t\t\t\tconst teamId = this.getNodeParameter('team', i) as string;\n\t\t\t\t\t\tconst timeEntryIds = this.getNodeParameter('timeEntryIds', i) as string;\n\t\t\t\t\t\tconst tagsUi = this.getNodeParameter('tagsUi', i) as IDataObject;\n\t\t\t\t\t\tconst body: IDataObject = {};\n\t\t\t\t\t\tbody.time_entry_ids = timeEntryIds.split(',');\n\t\t\t\t\t\tif (tagsUi) {\n\t\t\t\t\t\t\tconst tags = tagsUi.tagsValues as IDataObject[];\n\t\t\t\t\t\t\tif (tags === undefined) {\n\t\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'At least one tag must be set', {\n\t\t\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbody.tags = tags;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/team/${teamId}/time_entries/tags`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst teamId = this.getNodeParameter('team', i) as string;\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/team/${teamId}/time_entries/tags`,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData = responseData.data;\n\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = responseData.splice(0, limit);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'remove') {\n\t\t\t\t\t\tconst teamId = this.getNodeParameter('team', i) as string;\n\t\t\t\t\t\tconst timeEntryIds = this.getNodeParameter('timeEntryIds', i) as string;\n\t\t\t\t\t\tconst tagNames = this.getNodeParameter('tagNames', i) as string[];\n\t\t\t\t\t\tconst body: IDataObject = {};\n\t\t\t\t\t\tbody.time_entry_ids = timeEntryIds.split(',');\n\t\t\t\t\t\tbody.tags = tagNames.map((tag) => JSON.parse(tag).name);\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/team/${teamId}/time_entries/tags`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'spaceTag') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst spaceId = this.getNodeParameter('space', i) as string;\n\t\t\t\t\t\tconst name = this.getNodeParameter('name', i) as string;\n\t\t\t\t\t\tconst foregroundColor = this.getNodeParameter('foregroundColor', i) as string;\n\t\t\t\t\t\tconst backgroundColor = this.getNodeParameter('backgroundColor', i) as string;\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\ttag: {\n\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\ttag_bg: backgroundColor,\n\t\t\t\t\t\t\t\ttag_fg: foregroundColor,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/space/${spaceId}/tag`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst spaceId = this.getNodeParameter('space', i) as string;\n\t\t\t\t\t\tconst name = this.getNodeParameter('name', i) as string;\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/space/${spaceId}/tag/${name}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst spaceId = this.getNodeParameter('space', i) as string;\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(this, 'GET', `/space/${spaceId}/tag`);\n\t\t\t\t\t\tresponseData = responseData.tags;\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = responseData.splice(0, limit);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst spaceId = this.getNodeParameter('space', i) as string;\n\t\t\t\t\t\tconst tagName = this.getNodeParameter('name', i) as string;\n\t\t\t\t\t\tconst newTagName = this.getNodeParameter('newName', i) as string;\n\t\t\t\t\t\tconst foregroundColor = this.getNodeParameter('foregroundColor', i) as string;\n\t\t\t\t\t\tconst backgroundColor = this.getNodeParameter('backgroundColor', i) as string;\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\ttag: {\n\t\t\t\t\t\t\t\tname: newTagName,\n\t\t\t\t\t\t\t\ttag_bg: backgroundColor,\n\t\t\t\t\t\t\t\ttag_fg: foregroundColor,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t\tawait clickupApiRequest.call(this, 'PUT', `/space/${spaceId}/tag/${tagName}`, body);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'list') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst spaceId = this.getNodeParameter('space', i) as string;\n\t\t\t\t\t\tconst folderless = this.getNodeParameter('folderless', i) as string;\n\t\t\t\t\t\tconst name = this.getNodeParameter('name', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst body: IList = {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (additionalFields.content) {\n\t\t\t\t\t\t\tbody.content = additionalFields.content as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.dueDate) {\n\t\t\t\t\t\t\tbody.due_date = new Date(additionalFields.dueDate as string).getTime();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.dueDateTime) {\n\t\t\t\t\t\t\tbody.due_date_time = additionalFields.dueDateTime as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.priority) {\n\t\t\t\t\t\t\tbody.priority = additionalFields.priority as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.assignee) {\n\t\t\t\t\t\t\tbody.assignee = parseInt(additionalFields.assignee as string, 10);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.status) {\n\t\t\t\t\t\t\tbody.status = additionalFields.status as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (folderless) {\n\t\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t\t`/space/${spaceId}/list`,\n\t\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst folderId = this.getNodeParameter('folder', i) as string;\n\t\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t\t`/folder/${folderId}/list`,\n\t\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'member') {\n\t\t\t\t\t\tconst listId = this.getNodeParameter('id', i) as string;\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/list/${listId}/member`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.members;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await clickupApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/list/${listId}/member`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.members;\n\t\t\t\t\t\t\tresponseData = responseData.splice(0, qs.limit);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'customFields') {\n\t\t\t\t\t\tconst listId = this.getNodeParameter('list', i) as string;\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(this, 'GET', `/list/${listId}/field`);\n\t\t\t\t\t\tresponseData = responseData.fields;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst listId = this.getNodeParameter('list', i) as string;\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(this, 'DELETE', `/list/${listId}`);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst listId = this.getNodeParameter('list', i) as string;\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(this, 'GET', `/list/${listId}`);\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\t\t\t\t\t\tconst spaceId = this.getNodeParameter('space', i) as string;\n\t\t\t\t\t\tconst folderless = this.getNodeParameter('folderless', i) as boolean;\n\t\t\t\t\t\tif (filters.archived) {\n\t\t\t\t\t\t\tqs.archived = filters.archived as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet endpoint = `/space/${spaceId}/list`;\n\t\t\t\t\t\tif (!folderless) {\n\t\t\t\t\t\t\tconst folderId = this.getNodeParameter('folder', i) as string;\n\t\t\t\t\t\t\tendpoint = `/folder/${folderId}/list`;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(this, 'GET', endpoint, {}, qs);\n\t\t\t\t\t\tresponseData = responseData.lists;\n\t\t\t\t\t\tresponseData = responseData.splice(0, qs.limit);\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst listId = this.getNodeParameter('list', i) as string;\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\tconst body: IList = {};\n\t\t\t\t\t\tif (updateFields.name) {\n\t\t\t\t\t\t\tbody.name = updateFields.name as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.content) {\n\t\t\t\t\t\t\tbody.content = updateFields.content as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.dueDate) {\n\t\t\t\t\t\t\tbody.due_date = new Date(updateFields.dueDate as string).getTime();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.dueDateTime) {\n\t\t\t\t\t\t\tbody.due_date_time = updateFields.dueDateTime as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.priority) {\n\t\t\t\t\t\t\tbody.priority = updateFields.priority as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.assignee) {\n\t\t\t\t\t\t\tbody.assignee = parseInt(updateFields.assignee as string, 10);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.unsetStatus) {\n\t\t\t\t\t\t\tbody.unset_status = updateFields.unsetStatus as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await clickupApiRequest.call(this, 'PUT', `/list/${listId}`, body);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t);\n\t\t\t\treturnData.push(...executionData);\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\treturnData.push({ error: error.message, json: {} });\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":["moment"]}