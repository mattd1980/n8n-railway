{"version":3,"sources":["../../../nodes/Mailchimp/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHookFunctions,\n\tILoadOptionsFunctions,\n\tJsonObject,\n\tIRequestOptions,\n\tIHttpRequestMethods,\n} from 'n8n-workflow';\nimport { NodeApiError, NodeOperationError } from 'n8n-workflow';\n\nasync function getMetadata(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\toauthTokenData: IDataObject,\n) {\n\tconst credentials = await this.getCredentials('mailchimpOAuth2Api');\n\tconst options: IRequestOptions = {\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\tAuthorization: `OAuth ${oauthTokenData.access_token}`,\n\t\t},\n\t\tmethod: 'GET',\n\t\turl: credentials.metadataUrl as string,\n\t\tjson: true,\n\t};\n\treturn await this.helpers.request(options);\n}\n\nexport async function mailchimpApiRequest(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tendpoint: string,\n\tmethod: IHttpRequestMethods,\n\n\tbody: any = {},\n\tqs: IDataObject = {},\n\t_headers?: object,\n): Promise<any> {\n\tconst authenticationMethod = this.getNodeParameter('authentication', 0) as string;\n\n\tconst host = 'api.mailchimp.com/3.0';\n\n\tconst options: IRequestOptions = {\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t},\n\t\tmethod,\n\t\tqs,\n\t\tbody,\n\t\turl: '',\n\t\tjson: true,\n\t};\n\n\tif (Object.keys(body as IDataObject).length === 0) {\n\t\tdelete options.body;\n\t}\n\n\ttry {\n\t\tif (authenticationMethod === 'apiKey') {\n\t\t\tconst credentials = await this.getCredentials('mailchimpApi');\n\t\t\tif (!(credentials.apiKey as string).includes('-')) {\n\t\t\t\tthrow new NodeOperationError(this.getNode(), 'The API key is not valid!');\n\t\t\t}\n\t\t\tconst datacenter = (credentials.apiKey as string).split('-').pop();\n\t\t\toptions.url = `https://${datacenter}.${host}${endpoint}`;\n\t\t\treturn await this.helpers.requestWithAuthentication.call(this, 'mailchimpApi', options);\n\t\t} else {\n\t\t\tconst credentials = await this.getCredentials('mailchimpOAuth2Api');\n\n\t\t\tconst { api_endpoint } = await getMetadata.call(\n\t\t\t\tthis,\n\t\t\t\tcredentials.oauthTokenData as IDataObject,\n\t\t\t);\n\n\t\t\toptions.url = `${api_endpoint}/3.0${endpoint}`;\n\t\t\treturn await this.helpers.requestOAuth2.call(this, 'mailchimpOAuth2Api', options, {\n\t\t\t\ttokenType: 'Bearer',\n\t\t\t});\n\t\t}\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\nexport async function mailchimpApiRequestAllItems(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions,\n\tendpoint: string,\n\tmethod: IHttpRequestMethods,\n\tpropertyName: string,\n\n\tbody: any = {},\n\tquery: IDataObject = {},\n): Promise<any> {\n\tconst returnData: IDataObject[] = [];\n\n\tlet responseData;\n\n\tquery.offset = 0;\n\tquery.count = 500;\n\n\tdo {\n\t\tresponseData = await mailchimpApiRequest.call(this, endpoint, method, body, query);\n\t\treturnData.push.apply(returnData, responseData[propertyName] as IDataObject[]);\n\t\tquery.offset += query.count;\n\t} while (responseData[propertyName] && responseData[propertyName].length !== 0);\n\n\treturn returnData;\n}\n\nexport function validateJSON(json: string | undefined): any {\n\tlet result;\n\ttry {\n\t\tresult = JSON.parse(json!);\n\t} catch (exception) {\n\t\tresult = '';\n\t}\n\treturn result;\n}\n\nexport const campaignFieldsMetadata = [\n\t'*',\n\t'campaigns.id',\n\t'campaigns.web_id',\n\t'campaigns.type',\n\t'campaigns.create_time',\n\t'campaigns.archive_url',\n\t'campaigns.long_archive_url',\n\t'campaigns.status',\n\t'campaigns.emails_sent',\n\t'campaigns.send_time',\n\t'campaigns.content_type',\n\t'campaigns.needs_block_refresh',\n\t'campaigns.resendable',\n\t'campaigns.recipients',\n\t'campaigns.recipients.list_id',\n\t'campaigns.recipients.list_is_active',\n\t'campaigns.recipients.list_name',\n\t'campaigns.recipients.segment_text',\n\t'campaigns.recipients.recipient_count',\n\t'campaigns.settings',\n\t'campaigns.settings.subject_line',\n\t'campaigns.settings.preview_text',\n\t'campaigns.settings.title',\n\t'campaigns.settings.from_name',\n\t'campaigns.settings.reply_to',\n\t'campaigns.settings.use_conversation',\n\t'campaigns.settings.to_name',\n\t'campaigns.settings.folder_id',\n\t'campaigns.settings.authenticate',\n\t'campaigns.settings.auto_footer',\n\t'campaigns.settings.inline_css',\n\t'campaigns.settings.auto_tweet',\n\t'campaigns.settings.fb_comments',\n\t'campaigns.settings.timewarp',\n\t'campaigns.settings.template_id',\n\t'campaigns.settings.drag_and_drop',\n\t'campaigns.tracking',\n\t'campaigns.tracking.opens',\n\t'campaigns.tracking.html_clicks',\n\t'campaigns.tracking.text_clicks',\n\t'campaigns.tracking.goal_tracking',\n\t'campaigns.tracking.ecomm360',\n\t'campaigns.tracking.google_analytics',\n\t'campaigns.tracking.clicktale',\n\t'campaigns.report_summary',\n\t'campaigns.report_summary.opens',\n\t'campaigns.report_summary.unique_opens',\n\t'campaigns.report_summary.open_rate',\n\t'campaigns.report_summary.clicks',\n\t'campaigns.report_summary.subscriber_clicks',\n\t'campaigns.report_summary.click_rate',\n\t'campaigns.report_summary.click_rate.ecommerce',\n\t'campaigns.report_summary.click_rate.ecommerce.total_orders',\n\t'campaigns.report_summary.click_rate.ecommerce.total_spent',\n\t'campaigns.report_summary.click_rate.ecommerce.total_revenue',\n\t'campaigns.report_summary.delivery_status.enabled',\n\t'campaigns._links',\n];\n"],"mappings":"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","names":[]}