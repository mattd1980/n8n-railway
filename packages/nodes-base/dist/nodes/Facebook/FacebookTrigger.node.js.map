{"version":3,"sources":["../../../nodes/Facebook/FacebookTrigger.node.ts"],"sourcesContent":["import { snakeCase } from 'change-case';\nimport { createHmac } from 'crypto';\nimport type {\n\tIDataObject,\n\tIHookFunctions,\n\tILoadOptionsFunctions,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n\tIWebhookFunctions,\n\tIWebhookResponseData,\n\tJsonObject,\n} from 'n8n-workflow';\nimport { NodeApiError, NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\nimport { v4 as uuid } from 'uuid';\n\nimport { facebookApiRequest, getAllFields, getFields } from './GenericFunctions';\nimport type { FacebookWebhookSubscription } from './types';\n\nexport class FacebookTrigger implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Facebook Trigger',\n\t\tname: 'facebookTrigger',\n\t\ticon: 'file:facebook.svg',\n\t\tgroup: ['trigger'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"appId\"] +\"/\"+ $parameter[\"object\"]}}',\n\t\tdescription: 'Starts the workflow when Facebook events occur',\n\t\tdefaults: {\n\t\t\tname: 'Facebook Trigger',\n\t\t},\n\t\tinputs: [],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'facebookGraphAppApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\twebhooks: [\n\t\t\t{\n\t\t\t\tname: 'setup',\n\t\t\t\thttpMethod: 'GET',\n\t\t\t\tresponseMode: 'onReceived',\n\t\t\t\tpath: 'webhook',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'default',\n\t\t\t\thttpMethod: 'POST',\n\t\t\t\tresponseMode: 'onReceived',\n\t\t\t\tpath: 'webhook',\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'APP ID',\n\t\t\t\tname: 'appId',\n\t\t\t\ttype: 'string',\n\t\t\t\trequired: true,\n\t\t\t\tdefault: '',\n\t\t\t\tdescription: 'Facebook APP ID',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'To watch Whatsapp business account events use the Whatsapp trigger node',\n\t\t\t\tname: 'whatsappBusinessAccountNotice',\n\t\t\t\ttype: 'notice',\n\t\t\t\tdefault: '',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tobject: ['whatsappBusinessAccount'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Object',\n\t\t\t\tname: 'object',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Ad Account',\n\t\t\t\t\t\tvalue: 'adAccount',\n\t\t\t\t\t\tdescription: 'Get updates about Ad Account',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Application',\n\t\t\t\t\t\tvalue: 'application',\n\t\t\t\t\t\tdescription: 'Get updates about the app',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Certificate Transparency',\n\t\t\t\t\t\tvalue: 'certificateTransparency',\n\t\t\t\t\t\tdescription: 'Get updates about Certificate Transparency',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Group',\n\t\t\t\t\t\tvalue: 'group',\n\t\t\t\t\t\tdescription: 'Get updates about activity in groups and events in groups for Workplace',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Instagram',\n\t\t\t\t\t\tvalue: 'instagram',\n\t\t\t\t\t\tdescription: 'Get updates about comments on your media',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Link',\n\t\t\t\t\t\tvalue: 'link',\n\t\t\t\t\t\tdescription: 'Get updates about links for rich previews by an external provider',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Page',\n\t\t\t\t\t\tvalue: 'page',\n\t\t\t\t\t\tdescription: 'Page updates',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Permissions',\n\t\t\t\t\t\tvalue: 'permissions',\n\t\t\t\t\t\tdescription: 'Updates regarding granting or revoking permissions',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'User',\n\t\t\t\t\t\tvalue: 'user',\n\t\t\t\t\t\tdescription: 'User profile updates',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Whatsapp Business Account',\n\t\t\t\t\t\tvalue: 'whatsappBusinessAccount',\n\t\t\t\t\t\tdescription: 'Get updates about Whatsapp business account',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Workplace Security',\n\t\t\t\t\t\tvalue: 'workplaceSecurity',\n\t\t\t\t\t\tdescription: 'Get updates about Workplace Security',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\trequired: true,\n\t\t\t\tdefault: 'user',\n\t\t\t\tdescription: 'The object to subscribe to',\n\t\t\t},\n\t\t\t//https://developers.facebook.com/docs/graph-api/webhooks/reference/page\n\t\t\t{\n\t\t\t\tdisplayName: 'Field Names or IDs',\n\t\t\t\tname: 'fields',\n\t\t\t\ttype: 'multiOptions',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getObjectFields',\n\t\t\t\t\tloadOptionsDependsOn: ['object'],\n\t\t\t\t},\n\t\t\t\tdefault: [],\n\t\t\t\tdescription:\n\t\t\t\t\t'The set of fields in this object that are subscribed to. Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Options',\n\t\t\t\tname: 'options',\n\t\t\t\ttype: 'collection',\n\t\t\t\tdefault: {},\n\t\t\t\tplaceholder: 'Add option',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Include Values',\n\t\t\t\t\t\tname: 'includeValues',\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdefault: true,\n\t\t\t\t\t\tdescription: 'Whether change notifications should include the new values',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get all the available organizations to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getObjectFields(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst object = this.getCurrentNodeParameter('object') as string;\n\t\t\t\treturn getFields(object) as INodePropertyOptions[];\n\t\t\t},\n\t\t},\n\t};\n\n\twebhookMethods = {\n\t\tdefault: {\n\t\t\tasync checkExists(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookUrl = this.getNodeWebhookUrl('default') as string;\n\t\t\t\tconst object = this.getNodeParameter('object') as string;\n\t\t\t\tconst appId = this.getNodeParameter('appId') as string;\n\n\t\t\t\tconst { data } = (await facebookApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t`/${appId}/subscriptions`,\n\t\t\t\t\t{},\n\t\t\t\t)) as { data: FacebookWebhookSubscription[] };\n\n\t\t\t\tconst subscription = data.find((webhook) => webhook.object === object && webhook.status);\n\n\t\t\t\tif (!subscription) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (subscription.callback_url !== webhookUrl) {\n\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t`The Facebook App ID ${appId} already has a webhook subscription. Delete it or use another App before executing the trigger. Due to Facebook API limitations, you can have just one trigger per App.`,\n\t\t\t\t\t\t{ level: 'warning' },\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tasync create(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tconst webhookUrl = this.getNodeWebhookUrl('default') as string;\n\t\t\t\tconst object = this.getNodeParameter('object') as string;\n\t\t\t\tconst appId = this.getNodeParameter('appId') as string;\n\t\t\t\tconst fields = this.getNodeParameter('fields') as string[];\n\t\t\t\tconst options = this.getNodeParameter('options') as IDataObject;\n\n\t\t\t\tconst body = {\n\t\t\t\t\tobject: snakeCase(object),\n\t\t\t\t\tcallback_url: webhookUrl,\n\t\t\t\t\tverify_token: uuid(),\n\t\t\t\t\tfields: fields.includes('*') ? getAllFields(object) : fields,\n\t\t\t\t} as IDataObject;\n\n\t\t\t\tif (options.includeValues !== undefined) {\n\t\t\t\t\tbody.include_values = options.includeValues;\n\t\t\t\t}\n\n\t\t\t\tconst responseData = await facebookApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'POST',\n\t\t\t\t\t`/${appId}/subscriptions`,\n\t\t\t\t\tbody,\n\t\t\t\t);\n\n\t\t\t\twebhookData.verifyToken = body.verify_token;\n\n\t\t\t\tif (responseData.success !== true) {\n\t\t\t\t\t// Facebook did not return success, so something went wrong\n\t\t\t\t\tthrow new NodeApiError(this.getNode(), responseData as JsonObject, {\n\t\t\t\t\t\tmessage: 'Facebook webhook creation response did not contain the expected data.',\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tasync delete(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst appId = this.getNodeParameter('appId') as string;\n\t\t\t\tconst object = this.getNodeParameter('object') as string;\n\n\t\t\t\ttry {\n\t\t\t\t\tawait facebookApiRequest.call(this, 'DELETE', `/${appId}/subscriptions`, {\n\t\t\t\t\t\tobject: snakeCase(object),\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync webhook(this: IWebhookFunctions): Promise<IWebhookResponseData> {\n\t\tconst bodyData = this.getBodyData();\n\t\tconst query = this.getQueryData() as IDataObject;\n\t\tconst res = this.getResponseObject();\n\t\tconst req = this.getRequestObject();\n\t\tconst headerData = this.getHeaderData() as IDataObject;\n\t\tconst credentials = await this.getCredentials('facebookGraphAppApi');\n\t\t// Check if we're getting facebook's challenge request (https://developers.facebook.com/docs/graph-api/webhooks/getting-started)\n\t\tif (this.getWebhookName() === 'setup') {\n\t\t\tif (query['hub.challenge']) {\n\t\t\t\t//TODO\n\t\t\t\t//compare hub.verify_token with the saved token\n\t\t\t\t//const webhookData = this.getWorkflowStaticData('node');\n\t\t\t\t// if (webhookData.verifyToken !== query['hub.verify_token']) {\n\t\t\t\t// \treturn {};\n\t\t\t\t// }\n\t\t\t\tres.status(200).send(query['hub.challenge']).end();\n\t\t\t\treturn {\n\t\t\t\t\tnoWebhookResponse: true,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t// validate signature if app secret is set\n\t\tif (credentials.appSecret !== '') {\n\t\t\tconst computedSignature = createHmac('sha1', credentials.appSecret as string)\n\t\t\t\t.update(req.rawBody)\n\t\t\t\t.digest('hex');\n\t\t\tif (headerData['x-hub-signature'] !== `sha1=${computedSignature}`) {\n\t\t\t\treturn {};\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tworkflowData: [this.helpers.returnJsonArray(bodyData.entry as IDataObject[])],\n\t\t};\n\t}\n}\n"],"mappings":"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","names":["uuid"]}