{"version":3,"sources":["../../../nodes/Facebook/FacebookGraphApi.node.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHttpRequestMethods,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n\tIRequestOptions,\n\tJsonObject,\n} from 'n8n-workflow';\nimport { NodeApiError, NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nexport class FacebookGraphApi implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Facebook Graph API',\n\t\tname: 'facebookGraphApi',\n\t\ticon: 'file:facebook.svg',\n\t\tgroup: ['transform'],\n\t\tversion: 1,\n\t\tdescription: 'Interacts with Facebook using the Graph API',\n\t\tdefaults: {\n\t\t\tname: 'Facebook Graph API',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'facebookGraphApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Host URL',\n\t\t\t\tname: 'hostUrl',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Default',\n\t\t\t\t\t\tvalue: 'graph.facebook.com',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Video Uploads',\n\t\t\t\t\t\tvalue: 'graph-video.facebook.com',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'graph.facebook.com',\n\t\t\t\tdescription:\n\t\t\t\t\t'The Host URL of the request. Almost all requests are passed to the graph.facebook.com host URL. The single exception is video uploads, which use graph-video.facebook.com.',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'HTTP Request Method',\n\t\t\t\tname: 'httpRequestMethod',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'GET',\n\t\t\t\t\t\tvalue: 'GET',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'POST',\n\t\t\t\t\t\tvalue: 'POST',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'DELETE',\n\t\t\t\t\t\tvalue: 'DELETE',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'GET',\n\t\t\t\tdescription: 'The HTTP Method to be used for the request',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Graph API Version',\n\t\t\t\tname: 'graphApiVersion',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Default',\n\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'v22.0',\n\t\t\t\t\t\tvalue: 'v22.0',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'v21.0',\n\t\t\t\t\t\tvalue: 'v21.0',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'v20.0',\n\t\t\t\t\t\tvalue: 'v20.0',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'v19.0',\n\t\t\t\t\t\tvalue: 'v19.0',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'v18.0',\n\t\t\t\t\t\tvalue: 'v18.0',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'v17.0',\n\t\t\t\t\t\tvalue: 'v17.0',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'v16.0',\n\t\t\t\t\t\tvalue: 'v16.0',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'v15.0',\n\t\t\t\t\t\tvalue: 'v15.0',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'v14.0',\n\t\t\t\t\t\tvalue: 'v14.0',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'v13.0',\n\t\t\t\t\t\tvalue: 'v13.0',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'v12.0',\n\t\t\t\t\t\tvalue: 'v12.0',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'v11.0',\n\t\t\t\t\t\tvalue: 'v11.0',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'v10.0',\n\t\t\t\t\t\tvalue: 'v10.0',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'v9.0',\n\t\t\t\t\t\tvalue: 'v9.0',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'v8.0',\n\t\t\t\t\t\tvalue: 'v8.0',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'v7.0',\n\t\t\t\t\t\tvalue: 'v7.0',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'v6.0',\n\t\t\t\t\t\tvalue: 'v6.0',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'v5.0',\n\t\t\t\t\t\tvalue: 'v5.0',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'v4.0',\n\t\t\t\t\t\tvalue: 'v4.0',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'v3.3',\n\t\t\t\t\t\tvalue: 'v3.3',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'v3.2',\n\t\t\t\t\t\tvalue: 'v3.2',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'v3.1',\n\t\t\t\t\t\tvalue: 'v3.1',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'v3.0',\n\t\t\t\t\t\tvalue: 'v3.0',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: '',\n\t\t\t\tdescription: 'The version of the Graph API to be used in the request',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Node',\n\t\t\t\tname: 'node',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tdescription:\n\t\t\t\t\t'The node on which to operate. A node is an individual object with a unique ID. For example, there are many User node objects, each with a unique ID representing a person on Facebook.',\n\t\t\t\tplaceholder: 'me',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Edge',\n\t\t\t\tname: 'edge',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tdescription:\n\t\t\t\t\t'Edge of the node on which to operate. Edges represent collections of objects which are attached to the node.',\n\t\t\t\tplaceholder: 'videos',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Ignore SSL Issues (Insecure)',\n\t\t\t\tname: 'allowUnauthorizedCerts',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: 'Whether to connect even if SSL certificate validation is not possible',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Send Binary File',\n\t\t\t\tname: 'sendBinaryData',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\thttpRequestMethod: ['POST', 'PUT'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: false,\n\t\t\t\trequired: true,\n\t\t\t\tdescription: 'Whether binary data should be sent as body',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Input Binary Field',\n\t\t\t\tname: 'binaryPropertyName',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tplaceholder: 'file:data',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\thide: {\n\t\t\t\t\t\tsendBinaryData: [false],\n\t\t\t\t\t},\n\t\t\t\t\tshow: {\n\t\t\t\t\t\thttpRequestMethod: ['POST', 'PUT'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\thint: 'The name of the input binary field containing the file to be uploaded',\n\t\t\t\tdescription:\n\t\t\t\t\t'For Form-Data Multipart, they can be provided in the format: <code>\"sendKey1:binaryProperty1,sendKey2:binaryProperty2</code>',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Options',\n\t\t\t\tname: 'options',\n\t\t\t\ttype: 'collection',\n\t\t\t\tplaceholder: 'Add option',\n\t\t\t\tdefault: {},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Fields',\n\t\t\t\t\t\tname: 'fields',\n\t\t\t\t\t\tplaceholder: 'Add Field',\n\t\t\t\t\t\ttype: 'fixedCollection',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tmultipleValues: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\t\t'/httpRequestMethod': ['GET'],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdescription: 'The list of fields to request in the GET request',\n\t\t\t\t\t\tdefault: {},\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'field',\n\t\t\t\t\t\t\t\tdisplayName: 'Field',\n\t\t\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tdisplayName: 'Name',\n\t\t\t\t\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\t\t\tdescription: 'Name of the field',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Query Parameters',\n\t\t\t\t\t\tname: 'queryParameters',\n\t\t\t\t\t\tplaceholder: 'Add Parameter',\n\t\t\t\t\t\ttype: 'fixedCollection',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tmultipleValues: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdescription: 'The query parameters to send',\n\t\t\t\t\t\tdefault: {},\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'parameter',\n\t\t\t\t\t\t\t\tdisplayName: 'Parameter',\n\t\t\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tdisplayName: 'Name',\n\t\t\t\t\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\t\t\tdescription: 'Name of the parameter',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tdisplayName: 'Value',\n\t\t\t\t\t\t\t\t\t\tname: 'value',\n\t\t\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\t\t\tdescription: 'Value of the parameter',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Query Parameters JSON',\n\t\t\t\t\t\tname: 'queryParametersJson',\n\t\t\t\t\t\ttype: 'json',\n\t\t\t\t\t\tdefault: '{}',\n\t\t\t\t\t\tplaceholder: '{\"field_name\": \"field_value\"}',\n\t\t\t\t\t\tdescription: 'The query parameters to send, defined as a JSON object',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\n\t\tlet response: any;\n\t\tconst returnItems: INodeExecutionData[] = [];\n\n\t\tfor (let itemIndex = 0; itemIndex < items.length; itemIndex++) {\n\t\t\tconst graphApiCredentials = await this.getCredentials('facebookGraphApi');\n\n\t\t\tconst hostUrl = this.getNodeParameter('hostUrl', itemIndex) as string;\n\t\t\tconst httpRequestMethod = this.getNodeParameter(\n\t\t\t\t'httpRequestMethod',\n\t\t\t\titemIndex,\n\t\t\t) as IHttpRequestMethods;\n\t\t\tlet graphApiVersion = this.getNodeParameter('graphApiVersion', itemIndex) as string;\n\t\t\tconst node = this.getNodeParameter('node', itemIndex) as string;\n\t\t\tconst edge = this.getNodeParameter('edge', itemIndex) as string;\n\t\t\tconst options = this.getNodeParameter('options', itemIndex, {});\n\n\t\t\tif (graphApiVersion !== '') {\n\t\t\t\tgraphApiVersion += '/';\n\t\t\t}\n\n\t\t\tlet uri = `https://${hostUrl}/${graphApiVersion}${node}`;\n\t\t\tif (edge) {\n\t\t\t\turi = `${uri}/${edge}`;\n\t\t\t}\n\n\t\t\tconst qs: IDataObject = {\n\t\t\t\taccess_token: graphApiCredentials.accessToken,\n\t\t\t};\n\t\t\tconst requestOptions: IRequestOptions = {\n\t\t\t\theaders: {\n\t\t\t\t\taccept: 'application/json,text/*;q=0.99',\n\t\t\t\t},\n\t\t\t\tmethod: httpRequestMethod,\n\t\t\t\turi,\n\t\t\t\tjson: true,\n\t\t\t\tgzip: true,\n\t\t\t\trejectUnauthorized: !this.getNodeParameter('allowUnauthorizedCerts', itemIndex, false),\n\t\t\t};\n\n\t\t\tif (options !== undefined) {\n\t\t\t\t// Build fields query parameter as a comma separated list\n\t\t\t\tif (options.fields !== undefined) {\n\t\t\t\t\tconst fields = options.fields as IDataObject;\n\t\t\t\t\tif (fields.field !== undefined) {\n\t\t\t\t\t\tconst fieldsCsv = (fields.field as IDataObject[]).map((field) => field.name).join(',');\n\t\t\t\t\t\tqs.fields = fieldsCsv;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Add the query parameters defined in the UI\n\t\t\t\tif (options.queryParameters !== undefined) {\n\t\t\t\t\tconst queryParameters = options.queryParameters as IDataObject;\n\n\t\t\t\t\tif (queryParameters.parameter !== undefined) {\n\t\t\t\t\t\tfor (const queryParameter of queryParameters.parameter as IDataObject[]) {\n\t\t\t\t\t\t\tqs[queryParameter.name as string] = queryParameter.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\trequestOptions.qs = qs;\n\n\t\t\t\t// Add the query parameters defined as a JSON object\n\t\t\t\tif (options.queryParametersJson) {\n\t\t\t\t\tlet queryParametersJsonObj = {};\n\t\t\t\t\ttry {\n\t\t\t\t\t\tqueryParametersJsonObj = JSON.parse(options.queryParametersJson as string);\n\t\t\t\t\t} catch {\n\t\t\t\t\t\t/* Do nothing, at least for now */\n\t\t\t\t\t}\n\t\t\t\t\trequestOptions.qs = {\n\t\t\t\t\t\t...qs,\n\t\t\t\t\t\t...queryParametersJsonObj,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst sendBinaryData = this.getNodeParameter('sendBinaryData', itemIndex, false) as boolean;\n\t\t\tif (sendBinaryData) {\n\t\t\t\tconst binaryPropertyNameFull = this.getNodeParameter('binaryPropertyName', itemIndex);\n\n\t\t\t\tlet propertyName = 'file';\n\t\t\t\tlet binaryPropertyName = binaryPropertyNameFull;\n\t\t\t\tif (binaryPropertyNameFull.includes(':')) {\n\t\t\t\t\tconst binaryPropertyNameParts = binaryPropertyNameFull.split(':');\n\t\t\t\t\tpropertyName = binaryPropertyNameParts[0];\n\t\t\t\t\tbinaryPropertyName = binaryPropertyNameParts[1];\n\t\t\t\t}\n\n\t\t\t\tconst binaryData = this.helpers.assertBinaryData(itemIndex, binaryPropertyName);\n\t\t\t\tconst binaryDataBuffer = await this.helpers.getBinaryDataBuffer(\n\t\t\t\t\titemIndex,\n\t\t\t\t\tbinaryPropertyName,\n\t\t\t\t);\n\t\t\t\trequestOptions.formData = {\n\t\t\t\t\t[propertyName]: {\n\t\t\t\t\t\tvalue: binaryDataBuffer,\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\tfilename: binaryData.fileName,\n\t\t\t\t\t\t\tcontentType: binaryData.mimeType,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// Now that the options are all set make the actual http request\n\t\t\t\tresponse = await this.helpers.request(requestOptions);\n\t\t\t} catch (error) {\n\t\t\t\tif (!this.continueOnFail()) {\n\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t\t\t\t}\n\n\t\t\t\tlet errorItem;\n\t\t\t\tif (error.response !== undefined) {\n\t\t\t\t\t// Since this is a Graph API node and we already know the request was\n\t\t\t\t\t// not successful, we'll go straight to the error details.\n\t\t\t\t\tconst graphApiErrors = error.response.body?.error ?? {};\n\n\t\t\t\t\terrorItem = {\n\t\t\t\t\t\tstatusCode: error.statusCode,\n\t\t\t\t\t\t...graphApiErrors,\n\t\t\t\t\t\theaders: error.response.headers,\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\t// Unknown Graph API response, we'll dump everything in the response item\n\t\t\t\t\terrorItem = error;\n\t\t\t\t}\n\t\t\t\treturnItems.push({ json: { ...errorItem } });\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (typeof response === 'string') {\n\t\t\t\tif (!this.continueOnFail()) {\n\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'Response body is not valid JSON.', {\n\t\t\t\t\t\titemIndex,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturnItems.push({ json: { message: response } });\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\treturnItems.push({ json: response });\n\t\t}\n\n\t\treturn [returnItems];\n\t}\n}\n"],"mappings":"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","names":[]}