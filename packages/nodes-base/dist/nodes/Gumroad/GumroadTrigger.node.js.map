{"version":3,"sources":["../../../nodes/Gumroad/GumroadTrigger.node.ts"],"sourcesContent":["import type {\n\tIHookFunctions,\n\tIWebhookFunctions,\n\tIDataObject,\n\tINodeType,\n\tINodeTypeDescription,\n\tIWebhookResponseData,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes } from 'n8n-workflow';\n\nimport { gumroadApiRequest } from './GenericFunctions';\n\nexport class GumroadTrigger implements INodeType {\n\t// eslint-disable-next-line n8n-nodes-base/node-class-description-missing-subtitle\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Gumroad Trigger',\n\t\tname: 'gumroadTrigger',\n\t\t// eslint-disable-next-line n8n-nodes-base/node-class-description-icon-not-svg\n\t\ticon: 'file:gumroad.png',\n\t\tgroup: ['trigger'],\n\t\tversion: 1,\n\t\tdescription: 'Handle Gumroad events via webhooks',\n\t\tdefaults: {\n\t\t\tname: 'Gumroad Trigger',\n\t\t},\n\t\tinputs: [],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'gumroadApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\twebhooks: [\n\t\t\t{\n\t\t\t\tname: 'default',\n\t\t\t\thttpMethod: 'POST',\n\t\t\t\tresponseMode: 'onReceived',\n\t\t\t\tpath: 'webhook',\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\trequired: true,\n\t\t\t\tdefault: '',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Cancellation',\n\t\t\t\t\t\tvalue: 'cancellation',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\"When subscribed to this resource, you will be notified of cancellations of the user's subscribers\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Dispute',\n\t\t\t\t\t\tvalue: 'dispute',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\"When subscribed to this resource, you will be notified of the disputes raised against user's sales\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Dispute Won',\n\t\t\t\t\t\tvalue: 'dispute_won',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'When subscribed to this resource, you will be notified of the sale disputes won',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Refund',\n\t\t\t\t\t\tvalue: 'refund',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\"When subscribed to this resource, you will be notified of refunds to the user's sales\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Sale',\n\t\t\t\t\t\tvalue: 'sale',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\"When subscribed to this resource, you will be notified of the user's sales\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdescription: 'The resource is gonna fire the event',\n\t\t\t},\n\t\t],\n\t};\n\n\twebhookMethods = {\n\t\tdefault: {\n\t\t\tasync checkExists(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tif (webhookData.webhookId === undefined) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tconst endpoint = '/resource_subscriptions';\n\t\t\t\tconst { resource_subscriptions } = await gumroadApiRequest.call(this, 'GET', endpoint);\n\t\t\t\tif (Array.isArray(resource_subscriptions)) {\n\t\t\t\t\tfor (const resource of resource_subscriptions) {\n\t\t\t\t\t\tif (resource.id === webhookData.webhookId) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tasync create(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookUrl = this.getNodeWebhookUrl('default');\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tconst resource = this.getNodeParameter('resource') as string;\n\t\t\t\tconst endpoint = '/resource_subscriptions';\n\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\tpost_url: webhookUrl,\n\t\t\t\t\tresource_name: resource,\n\t\t\t\t};\n\t\t\t\tconst { resource_subscription } = await gumroadApiRequest.call(this, 'PUT', endpoint, body);\n\t\t\t\twebhookData.webhookId = resource_subscription.id;\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tasync delete(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tlet responseData;\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tconst endpoint = `/resource_subscriptions/${webhookData.webhookId}`;\n\t\t\t\ttry {\n\t\t\t\t\tresponseData = await gumroadApiRequest.call(this, 'DELETE', endpoint);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (!responseData.success) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tdelete webhookData.webhookId;\n\t\t\t\treturn true;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync webhook(this: IWebhookFunctions): Promise<IWebhookResponseData> {\n\t\tconst req = this.getRequestObject();\n\t\treturn {\n\t\t\tworkflowData: [this.helpers.returnJsonArray(req.body as IDataObject)],\n\t\t};\n\t}\n}\n"],"mappings":"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","names":[]}