{"version":3,"sources":["../../../nodes/Eventbrite/EventbriteTrigger.node.ts"],"sourcesContent":["import type {\n\tIHookFunctions,\n\tIWebhookFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n\tIWebhookResponseData,\n\tJsonObject,\n} from 'n8n-workflow';\nimport { NodeApiError, NodeConnectionTypes } from 'n8n-workflow';\n\nimport { eventbriteApiRequest, eventbriteApiRequestAllItems } from './GenericFunctions';\n\nexport class EventbriteTrigger implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Eventbrite Trigger',\n\t\tname: 'eventbriteTrigger',\n\t\t// eslint-disable-next-line n8n-nodes-base/node-class-description-icon-not-svg\n\t\ticon: 'file:eventbrite.png',\n\t\tgroup: ['trigger'],\n\t\tversion: 1,\n\t\tdescription: 'Handle Eventbrite events via webhooks',\n\t\tsubtitle: '={{$parameter[\"event\"]}}',\n\t\tdefaults: {\n\t\t\tname: 'Eventbrite Trigger',\n\t\t},\n\t\tinputs: [],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'eventbriteApi',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['privateKey'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'eventbriteOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['oAuth2'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\twebhooks: [\n\t\t\t{\n\t\t\t\tname: 'default',\n\t\t\t\thttpMethod: 'POST',\n\t\t\t\tresponseMode: 'onReceived',\n\t\t\t\tpath: 'webhook',\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Authentication',\n\t\t\t\tname: 'authentication',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Private Key',\n\t\t\t\t\t\tvalue: 'privateKey',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'OAuth2',\n\t\t\t\t\t\tvalue: 'oAuth2',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'privateKey',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Organization Name or ID',\n\t\t\t\tname: 'organization',\n\t\t\t\ttype: 'options',\n\t\t\t\trequired: true,\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getOrganizations',\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\tdescription:\n\t\t\t\t\t'The Eventbrite Organization to work on. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Event Name or ID',\n\t\t\t\tname: 'event',\n\t\t\t\ttype: 'options',\n\t\t\t\trequired: true,\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsDependsOn: ['organization'],\n\t\t\t\t\tloadOptionsMethod: 'getEvents',\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\tdescription:\n\t\t\t\t\t'Limit the triggers to this event. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Actions',\n\t\t\t\tname: 'actions',\n\t\t\t\ttype: 'multiOptions',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'attendee.checked_in',\n\t\t\t\t\t\tvalue: 'attendee.checked_in',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'attendee.checked_out',\n\t\t\t\t\t\tvalue: 'attendee.checked_out',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'attendee.updated',\n\t\t\t\t\t\tvalue: 'attendee.updated',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'event.created',\n\t\t\t\t\t\tvalue: 'event.created',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'event.published',\n\t\t\t\t\t\tvalue: 'event.published',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'event.unpublished',\n\t\t\t\t\t\tvalue: 'event.unpublished',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'event.updated',\n\t\t\t\t\t\tvalue: 'event.updated',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'order.placed',\n\t\t\t\t\t\tvalue: 'order.placed',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'order.refunded',\n\t\t\t\t\t\tvalue: 'order.refunded',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'order.updated',\n\t\t\t\t\t\tvalue: 'order.updated',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'organizer.updated',\n\t\t\t\t\t\tvalue: 'organizer.updated',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'ticket_class.created',\n\t\t\t\t\t\tvalue: 'ticket_class.created',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'ticket_class.deleted',\n\t\t\t\t\t\tvalue: 'ticket_class.deleted',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'ticket_class.updated',\n\t\t\t\t\t\tvalue: 'ticket_class.updated',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'venue.updated',\n\t\t\t\t\t\tvalue: 'venue.updated',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\trequired: true,\n\t\t\t\tdefault: [],\n\t\t\t\tdescription: 'One or more action to subscribe to',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Resolve Data',\n\t\t\t\tname: 'resolveData',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-description-boolean-without-whether\n\t\t\t\tdescription:\n\t\t\t\t\t'By default does the webhook-data only contain the URL to receive the object data manually. If this option gets activated, it will resolve the data automatically.',\n\t\t\t},\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get all the available organizations to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getOrganizations(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst organizations = await eventbriteApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'organizations',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/users/me/organizations',\n\t\t\t\t);\n\t\t\t\tfor (const organization of organizations) {\n\t\t\t\t\tconst organizationName = organization.name;\n\t\t\t\t\tconst organizationId = organization.id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: organizationName,\n\t\t\t\t\t\tvalue: organizationId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the available events to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getEvents(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [{ name: 'All', value: 'all' }];\n\t\t\t\tconst organization = this.getCurrentNodeParameter('organization');\n\t\t\t\tconst events = await eventbriteApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'events',\n\t\t\t\t\t'GET',\n\t\t\t\t\t`/organizations/${organization}/events`,\n\t\t\t\t);\n\t\t\t\tfor (const event of events) {\n\t\t\t\t\tconst eventName = event.name.text;\n\t\t\t\t\tconst eventId = event.id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: eventName,\n\t\t\t\t\t\tvalue: eventId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\twebhookMethods = {\n\t\tdefault: {\n\t\t\tasync checkExists(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tconst webhookUrl = this.getNodeWebhookUrl('default');\n\t\t\t\tconst organisation = this.getNodeParameter('organization') as string;\n\t\t\t\tconst actions = this.getNodeParameter('actions') as string[];\n\n\t\t\t\tconst endpoint = `/organizations/${organisation}/webhooks/`;\n\n\t\t\t\tconst { webhooks } = await eventbriteApiRequest.call(this, 'GET', endpoint);\n\n\t\t\t\tconst check = (currentActions: string[], webhookActions: string[]) => {\n\t\t\t\t\tfor (const currentAction of currentActions) {\n\t\t\t\t\t\tif (!webhookActions.includes(currentAction)) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t};\n\n\t\t\t\tfor (const webhook of webhooks) {\n\t\t\t\t\tif (webhook.endpoint_url === webhookUrl && check(actions, webhook.actions as string[])) {\n\t\t\t\t\t\twebhookData.webhookId = webhook.id;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tasync create(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookUrl = this.getNodeWebhookUrl('default');\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tconst organisation = this.getNodeParameter('organization') as string;\n\t\t\t\tconst event = this.getNodeParameter('event') as string;\n\t\t\t\tconst actions = this.getNodeParameter('actions') as string[];\n\t\t\t\tconst endpoint = `/organizations/${organisation}/webhooks/`;\n\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\tendpoint_url: webhookUrl,\n\t\t\t\t\tactions: actions.join(','),\n\t\t\t\t\tevent_id: event,\n\t\t\t\t};\n\t\t\t\tif (event === 'all' || event === '') {\n\t\t\t\t\tdelete body.event_id;\n\t\t\t\t}\n\t\t\t\tconst responseData = await eventbriteApiRequest.call(this, 'POST', endpoint, body);\n\t\t\t\twebhookData.webhookId = responseData.id;\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tasync delete(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tlet responseData;\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tconst endpoint = `/webhooks/${webhookData.webhookId}/`;\n\t\t\t\ttry {\n\t\t\t\t\tresponseData = await eventbriteApiRequest.call(this, 'DELETE', endpoint);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (!responseData.success) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tdelete webhookData.webhookId;\n\t\t\t\treturn true;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync webhook(this: IWebhookFunctions): Promise<IWebhookResponseData> {\n\t\tconst req = this.getRequestObject();\n\n\t\tif (req.body.api_url === undefined) {\n\t\t\tthrow new NodeApiError(this.getNode(), req.body as JsonObject, {\n\t\t\t\tmessage: 'The received data does not contain required \"api_url\" property!',\n\t\t\t});\n\t\t}\n\n\t\tconst resolveData = this.getNodeParameter('resolveData', false) as boolean;\n\n\t\tif (!resolveData) {\n\t\t\t// Return the data as it got received\n\t\t\treturn {\n\t\t\t\tworkflowData: [this.helpers.returnJsonArray(req.body as IDataObject)],\n\t\t\t};\n\t\t}\n\n\t\tif (req.body.api_url.includes('api-endpoint-to-fetch-object-details')) {\n\t\t\treturn {\n\t\t\t\tworkflowData: [\n\t\t\t\t\tthis.helpers.returnJsonArray({\n\t\t\t\t\t\tplaceholder:\n\t\t\t\t\t\t\t'Test received. To display actual data of object get the webhook triggered by performing the action which triggers it.',\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t};\n\t\t}\n\n\t\tconst responseData = await eventbriteApiRequest.call(\n\t\t\tthis,\n\t\t\t'GET',\n\t\t\t'',\n\t\t\t{},\n\t\t\tundefined,\n\t\t\treq.body.api_url as string,\n\t\t);\n\n\t\treturn {\n\t\t\tworkflowData: [this.helpers.returnJsonArray(responseData as IDataObject)],\n\t\t};\n\t}\n}\n"],"mappings":"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","names":[]}