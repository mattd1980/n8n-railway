{"version":3,"sources":["../../../nodes/Github/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIHookFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tJsonObject,\n\tIHttpRequestMethods,\n\tIRequestOptions,\n} from 'n8n-workflow';\nimport { NodeApiError, NodeOperationError } from 'n8n-workflow';\n\n/**\n * Make an API request to Github\n *\n */\nexport async function githubApiRequest(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\tbody: object,\n\tquery?: IDataObject,\n\toption: IDataObject = {},\n): Promise<any> {\n\tconst options: IRequestOptions = {\n\t\tmethod,\n\t\theaders: {\n\t\t\t'User-Agent': 'n8n',\n\t\t},\n\t\tbody,\n\t\tqs: query,\n\t\turi: '',\n\t\tjson: true,\n\t};\n\n\tif (Object.keys(option).length !== 0) {\n\t\tObject.assign(options, option);\n\t}\n\n\ttry {\n\t\tconst authenticationMethod = this.getNodeParameter(\n\t\t\t'authentication',\n\t\t\t0,\n\t\t\t'accessToken',\n\t\t) as string;\n\t\tlet credentialType = '';\n\n\t\tif (authenticationMethod === 'accessToken') {\n\t\t\tconst credentials = await this.getCredentials('githubApi');\n\t\t\tcredentialType = 'githubApi';\n\n\t\t\tconst baseUrl = credentials.server || 'https://api.github.com';\n\t\t\toptions.uri = `${baseUrl}${endpoint}`;\n\t\t} else {\n\t\t\tconst credentials = await this.getCredentials('githubOAuth2Api');\n\t\t\tcredentialType = 'githubOAuth2Api';\n\n\t\t\tconst baseUrl = credentials.server || 'https://api.github.com';\n\t\t\toptions.uri = `${baseUrl}${endpoint}`;\n\t\t}\n\n\t\treturn await this.helpers.requestWithAuthentication.call(this, credentialType, options);\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\n/**\n * Returns the SHA of the given file\n *\n * @param {(IHookFunctions | IExecuteFunctions)} this\n */\nexport async function getFileSha(\n\tthis: IHookFunctions | IExecuteFunctions,\n\towner: string,\n\trepository: string,\n\tfilePath: string,\n\tbranch?: string,\n): Promise<any> {\n\tconst query: IDataObject = {};\n\tif (branch !== undefined) {\n\t\tquery.ref = branch;\n\t}\n\n\tconst getEndpoint = `/repos/${owner}/${repository}/contents/${encodeURI(filePath)}`;\n\tconst responseData = await githubApiRequest.call(this, 'GET', getEndpoint, {}, query);\n\n\tif (responseData.sha === undefined) {\n\t\tthrow new NodeOperationError(this.getNode(), 'Could not get the SHA of the file.');\n\t}\n\treturn responseData.sha;\n}\n\nexport async function githubApiRequestAllItems(\n\tthis: IHookFunctions | IExecuteFunctions,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\n\tbody: any = {},\n\tquery: IDataObject = {},\n): Promise<any> {\n\tconst returnData: IDataObject[] = [];\n\n\tlet responseData;\n\n\tquery.per_page = 100;\n\tquery.page = 1;\n\n\tdo {\n\t\tresponseData = await githubApiRequest.call(this, method, endpoint, body as IDataObject, query, {\n\t\t\tresolveWithFullResponse: true,\n\t\t});\n\t\tquery.page++;\n\t\treturnData.push.apply(returnData, responseData.body as IDataObject[]);\n\t} while (responseData.headers.link?.includes('next'));\n\treturn returnData;\n}\n\nexport function isBase64(content: string) {\n\tconst base64regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n\treturn base64regex.test(content);\n}\n\nexport function validateJSON(json: string | undefined): any {\n\tlet result;\n\ttry {\n\t\tresult = JSON.parse(json!);\n\t} catch (exception) {\n\t\tresult = undefined;\n\t}\n\treturn result;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,0BAAiD;AAMjD,eAAsB,iBAErB,QACA,UACA,MACA,OACA,SAAsB,CAAC,GACR;AACf,QAAM,UAA2B;AAAA,IAChC;AAAA,IACA,SAAS;AAAA,MACR,cAAc;AAAA,IACf;AAAA,IACA;AAAA,IACA,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAM;AAAA,EACP;AAEA,MAAI,OAAO,KAAK,MAAM,EAAE,WAAW,GAAG;AACrC,WAAO,OAAO,SAAS,MAAM;AAAA,EAC9B;AAEA,MAAI;AACH,UAAM,uBAAuB,KAAK;AAAA,MACjC;AAAA,MACA;AAAA,MACA;AAAA,IACD;AACA,QAAI,iBAAiB;AAErB,QAAI,yBAAyB,eAAe;AAC3C,YAAM,cAAc,MAAM,KAAK,eAAe,WAAW;AACzD,uBAAiB;AAEjB,YAAM,UAAU,YAAY,UAAU;AACtC,cAAQ,MAAM,GAAG,OAAO,GAAG,QAAQ;AAAA,IACpC,OAAO;AACN,YAAM,cAAc,MAAM,KAAK,eAAe,iBAAiB;AAC/D,uBAAiB;AAEjB,YAAM,UAAU,YAAY,UAAU;AACtC,cAAQ,MAAM,GAAG,OAAO,GAAG,QAAQ;AAAA,IACpC;AAEA,WAAO,MAAM,KAAK,QAAQ,0BAA0B,KAAK,MAAM,gBAAgB,OAAO;AAAA,EACvF,SAAS,OAAO;AACf,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,KAAmB;AAAA,EAC3D;AACD;AAOA,eAAsB,WAErB,OACA,YACA,UACA,QACe;AACf,QAAM,QAAqB,CAAC;AAC5B,MAAI,WAAW,QAAW;AACzB,UAAM,MAAM;AAAA,EACb;AAEA,QAAM,cAAc,UAAU,KAAK,IAAI,UAAU,aAAa,UAAU,QAAQ,CAAC;AACjF,QAAM,eAAe,MAAM,iBAAiB,KAAK,MAAM,OAAO,aAAa,CAAC,GAAG,KAAK;AAEpF,MAAI,aAAa,QAAQ,QAAW;AACnC,UAAM,IAAI,uCAAmB,KAAK,QAAQ,GAAG,oCAAoC;AAAA,EAClF;AACA,SAAO,aAAa;AACrB;AAEA,eAAsB,yBAErB,QACA,UAEA,OAAY,CAAC,GACb,QAAqB,CAAC,GACP;AACf,QAAM,aAA4B,CAAC;AAEnC,MAAI;AAEJ,QAAM,WAAW;AACjB,QAAM,OAAO;AAEb,KAAG;AACF,mBAAe,MAAM,iBAAiB,KAAK,MAAM,QAAQ,UAAU,MAAqB,OAAO;AAAA,MAC9F,yBAAyB;AAAA,IAC1B,CAAC;AACD,UAAM;AACN,eAAW,KAAK,MAAM,YAAY,aAAa,IAAqB;AAAA,EACrE,SAAS,aAAa,QAAQ,MAAM,SAAS,MAAM;AACnD,SAAO;AACR;AAEO,SAAS,SAAS,SAAiB;AACzC,QAAM,cAAc;AACpB,SAAO,YAAY,KAAK,OAAO;AAChC;AAEO,SAAS,aAAa,MAA+B;AAC3D,MAAI;AACJ,MAAI;AACH,aAAS,KAAK,MAAM,IAAK;AAAA,EAC1B,SAAS,WAAW;AACnB,aAAS;AAAA,EACV;AACA,SAAO;AACR;","names":[]}