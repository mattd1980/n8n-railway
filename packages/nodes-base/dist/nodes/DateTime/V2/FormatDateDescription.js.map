{"version":3,"sources":["../../../../nodes/DateTime/V2/FormatDateDescription.ts"],"sourcesContent":["import type { INodeProperties } from 'n8n-workflow';\n\nimport { includeInputFields } from './common.descriptions';\n\nexport const FormatDateDescription: INodeProperties[] = [\n\t{\n\t\tdisplayName:\n\t\t\t\"You can also do this using an expression, e.g. <code>{{your_date.format('yyyy-MM-dd')}}</code>. <a target='_blank' href='https://docs.n8n.io/code/cookbook/luxon/'>More info</a>\",\n\t\tname: 'notice',\n\t\ttype: 'notice',\n\t\tdefault: '',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\toperation: ['formatDate'],\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tdisplayName: 'Date',\n\t\tname: 'date',\n\t\ttype: 'string',\n\t\tdescription: 'The date that you want to format',\n\t\tdefault: '',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\toperation: ['formatDate'],\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tdisplayName: 'Format',\n\t\tname: 'format',\n\t\ttype: 'options',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\toperation: ['formatDate'],\n\t\t\t},\n\t\t},\n\t\t// eslint-disable-next-line n8n-nodes-base/node-param-options-type-unsorted-items\n\t\toptions: [\n\t\t\t{\n\t\t\t\tname: 'Custom Format',\n\t\t\t\tvalue: 'custom',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'MM/DD/YYYY',\n\t\t\t\tvalue: 'MM/dd/yyyy',\n\t\t\t\tdescription: 'Example: 09/04/1986',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'YYYY/MM/DD',\n\t\t\t\tvalue: 'yyyy/MM/dd',\n\t\t\t\tdescription: 'Example: 1986/04/09',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'MMMM DD YYYY',\n\t\t\t\tvalue: 'MMMM dd yyyy',\n\t\t\t\tdescription: 'Example: April 09 1986',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'MM-DD-YYYY',\n\t\t\t\tvalue: 'MM-dd-yyyy',\n\t\t\t\tdescription: 'Example: 09-04-1986',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'YYYY-MM-DD',\n\t\t\t\tvalue: 'yyyy-MM-dd',\n\t\t\t\tdescription: 'Example: 1986-04-09',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Unix Timestamp',\n\t\t\t\tvalue: 'X',\n\t\t\t\tdescription: 'Example: 1672531200',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Unix Ms Timestamp',\n\t\t\t\tvalue: 'x',\n\t\t\t\tdescription: 'Example: 1674691200000',\n\t\t\t},\n\t\t],\n\t\tdefault: 'MM/dd/yyyy',\n\t\tdescription: 'The format to convert the date to',\n\t},\n\t{\n\t\tdisplayName: 'Custom Format',\n\t\tname: 'customFormat',\n\t\ttype: 'string',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tformat: ['custom'],\n\t\t\t\toperation: ['formatDate'],\n\t\t\t},\n\t\t},\n\t\thint: 'List of special tokens <a target=\"_blank\" href=\"https://moment.github.io/luxon/#/formatting?id=table-of-tokens\">More info</a>',\n\t\tdefault: '',\n\t\tplaceholder: 'yyyy-MM-dd',\n\t},\n\t{\n\t\tdisplayName: 'Output Field Name',\n\t\tname: 'outputFieldName',\n\t\ttype: 'string',\n\t\tdefault: 'formattedDate',\n\t\tdescription: 'Name of the field to put the output in',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\toperation: ['formatDate'],\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tdisplayName: 'Options',\n\t\tname: 'options',\n\t\ttype: 'collection',\n\t\tplaceholder: 'Add option',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\toperation: ['formatDate'],\n\t\t\t},\n\t\t},\n\t\tdefault: {},\n\t\toptions: [\n\t\t\tincludeInputFields,\n\t\t\t{\n\t\t\t\tdisplayName: 'From Date Format',\n\t\t\t\tname: 'fromFormat',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: 'e.g yyyyMMdd',\n\t\t\t\thint: 'Tokens are case sensitive',\n\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-description-miscased-id\n\t\t\t\tdescription:\n\t\t\t\t\t'Format in which the input \\'Date\\' is, it\\'s helpful when the format is not recognized automatically. Use those <a href=\"https://moment.github.io/luxon/#/formatting?id=table-of-tokens&id=table-of-tokens\" target=\"_blank\">tokens</a> to define the format.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Use Workflow Timezone',\n\t\t\t\tname: 'timezone',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: \"Whether to use the timezone of the input or the workflow's timezone\",\n\t\t\t},\n\t\t],\n\t},\n];\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,oBAAmC;AAE5B,MAAM,wBAA2C;AAAA,EACvD;AAAA,IACC,aACC;AAAA,IACD,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS;AAAA,IACT,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,WAAW,CAAC,YAAY;AAAA,MACzB;AAAA,IACD;AAAA,EACD;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,SAAS;AAAA,IACT,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,WAAW,CAAC,YAAY;AAAA,MACzB;AAAA,IACD;AAAA,EACD;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,WAAW,CAAC,YAAY;AAAA,MACzB;AAAA,IACD;AAAA;AAAA,IAEA,SAAS;AAAA,MACR;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,QACP,aAAa;AAAA,MACd;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,QACP,aAAa;AAAA,MACd;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,QACP,aAAa;AAAA,MACd;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,QACP,aAAa;AAAA,MACd;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,QACP,aAAa;AAAA,MACd;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,QACP,aAAa;AAAA,MACd;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,QACP,aAAa;AAAA,MACd;AAAA,IACD;AAAA,IACA,SAAS;AAAA,IACT,aAAa;AAAA,EACd;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,QAAQ,CAAC,QAAQ;AAAA,QACjB,WAAW,CAAC,YAAY;AAAA,MACzB;AAAA,IACD;AAAA,IACA,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,EACd;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,IACb,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,WAAW,CAAC,YAAY;AAAA,MACzB;AAAA,IACD;AAAA,EACD;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,WAAW,CAAC,YAAY;AAAA,MACzB;AAAA,IACD;AAAA,IACA,SAAS,CAAC;AAAA,IACV,SAAS;AAAA,MACR;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA;AAAA,QAEN,aACC;AAAA,MACF;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aAAa;AAAA,MACd;AAAA,IACD;AAAA,EACD;AACD;","names":[]}