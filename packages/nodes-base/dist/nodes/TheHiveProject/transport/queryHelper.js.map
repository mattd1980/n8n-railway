{"version":3,"sources":["../../../../nodes/TheHiveProject/transport/queryHelper.ts"],"sourcesContent":["import type { IExecuteFunctions, IDataObject } from 'n8n-workflow';\n\nimport { theHiveApiRequest } from './requestApi';\nimport type { QueryScope } from '../helpers/interfaces';\nimport { constructFilter } from '../helpers/utils';\n\nexport async function theHiveApiQuery(\n\tthis: IExecuteFunctions,\n\tscope: QueryScope,\n\tfilters?: IDataObject[],\n\tsortFields?: IDataObject[],\n\tlimit?: number,\n\treturnCount = false,\n\textraData?: string[],\n) {\n\tconst query: IDataObject[] = [];\n\n\tif (scope.id) {\n\t\tquery.push({\n\t\t\t_name: scope.query,\n\t\t\tidOrName: scope.id,\n\t\t});\n\t} else {\n\t\tquery.push({\n\t\t\t_name: scope.query,\n\t\t});\n\t}\n\n\tif (scope.restrictTo) {\n\t\tquery.push({\n\t\t\t_name: scope.restrictTo,\n\t\t});\n\t}\n\n\tif (filters && Array.isArray(filters) && filters.length) {\n\t\tconst filter = {\n\t\t\t_name: 'filter',\n\t\t\t_and: filters.filter((f) => f.field).map(constructFilter),\n\t\t};\n\n\t\tquery.push(filter);\n\t}\n\n\tif (sortFields?.length && !returnCount) {\n\t\tconst sort = {\n\t\t\t_name: 'sort',\n\t\t\t_fields: sortFields.map((field) => {\n\t\t\t\treturn {\n\t\t\t\t\t[`${field.field as string}`]: field.direction as string,\n\t\t\t\t};\n\t\t\t}),\n\t\t};\n\n\t\tquery.push(sort);\n\t}\n\n\tlet responseData: IDataObject[] = [];\n\n\tif (returnCount) {\n\t\tquery.push({\n\t\t\t_name: 'count',\n\t\t});\n\n\t\tconst count = await theHiveApiRequest.call(this, 'POST', '/v1/query', { query });\n\n\t\tresponseData.push({ count });\n\t} else if (limit) {\n\t\tconst pagination: IDataObject = {\n\t\t\t_name: 'page',\n\t\t\tfrom: 0,\n\t\t\tto: limit,\n\t\t\textraData,\n\t\t};\n\n\t\tquery.push(pagination);\n\t\tresponseData = await theHiveApiRequest.call(this, 'POST', '/v1/query', { query });\n\t} else {\n\t\tlet to = 500;\n\t\tlet from = 0;\n\t\tlet response: IDataObject[] = [];\n\n\t\tdo {\n\t\t\tconst pagination: IDataObject = {\n\t\t\t\t_name: 'page',\n\t\t\t\tfrom,\n\t\t\t\tto,\n\t\t\t\textraData,\n\t\t\t};\n\n\t\t\tresponse = await theHiveApiRequest.call(this, 'POST', '/v1/query', {\n\t\t\t\tquery: [...query, pagination],\n\t\t\t});\n\n\t\t\tresponseData = responseData.concat(response || []);\n\t\t\tfrom = to;\n\t\t\tto += 500;\n\t\t} while (response?.length);\n\t}\n\n\treturn responseData;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,wBAAkC;AAElC,mBAAgC;AAEhC,eAAsB,gBAErB,OACA,SACA,YACA,OACA,cAAc,OACd,WACC;AACD,QAAM,QAAuB,CAAC;AAE9B,MAAI,MAAM,IAAI;AACb,UAAM,KAAK;AAAA,MACV,OAAO,MAAM;AAAA,MACb,UAAU,MAAM;AAAA,IACjB,CAAC;AAAA,EACF,OAAO;AACN,UAAM,KAAK;AAAA,MACV,OAAO,MAAM;AAAA,IACd,CAAC;AAAA,EACF;AAEA,MAAI,MAAM,YAAY;AACrB,UAAM,KAAK;AAAA,MACV,OAAO,MAAM;AAAA,IACd,CAAC;AAAA,EACF;AAEA,MAAI,WAAW,MAAM,QAAQ,OAAO,KAAK,QAAQ,QAAQ;AACxD,UAAM,SAAS;AAAA,MACd,OAAO;AAAA,MACP,MAAM,QAAQ,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,4BAAe;AAAA,IACzD;AAEA,UAAM,KAAK,MAAM;AAAA,EAClB;AAEA,MAAI,YAAY,UAAU,CAAC,aAAa;AACvC,UAAM,OAAO;AAAA,MACZ,OAAO;AAAA,MACP,SAAS,WAAW,IAAI,CAAC,UAAU;AAClC,eAAO;AAAA,UACN,CAAC,GAAG,MAAM,KAAe,EAAE,GAAG,MAAM;AAAA,QACrC;AAAA,MACD,CAAC;AAAA,IACF;AAEA,UAAM,KAAK,IAAI;AAAA,EAChB;AAEA,MAAI,eAA8B,CAAC;AAEnC,MAAI,aAAa;AAChB,UAAM,KAAK;AAAA,MACV,OAAO;AAAA,IACR,CAAC;AAED,UAAM,QAAQ,MAAM,oCAAkB,KAAK,MAAM,QAAQ,aAAa,EAAE,MAAM,CAAC;AAE/E,iBAAa,KAAK,EAAE,MAAM,CAAC;AAAA,EAC5B,WAAW,OAAO;AACjB,UAAM,aAA0B;AAAA,MAC/B,OAAO;AAAA,MACP,MAAM;AAAA,MACN,IAAI;AAAA,MACJ;AAAA,IACD;AAEA,UAAM,KAAK,UAAU;AACrB,mBAAe,MAAM,oCAAkB,KAAK,MAAM,QAAQ,aAAa,EAAE,MAAM,CAAC;AAAA,EACjF,OAAO;AACN,QAAI,KAAK;AACT,QAAI,OAAO;AACX,QAAI,WAA0B,CAAC;AAE/B,OAAG;AACF,YAAM,aAA0B;AAAA,QAC/B,OAAO;AAAA,QACP;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAEA,iBAAW,MAAM,oCAAkB,KAAK,MAAM,QAAQ,aAAa;AAAA,QAClE,OAAO,CAAC,GAAG,OAAO,UAAU;AAAA,MAC7B,CAAC;AAED,qBAAe,aAAa,OAAO,YAAY,CAAC,CAAC;AACjD,aAAO;AACP,YAAM;AAAA,IACP,SAAS,UAAU;AAAA,EACpB;AAEA,SAAO;AACR;","names":[]}