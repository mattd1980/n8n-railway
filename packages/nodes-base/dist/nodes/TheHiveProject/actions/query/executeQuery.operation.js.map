{"version":3,"sources":["../../../../../nodes/TheHiveProject/actions/query/executeQuery.operation.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tINodeProperties,\n} from 'n8n-workflow';\nimport { NodeOperationError, jsonParse } from 'n8n-workflow';\n\nimport { updateDisplayOptions, wrapData } from '@utils/utilities';\n\nimport { theHiveApiRequest } from '../../transport';\n\nconst properties: INodeProperties[] = [\n\t{\n\t\tdisplayName: 'Query',\n\t\tname: 'queryJson',\n\t\ttype: 'json',\n\t\trequired: true,\n\t\tdefault: '=[\\n  {\\n    \"_name\": \"listOrganisation\"\\n  }\\n]',\n\t\tdescription: 'Search for objects with filtering and sorting capabilities',\n\t\thint: 'The query should be an array of operations with the required selection and optional filtering, sorting, and pagination. See <a href=\"https://docs.strangebee.com/thehive/api-docs/#operation/Query%20API\" target=\"_blank\">Query API</a> for more information.',\n\t\ttypeOptions: {\n\t\t\trows: 10,\n\t\t},\n\t},\n];\n\nconst displayOptions = {\n\tshow: {\n\t\tresource: ['query'],\n\t\toperation: ['executeQuery'],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n\nexport async function execute(this: IExecuteFunctions, i: number): Promise<INodeExecutionData[]> {\n\tlet responseData: IDataObject | IDataObject[] = [];\n\n\tconst queryJson = this.getNodeParameter('queryJson', i) as string;\n\n\tlet query: IDataObject = {};\n\tif (typeof queryJson === 'object') {\n\t\tquery = queryJson;\n\t} else {\n\t\tquery = jsonParse<IDataObject>(queryJson, {\n\t\t\terrorMessage: 'Query JSON must be a valid JSON object',\n\t\t});\n\t}\n\n\tif (query.query) {\n\t\tquery = query.query as IDataObject;\n\t}\n\n\tif (!Array.isArray(query)) {\n\t\tthrow new NodeOperationError(\n\t\t\tthis.getNode(),\n\t\t\t'The query should be an array of operations with the required selection and optional filtering, sorting, and pagination',\n\t\t);\n\t}\n\n\tconst body: IDataObject = {\n\t\tquery,\n\t};\n\n\tresponseData = await theHiveApiRequest.call(this, 'POST', '/v1/query', body);\n\n\tif (typeof responseData !== 'object') {\n\t\tresponseData = { queryResult: responseData };\n\t}\n\n\tconst executionData = this.helpers.constructExecutionMetaData(wrapData(responseData), {\n\t\titemData: { item: i },\n\t});\n\n\treturn executionData;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,0BAA8C;AAE9C,uBAA+C;AAE/C,uBAAkC;AAElC,MAAM,aAAgC;AAAA,EACrC;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,SAAS;AAAA,IACT,aAAa;AAAA,IACb,MAAM;AAAA,IACN,aAAa;AAAA,MACZ,MAAM;AAAA,IACP;AAAA,EACD;AACD;AAEA,MAAM,iBAAiB;AAAA,EACtB,MAAM;AAAA,IACL,UAAU,CAAC,OAAO;AAAA,IAClB,WAAW,CAAC,cAAc;AAAA,EAC3B;AACD;AAEO,MAAM,kBAAc,uCAAqB,gBAAgB,UAAU;AAE1E,eAAsB,QAAiC,GAA0C;AAChG,MAAI,eAA4C,CAAC;AAEjD,QAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AAEtD,MAAI,QAAqB,CAAC;AAC1B,MAAI,OAAO,cAAc,UAAU;AAClC,YAAQ;AAAA,EACT,OAAO;AACN,gBAAQ,+BAAuB,WAAW;AAAA,MACzC,cAAc;AAAA,IACf,CAAC;AAAA,EACF;AAEA,MAAI,MAAM,OAAO;AAChB,YAAQ,MAAM;AAAA,EACf;AAEA,MAAI,CAAC,MAAM,QAAQ,KAAK,GAAG;AAC1B,UAAM,IAAI;AAAA,MACT,KAAK,QAAQ;AAAA,MACb;AAAA,IACD;AAAA,EACD;AAEA,QAAM,OAAoB;AAAA,IACzB;AAAA,EACD;AAEA,iBAAe,MAAM,mCAAkB,KAAK,MAAM,QAAQ,aAAa,IAAI;AAE3E,MAAI,OAAO,iBAAiB,UAAU;AACrC,mBAAe,EAAE,aAAa,aAAa;AAAA,EAC5C;AAEA,QAAM,gBAAgB,KAAK,QAAQ,+BAA2B,2BAAS,YAAY,GAAG;AAAA,IACrF,UAAU,EAAE,MAAM,EAAE;AAAA,EACrB,CAAC;AAED,SAAO;AACR;","names":[]}