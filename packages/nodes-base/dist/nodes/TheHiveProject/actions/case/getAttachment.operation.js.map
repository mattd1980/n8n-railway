{"version":3,"sources":["../../../../../nodes/TheHiveProject/actions/case/getAttachment.operation.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tINodeProperties,\n} from 'n8n-workflow';\n\nimport { updateDisplayOptions } from '@utils/utilities';\n\nimport { caseRLC } from '../../descriptions';\nimport { theHiveApiRequest } from '../../transport';\n\nconst properties: INodeProperties[] = [\n\tcaseRLC,\n\t{\n\t\tdisplayName: 'Attachment Name or ID',\n\t\tname: 'attachmentId',\n\t\ttype: 'options',\n\t\tdefault: '',\n\t\trequired: true,\n\t\tdescription:\n\t\t\t'ID of the attachment. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\ttypeOptions: {\n\t\t\tloadOptionsMethod: 'loadCaseAttachments',\n\t\t\tloadOptionsDependsOn: ['caseId.value'],\n\t\t},\n\t},\n\t{\n\t\tdisplayName: 'Options',\n\t\tname: 'options',\n\t\ttype: 'collection',\n\t\tplaceholder: 'Add option',\n\t\tdefault: {},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdisplayName: 'File Name',\n\t\t\t\tname: 'fileName',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tdescription: 'Rename the file when downloading',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Data Property Name',\n\t\t\t\tname: 'dataPropertyName',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: 'data',\n\t\t\t\tdescription: 'Name of the binary property to which write the data of the attachment',\n\t\t\t},\n\t\t],\n\t},\n];\n\nconst displayOptions = {\n\tshow: {\n\t\tresource: ['case'],\n\t\toperation: ['getAttachment'],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n\nexport async function execute(this: IExecuteFunctions, i: number): Promise<INodeExecutionData[]> {\n\tconst caseId = this.getNodeParameter('caseId', i, '', { extractValue: true }) as string;\n\tconst options = this.getNodeParameter('options', i);\n\tconst attachmentId = this.getNodeParameter('attachmentId', i) as string;\n\n\tconst requestOptions = {\n\t\tuseStream: true,\n\t\tresolveWithFullResponse: true,\n\t\tencoding: null,\n\t\tjson: false,\n\t};\n\n\tconst response = await theHiveApiRequest.call(\n\t\tthis,\n\t\t'GET',\n\t\t`/v1/case/${caseId}/attachment/${attachmentId}/download`,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\trequestOptions,\n\t);\n\n\tconst mimeType = (response.headers as IDataObject)?.['content-type'] ?? undefined;\n\n\tlet fileName = (options.fileName as string) || 'attachment';\n\n\tif (!options.fileName && response.headers['content-disposition'] !== undefined) {\n\t\tconst contentDisposition = response.headers['content-disposition'] as string;\n\t\tconst fileNameMatch = contentDisposition.match(/filename=\"(.+)\"/);\n\t\tif (fileNameMatch !== null) {\n\t\t\tfileName = fileNameMatch[1];\n\t\t}\n\t}\n\n\tconst newItem: INodeExecutionData = {\n\t\tjson: {\n\t\t\t_id: attachmentId,\n\t\t\tcaseId,\n\t\t\tfileName,\n\t\t\tmimeType,\n\t\t},\n\t\tbinary: {},\n\t};\n\n\tnewItem.binary![(options.dataPropertyName as string) || 'data'] =\n\t\tawait this.helpers.prepareBinaryData(response.body as Buffer, fileName, mimeType as string);\n\n\tconst executionData = this.helpers.constructExecutionMetaData([newItem], {\n\t\titemData: { item: i },\n\t});\n\n\treturn executionData;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,uBAAqC;AAErC,0BAAwB;AACxB,uBAAkC;AAElC,MAAM,aAAgC;AAAA,EACrC;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS;AAAA,IACT,UAAU;AAAA,IACV,aACC;AAAA,IACD,aAAa;AAAA,MACZ,mBAAmB;AAAA,MACnB,sBAAsB,CAAC,cAAc;AAAA,IACtC;AAAA,EACD;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,SAAS,CAAC;AAAA,IACV,SAAS;AAAA,MACR;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aAAa;AAAA,MACd;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aAAa;AAAA,MACd;AAAA,IACD;AAAA,EACD;AACD;AAEA,MAAM,iBAAiB;AAAA,EACtB,MAAM;AAAA,IACL,UAAU,CAAC,MAAM;AAAA,IACjB,WAAW,CAAC,eAAe;AAAA,EAC5B;AACD;AAEO,MAAM,kBAAc,uCAAqB,gBAAgB,UAAU;AAE1E,eAAsB,QAAiC,GAA0C;AAChG,QAAM,SAAS,KAAK,iBAAiB,UAAU,GAAG,IAAI,EAAE,cAAc,KAAK,CAAC;AAC5E,QAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAClD,QAAM,eAAe,KAAK,iBAAiB,gBAAgB,CAAC;AAE5D,QAAM,iBAAiB;AAAA,IACtB,WAAW;AAAA,IACX,yBAAyB;AAAA,IACzB,UAAU;AAAA,IACV,MAAM;AAAA,EACP;AAEA,QAAM,WAAW,MAAM,mCAAkB;AAAA,IACxC;AAAA,IACA;AAAA,IACA,YAAY,MAAM,eAAe,YAAY;AAAA,IAC7C;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD;AAEA,QAAM,WAAY,SAAS,UAA0B,cAAc,KAAK;AAExE,MAAI,WAAY,QAAQ,YAAuB;AAE/C,MAAI,CAAC,QAAQ,YAAY,SAAS,QAAQ,qBAAqB,MAAM,QAAW;AAC/E,UAAM,qBAAqB,SAAS,QAAQ,qBAAqB;AACjE,UAAM,gBAAgB,mBAAmB,MAAM,iBAAiB;AAChE,QAAI,kBAAkB,MAAM;AAC3B,iBAAW,cAAc,CAAC;AAAA,IAC3B;AAAA,EACD;AAEA,QAAM,UAA8B;AAAA,IACnC,MAAM;AAAA,MACL,KAAK;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,IACA,QAAQ,CAAC;AAAA,EACV;AAEA,UAAQ,OAAS,QAAQ,oBAA+B,MAAM,IAC7D,MAAM,KAAK,QAAQ,kBAAkB,SAAS,MAAgB,UAAU,QAAkB;AAE3F,QAAM,gBAAgB,KAAK,QAAQ,2BAA2B,CAAC,OAAO,GAAG;AAAA,IACxE,UAAU,EAAE,MAAM,EAAE;AAAA,EACrB,CAAC;AAED,SAAO;AACR;","names":[]}