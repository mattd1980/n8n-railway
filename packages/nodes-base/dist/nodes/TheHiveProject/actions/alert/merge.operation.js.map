{"version":3,"sources":["../../../../../nodes/TheHiveProject/actions/alert/merge.operation.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tINodeProperties,\n} from 'n8n-workflow';\n\nimport { updateDisplayOptions, wrapData } from '@utils/utilities';\n\nimport { alertRLC, caseRLC } from '../../descriptions';\nimport { theHiveApiRequest } from '../../transport';\n\nconst properties: INodeProperties[] = [alertRLC, caseRLC];\n\nconst displayOptions = {\n\tshow: {\n\t\tresource: ['alert'],\n\t\toperation: ['merge'],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n\nexport async function execute(this: IExecuteFunctions, i: number): Promise<INodeExecutionData[]> {\n\tlet responseData: IDataObject | IDataObject[] = [];\n\n\tconst alertId = this.getNodeParameter('alertId', i, '', { extractValue: true }) as string;\n\n\tconst caseId = this.getNodeParameter('caseId', i, '', { extractValue: true }) as string;\n\n\tresponseData = await theHiveApiRequest.call(\n\t\tthis,\n\t\t'POST',\n\t\t`/alert/${alertId}/merge/${caseId}`,\n\t\t{},\n\t);\n\n\tconst executionData = this.helpers.constructExecutionMetaData(wrapData(responseData), {\n\t\titemData: { item: i },\n\t});\n\n\treturn executionData;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,uBAA+C;AAE/C,0BAAkC;AAClC,uBAAkC;AAElC,MAAM,aAAgC,CAAC,8BAAU,2BAAO;AAExD,MAAM,iBAAiB;AAAA,EACtB,MAAM;AAAA,IACL,UAAU,CAAC,OAAO;AAAA,IAClB,WAAW,CAAC,OAAO;AAAA,EACpB;AACD;AAEO,MAAM,kBAAc,uCAAqB,gBAAgB,UAAU;AAE1E,eAAsB,QAAiC,GAA0C;AAChG,MAAI,eAA4C,CAAC;AAEjD,QAAM,UAAU,KAAK,iBAAiB,WAAW,GAAG,IAAI,EAAE,cAAc,KAAK,CAAC;AAE9E,QAAM,SAAS,KAAK,iBAAiB,UAAU,GAAG,IAAI,EAAE,cAAc,KAAK,CAAC;AAE5E,iBAAe,MAAM,mCAAkB;AAAA,IACtC;AAAA,IACA;AAAA,IACA,UAAU,OAAO,UAAU,MAAM;AAAA,IACjC,CAAC;AAAA,EACF;AAEA,QAAM,gBAAgB,KAAK,QAAQ,+BAA2B,2BAAS,YAAY,GAAG;AAAA,IACrF,UAAU,EAAE,MAAM,EAAE;AAAA,EACrB,CAAC;AAED,SAAO;AACR;","names":[]}