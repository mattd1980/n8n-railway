{"version":3,"sources":["../../../../../nodes/TheHiveProject/actions/observable/create.operation.ts"],"sourcesContent":["import FormData from 'form-data';\nimport {\n\tNodeOperationError,\n\ttype IDataObject,\n\ttype IExecuteFunctions,\n\ttype INodeExecutionData,\n\ttype INodeProperties,\n} from 'n8n-workflow';\n\nimport { updateDisplayOptions, wrapData } from '@utils/utilities';\n\nimport { alertRLC, attachmentsUi, caseRLC } from '../../descriptions';\nimport { fixFieldType, prepareInputItem } from '../../helpers/utils';\nimport { theHiveApiRequest } from '../../transport';\n\nconst properties: INodeProperties[] = [\n\t{\n\t\t// eslint-disable-next-line n8n-nodes-base/node-param-display-name-miscased\n\t\tdisplayName: 'Create in',\n\t\tname: 'createIn',\n\t\ttype: 'options',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tname: 'Case',\n\t\t\t\tvalue: 'case',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Alert',\n\t\t\t\tvalue: 'alert',\n\t\t\t},\n\t\t],\n\t\tdefault: 'case',\n\t},\n\t{\n\t\t...caseRLC,\n\t\tname: 'id',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tcreateIn: ['case'],\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\t...alertRLC,\n\t\tname: 'id',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tcreateIn: ['alert'],\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\t// eslint-disable-next-line n8n-nodes-base/node-param-display-name-wrong-for-dynamic-options\n\t\tdisplayName: 'Data Type',\n\t\tname: 'dataType',\n\t\ttype: 'options',\n\t\tdescription:\n\t\t\t'Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>',\n\t\trequired: true,\n\t\tdefault: 'file',\n\t\ttypeOptions: {\n\t\t\tloadOptionsMethod: 'loadObservableTypes',\n\t\t},\n\t},\n\t{\n\t\tdisplayName: 'Data',\n\t\tname: 'data',\n\t\ttype: 'string',\n\t\tdefault: '',\n\t\trequired: true,\n\t\tdisplayOptions: {\n\t\t\thide: {\n\t\t\t\tdataType: ['file'],\n\t\t\t},\n\t\t},\n\t},\n\t{ ...attachmentsUi, required: true, displayOptions: { show: { dataType: ['file'] } } },\n\t{\n\t\tdisplayName: 'Fields',\n\t\tname: 'observableFields',\n\t\ttype: 'resourceMapper',\n\t\tdefault: {\n\t\t\tmappingMode: 'defineBelow',\n\t\t\tvalue: null,\n\t\t},\n\t\tnoDataExpression: true,\n\t\trequired: true,\n\t\ttypeOptions: {\n\t\t\tresourceMapper: {\n\t\t\t\tresourceMapperMethod: 'getObservableFields',\n\t\t\t\tmode: 'add',\n\t\t\t\tvaluesLabel: 'Fields',\n\t\t\t},\n\t\t},\n\t},\n];\n\nconst displayOptions = {\n\tshow: {\n\t\tresource: ['observable'],\n\t\toperation: ['create'],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n\nexport async function execute(\n\tthis: IExecuteFunctions,\n\ti: number,\n\titem: INodeExecutionData,\n): Promise<INodeExecutionData[]> {\n\tlet responseData: IDataObject = {};\n\tlet body: IDataObject = {};\n\n\tconst createIn = this.getNodeParameter('createIn', i) as string;\n\tconst id = this.getNodeParameter('id', i, '', { extractValue: true }) as string;\n\tconst endpoint = `/v1/${createIn}/${id}/observable`;\n\n\tconst dataMode = this.getNodeParameter('observableFields.mappingMode', i) as string;\n\n\tif (dataMode === 'autoMapInputData') {\n\t\tconst schema = this.getNodeParameter('observableFields.schema', i) as IDataObject[];\n\t\tbody = prepareInputItem(item.json, schema, i);\n\t}\n\n\tif (dataMode === 'defineBelow') {\n\t\tconst observableFields = this.getNodeParameter('observableFields.value', i, []) as IDataObject;\n\t\tbody = observableFields;\n\t}\n\n\tbody = fixFieldType(body);\n\n\tconst dataType = this.getNodeParameter('dataType', i) as string;\n\n\tbody.dataType = dataType;\n\n\tif (dataType === 'file') {\n\t\tconst inputDataFields = (\n\t\t\tthis.getNodeParameter('attachmentsUi.values', i, []) as IDataObject[]\n\t\t).map((entry) => (entry.field as string).trim());\n\n\t\tconst formData = new FormData();\n\n\t\tfor (const inputDataField of inputDataFields) {\n\t\t\tconst binaryData = this.helpers.assertBinaryData(i, inputDataField);\n\t\t\tconst dataBuffer = await this.helpers.getBinaryDataBuffer(i, inputDataField);\n\n\t\t\tformData.append('attachment', dataBuffer, {\n\t\t\t\tfilename: binaryData.fileName,\n\t\t\t\tcontentType: binaryData.mimeType,\n\t\t\t});\n\t\t}\n\n\t\tformData.append('_json', JSON.stringify(body));\n\n\t\tresponseData = await theHiveApiRequest.call(\n\t\t\tthis,\n\t\t\t'POST',\n\t\t\tendpoint,\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t\t{\n\t\t\t\tHeaders: {\n\t\t\t\t\t'Content-Type': 'multipart/form-data',\n\t\t\t\t},\n\t\t\t\tformData,\n\t\t\t},\n\t\t);\n\t} else {\n\t\tconst data = this.getNodeParameter('data', i) as string;\n\t\tbody.data = data;\n\t\tresponseData = await theHiveApiRequest.call(this, 'POST', endpoint, body);\n\t}\n\n\tif (responseData.failure) {\n\t\tconst message = (responseData.failure as IDataObject[])\n\t\t\t.map((error: IDataObject) => error.message)\n\t\t\t.join(', ');\n\t\tthrow new NodeOperationError(this.getNode(), message, { itemIndex: i });\n\t}\n\n\tconst executionData = this.helpers.constructExecutionMetaData(wrapData(responseData), {\n\t\titemData: { item: i },\n\t});\n\n\treturn executionData;\n}\n"],"mappings":"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","names":["FormData"]}