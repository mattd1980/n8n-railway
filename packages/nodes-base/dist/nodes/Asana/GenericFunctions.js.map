{"version":3,"sources":["../../../nodes/Asana/GenericFunctions.ts"],"sourcesContent":["import get from 'lodash/get';\nimport type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHookFunctions,\n\tILoadOptionsFunctions,\n\tIHttpRequestMethods,\n\tIHttpRequestOptions,\n\tINodePropertyOptions,\n} from 'n8n-workflow';\n\n/**\n * Make an API request to Asana\n *\n */\nexport async function asanaApiRequest(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tendpoint: `/${string}`,\n\tbody: object,\n\tquery?: IDataObject,\n\turi?: string | undefined,\n): Promise<any> {\n\tconst authenticationMethod = this.getNodeParameter('authentication', 0) as string;\n\n\tconst options: IHttpRequestOptions = {\n\t\theaders: {},\n\t\tmethod,\n\t\tbody: method === 'GET' || method === 'HEAD' || method === 'DELETE' ? null : { data: body },\n\t\tqs: query,\n\t\turl: uri || `https://app.asana.com/api/1.0${endpoint}`,\n\t\tjson: true,\n\t};\n\n\tif (options.body === null) {\n\t\tdelete options.body;\n\t}\n\n\tconst credentialType = authenticationMethod === 'accessToken' ? 'asanaApi' : 'asanaOAuth2Api';\n\treturn await this.helpers.requestWithAuthentication.call(this, credentialType, options);\n}\n\nexport async function asanaApiRequestAllItems(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tendpoint: `/${string}`,\n\tbody: any = {},\n\tquery: IDataObject = {},\n): Promise<any> {\n\tconst returnData: IDataObject[] = [];\n\n\tlet responseData;\n\tlet uri: string | undefined;\n\tquery.limit = 100;\n\n\tdo {\n\t\tresponseData = await asanaApiRequest.call(\n\t\t\tthis,\n\t\t\tmethod,\n\t\t\tendpoint,\n\t\t\tbody as IDataObject,\n\t\t\tquery,\n\t\t\turi,\n\t\t);\n\t\turi = get(responseData, 'next_page.uri');\n\t\tquery = {}; // query is not needed once we have next_page.uri\n\t\treturnData.push.apply(returnData, responseData.data as IDataObject[]);\n\t} while (responseData.next_page !== null);\n\n\treturn returnData;\n}\n\nexport async function getWorkspaces(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\tconst endpoint = '/workspaces';\n\tconst responseData = await asanaApiRequestAllItems.call(this, 'GET', endpoint, {});\n\n\tconst returnData: INodePropertyOptions[] = [];\n\tfor (const workspaceData of responseData) {\n\t\tif (workspaceData.resource_type !== 'workspace') {\n\t\t\t// Not sure if for some reason also ever other resources\n\t\t\t// get returned but just in case filter them out\n\t\t\tcontinue;\n\t\t}\n\n\t\treturnData.push({\n\t\t\tname: workspaceData.name,\n\t\t\tvalue: workspaceData.gid,\n\t\t});\n\t}\n\n\treturnData.sort((a, b) => {\n\t\tif (a.name < b.name) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (a.name > b.name) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t});\n\n\treturn returnData;\n}\n\nexport function getColorOptions(): INodePropertyOptions[] {\n\treturn [\n\t\t'dark-blue',\n\t\t'dark-brown',\n\t\t'dark-green',\n\t\t'dark-orange',\n\t\t'dark-pink',\n\t\t'dark-purple',\n\t\t'dark-red',\n\t\t'dark-teal',\n\t\t'dark-warm-gray',\n\t\t'light-blue',\n\t\t'light-green',\n\t\t'light-orange',\n\t\t'light-pink',\n\t\t'light-purple',\n\t\t'light-red',\n\t\t'light-teal',\n\t\t'light-warm-gray',\n\t\t'light-yellow',\n\t\t'none',\n\t].map((value) => {\n\t\treturn {\n\t\t\tname: value,\n\t\t\tvalue,\n\t\t};\n\t});\n}\n\nexport function getTaskFields() {\n\treturn [\n\t\t'*',\n\t\t'GID',\n\t\t'Resource Type',\n\t\t'name',\n\t\t'Approval Status',\n\t\t'Assignee Status',\n\t\t'Completed',\n\t\t'Completed At',\n\t\t'Completed By',\n\t\t'Created At',\n\t\t'Dependencies',\n\t\t'Dependents',\n\t\t'Due At',\n\t\t'Due On',\n\t\t'External',\n\t\t'HTML Notes',\n\t\t'Liked',\n\t\t'Likes',\n\t\t'Memberships',\n\t\t'Modified At',\n\t\t'Notes',\n\t\t'Num Likes',\n\t\t'Resource Subtype',\n\t\t'Start On',\n\t\t'Assignee',\n\t\t'Custom Fields',\n\t\t'Followers',\n\t\t'Parent',\n\t\t'Permalink URL',\n\t\t'Projects',\n\t\t'Tags',\n\t\t'Workspace',\n\t];\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAgB;AAehB,eAAsB,gBAErB,QACA,UACA,MACA,OACA,KACe;AACf,QAAM,uBAAuB,KAAK,iBAAiB,kBAAkB,CAAC;AAEtE,QAAM,UAA+B;AAAA,IACpC,SAAS,CAAC;AAAA,IACV;AAAA,IACA,MAAM,WAAW,SAAS,WAAW,UAAU,WAAW,WAAW,OAAO,EAAE,MAAM,KAAK;AAAA,IACzF,IAAI;AAAA,IACJ,KAAK,OAAO,gCAAgC,QAAQ;AAAA,IACpD,MAAM;AAAA,EACP;AAEA,MAAI,QAAQ,SAAS,MAAM;AAC1B,WAAO,QAAQ;AAAA,EAChB;AAEA,QAAM,iBAAiB,yBAAyB,gBAAgB,aAAa;AAC7E,SAAO,MAAM,KAAK,QAAQ,0BAA0B,KAAK,MAAM,gBAAgB,OAAO;AACvF;AAEA,eAAsB,wBAErB,QACA,UACA,OAAY,CAAC,GACb,QAAqB,CAAC,GACP;AACf,QAAM,aAA4B,CAAC;AAEnC,MAAI;AACJ,MAAI;AACJ,QAAM,QAAQ;AAEd,KAAG;AACF,mBAAe,MAAM,gBAAgB;AAAA,MACpC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AACA,cAAM,WAAAA,SAAI,cAAc,eAAe;AACvC,YAAQ,CAAC;AACT,eAAW,KAAK,MAAM,YAAY,aAAa,IAAqB;AAAA,EACrE,SAAS,aAAa,cAAc;AAEpC,SAAO;AACR;AAEA,eAAsB,gBAA4E;AACjG,QAAM,WAAW;AACjB,QAAM,eAAe,MAAM,wBAAwB,KAAK,MAAM,OAAO,UAAU,CAAC,CAAC;AAEjF,QAAM,aAAqC,CAAC;AAC5C,aAAW,iBAAiB,cAAc;AACzC,QAAI,cAAc,kBAAkB,aAAa;AAGhD;AAAA,IACD;AAEA,eAAW,KAAK;AAAA,MACf,MAAM,cAAc;AAAA,MACpB,OAAO,cAAc;AAAA,IACtB,CAAC;AAAA,EACF;AAEA,aAAW,KAAK,CAAC,GAAG,MAAM;AACzB,QAAI,EAAE,OAAO,EAAE,MAAM;AACpB,aAAO;AAAA,IACR;AACA,QAAI,EAAE,OAAO,EAAE,MAAM;AACpB,aAAO;AAAA,IACR;AACA,WAAO;AAAA,EACR,CAAC;AAED,SAAO;AACR;AAEO,SAAS,kBAA0C;AACzD,SAAO;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD,EAAE,IAAI,CAAC,UAAU;AAChB,WAAO;AAAA,MACN,MAAM;AAAA,MACN;AAAA,IACD;AAAA,EACD,CAAC;AACF;AAEO,SAAS,gBAAgB;AAC/B,SAAO;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD;AACD;","names":["get"]}