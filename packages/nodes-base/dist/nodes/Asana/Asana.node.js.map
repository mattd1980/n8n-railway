{"version":3,"sources":["../../../nodes/Asana/Asana.node.ts"],"sourcesContent":["import { snakeCase } from 'change-case';\nimport moment from 'moment-timezone';\nimport type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n\tJsonObject,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeApiError, NodeOperationError } from 'n8n-workflow';\n\nimport {\n\tasanaApiRequest,\n\tasanaApiRequestAllItems,\n\tgetColorOptions,\n\tgetTaskFields,\n\tgetWorkspaces,\n} from './GenericFunctions';\n\nexport class Asana implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Asana',\n\t\tname: 'asana',\n\t\ticon: 'file:asana.svg',\n\t\tgroup: ['input'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume Asana REST API',\n\t\tdefaults: {\n\t\t\tname: 'Asana',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'asanaApi',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['accessToken'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttestedBy: {\n\t\t\t\t\trequest: {\n\t\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\t\turl: '/users/me',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'asanaOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['oAuth2'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\trequestDefaults: {\n\t\t\tbaseURL: 'https://app.asana.com/api/1.0',\n\t\t\turl: '',\n\t\t},\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Authentication',\n\t\t\t\tname: 'authentication',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Access Token',\n\t\t\t\t\t\tvalue: 'accessToken',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'OAuth2',\n\t\t\t\t\t\tvalue: 'oAuth2',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'accessToken',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Project',\n\t\t\t\t\t\tvalue: 'project',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Subtask',\n\t\t\t\t\t\tvalue: 'subtask',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Task',\n\t\t\t\t\t\tvalue: 'task',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Task Comment',\n\t\t\t\t\t\tvalue: 'taskComment',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Task Project',\n\t\t\t\t\t\tvalue: 'taskProject',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Task Tag',\n\t\t\t\t\t\tvalue: 'taskTag',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'User',\n\t\t\t\t\t\tvalue: 'user',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'task',\n\t\t\t},\n\t\t\t// ----------------------------------\n\t\t\t//         subtask\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['subtask'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Create',\n\t\t\t\t\t\tvalue: 'create',\n\t\t\t\t\t\tdescription: 'Create a subtask',\n\t\t\t\t\t\taction: 'Create a subtask',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get Many',\n\t\t\t\t\t\tvalue: 'getAll',\n\t\t\t\t\t\tdescription: 'Get many subtasks',\n\t\t\t\t\t\taction: 'Get many subtasks',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'create',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         subtask:create\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Parent Task ID',\n\t\t\t\tname: 'taskId',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t\tresource: ['subtask'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The task to operate on',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Name',\n\t\t\t\tname: 'name',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t\tresource: ['subtask'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The name of the subtask to create',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Additional Fields',\n\t\t\t\tname: 'otherProperties',\n\t\t\t\ttype: 'collection',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['subtask'],\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: {},\n\t\t\t\tplaceholder: 'Add Field',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Assignee Name or ID',\n\t\t\t\t\t\tname: 'assignee',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tloadOptionsMethod: 'getUsers',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Set Assignee on the subtask. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Assignee Status',\n\t\t\t\t\t\tname: 'assignee_status',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Inbox',\n\t\t\t\t\t\t\t\tvalue: 'inbox',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Today',\n\t\t\t\t\t\t\t\tvalue: 'today',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Upcoming',\n\t\t\t\t\t\t\t\tvalue: 'upcoming',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Later',\n\t\t\t\t\t\t\t\tvalue: 'later',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: 'inbox',\n\t\t\t\t\t\tdescription: 'Set Assignee status on the subtask (requires Assignee)',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Completed',\n\t\t\t\t\t\tname: 'completed',\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\tdescription: 'Whether the subtask should be marked completed',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Due On',\n\t\t\t\t\t\tname: 'due_on',\n\t\t\t\t\t\ttype: 'dateTime',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Date on which the time is due',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Liked',\n\t\t\t\t\t\tname: 'liked',\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\tdescription: 'Whether the task is liked by the authorized user',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Notes',\n\t\t\t\t\t\tname: 'notes',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\trows: 5,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'The task notes',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Workspace Name or ID',\n\t\t\t\t\t\tname: 'workspace',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tloadOptionsMethod: 'getWorkspaces',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'The workspace to create the subtask in. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t// ----------------------------------\n\t\t\t//         subtask:getAll\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Parent Task ID',\n\t\t\t\tname: 'taskId',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t\tresource: ['subtask'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The task to operate on',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Return All',\n\t\t\t\tname: 'returnAll',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t\tresource: ['subtask'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: 'Whether to return all results or only up to a given limit',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Limit',\n\t\t\t\tname: 'limit',\n\t\t\t\ttype: 'number',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t\tresource: ['subtask'],\n\t\t\t\t\t\treturnAll: [false],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tminValue: 1,\n\t\t\t\t\tmaxValue: 500,\n\t\t\t\t},\n\t\t\t\tdefault: 100,\n\t\t\t\tdescription: 'Max number of results to return',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Options',\n\t\t\t\tname: 'options',\n\t\t\t\ttype: 'collection',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t\tresource: ['subtask'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: {},\n\t\t\t\tplaceholder: 'Add Field',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Field Names or IDs',\n\t\t\t\t\t\tname: 'opt_fields',\n\t\t\t\t\t\ttype: 'multiOptions',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tloadOptionsMethod: 'getTaskFields',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefault: ['gid', 'name', 'resource_type'],\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Defines fields to return. Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Pretty',\n\t\t\t\t\t\tname: 'opt_pretty',\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\tdescription: 'Whether to provide “pretty” output',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t// ----------------------------------\n\t\t\t//         task\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['task'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Create',\n\t\t\t\t\t\tvalue: 'create',\n\t\t\t\t\t\tdescription: 'Create a task',\n\t\t\t\t\t\taction: 'Create a task',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Delete',\n\t\t\t\t\t\tvalue: 'delete',\n\t\t\t\t\t\tdescription: 'Delete a task',\n\t\t\t\t\t\taction: 'Delete a task',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get',\n\t\t\t\t\t\tvalue: 'get',\n\t\t\t\t\t\tdescription: 'Get a task',\n\t\t\t\t\t\taction: 'Get a task',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get Many',\n\t\t\t\t\t\tvalue: 'getAll',\n\t\t\t\t\t\tdescription: 'Get many tasks',\n\t\t\t\t\t\taction: 'Get many tasks',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Move',\n\t\t\t\t\t\tvalue: 'move',\n\t\t\t\t\t\tdescription: 'Move a task',\n\t\t\t\t\t\taction: 'Move a task',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Search',\n\t\t\t\t\t\tvalue: 'search',\n\t\t\t\t\t\tdescription: 'Search for tasks',\n\t\t\t\t\t\taction: 'Search a task',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Update',\n\t\t\t\t\t\tvalue: 'update',\n\t\t\t\t\t\tdescription: 'Update a task',\n\t\t\t\t\t\taction: 'Update a task',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'create',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         task:create\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Workspace Name or ID',\n\t\t\t\tname: 'workspace',\n\t\t\t\ttype: 'options',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getWorkspaces',\n\t\t\t\t},\n\t\t\t\toptions: [],\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t\tresource: ['task'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription:\n\t\t\t\t\t'The workspace to create the task in. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Name',\n\t\t\t\tname: 'name',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t\tresource: ['task'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The name of the task to create',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         task:delete\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Task ID',\n\t\t\t\tname: 'id',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['delete'],\n\t\t\t\t\t\tresource: ['task'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The ID of the task to delete',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         task:get\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Task ID',\n\t\t\t\tname: 'id',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['get'],\n\t\t\t\t\t\tresource: ['task'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The ID of the task to get the data of',\n\t\t\t},\n\t\t\t// ----------------------------------\n\t\t\t//         task:getAll\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Return All',\n\t\t\t\tname: 'returnAll',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t\tresource: ['task'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: 'Whether to return all results or only up to a given limit',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Limit',\n\t\t\t\tname: 'limit',\n\t\t\t\ttype: 'number',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t\tresource: ['task'],\n\t\t\t\t\t\treturnAll: [false],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tminValue: 1,\n\t\t\t\t\tmaxValue: 500,\n\t\t\t\t},\n\t\t\t\tdefault: 100,\n\t\t\t\tdescription: 'Max number of results to return',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Filters',\n\t\t\t\tname: 'filters',\n\t\t\t\ttype: 'collection',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t\tresource: ['task'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: {},\n\t\t\t\tdescription: 'Properties to search for',\n\t\t\t\tplaceholder: 'Add Filter',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Assignee Name or ID',\n\t\t\t\t\t\tname: 'assignee',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tloadOptionsMethod: 'getUsers',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'The assignee to filter tasks on. Note: If you specify assignee, you must also specify the workspace to filter on. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Field Names or IDs',\n\t\t\t\t\t\tname: 'opt_fields',\n\t\t\t\t\t\ttype: 'multiOptions',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tloadOptionsMethod: 'getTaskFields',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefault: ['gid', 'name', 'resource_type'],\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Defines fields to return. Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Pretty',\n\t\t\t\t\t\tname: 'opt_pretty',\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\tdescription: 'Whether to provide “pretty” output',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Project Name or ID',\n\t\t\t\t\t\tname: 'project',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tloadOptionsMethod: 'getProjects',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'The project to filter tasks on. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Section Name or ID',\n\t\t\t\t\t\tname: 'section',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tloadOptionsMethod: 'getSections',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'The section to filter tasks on. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Workspace Name or ID',\n\t\t\t\t\t\tname: 'workspace',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tloadOptionsMethod: 'getWorkspaces',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'The workspace to filter tasks on. Note: If you specify workspace, you must also specify the assignee to filter on. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Completed Since',\n\t\t\t\t\t\tname: 'completed_since',\n\t\t\t\t\t\ttype: 'dateTime',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Only return tasks that are either incomplete or that have been completed since this time',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Modified Since',\n\t\t\t\t\t\tname: 'modified_since',\n\t\t\t\t\t\ttype: 'dateTime',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Only return tasks that have been modified since the given time',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         task:move\n\t\t\t// ----------------------------------\n\n\t\t\t{\n\t\t\t\tdisplayName: 'Task ID',\n\t\t\t\tname: 'id',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['move'],\n\t\t\t\t\t\tresource: ['task'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The ID of the task to be moved',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Project Name or ID',\n\t\t\t\tname: 'projectId',\n\t\t\t\ttype: 'options',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getProjects',\n\t\t\t\t},\n\t\t\t\toptions: [],\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['move'],\n\t\t\t\t\t\tresource: ['task'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription:\n\t\t\t\t\t'Project to show the sections of. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Section Name or ID',\n\t\t\t\tname: 'section',\n\t\t\t\ttype: 'options',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsDependsOn: ['projectId'],\n\t\t\t\t\tloadOptionsMethod: 'getSections',\n\t\t\t\t},\n\t\t\t\toptions: [],\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['move'],\n\t\t\t\t\t\tresource: ['task'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription:\n\t\t\t\t\t'The Section to move the task to. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         task:update\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Task ID',\n\t\t\t\tname: 'id',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['update'],\n\t\t\t\t\t\tresource: ['task'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The ID of the task to update the data of',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         task:search\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Workspace Name or ID',\n\t\t\t\tname: 'workspace',\n\t\t\t\ttype: 'options',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getWorkspaces',\n\t\t\t\t},\n\t\t\t\toptions: [],\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['search'],\n\t\t\t\t\t\tresource: ['task'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription:\n\t\t\t\t\t'The workspace in which the task is searched. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Filters',\n\t\t\t\tname: 'searchTaskProperties',\n\t\t\t\ttype: 'collection',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['search'],\n\t\t\t\t\t\tresource: ['task'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: {},\n\t\t\t\tdescription: 'Properties to search for',\n\t\t\t\tplaceholder: 'Add Filter',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Completed',\n\t\t\t\t\t\tname: 'completed',\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\tdescription: 'Whether the task is marked completed',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Text',\n\t\t\t\t\t\tname: 'text',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\trows: 5,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Text to search for in name or notes',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         task:create/update\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Additional Fields',\n\t\t\t\tname: 'otherProperties',\n\t\t\t\ttype: 'collection',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['task'],\n\t\t\t\t\t\toperation: ['create', 'update'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: {},\n\t\t\t\tplaceholder: 'Add Field',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Assignee Name or ID',\n\t\t\t\t\t\tname: 'assignee',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tloadOptionsMethod: 'getUsers',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Set Assignee on the task. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Assignee Status',\n\t\t\t\t\t\tname: 'assignee_status',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Inbox',\n\t\t\t\t\t\t\t\tvalue: 'inbox',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Today',\n\t\t\t\t\t\t\t\tvalue: 'today',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Upcoming',\n\t\t\t\t\t\t\t\tvalue: 'upcoming',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Later',\n\t\t\t\t\t\t\t\tvalue: 'later',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: 'inbox',\n\t\t\t\t\t\tdescription: 'Set Assignee status on the task (requires Assignee)',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Completed',\n\t\t\t\t\t\tname: 'completed',\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\tdescription: 'Whether the task should be marked completed',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Due On',\n\t\t\t\t\t\tname: 'due_on',\n\t\t\t\t\t\ttype: 'dateTime',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Date on which the time is due',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Name',\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\t\t'/operation': ['update'],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdescription: 'The new name of the task',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Liked',\n\t\t\t\t\t\tname: 'liked',\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\tdescription: 'Whether the task is liked by the authorized user',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Notes',\n\t\t\t\t\t\tname: 'notes',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\trows: 5,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'The task notes',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Project Names or IDs',\n\t\t\t\t\t\tname: 'projects',\n\t\t\t\t\t\ttype: 'multiOptions',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tloadOptionsMethod: 'getProjects',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefault: [],\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'The project to filter tasks on. Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         taskComment\n\t\t\t// ----------------------------------\n\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['taskComment'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Add',\n\t\t\t\t\t\tvalue: 'add',\n\t\t\t\t\t\tdescription: 'Add a comment to a task',\n\t\t\t\t\t\taction: 'Add a task comment',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Remove',\n\t\t\t\t\t\tvalue: 'remove',\n\t\t\t\t\t\tdescription: 'Remove a comment from a task',\n\t\t\t\t\t\taction: 'Remove a task comment',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'add',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         taskComment:add\n\t\t\t// ----------------------------------\n\n\t\t\t{\n\t\t\t\tdisplayName: 'Task ID',\n\t\t\t\tname: 'id',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['add'],\n\t\t\t\t\t\tresource: ['taskComment'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The ID of the task to add the comment to',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Is Text HTML',\n\t\t\t\tname: 'isTextHtml',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['add'],\n\t\t\t\t\t\tresource: ['taskComment'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: 'Whether body is HTML or simple text',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Text',\n\t\t\t\tname: 'text',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['add'],\n\t\t\t\t\t\tresource: ['taskComment'],\n\t\t\t\t\t\tisTextHtml: [false],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The plain text of the comment to add',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'HTML Text',\n\t\t\t\tname: 'text',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['add'],\n\t\t\t\t\t\tresource: ['taskComment'],\n\t\t\t\t\t\tisTextHtml: [true],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'Comment as HTML string. Do not use together with plain text.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Additional Fields',\n\t\t\t\tname: 'additionalFields',\n\t\t\t\ttype: 'collection',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['add'],\n\t\t\t\t\t\tresource: ['taskComment'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: {},\n\t\t\t\tdescription: 'Properties of the task comment',\n\t\t\t\tplaceholder: 'Add Field',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Pinned',\n\t\t\t\t\t\tname: 'is_pinned',\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\tdescription: 'Whether to pin the comment',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         taskComment:remove\n\t\t\t// ----------------------------------\n\n\t\t\t{\n\t\t\t\tdisplayName: 'Comment ID',\n\t\t\t\tname: 'id',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['remove'],\n\t\t\t\t\t\tresource: ['taskComment'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The ID of the comment to be removed',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         taskProject\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['taskProject'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Add',\n\t\t\t\t\t\tvalue: 'add',\n\t\t\t\t\t\tdescription: 'Add a task to a project',\n\t\t\t\t\t\taction: 'Add a task project',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Remove',\n\t\t\t\t\t\tvalue: 'remove',\n\t\t\t\t\t\tdescription: 'Remove a task from a project',\n\t\t\t\t\t\taction: 'Remove a task project',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'add',\n\t\t\t},\n\t\t\t// ----------------------------------\n\t\t\t//         taskProject:add\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Task ID',\n\t\t\t\tname: 'id',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['add'],\n\t\t\t\t\t\tresource: ['taskProject'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The ID of the task to add the project to',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Project Name or ID',\n\t\t\t\tname: 'project',\n\t\t\t\ttype: 'options',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getProjects',\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['add'],\n\t\t\t\t\t\tresource: ['taskProject'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription:\n\t\t\t\t\t'The project where the task will be added. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Additional Fields',\n\t\t\t\tname: 'additionalFields',\n\t\t\t\ttype: 'collection',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['taskProject'],\n\t\t\t\t\t\toperation: ['add'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: {},\n\t\t\t\tdescription: 'Other properties to set',\n\t\t\t\tplaceholder: 'Add Field',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Insert After',\n\t\t\t\t\t\tname: 'insert_after',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'A task in the project to insert the task after, or null to insert at the beginning of the list',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Insert Before',\n\t\t\t\t\t\tname: 'insert_before',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'A task in the project to insert the task before, or null to insert at the end of the list',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Section',\n\t\t\t\t\t\tname: 'section',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'A section in the project to insert the task into. The task will be inserted at the bottom of the section.',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         taskProject:remove\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Task ID',\n\t\t\t\tname: 'id',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['remove'],\n\t\t\t\t\t\tresource: ['taskProject'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The ID of the task to add the project to',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Project Name or ID',\n\t\t\t\tname: 'project',\n\t\t\t\ttype: 'options',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getProjects',\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['remove'],\n\t\t\t\t\t\tresource: ['taskProject'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription:\n\t\t\t\t\t'The project where the task will be removed from. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t},\n\t\t\t// ----------------------------------\n\t\t\t//         taskTag\n\t\t\t// ----------------------------------\n\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['taskTag'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Add',\n\t\t\t\t\t\tvalue: 'add',\n\t\t\t\t\t\tdescription: 'Add a tag to a task',\n\t\t\t\t\t\taction: 'Add a task tag',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Remove',\n\t\t\t\t\t\tvalue: 'remove',\n\t\t\t\t\t\tdescription: 'Remove a tag from a task',\n\t\t\t\t\t\taction: 'Remove a task tag',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'add',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         taskTag:add\n\t\t\t// ----------------------------------\n\n\t\t\t{\n\t\t\t\tdisplayName: 'Task ID',\n\t\t\t\tname: 'id',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['add'],\n\t\t\t\t\t\tresource: ['taskTag'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The ID of the task to add the tag to',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Tags Name or ID',\n\t\t\t\tname: 'tag',\n\t\t\t\ttype: 'options',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsDependsOn: ['id'],\n\t\t\t\t\tloadOptionsMethod: 'getTags',\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['add'],\n\t\t\t\t\t\tresource: ['taskTag'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription:\n\t\t\t\t\t'The tag that should be added. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         taskTag:remove\n\t\t\t// ----------------------------------\n\n\t\t\t{\n\t\t\t\tdisplayName: 'Task ID',\n\t\t\t\tname: 'id',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['remove'],\n\t\t\t\t\t\tresource: ['taskTag'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The ID of the task to add the tag to',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Tags Name or ID',\n\t\t\t\tname: 'tag',\n\t\t\t\ttype: 'options',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsDependsOn: ['id'],\n\t\t\t\t\tloadOptionsMethod: 'getTags',\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['remove'],\n\t\t\t\t\t\tresource: ['taskTag'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription:\n\t\t\t\t\t'The tag that should be added. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         user\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['user'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get',\n\t\t\t\t\t\tvalue: 'get',\n\t\t\t\t\t\tdescription: 'Get a user',\n\t\t\t\t\t\taction: 'Get a user',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get Many',\n\t\t\t\t\t\tvalue: 'getAll',\n\t\t\t\t\t\tdescription: 'Get many users',\n\t\t\t\t\t\taction: 'Get many users',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'get',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         user:get\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'User ID',\n\t\t\t\tname: 'userId',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['get'],\n\t\t\t\t\t\tresource: ['user'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription:\n\t\t\t\t\t'An identifier for the user to get data of. Can be one of an email address,the globally unique identifier for the user, or the keyword me to indicate the current user making the request.',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         user:getAll\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Workspace Name or ID',\n\t\t\t\tname: 'workspace',\n\t\t\t\ttype: 'options',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getWorkspaces',\n\t\t\t\t},\n\t\t\t\toptions: [],\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t\tresource: ['user'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription:\n\t\t\t\t\t'The workspace in which to get users. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         Project\n\t\t\t// ----------------------------------\n\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['project'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Create',\n\t\t\t\t\t\tvalue: 'create',\n\t\t\t\t\t\tdescription: 'Create a new project',\n\t\t\t\t\t\taction: 'Create a project',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Delete',\n\t\t\t\t\t\tvalue: 'delete',\n\t\t\t\t\t\tdescription: 'Delete a project',\n\t\t\t\t\t\taction: 'Delete a project',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get',\n\t\t\t\t\t\tvalue: 'get',\n\t\t\t\t\t\tdescription: 'Get a project',\n\t\t\t\t\t\taction: 'Get a project',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get Many',\n\t\t\t\t\t\tvalue: 'getAll',\n\t\t\t\t\t\tdescription: 'Get many projects',\n\t\t\t\t\t\taction: 'Get many projects',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Update',\n\t\t\t\t\t\tvalue: 'update',\n\t\t\t\t\t\tdescription: 'Update a project',\n\t\t\t\t\t\taction: 'Update a project',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'get',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         project:create\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Name',\n\t\t\t\tname: 'name',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t\tresource: ['project'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The name of the project to create',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Workspace Name or ID',\n\t\t\t\tname: 'workspace',\n\t\t\t\ttype: 'options',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getWorkspaces',\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t\tresource: ['project'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription:\n\t\t\t\t\t'The workspace to create the project in. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Team Name or ID',\n\t\t\t\tname: 'team',\n\t\t\t\ttype: 'options',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsDependsOn: ['workspace'],\n\t\t\t\t\tloadOptionsMethod: 'getTeams',\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t\tresource: ['project'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\tdescription:\n\t\t\t\t\t'The team this project will be assigned to. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Additional Fields',\n\t\t\t\tname: 'additionalFields',\n\t\t\t\ttype: 'collection',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['project'],\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: {},\n\t\t\t\tdescription: 'Other properties to set',\n\t\t\t\tplaceholder: 'Add Property',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Color',\n\t\t\t\t\t\tname: 'color',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: getColorOptions(),\n\t\t\t\t\t\tdefault: 'none',\n\t\t\t\t\t\tdescription: 'Color of the project',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Due On',\n\t\t\t\t\t\tname: 'due_on',\n\t\t\t\t\t\ttype: 'dateTime',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'The day on which this project is due. This takes a date with format YYYY-MM-DD.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Notes',\n\t\t\t\t\t\tname: 'notes',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Basic description or notes for the project',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Privacy Setting',\n\t\t\t\t\t\tname: 'privacy_setting',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Private',\n\t\t\t\t\t\t\t\tvalue: 'private',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Private to Team',\n\t\t\t\t\t\t\t\tvalue: 'private_to_team',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Public to Workspace',\n\t\t\t\t\t\t\t\tvalue: 'public_to_workspace',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: 'private',\n\t\t\t\t\t\tdescription: 'The privacy setting of the project',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t// ----------------------------------\n\t\t\t//         project:delete\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Project ID',\n\t\t\t\tname: 'id',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['delete'],\n\t\t\t\t\t\tresource: ['project'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t// ----------------------------------\n\t\t\t//         project:get\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Project ID',\n\t\t\t\tname: 'id',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['get'],\n\t\t\t\t\t\tresource: ['project'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         project:getAll\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Workspace Name or ID',\n\t\t\t\tname: 'workspace',\n\t\t\t\ttype: 'options',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getWorkspaces',\n\t\t\t\t},\n\t\t\t\toptions: [],\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t\tresource: ['project'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription:\n\t\t\t\t\t'The workspace in which to get users. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Return All',\n\t\t\t\tname: 'returnAll',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t\tresource: ['project'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: 'Whether to return all results or only up to a given limit',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Limit',\n\t\t\t\tname: 'limit',\n\t\t\t\ttype: 'number',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t\tresource: ['project'],\n\t\t\t\t\t\treturnAll: [false],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tminValue: 1,\n\t\t\t\t\tmaxValue: 500,\n\t\t\t\t},\n\t\t\t\tdefault: 100,\n\t\t\t\tdescription: 'Max number of results to return',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Additional Fields',\n\t\t\t\tname: 'additionalFields',\n\t\t\t\ttype: 'collection',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['project'],\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: {},\n\t\t\t\tdescription: 'Other properties to set',\n\t\t\t\tplaceholder: 'Add Property',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Archived',\n\t\t\t\t\t\tname: 'archived',\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Whether to only return projects whose archived field takes on the value of this parameter',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Teams Name or ID',\n\t\t\t\t\t\tname: 'team',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tloadOptionsDependsOn: ['workspace'],\n\t\t\t\t\t\t\tloadOptionsMethod: 'getTeams',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'The new name of the task. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t// ----------------------------------\n\t\t\t//         project:update\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Workspace Name or ID',\n\t\t\t\tname: 'workspace',\n\t\t\t\ttype: 'options',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getWorkspaces',\n\t\t\t\t},\n\t\t\t\toptions: [],\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['update'],\n\t\t\t\t\t\tresource: ['project'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription:\n\t\t\t\t\t'The workspace in which to get users. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Project ID',\n\t\t\t\tname: 'id',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['update'],\n\t\t\t\t\t\tresource: ['project'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The ID of the project to update the data of',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Update Fields',\n\t\t\t\tname: 'updateFields',\n\t\t\t\ttype: 'collection',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['project'],\n\t\t\t\t\t\toperation: ['update'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: {},\n\t\t\t\tdescription: 'Other properties to set',\n\t\t\t\tplaceholder: 'Add Property',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Color',\n\t\t\t\t\t\tname: 'color',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: getColorOptions(),\n\t\t\t\t\t\tdefault: 'none',\n\t\t\t\t\t\tdescription: 'Color of the project',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Due On',\n\t\t\t\t\t\tname: 'due_on',\n\t\t\t\t\t\ttype: 'dateTime',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'The day on which this project is due. This takes a date with format YYYY-MM-DD.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Name',\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'The name of the project',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Notes',\n\t\t\t\t\t\tname: 'notes',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Basic description or notes for the project',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Owner',\n\t\t\t\t\t\tname: 'owner',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'The new assignee/cardinal for this project',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Privacy Setting',\n\t\t\t\t\t\tname: 'privacy_setting',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Private',\n\t\t\t\t\t\t\t\tvalue: 'private',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Private to Team',\n\t\t\t\t\t\t\t\tvalue: 'private_to_team',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Public to Workspace',\n\t\t\t\t\t\t\t\tvalue: 'public_to_workspace',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: 'private',\n\t\t\t\t\t\tdescription: 'The privacy setting of the project',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Team Name or ID',\n\t\t\t\t\t\tname: 'team',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tloadOptionsDependsOn: ['workspace'],\n\t\t\t\t\t\t\tloadOptionsMethod: 'getTeams',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'The team this project will be assigned to. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get all the available workspaces to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tgetWorkspaces,\n\n\t\t\t// Get all the available projects to display them to user so that they can be\n\t\t\t// selected easily\n\t\t\tasync getProjects(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst responseData = await asanaApiRequest.call(this, 'GET', '/projects', {});\n\n\t\t\t\tif (responseData.data === undefined) {\n\t\t\t\t\tthrow new NodeApiError(this.getNode(), responseData as JsonObject, {\n\t\t\t\t\t\tmessage: 'No data got returned',\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tfor (const projectData of responseData.data) {\n\t\t\t\t\tif (projectData.resource_type !== 'project') {\n\t\t\t\t\t\t// Not sure if for some reason also ever other resources\n\t\t\t\t\t\t// get returned but just in case filter them out\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tconst projectName = projectData.name;\n\t\t\t\t\tconst projectId = projectData.gid;\n\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: projectName,\n\t\t\t\t\t\tvalue: projectId,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturnData.sort((a, b) => {\n\t\t\t\t\tif (a.name < b.name) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t\tif (a.name > b.name) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t});\n\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the available sections in a project to display them to user so that they\n\t\t\t// can be selected easily\n\t\t\tasync getSections(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst projectId = this.getNodeParameter('projectId') as string;\n\t\t\t\tconst responseData = await asanaApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t`/projects/${projectId}/sections`,\n\t\t\t\t\t{},\n\t\t\t\t);\n\n\t\t\t\tif (responseData.data === undefined) {\n\t\t\t\t\tthrow new NodeApiError(this.getNode(), responseData as JsonObject, {\n\t\t\t\t\t\tmessage: 'No data got returned',\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tfor (const sectionData of responseData.data) {\n\t\t\t\t\tif (sectionData.resource_type !== 'section') {\n\t\t\t\t\t\t// Not sure if for some reason also ever other resources\n\t\t\t\t\t\t// get returned but just in case filter them out\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: sectionData.name,\n\t\t\t\t\t\tvalue: sectionData.gid,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturnData.sort((a, b) => {\n\t\t\t\t\tif (a.name < b.name) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t\tif (a.name > b.name) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t});\n\n\t\t\t\treturn returnData;\n\t\t\t},\n\n\t\t\t// Get all the available teams to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getTeams(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst workspaceId = this.getCurrentNodeParameter('workspace');\n\n\t\t\t\tconst workspace = await asanaApiRequest.call(this, 'GET', `/workspaces/${workspaceId}`, {});\n\n\t\t\t\t// if the workspace selected it's not an organization then error as they endpoint\n\t\t\t\t// to retrieve the teams from an organization just work with workspaces that are an organization\n\n\t\t\t\tif (workspace.is_organization === false) {\n\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t'To filter by team, the workspace selected has to be an organization',\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst responseData = await asanaApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t`/organizations/${workspaceId}/teams`,\n\t\t\t\t\t{},\n\t\t\t\t);\n\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tfor (const teamData of responseData) {\n\t\t\t\t\tif (teamData.resource_type !== 'team') {\n\t\t\t\t\t\t// Not sure if for some reason also ever other resources\n\t\t\t\t\t\t// get returned but just in case filter them out\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: teamData.name,\n\t\t\t\t\t\tvalue: teamData.gid,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturnData.sort((a, b) => {\n\t\t\t\t\tif (a.name < b.name) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t\tif (a.name > b.name) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t});\n\n\t\t\t\treturn returnData;\n\t\t\t},\n\n\t\t\t// Get all tags to display them to user so that they can be selected easily\n\t\t\t// See: https://developers.asana.com/docs/get-multiple-tags\n\t\t\tasync getTags(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst taskId = this.getNodeParameter('id') as string;\n\t\t\t\tlet taskData;\n\t\t\t\ttry {\n\t\t\t\t\ttaskData = await asanaApiRequest.call(this, 'GET', `/tasks/${taskId}`, {});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject, {\n\t\t\t\t\t\tmessage: `Could not find task with id \"${taskId}\" so tags could not be loaded.`,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tconst workspace = taskData.data.workspace.gid;\n\t\t\t\tconst responseData = await asanaApiRequest.call(this, 'GET', '/tags', {}, { workspace });\n\n\t\t\t\tif (responseData.data === undefined) {\n\t\t\t\t\tthrow new NodeApiError(this.getNode(), responseData as JsonObject, {\n\t\t\t\t\t\tmessage: 'No data got returned',\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tfor (const tagData of responseData.data) {\n\t\t\t\t\tif (tagData.resource_type !== 'tag') {\n\t\t\t\t\t\t// Not sure if for some reason also ever other resources\n\t\t\t\t\t\t// get returned but just in case filter them out\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: tagData.name,\n\t\t\t\t\t\tvalue: tagData.gid,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturnData.sort((a, b) => {\n\t\t\t\t\tif (a.name < b.name) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t\tif (a.name > b.name) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t});\n\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all users to display them to user so that they can be selected easily\n\t\t\t// See: https://developers.asana.com/docs/get-multiple-users\n\t\t\tasync getUsers(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst responseData = await asanaApiRequest.call(this, 'GET', '/users', {});\n\n\t\t\t\tif (responseData.data === undefined) {\n\t\t\t\t\tthrow new NodeApiError(this.getNode(), responseData as JsonObject, {\n\t\t\t\t\t\tmessage: 'No data got returned',\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tfor (const userData of responseData.data) {\n\t\t\t\t\tif (userData.resource_type !== 'user') {\n\t\t\t\t\t\t// Not sure if for some reason also ever other resources\n\t\t\t\t\t\t// get returned but just in case filter them out\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: userData.name,\n\t\t\t\t\t\tvalue: userData.gid,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\tasync getTaskFields(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tfor (const field of getTaskFields()) {\n\t\t\t\t\tconst value = snakeCase(field);\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: field,\n\t\t\t\t\t\tvalue: value === '' ? '*' : value,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: IDataObject[] = [];\n\t\tconst timezone = this.getTimezone();\n\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\tlet body: IDataObject;\n\t\tlet qs: IDataObject;\n\t\tlet responseData;\n\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\ttry {\n\t\t\t\tbody = {};\n\t\t\t\tqs = {};\n\n\t\t\t\tif (resource === 'subtask') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         subtask:create\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst taskId = this.getNodeParameter('taskId', i) as string;\n\n\t\t\t\t\t\tbody.name = this.getNodeParameter('name', i) as string;\n\n\t\t\t\t\t\tconst otherProperties = this.getNodeParameter('otherProperties', i) as IDataObject;\n\t\t\t\t\t\tObject.assign(body, otherProperties);\n\n\t\t\t\t\t\tresponseData = await asanaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/tasks/${taskId}/subtasks`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//        subtask:getAll\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\tconst taskId = this.getNodeParameter('taskId', i) as string;\n\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\n\t\t\t\t\t\tObject.assign(qs, options);\n\n\t\t\t\t\t\tif (qs.opt_fields) {\n\t\t\t\t\t\t\tconst fields = qs.opt_fields as string[];\n\t\t\t\t\t\t\tif (fields.includes('*')) {\n\t\t\t\t\t\t\t\tqs.opt_fields = getTaskFields()\n\t\t\t\t\t\t\t\t\t.map((e) => snakeCase(e))\n\t\t\t\t\t\t\t\t\t.join(',');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tqs.opt_fields = (qs.opt_fields as string[]).join(',');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await asanaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/tasks/${taskId}/subtasks`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData = responseData.data;\n\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = responseData.splice(0, limit);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'task') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         task:create\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tbody.name = this.getNodeParameter('name', i) as string;\n\t\t\t\t\t\t// body.notes = this.getNodeParameter('taskNotes', 0) as string;\n\t\t\t\t\t\tbody.workspace = this.getNodeParameter('workspace', i) as string;\n\n\t\t\t\t\t\tconst otherProperties = this.getNodeParameter('otherProperties', i) as IDataObject;\n\t\t\t\t\t\tObject.assign(body, otherProperties);\n\n\t\t\t\t\t\tresponseData = await asanaApiRequest.call(this, 'POST', '/tasks', body, qs);\n\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         task:delete\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tresponseData = await asanaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/tasks/${this.getNodeParameter('id', i) as string}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t} else if (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         task:get\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tresponseData = await asanaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/tasks/${this.getNodeParameter('id', i) as string}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//        task:getAll\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\n\t\t\t\t\t\tObject.assign(qs, filters);\n\n\t\t\t\t\t\tif (qs.opt_fields) {\n\t\t\t\t\t\t\tconst fields = qs.opt_fields as string[];\n\t\t\t\t\t\t\tif (fields.includes('*')) {\n\t\t\t\t\t\t\t\tqs.opt_fields = getTaskFields()\n\t\t\t\t\t\t\t\t\t.map((e) => snakeCase(e))\n\t\t\t\t\t\t\t\t\t.join(',');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tqs.opt_fields = (qs.opt_fields as string[]).join(',');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (qs.modified_since) {\n\t\t\t\t\t\t\tqs.modified_since = moment.tz(qs.modified_since as string, timezone).format();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (qs.completed_since) {\n\t\t\t\t\t\t\tqs.completed_since = moment.tz(qs.completed_since as string, timezone).format();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await asanaApiRequestAllItems.call(this, 'GET', '/tasks', body, qs);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\n\t\t\t\t\t\t\tresponseData = await asanaApiRequest.call(this, 'GET', '/tasks', body, qs);\n\n\t\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (operation === 'move') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         task:move\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst sectionId = this.getNodeParameter('section', i) as string;\n\n\t\t\t\t\t\tbody.task = this.getNodeParameter('id', i) as string;\n\n\t\t\t\t\t\tObject.assign(body);\n\n\t\t\t\t\t\tresponseData = await asanaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/sections/${sectionId}/addTask`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t} else if (operation === 'update') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         task:update\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst otherProperties = this.getNodeParameter('otherProperties', i) as IDataObject;\n\t\t\t\t\t\tObject.assign(body, otherProperties);\n\n\t\t\t\t\t\tresponseData = await asanaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t\t`/tasks/${this.getNodeParameter('id', i) as string}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t} else if (operation === 'search') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         tasks:search\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst workspaceId = this.getNodeParameter('workspace', i) as string;\n\n\t\t\t\t\t\tconst searchTaskProperties = this.getNodeParameter(\n\t\t\t\t\t\t\t'searchTaskProperties',\n\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t) as IDataObject;\n\t\t\t\t\t\tObject.assign(qs, searchTaskProperties);\n\n\t\t\t\t\t\tresponseData = await asanaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/workspaces/${workspaceId}/tasks/search`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'taskComment') {\n\t\t\t\t\tif (operation === 'add') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         taskComment:add\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst taskId = this.getNodeParameter('id', i) as string;\n\n\t\t\t\t\t\tconst isTextHtml = this.getNodeParameter('isTextHtml', i) as boolean;\n\n\t\t\t\t\t\tif (!isTextHtml) {\n\t\t\t\t\t\t\tbody.text = this.getNodeParameter('text', i) as string;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbody.html_text = this.getNodeParameter('text', i) as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tObject.assign(body, additionalFields);\n\n\t\t\t\t\t\tresponseData = await asanaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/tasks/${taskId}/stories`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'remove') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         taskComment:remove\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst commentId = this.getNodeParameter('id', i) as string;\n\n\t\t\t\t\t\tresponseData = await asanaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/stories/${commentId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'taskTag') {\n\t\t\t\t\tif (operation === 'add') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         taskTag:add\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst taskId = this.getNodeParameter('id', i) as string;\n\n\t\t\t\t\t\tbody.tag = this.getNodeParameter('tag', i) as string;\n\n\t\t\t\t\t\tresponseData = await asanaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/tasks/${taskId}/addTag`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'remove') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         taskTag:remove\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst taskId = this.getNodeParameter('id', i) as string;\n\n\t\t\t\t\t\tbody.tag = this.getNodeParameter('tag', i) as string;\n\n\t\t\t\t\t\tresponseData = await asanaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/tasks/${taskId}/removeTag`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'taskProject') {\n\t\t\t\t\tif (operation === 'add') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         taskProject:add\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst taskId = this.getNodeParameter('id', i) as string;\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tbody.project = this.getNodeParameter('project', i) as string;\n\n\t\t\t\t\t\tObject.assign(body, additionalFields);\n\n\t\t\t\t\t\tresponseData = await asanaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/tasks/${taskId}/addProject`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'remove') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         taskProject:remove\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst taskId = this.getNodeParameter('id', i) as string;\n\n\t\t\t\t\t\tbody.project = this.getNodeParameter('project', i) as string;\n\n\t\t\t\t\t\tresponseData = await asanaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/tasks/${taskId}/removeProject`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'user') {\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         get\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst userId = this.getNodeParameter('userId', i) as string;\n\n\t\t\t\t\t\tresponseData = await asanaApiRequest.call(this, 'GET', `/users/${userId}`, body, qs);\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         getAll\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst workspaceId = this.getNodeParameter('workspace', i) as string;\n\n\t\t\t\t\t\tresponseData = await asanaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/workspaces/${workspaceId}/users`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'project') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         project:create\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst teamId = this.getNodeParameter('team', i);\n\n\t\t\t\t\t\t// required parameters\n\t\t\t\t\t\tbody.name = this.getNodeParameter('name', i);\n\t\t\t\t\t\tbody.workspace = this.getNodeParameter('workspace', i);\n\t\t\t\t\t\t// optional parameters\n\t\t\t\t\t\tif (additionalFields.color) {\n\t\t\t\t\t\t\tqs.color = additionalFields.color;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.due_on) {\n\t\t\t\t\t\t\tqs.due_on = additionalFields.due_on;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.notes) {\n\t\t\t\t\t\t\tqs.notes = additionalFields.notes;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await asanaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/teams/${teamId}/projects`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         project:delete\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\tconst projectId = this.getNodeParameter('id', i) as string;\n\n\t\t\t\t\t\tawait asanaApiRequest.call(this, 'DELETE', `/projects/${projectId}`, body, qs);\n\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         project:get\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\tconst projectId = this.getNodeParameter('id', i) as string;\n\n\t\t\t\t\t\tresponseData = await asanaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/projects/${projectId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//        project:getAll\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\tconst workspaceId = this.getNodeParameter('workspace', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\n\t\t\t\t\t\tif (additionalFields.team) {\n\t\t\t\t\t\t\tqs.team = additionalFields.team;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.workspace = workspaceId;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.archived) {\n\t\t\t\t\t\t\tqs.archived = additionalFields.archived as boolean;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await asanaApiRequestAllItems.call(this, 'GET', '/projects', body, qs);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\n\t\t\t\t\t\t\tresponseData = await asanaApiRequest.call(this, 'GET', '/projects', body, qs);\n\n\t\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//        project:update\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\tconst projectId = this.getNodeParameter('id', i) as string;\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\n\t\t\t\t\t\t// optional parameters\n\t\t\t\t\t\tif (updateFields.color) {\n\t\t\t\t\t\t\tqs.color = updateFields.color;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.due_on) {\n\t\t\t\t\t\t\tqs.due_on = updateFields.due_on;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.name) {\n\t\t\t\t\t\t\tbody.name = updateFields.name;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.notes) {\n\t\t\t\t\t\t\tqs.notes = updateFields.notes;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.owner) {\n\t\t\t\t\t\t\tbody.owner = updateFields.owner;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.team) {\n\t\t\t\t\t\t\tbody.team = updateFields.team;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await asanaApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t\t`/projects/${projectId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturnData.push(\n\t\t\t\t\t...this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\titemData: { item: i },\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\treturnData.push({ error: error.message });\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn [returnData as INodeExecutionData[]];\n\t}\n}\n"],"mappings":"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","names":["moment"]}