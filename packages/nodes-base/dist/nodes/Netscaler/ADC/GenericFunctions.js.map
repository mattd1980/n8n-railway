{"version":3,"sources":["../../../../nodes/Netscaler/ADC/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tILoadOptionsFunctions,\n\tIDataObject,\n\tIHookFunctions,\n\tIWebhookFunctions,\n\tJsonObject,\n\tIHttpRequestMethods,\n\tIRequestOptions,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\nexport async function netscalerADCApiRequest(\n\tthis: IExecuteFunctions | IWebhookFunctions | IHookFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tresource: string,\n\tbody: IDataObject = {},\n\tqs: IDataObject = {},\n\turi?: string,\n\toption: IDataObject = {},\n): Promise<any> {\n\tconst { url } = await this.getCredentials<{ url: string }>('citrixAdcApi');\n\n\tlet options: IRequestOptions = {\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tmethod,\n\t\tbody,\n\t\tqs,\n\t\turi: uri || `${url.replace(new RegExp('/$'), '')}/nitro/v1${resource}`,\n\t\tjson: true,\n\t};\n\n\toptions = Object.assign({}, options, option);\n\n\ttry {\n\t\treturn await this.helpers.requestWithAuthentication.call(this, 'citrixAdcApi', options);\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA,0BAA6B;AAE7B,eAAsB,uBAErB,QACA,UACA,OAAoB,CAAC,GACrB,KAAkB,CAAC,GACnB,KACA,SAAsB,CAAC,GACR;AACf,QAAM,EAAE,IAAI,IAAI,MAAM,KAAK,eAAgC,cAAc;AAEzE,MAAI,UAA2B;AAAA,IAC9B,SAAS;AAAA,MACR,gBAAgB;AAAA,IACjB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,KAAK,OAAO,GAAG,IAAI,QAAQ,IAAI,OAAO,IAAI,GAAG,EAAE,CAAC,YAAY,QAAQ;AAAA,IACpE,MAAM;AAAA,EACP;AAEA,YAAU,OAAO,OAAO,CAAC,GAAG,SAAS,MAAM;AAE3C,MAAI;AACH,WAAO,MAAM,KAAK,QAAQ,0BAA0B,KAAK,MAAM,gBAAgB,OAAO;AAAA,EACvF,SAAS,OAAO;AACf,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,KAAmB;AAAA,EAC3D;AACD;","names":[]}