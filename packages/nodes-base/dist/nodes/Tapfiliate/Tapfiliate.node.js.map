{"version":3,"sources":["../../../nodes/Tapfiliate/Tapfiliate.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport { affiliateFields, affiliateOperations } from './AffiliateDescription';\nimport {\n\taffiliateMetadataFields,\n\taffiliateMetadataOperations,\n} from './AffiliateMetadataDescription';\nimport { tapfiliateApiRequest, tapfiliateApiRequestAllItems } from './GenericFunctions';\nimport { programAffiliateFields, programAffiliateOperations } from './ProgramAffiliateDescription';\n\nexport class Tapfiliate implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Tapfiliate',\n\t\tname: 'tapfiliate',\n\t\ticon: 'file:tapfiliate.svg',\n\t\tgroup: ['transform'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \":\" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume Tapfiliate API',\n\t\tdefaults: {\n\t\t\tname: 'Tapfiliate',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'tapfiliateApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Affiliate',\n\t\t\t\t\t\tvalue: 'affiliate',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Affiliate Metadata',\n\t\t\t\t\t\tvalue: 'affiliateMetadata',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Program Affiliate',\n\t\t\t\t\t\tvalue: 'programAffiliate',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'affiliate',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t\t...affiliateOperations,\n\t\t\t...affiliateFields,\n\t\t\t...affiliateMetadataOperations,\n\t\t\t...affiliateMetadataFields,\n\t\t\t...programAffiliateOperations,\n\t\t\t...programAffiliateFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get custom fields to display to user so that they can select them easily\n\t\t\tasync getPrograms(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst programs = await tapfiliateApiRequestAllItems.call(this, 'GET', '/programs/');\n\t\t\t\tfor (const program of programs) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: program.title as string,\n\t\t\t\t\t\tvalue: program.id as string,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst length = items.length;\n\t\tconst qs: IDataObject = {};\n\t\tlet responseData;\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'affiliate') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t//https://tapfiliate.com/docs/rest/#affiliates-affiliates-collection-post\n\t\t\t\t\t\tconst firstname = this.getNodeParameter('firstname', i) as string;\n\t\t\t\t\t\tconst lastname = this.getNodeParameter('lastname', i) as string;\n\t\t\t\t\t\tconst email = this.getNodeParameter('email', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tfirstname,\n\t\t\t\t\t\t\tlastname,\n\t\t\t\t\t\t\temail,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tObject.assign(body, additionalFields);\n\n\t\t\t\t\t\tif (body.addressUi) {\n\t\t\t\t\t\t\tbody.address = (body.addressUi as IDataObject).addressValues as IDataObject;\n\t\t\t\t\t\t\tdelete body.addressUi;\n\t\t\t\t\t\t\tif ((body.address as IDataObject).country) {\n\t\t\t\t\t\t\t\t(body.address as IDataObject).country = {\n\t\t\t\t\t\t\t\t\tcode: (body.address as IDataObject).country,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (body.companyName) {\n\t\t\t\t\t\t\tbody.company = {\n\t\t\t\t\t\t\t\tname: body.companyName,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tdelete body.companyName;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await tapfiliateApiRequest.call(this, 'POST', '/affiliates/', body);\n\t\t\t\t\t\treturnData.push(responseData as INodeExecutionData);\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\t//https://tapfiliate.com/docs/rest/#affiliates-affiliate-delete\n\t\t\t\t\t\tconst affiliateId = this.getNodeParameter('affiliateId', i) as string;\n\t\t\t\t\t\tresponseData = await tapfiliateApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/affiliates/${affiliateId}/`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\t//https://tapfiliate.com/docs/rest/#affiliates-affiliate-get\n\t\t\t\t\t\tconst affiliateId = this.getNodeParameter('affiliateId', i) as string;\n\t\t\t\t\t\tresponseData = await tapfiliateApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/affiliates/${affiliateId}/`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\t//https://tapfiliate.com/docs/rest/#affiliates-affiliates-collection-get\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\t\t\t\t\t\tObject.assign(qs, filters);\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await tapfiliateApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/affiliates/',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await tapfiliateApiRequest.call(this, 'GET', '/affiliates/', {}, qs);\n\t\t\t\t\t\t\tresponseData = responseData.splice(0, limit);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'affiliateMetadata') {\n\t\t\t\t\tif (operation === 'add') {\n\t\t\t\t\t\t//https://tapfiliate.com/docs/rest/#affiliates-meta-data-key-put\n\t\t\t\t\t\tconst affiliateId = this.getNodeParameter('affiliateId', i) as string;\n\t\t\t\t\t\tconst metadata =\n\t\t\t\t\t\t\t((this.getNodeParameter('metadataUi', i) as IDataObject)\n\t\t\t\t\t\t\t\t?.metadataValues as IDataObject[]) || [];\n\t\t\t\t\t\tif (metadata.length === 0) {\n\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'Metadata cannot be empty.', {\n\t\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (const { key, value } of metadata) {\n\t\t\t\t\t\t\tawait tapfiliateApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t\t\t`/affiliates/${affiliateId}/meta-data/${key}/`,\n\t\t\t\t\t\t\t\t{ value },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'remove') {\n\t\t\t\t\t\t//https://tapfiliate.com/docs/rest/#affiliates-meta-data-key-delete\n\t\t\t\t\t\tconst affiliateId = this.getNodeParameter('affiliateId', i) as string;\n\t\t\t\t\t\tconst key = this.getNodeParameter('key', i) as string;\n\t\t\t\t\t\tresponseData = await tapfiliateApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/affiliates/${affiliateId}/meta-data/${key}/`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\t//https://tapfiliate.com/docs/rest/#affiliates-notes-collection-get\n\t\t\t\t\t\tconst affiliateId = this.getNodeParameter('affiliateId', i) as string;\n\t\t\t\t\t\tconst key = this.getNodeParameter('key', i) as string;\n\t\t\t\t\t\tconst value = this.getNodeParameter('value', i) as string;\n\t\t\t\t\t\tresponseData = await tapfiliateApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t\t`/affiliates/${affiliateId}/meta-data/`,\n\t\t\t\t\t\t\t{ [key]: value },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'programAffiliate') {\n\t\t\t\t\tif (operation === 'add') {\n\t\t\t\t\t\t//https://tapfiliate.com/docs/rest/#programs-program-affiliates-collection-post\n\t\t\t\t\t\tconst programId = this.getNodeParameter('programId', i) as string;\n\t\t\t\t\t\tconst affiliateId = this.getNodeParameter('affiliateId', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\taffiliate: {\n\t\t\t\t\t\t\t\tid: affiliateId,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t\tObject.assign(body, additionalFields);\n\n\t\t\t\t\t\tresponseData = await tapfiliateApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/programs/${programId}/affiliates/`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'approve') {\n\t\t\t\t\t\t//https://tapfiliate.com/docs/rest/#programs-approve-an-affiliate-for-a-program-put\n\t\t\t\t\t\tconst programId = this.getNodeParameter('programId', i) as string;\n\t\t\t\t\t\tconst affiliateId = this.getNodeParameter('affiliateId', i) as string;\n\t\t\t\t\t\tresponseData = await tapfiliateApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t\t`/programs/${programId}/affiliates/${affiliateId}/approved/`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'disapprove') {\n\t\t\t\t\t\t//https://tapfiliate.com/docs/rest/#programs-approve-an-affiliate-for-a-program-delete\n\t\t\t\t\t\tconst programId = this.getNodeParameter('programId', i) as string;\n\t\t\t\t\t\tconst affiliateId = this.getNodeParameter('affiliateId', i) as string;\n\t\t\t\t\t\tresponseData = await tapfiliateApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/programs/${programId}/affiliates/${affiliateId}/approved/`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\t//https://tapfiliate.com/docs/rest/#programs-affiliate-in-program-get\n\t\t\t\t\t\tconst programId = this.getNodeParameter('programId', i) as string;\n\t\t\t\t\t\tconst affiliateId = this.getNodeParameter('affiliateId', i) as string;\n\t\t\t\t\t\tresponseData = await tapfiliateApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/programs/${programId}/affiliates/${affiliateId}/`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\t//https://tapfiliate.com/docs/rest/#programs-program-affiliates-collection-get\n\t\t\t\t\t\tconst programId = this.getNodeParameter('programId', i) as string;\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\t\t\t\t\t\tObject.assign(qs, filters);\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await tapfiliateApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/programs/${programId}/affiliates/`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await tapfiliateApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/programs/${programId}/affiliates/`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.splice(0, limit);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t);\n\n\t\t\t\treturnData.push(...executionData);\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":[]}