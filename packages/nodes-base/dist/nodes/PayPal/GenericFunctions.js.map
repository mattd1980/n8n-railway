{"version":3,"sources":["../../../nodes/PayPal/GenericFunctions.ts"],"sourcesContent":["import type {\n\tJsonObject,\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHookFunctions,\n\tILoadOptionsFunctions,\n\tIWebhookFunctions,\n\tIHttpRequestMethods,\n\tIRequestOptions,\n} from 'n8n-workflow';\nimport { BINARY_ENCODING, NodeApiError, NodeOperationError } from 'n8n-workflow';\n\nfunction getEnvironment(env: string) {\n\treturn {\n\t\tsanbox: 'https://api-m.sandbox.paypal.com',\n\t\tlive: 'https://api-m.paypal.com',\n\t}[env];\n}\n\nasync function getAccessToken(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions | IWebhookFunctions,\n): Promise<any> {\n\tconst credentials = await this.getCredentials('payPalApi');\n\tconst env = getEnvironment(credentials.env as string);\n\tconst data = Buffer.from(`${credentials.clientId}:${credentials.secret}`).toString(\n\t\tBINARY_ENCODING,\n\t);\n\tconst headerWithAuthentication = Object.assign(\n\t\t{},\n\t\t{ Authorization: `Basic ${data}`, 'Content-Type': 'application/x-www-form-urlencoded' },\n\t);\n\tconst options: IRequestOptions = {\n\t\theaders: headerWithAuthentication,\n\t\tmethod: 'POST',\n\t\tform: {\n\t\t\tgrant_type: 'client_credentials',\n\t\t},\n\t\turi: `${env}/v1/oauth2/token`,\n\t\tjson: true,\n\t};\n\ttry {\n\t\treturn await this.helpers.request(options);\n\t} catch (error) {\n\t\tthrow new NodeOperationError(this.getNode(), error as Error);\n\t}\n}\n\nexport async function payPalApiRequest(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions | IWebhookFunctions,\n\tendpoint: string,\n\tmethod: IHttpRequestMethods,\n\n\tbody: any = {},\n\tquery?: IDataObject,\n\turi?: string,\n): Promise<any> {\n\tconst credentials = await this.getCredentials('payPalApi');\n\tconst env = getEnvironment(credentials.env as string);\n\tconst tokenInfo = await getAccessToken.call(this);\n\tconst headerWithAuthentication = Object.assign(\n\t\t{},\n\t\t{ Authorization: `Bearer ${tokenInfo.access_token}`, 'Content-Type': 'application/json' },\n\t);\n\tconst options = {\n\t\theaders: headerWithAuthentication,\n\t\tmethod,\n\t\tqs: query || {},\n\t\turi: uri || `${env}/v1${endpoint}`,\n\t\tbody,\n\t\tjson: true,\n\t};\n\ttry {\n\t\treturn await this.helpers.request(options);\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\nfunction getNext(links: IDataObject[]): string | undefined {\n\tfor (const link of links) {\n\t\tif (link.rel === 'next') {\n\t\t\treturn link.href as string;\n\t\t}\n\t}\n\treturn undefined;\n}\n\n/**\n * Make an API request to paginated paypal endpoint\n * and return all results\n */\nexport async function payPalApiRequestAllItems(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tpropertyName: string,\n\tendpoint: string,\n\tmethod: IHttpRequestMethods,\n\n\tbody: any = {},\n\tquery?: IDataObject,\n\turi?: string,\n): Promise<any> {\n\tconst returnData: IDataObject[] = [];\n\n\tlet responseData;\n\n\tquery!.page_size = 1000;\n\n\tdo {\n\t\tresponseData = await payPalApiRequest.call(this, endpoint, method, body, query, uri);\n\t\turi = getNext(responseData.links as IDataObject[]);\n\t\treturnData.push.apply(returnData, responseData[propertyName] as IDataObject[]);\n\t} while (getNext(responseData.links as IDataObject[]) !== undefined);\n\n\treturn returnData;\n}\n\nexport function validateJSON(json: string | undefined): any {\n\tlet result;\n\ttry {\n\t\tresult = JSON.parse(json!);\n\t} catch (exception) {\n\t\tresult = '';\n\t}\n\treturn result;\n}\n\nexport function upperFist(s: string): string {\n\treturn s\n\t\t.split('.')\n\t\t.map((e) => {\n\t\t\treturn e.toLowerCase().charAt(0).toUpperCase() + e.toLowerCase().slice(1);\n\t\t})\n\t\t.join(' ');\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA,0BAAkE;AAElE,SAAS,eAAe,KAAa;AACpC,SAAO;AAAA,IACN,QAAQ;AAAA,IACR,MAAM;AAAA,EACP,EAAE,GAAG;AACN;AAEA,eAAe,iBAEC;AACf,QAAM,cAAc,MAAM,KAAK,eAAe,WAAW;AACzD,QAAM,MAAM,eAAe,YAAY,GAAa;AACpD,QAAM,OAAO,OAAO,KAAK,GAAG,YAAY,QAAQ,IAAI,YAAY,MAAM,EAAE,EAAE;AAAA,IACzE;AAAA,EACD;AACA,QAAM,2BAA2B,OAAO;AAAA,IACvC,CAAC;AAAA,IACD,EAAE,eAAe,SAAS,IAAI,IAAI,gBAAgB,oCAAoC;AAAA,EACvF;AACA,QAAM,UAA2B;AAAA,IAChC,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,MAAM;AAAA,MACL,YAAY;AAAA,IACb;AAAA,IACA,KAAK,GAAG,GAAG;AAAA,IACX,MAAM;AAAA,EACP;AACA,MAAI;AACH,WAAO,MAAM,KAAK,QAAQ,QAAQ,OAAO;AAAA,EAC1C,SAAS,OAAO;AACf,UAAM,IAAI,uCAAmB,KAAK,QAAQ,GAAG,KAAc;AAAA,EAC5D;AACD;AAEA,eAAsB,iBAErB,UACA,QAEA,OAAY,CAAC,GACb,OACA,KACe;AACf,QAAM,cAAc,MAAM,KAAK,eAAe,WAAW;AACzD,QAAM,MAAM,eAAe,YAAY,GAAa;AACpD,QAAM,YAAY,MAAM,eAAe,KAAK,IAAI;AAChD,QAAM,2BAA2B,OAAO;AAAA,IACvC,CAAC;AAAA,IACD,EAAE,eAAe,UAAU,UAAU,YAAY,IAAI,gBAAgB,mBAAmB;AAAA,EACzF;AACA,QAAM,UAAU;AAAA,IACf,SAAS;AAAA,IACT;AAAA,IACA,IAAI,SAAS,CAAC;AAAA,IACd,KAAK,OAAO,GAAG,GAAG,MAAM,QAAQ;AAAA,IAChC;AAAA,IACA,MAAM;AAAA,EACP;AACA,MAAI;AACH,WAAO,MAAM,KAAK,QAAQ,QAAQ,OAAO;AAAA,EAC1C,SAAS,OAAO;AACf,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,KAAmB;AAAA,EAC3D;AACD;AAEA,SAAS,QAAQ,OAA0C;AAC1D,aAAW,QAAQ,OAAO;AACzB,QAAI,KAAK,QAAQ,QAAQ;AACxB,aAAO,KAAK;AAAA,IACb;AAAA,EACD;AACA,SAAO;AACR;AAMA,eAAsB,yBAErB,cACA,UACA,QAEA,OAAY,CAAC,GACb,OACA,KACe;AACf,QAAM,aAA4B,CAAC;AAEnC,MAAI;AAEJ,QAAO,YAAY;AAEnB,KAAG;AACF,mBAAe,MAAM,iBAAiB,KAAK,MAAM,UAAU,QAAQ,MAAM,OAAO,GAAG;AACnF,UAAM,QAAQ,aAAa,KAAsB;AACjD,eAAW,KAAK,MAAM,YAAY,aAAa,YAAY,CAAkB;AAAA,EAC9E,SAAS,QAAQ,aAAa,KAAsB,MAAM;AAE1D,SAAO;AACR;AAEO,SAAS,aAAa,MAA+B;AAC3D,MAAI;AACJ,MAAI;AACH,aAAS,KAAK,MAAM,IAAK;AAAA,EAC1B,SAAS,WAAW;AACnB,aAAS;AAAA,EACV;AACA,SAAO;AACR;AAEO,SAAS,UAAU,GAAmB;AAC5C,SAAO,EACL,MAAM,GAAG,EACT,IAAI,CAAC,MAAM;AACX,WAAO,EAAE,YAAY,EAAE,OAAO,CAAC,EAAE,YAAY,IAAI,EAAE,YAAY,EAAE,MAAM,CAAC;AAAA,EACzE,CAAC,EACA,KAAK,GAAG;AACX;","names":[]}