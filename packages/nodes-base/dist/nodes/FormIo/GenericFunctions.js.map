{"version":3,"sources":["../../../nodes/FormIo/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tILoadOptionsFunctions,\n\tIHookFunctions,\n\tIWebhookFunctions,\n\tJsonObject,\n\tIRequestOptions,\n\tIHttpRequestMethods,\n} from 'n8n-workflow';\nimport { ApplicationError, NodeApiError } from 'n8n-workflow';\n\ninterface IFormIoCredentials {\n\tenvironment: 'cloudHosted' | ' selfHosted';\n\tdomain?: string;\n\temail: string;\n\tpassword: string;\n}\n\n/**\n * Method has the logic to get jwt token from Form.io\n */\nasync function getToken(\n\tthis: IExecuteFunctions | IWebhookFunctions | IHookFunctions | ILoadOptionsFunctions,\n\tcredentials: IFormIoCredentials,\n) {\n\tconst base = credentials.domain || 'https://formio.form.io';\n\tconst options = {\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tmethod: 'POST',\n\t\tbody: {\n\t\t\tdata: {\n\t\t\t\temail: credentials.email,\n\t\t\t\tpassword: credentials.password,\n\t\t\t},\n\t\t},\n\t\turi: `${base}/user/login`,\n\t\tjson: true,\n\t\tresolveWithFullResponse: true,\n\t} satisfies IRequestOptions;\n\n\ttry {\n\t\tconst responseObject = await this.helpers.request(options);\n\t\treturn responseObject.headers['x-jwt-token'];\n\t} catch (error) {\n\t\tthrow new ApplicationError(\n\t\t\t'Authentication Failed for Form.io. Please provide valid credentails/ endpoint details',\n\t\t\t{ level: 'warning' },\n\t\t);\n\t}\n}\n\n/**\n * Method will call register or list webhooks based on the passed method in the parameter\n */\nexport async function formIoApiRequest(\n\tthis: IHookFunctions | ILoadOptionsFunctions | IWebhookFunctions,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\tbody = {},\n\tqs = {},\n): Promise<any> {\n\tconst credentials = await this.getCredentials<IFormIoCredentials>('formIoApi');\n\n\tconst token = await getToken.call(this, credentials);\n\n\tconst base = credentials.domain || 'https://api.form.io';\n\n\tconst options = {\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\t'x-jwt-token': token,\n\t\t},\n\t\tmethod,\n\t\tbody,\n\t\tqs,\n\t\turi: `${base}${endpoint}`,\n\t\tjson: true,\n\t};\n\n\ttry {\n\t\treturn await this.helpers.request.call(this, options);\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,0BAA+C;AAY/C,eAAe,SAEd,aACC;AACD,QAAM,OAAO,YAAY,UAAU;AACnC,QAAM,UAAU;AAAA,IACf,SAAS;AAAA,MACR,gBAAgB;AAAA,IACjB;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACL,MAAM;AAAA,QACL,OAAO,YAAY;AAAA,QACnB,UAAU,YAAY;AAAA,MACvB;AAAA,IACD;AAAA,IACA,KAAK,GAAG,IAAI;AAAA,IACZ,MAAM;AAAA,IACN,yBAAyB;AAAA,EAC1B;AAEA,MAAI;AACH,UAAM,iBAAiB,MAAM,KAAK,QAAQ,QAAQ,OAAO;AACzD,WAAO,eAAe,QAAQ,aAAa;AAAA,EAC5C,SAAS,OAAO;AACf,UAAM,IAAI;AAAA,MACT;AAAA,MACA,EAAE,OAAO,UAAU;AAAA,IACpB;AAAA,EACD;AACD;AAKA,eAAsB,iBAErB,QACA,UACA,OAAO,CAAC,GACR,KAAK,CAAC,GACS;AACf,QAAM,cAAc,MAAM,KAAK,eAAmC,WAAW;AAE7E,QAAM,QAAQ,MAAM,SAAS,KAAK,MAAM,WAAW;AAEnD,QAAM,OAAO,YAAY,UAAU;AAEnC,QAAM,UAAU;AAAA,IACf,SAAS;AAAA,MACR,gBAAgB;AAAA,MAChB,eAAe;AAAA,IAChB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,KAAK,GAAG,IAAI,GAAG,QAAQ;AAAA,IACvB,MAAM;AAAA,EACP;AAEA,MAAI;AACH,WAAO,MAAM,KAAK,QAAQ,QAAQ,KAAK,MAAM,OAAO;AAAA,EACrD,SAAS,OAAO;AACf,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,KAAmB;AAAA,EAC3D;AACD;","names":[]}