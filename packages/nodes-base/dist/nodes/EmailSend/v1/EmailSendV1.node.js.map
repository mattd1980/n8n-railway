{"version":3,"sources":["../../../../nodes/EmailSend/v1/EmailSendV1.node.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeBaseDescription,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes } from 'n8n-workflow';\nimport { createTransport } from 'nodemailer';\nimport type SMTPTransport from 'nodemailer/lib/smtp-transport';\n\nconst versionDescription: INodeTypeDescription = {\n\tdisplayName: 'Send Email',\n\tname: 'emailSend',\n\ticon: 'fa:envelope',\n\tgroup: ['output'],\n\tversion: 1,\n\tdescription: 'Sends an Email',\n\tdefaults: {\n\t\tname: 'Send Email',\n\t\tcolor: '#00bb88',\n\t},\n\tinputs: [NodeConnectionTypes.Main],\n\toutputs: [NodeConnectionTypes.Main],\n\tcredentials: [\n\t\t{\n\t\t\tname: 'smtp',\n\t\t\trequired: true,\n\t\t},\n\t],\n\tproperties: [\n\t\t// TODO: Add choice for text as text or html  (maybe also from name)\n\t\t{\n\t\t\tdisplayName: 'From Email',\n\t\t\tname: 'fromEmail',\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t\trequired: true,\n\t\t\tplaceholder: 'admin@example.com',\n\t\t\tdescription: 'Email address of the sender optional with name',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'To Email',\n\t\t\tname: 'toEmail',\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t\trequired: true,\n\t\t\tplaceholder: 'info@example.com',\n\t\t\tdescription: 'Email address of the recipient',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'CC Email',\n\t\t\tname: 'ccEmail',\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t\tplaceholder: 'cc@example.com',\n\t\t\tdescription: 'Email address of CC recipient',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'BCC Email',\n\t\t\tname: 'bccEmail',\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t\tplaceholder: 'bcc@example.com',\n\t\t\tdescription: 'Email address of BCC recipient',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Subject',\n\t\t\tname: 'subject',\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t\tplaceholder: 'My subject line',\n\t\t\tdescription: 'Subject line of the email',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Text',\n\t\t\tname: 'text',\n\t\t\ttype: 'string',\n\t\t\ttypeOptions: {\n\t\t\t\trows: 5,\n\t\t\t},\n\t\t\tdefault: '',\n\t\t\tdescription: 'Plain text message of email',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'HTML',\n\t\t\tname: 'html',\n\t\t\ttype: 'string',\n\t\t\ttypeOptions: {\n\t\t\t\trows: 5,\n\t\t\t},\n\t\t\tdefault: '',\n\t\t\tdescription: 'HTML text message of email',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Attachments',\n\t\t\tname: 'attachments',\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t\tdescription:\n\t\t\t\t'Name of the binary properties that contain data to add to email as attachment. Multiple ones can be comma-separated.',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Options',\n\t\t\tname: 'options',\n\t\t\ttype: 'collection',\n\t\t\tplaceholder: 'Add option',\n\t\t\tdefault: {},\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\tdisplayName: 'Ignore SSL Issues (Insecure)',\n\t\t\t\t\tname: 'allowUnauthorizedCerts',\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: false,\n\t\t\t\t\tdescription: 'Whether to connect even if SSL certificate validation is not possible',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdisplayName: 'Reply To',\n\t\t\t\t\tname: 'replyTo',\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdefault: '',\n\t\t\t\t\tplaceholder: 'info@example.com',\n\t\t\t\t\tdescription: 'The email address to send the reply to',\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t],\n};\n\nexport class EmailSendV1 implements INodeType {\n\tdescription: INodeTypeDescription;\n\n\tconstructor(baseDescription: INodeTypeBaseDescription) {\n\t\tthis.description = {\n\t\t\t...baseDescription,\n\t\t\t...versionDescription,\n\t\t};\n\t}\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst length = items.length;\n\t\tlet item: INodeExecutionData;\n\n\t\tfor (let itemIndex = 0; itemIndex < length; itemIndex++) {\n\t\t\ttry {\n\t\t\t\titem = items[itemIndex];\n\n\t\t\t\tconst fromEmail = this.getNodeParameter('fromEmail', itemIndex) as string;\n\t\t\t\tconst toEmail = this.getNodeParameter('toEmail', itemIndex) as string;\n\t\t\t\tconst ccEmail = this.getNodeParameter('ccEmail', itemIndex) as string;\n\t\t\t\tconst bccEmail = this.getNodeParameter('bccEmail', itemIndex) as string;\n\t\t\t\tconst subject = this.getNodeParameter('subject', itemIndex) as string;\n\t\t\t\tconst text = this.getNodeParameter('text', itemIndex) as string;\n\t\t\t\tconst html = this.getNodeParameter('html', itemIndex) as string;\n\t\t\t\tconst attachmentPropertyString = this.getNodeParameter('attachments', itemIndex) as string;\n\t\t\t\tconst options = this.getNodeParameter('options', itemIndex, {});\n\n\t\t\t\tconst credentials = await this.getCredentials('smtp');\n\n\t\t\t\tconst connectionOptions: SMTPTransport.Options = {\n\t\t\t\t\thost: credentials.host as string,\n\t\t\t\t\tport: credentials.port as number,\n\t\t\t\t\tsecure: credentials.secure as boolean,\n\t\t\t\t};\n\n\t\t\t\tif (credentials.user || credentials.password) {\n\t\t\t\t\tconnectionOptions.auth = {\n\t\t\t\t\t\tuser: credentials.user as string,\n\t\t\t\t\t\tpass: credentials.password as string,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (options.allowUnauthorizedCerts === true) {\n\t\t\t\t\tconnectionOptions.tls = {\n\t\t\t\t\t\trejectUnauthorized: false,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tconst transporter = createTransport(connectionOptions);\n\n\t\t\t\t// setup email data with unicode symbols\n\t\t\t\tconst mailOptions: IDataObject = {\n\t\t\t\t\tfrom: fromEmail,\n\t\t\t\t\tto: toEmail,\n\t\t\t\t\tcc: ccEmail,\n\t\t\t\t\tbcc: bccEmail,\n\t\t\t\t\tsubject,\n\t\t\t\t\ttext,\n\t\t\t\t\thtml,\n\t\t\t\t\treplyTo: options.replyTo as string | undefined,\n\t\t\t\t};\n\n\t\t\t\tif (attachmentPropertyString && item.binary) {\n\t\t\t\t\tconst attachments = [];\n\t\t\t\t\tconst attachmentProperties: string[] = attachmentPropertyString\n\t\t\t\t\t\t.split(',')\n\t\t\t\t\t\t.map((propertyName) => {\n\t\t\t\t\t\t\treturn propertyName.trim();\n\t\t\t\t\t\t});\n\n\t\t\t\t\tfor (const propertyName of attachmentProperties) {\n\t\t\t\t\t\tconst binaryData = this.helpers.assertBinaryData(itemIndex, propertyName);\n\t\t\t\t\t\tattachments.push({\n\t\t\t\t\t\t\tfilename: binaryData.fileName || 'unknown',\n\t\t\t\t\t\t\tcontent: await this.helpers.getBinaryDataBuffer(itemIndex, propertyName),\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (attachments.length) {\n\t\t\t\t\t\tmailOptions.attachments = attachments;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Send the email\n\t\t\t\tconst info = await transporter.sendMail(mailOptions);\n\n\t\t\t\treturnData.push({\n\t\t\t\t\tjson: info as unknown as IDataObject,\n\t\t\t\t\tpairedItem: {\n\t\t\t\t\t\titem: itemIndex,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tjson: {\n\t\t\t\t\t\t\terror: error.message,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpairedItem: {\n\t\t\t\t\t\t\titem: itemIndex,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":[]}