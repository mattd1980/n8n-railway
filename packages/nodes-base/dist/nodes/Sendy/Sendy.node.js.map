{"version":3,"sources":["../../../nodes/Sendy/Sendy.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n\tJsonObject,\n} from 'n8n-workflow';\nimport { NodeApiError, NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport { campaignFields, campaignOperations } from './CampaignDescription';\nimport { sendyApiRequest } from './GenericFunctions';\nimport { subscriberFields, subscriberOperations } from './SubscriberDescription';\n\nexport class Sendy implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Sendy',\n\t\tname: 'sendy',\n\t\t// eslint-disable-next-line n8n-nodes-base/node-class-description-icon-not-svg\n\t\ticon: 'file:sendy.png',\n\t\tgroup: ['input'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume Sendy API',\n\t\tdefaults: {\n\t\t\tname: 'Sendy',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'sendyApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Campaign',\n\t\t\t\t\t\tvalue: 'campaign',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Subscriber',\n\t\t\t\t\t\tvalue: 'subscriber',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'subscriber',\n\t\t\t},\n\t\t\t...campaignOperations,\n\t\t\t...campaignFields,\n\t\t\t...subscriberOperations,\n\t\t\t...subscriberFields,\n\t\t],\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: IDataObject[] = [];\n\t\tconst length = items.length;\n\t\tlet responseData;\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tif (resource === 'campaign') {\n\t\t\t\tif (operation === 'create') {\n\t\t\t\t\tconst fromName = this.getNodeParameter('fromName', i) as string;\n\n\t\t\t\t\tconst fromEmail = this.getNodeParameter('fromEmail', i) as string;\n\n\t\t\t\t\tconst replyTo = this.getNodeParameter('replyTo', i) as string;\n\n\t\t\t\t\tconst title = this.getNodeParameter('title', i) as string;\n\n\t\t\t\t\tconst subject = this.getNodeParameter('subject', i) as string;\n\n\t\t\t\t\tconst htmlText = this.getNodeParameter('htmlText', i) as boolean;\n\n\t\t\t\t\tconst sendCampaign = this.getNodeParameter('sendCampaign', i) as boolean;\n\n\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\tlet brandId = null;\n\t\t\t\t\tif (!sendCampaign) {\n\t\t\t\t\t\tbrandId = this.getNodeParameter('brandId', i) as string;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\tfrom_name: fromName,\n\t\t\t\t\t\tfrom_email: fromEmail,\n\t\t\t\t\t\treply_to: replyTo,\n\t\t\t\t\t\ttitle,\n\t\t\t\t\t\tsubject,\n\t\t\t\t\t\tsend_campaign: sendCampaign ? 1 : 0,\n\t\t\t\t\t\thtml_text: htmlText,\n\t\t\t\t\t};\n\n\t\t\t\t\tif (brandId) {\n\t\t\t\t\t\tbody.brand_id = brandId;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (additionalFields.plainText) {\n\t\t\t\t\t\tbody.plain_text = additionalFields.plainText;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (additionalFields.listIds) {\n\t\t\t\t\t\tbody.list_ids = additionalFields.listIds as string;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (additionalFields.segmentIds) {\n\t\t\t\t\t\tbody.segment_ids = additionalFields.segmentIds as string;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (additionalFields.excludeListIds) {\n\t\t\t\t\t\tbody.exclude_list_ids = additionalFields.excludeListIds as string;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (additionalFields.excludeSegmentIds) {\n\t\t\t\t\t\tbody.exclude_segments_ids = additionalFields.excludeSegmentIds as string;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (additionalFields.queryString) {\n\t\t\t\t\t\tbody.query_string = additionalFields.queryString as string;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (additionalFields.trackOpens) {\n\t\t\t\t\t\tbody.track_opens = (additionalFields.trackOpens as boolean) ? 1 : 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (additionalFields.trackClicks) {\n\t\t\t\t\t\tbody.track_clicks = (additionalFields.trackClicks as boolean) ? 1 : 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tresponseData = await sendyApiRequest.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t'/api/campaigns/create.php',\n\t\t\t\t\t\tbody,\n\t\t\t\t\t);\n\n\t\t\t\t\tconst success = ['Campaign created', 'Campaign created and now sending'];\n\n\t\t\t\t\tif (success.includes(responseData as string)) {\n\t\t\t\t\t\tresponseData = { message: responseData };\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new NodeApiError(this.getNode(), responseData as JsonObject, { httpCode: '400' });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (resource === 'subscriber') {\n\t\t\t\tif (operation === 'add') {\n\t\t\t\t\tconst email = this.getNodeParameter('email', i) as string;\n\n\t\t\t\t\tconst listId = this.getNodeParameter('listId', i) as string;\n\n\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\temail,\n\t\t\t\t\t\tlist: listId,\n\t\t\t\t\t};\n\n\t\t\t\t\tObject.assign(body, additionalFields);\n\n\t\t\t\t\tresponseData = await sendyApiRequest.call(this, 'POST', '/subscribe', body);\n\n\t\t\t\t\tif (responseData === '1') {\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t`Sendy error response [${400}]: ${responseData}`,\n\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (operation === 'count') {\n\t\t\t\t\tconst listId = this.getNodeParameter('listId', i) as string;\n\n\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\tlist_id: listId,\n\t\t\t\t\t};\n\n\t\t\t\t\tresponseData = await sendyApiRequest.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t'/api/subscribers/active-subscriber-count.php',\n\t\t\t\t\t\tbody,\n\t\t\t\t\t);\n\n\t\t\t\t\tconst errors = [\n\t\t\t\t\t\t'No data passed',\n\t\t\t\t\t\t'API key not passed',\n\t\t\t\t\t\t'Invalid API key',\n\t\t\t\t\t\t'List ID not passed',\n\t\t\t\t\t\t'List does not exist',\n\t\t\t\t\t];\n\n\t\t\t\t\tif (!errors.includes(responseData as string)) {\n\t\t\t\t\t\tresponseData = { count: responseData };\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t`Sendy error response [${400}]: ${responseData}`,\n\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\tconst email = this.getNodeParameter('email', i) as string;\n\n\t\t\t\t\tconst listId = this.getNodeParameter('listId', i) as string;\n\n\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\temail,\n\t\t\t\t\t\tlist_id: listId,\n\t\t\t\t\t};\n\n\t\t\t\t\tresponseData = await sendyApiRequest.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t'/api/subscribers/delete.php',\n\t\t\t\t\t\tbody,\n\t\t\t\t\t);\n\n\t\t\t\t\tif (responseData === '1') {\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t`Sendy error response [${400}]: ${responseData}`,\n\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (operation === 'remove') {\n\t\t\t\t\tconst email = this.getNodeParameter('email', i) as string;\n\n\t\t\t\t\tconst listId = this.getNodeParameter('listId', i) as string;\n\n\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\temail,\n\t\t\t\t\t\tlist: listId,\n\t\t\t\t\t};\n\n\t\t\t\t\tresponseData = await sendyApiRequest.call(this, 'POST', '/unsubscribe', body);\n\n\t\t\t\t\tif (responseData === '1') {\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t`Sendy error response [${400}]: ${responseData}`,\n\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (operation === 'status') {\n\t\t\t\t\tconst email = this.getNodeParameter('email', i) as string;\n\n\t\t\t\t\tconst listId = this.getNodeParameter('listId', i) as string;\n\n\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\temail,\n\t\t\t\t\t\tlist_id: listId,\n\t\t\t\t\t};\n\n\t\t\t\t\tresponseData = await sendyApiRequest.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t'/api/subscribers/subscription-status.php',\n\t\t\t\t\t\tbody,\n\t\t\t\t\t);\n\n\t\t\t\t\tconst status = [\n\t\t\t\t\t\t'Subscribed',\n\t\t\t\t\t\t'Unsubscribed',\n\t\t\t\t\t\t'Unconfirmed',\n\t\t\t\t\t\t'Bounced',\n\t\t\t\t\t\t'Soft bounced',\n\t\t\t\t\t\t'Complained',\n\t\t\t\t\t];\n\n\t\t\t\t\tif (status.includes(responseData as string)) {\n\t\t\t\t\t\tresponseData = { status: responseData };\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t`Sendy error response [${400}]: ${responseData}`,\n\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (Array.isArray(responseData)) {\n\t\t\treturnData.push.apply(returnData, responseData as IDataObject[]);\n\t\t} else if (responseData !== undefined) {\n\t\t\treturnData.push(responseData as IDataObject);\n\t\t}\n\t\treturn [this.helpers.returnJsonArray(returnData)];\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,0BAAsE;AAEtE,iCAAmD;AACnD,8BAAgC;AAChC,mCAAuD;AAEhD,MAAM,MAA2B;AAAA,EAAjC;AACN,uBAAoC;AAAA,MACnC,aAAa;AAAA,MACb,MAAM;AAAA;AAAA,MAEN,MAAM;AAAA,MACN,OAAO,CAAC,OAAO;AAAA,MACf,SAAS;AAAA,MACT,UAAU;AAAA,MACV,aAAa;AAAA,MACb,UAAU;AAAA,QACT,MAAM;AAAA,MACP;AAAA,MACA,cAAc;AAAA,MACd,QAAQ,CAAC,wCAAoB,IAAI;AAAA,MACjC,SAAS,CAAC,wCAAoB,IAAI;AAAA,MAClC,aAAa;AAAA,QACZ;AAAA,UACC,MAAM;AAAA,UACN,UAAU;AAAA,QACX;AAAA,MACD;AAAA,MACA,YAAY;AAAA,QACX;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,kBAAkB;AAAA,UAClB,SAAS;AAAA,YACR;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,UACD;AAAA,UACA,SAAS;AAAA,QACV;AAAA,QACA,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,MACJ;AAAA,IACD;AAAA;AAAA,EAEA,MAAM,UAAkE;AACvE,UAAM,QAAQ,KAAK,aAAa;AAChC,UAAM,aAA4B,CAAC;AACnC,UAAM,SAAS,MAAM;AACrB,QAAI;AACJ,UAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AACpD,UAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,aAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAChC,UAAI,aAAa,YAAY;AAC5B,YAAI,cAAc,UAAU;AAC3B,gBAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AAEpD,gBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AAEtD,gBAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAElD,gBAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAE9C,gBAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAElD,gBAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AAEpD,gBAAM,eAAe,KAAK,iBAAiB,gBAAgB,CAAC;AAE5D,gBAAM,mBAAmB,KAAK,iBAAiB,oBAAoB,CAAC;AAEpE,cAAI,UAAU;AACd,cAAI,CAAC,cAAc;AAClB,sBAAU,KAAK,iBAAiB,WAAW,CAAC;AAAA,UAC7C;AAEA,gBAAM,OAAoB;AAAA,YACzB,WAAW;AAAA,YACX,YAAY;AAAA,YACZ,UAAU;AAAA,YACV;AAAA,YACA;AAAA,YACA,eAAe,eAAe,IAAI;AAAA,YAClC,WAAW;AAAA,UACZ;AAEA,cAAI,SAAS;AACZ,iBAAK,WAAW;AAAA,UACjB;AAEA,cAAI,iBAAiB,WAAW;AAC/B,iBAAK,aAAa,iBAAiB;AAAA,UACpC;AAEA,cAAI,iBAAiB,SAAS;AAC7B,iBAAK,WAAW,iBAAiB;AAAA,UAClC;AAEA,cAAI,iBAAiB,YAAY;AAChC,iBAAK,cAAc,iBAAiB;AAAA,UACrC;AAEA,cAAI,iBAAiB,gBAAgB;AACpC,iBAAK,mBAAmB,iBAAiB;AAAA,UAC1C;AAEA,cAAI,iBAAiB,mBAAmB;AACvC,iBAAK,uBAAuB,iBAAiB;AAAA,UAC9C;AAEA,cAAI,iBAAiB,aAAa;AACjC,iBAAK,eAAe,iBAAiB;AAAA,UACtC;AAEA,cAAI,iBAAiB,YAAY;AAChC,iBAAK,cAAe,iBAAiB,aAAyB,IAAI;AAAA,UACnE;AAEA,cAAI,iBAAiB,aAAa;AACjC,iBAAK,eAAgB,iBAAiB,cAA0B,IAAI;AAAA,UACrE;AAEA,yBAAe,MAAM,wCAAgB;AAAA,YACpC;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACD;AAEA,gBAAM,UAAU,CAAC,oBAAoB,kCAAkC;AAEvE,cAAI,QAAQ,SAAS,YAAsB,GAAG;AAC7C,2BAAe,EAAE,SAAS,aAAa;AAAA,UACxC,OAAO;AACN,kBAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,cAA4B,EAAE,UAAU,MAAM,CAAC;AAAA,UACvF;AAAA,QACD;AAAA,MACD;AAEA,UAAI,aAAa,cAAc;AAC9B,YAAI,cAAc,OAAO;AACxB,gBAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAE9C,gBAAM,SAAS,KAAK,iBAAiB,UAAU,CAAC;AAEhD,gBAAM,mBAAmB,KAAK,iBAAiB,oBAAoB,CAAC;AAEpE,gBAAM,OAAoB;AAAA,YACzB;AAAA,YACA,MAAM;AAAA,UACP;AAEA,iBAAO,OAAO,MAAM,gBAAgB;AAEpC,yBAAe,MAAM,wCAAgB,KAAK,MAAM,QAAQ,cAAc,IAAI;AAE1E,cAAI,iBAAiB,KAAK;AACzB,2BAAe,EAAE,SAAS,KAAK;AAAA,UAChC,OAAO;AACN,kBAAM,IAAI;AAAA,cACT,KAAK,QAAQ;AAAA,cACb,yBAAyB,GAAG,MAAM,YAAY;AAAA,cAC9C,EAAE,WAAW,EAAE;AAAA,YAChB;AAAA,UACD;AAAA,QACD;AAEA,YAAI,cAAc,SAAS;AAC1B,gBAAM,SAAS,KAAK,iBAAiB,UAAU,CAAC;AAEhD,gBAAM,OAAoB;AAAA,YACzB,SAAS;AAAA,UACV;AAEA,yBAAe,MAAM,wCAAgB;AAAA,YACpC;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACD;AAEA,gBAAM,SAAS;AAAA,YACd;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACD;AAEA,cAAI,CAAC,OAAO,SAAS,YAAsB,GAAG;AAC7C,2BAAe,EAAE,OAAO,aAAa;AAAA,UACtC,OAAO;AACN,kBAAM,IAAI;AAAA,cACT,KAAK,QAAQ;AAAA,cACb,yBAAyB,GAAG,MAAM,YAAY;AAAA,cAC9C,EAAE,WAAW,EAAE;AAAA,YAChB;AAAA,UACD;AAAA,QACD;AAEA,YAAI,cAAc,UAAU;AAC3B,gBAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAE9C,gBAAM,SAAS,KAAK,iBAAiB,UAAU,CAAC;AAEhD,gBAAM,OAAoB;AAAA,YACzB;AAAA,YACA,SAAS;AAAA,UACV;AAEA,yBAAe,MAAM,wCAAgB;AAAA,YACpC;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACD;AAEA,cAAI,iBAAiB,KAAK;AACzB,2BAAe,EAAE,SAAS,KAAK;AAAA,UAChC,OAAO;AACN,kBAAM,IAAI;AAAA,cACT,KAAK,QAAQ;AAAA,cACb,yBAAyB,GAAG,MAAM,YAAY;AAAA,cAC9C,EAAE,WAAW,EAAE;AAAA,YAChB;AAAA,UACD;AAAA,QACD;AAEA,YAAI,cAAc,UAAU;AAC3B,gBAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAE9C,gBAAM,SAAS,KAAK,iBAAiB,UAAU,CAAC;AAEhD,gBAAM,OAAoB;AAAA,YACzB;AAAA,YACA,MAAM;AAAA,UACP;AAEA,yBAAe,MAAM,wCAAgB,KAAK,MAAM,QAAQ,gBAAgB,IAAI;AAE5E,cAAI,iBAAiB,KAAK;AACzB,2BAAe,EAAE,SAAS,KAAK;AAAA,UAChC,OAAO;AACN,kBAAM,IAAI;AAAA,cACT,KAAK,QAAQ;AAAA,cACb,yBAAyB,GAAG,MAAM,YAAY;AAAA,cAC9C,EAAE,WAAW,EAAE;AAAA,YAChB;AAAA,UACD;AAAA,QACD;AAEA,YAAI,cAAc,UAAU;AAC3B,gBAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAE9C,gBAAM,SAAS,KAAK,iBAAiB,UAAU,CAAC;AAEhD,gBAAM,OAAoB;AAAA,YACzB;AAAA,YACA,SAAS;AAAA,UACV;AAEA,yBAAe,MAAM,wCAAgB;AAAA,YACpC;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACD;AAEA,gBAAM,SAAS;AAAA,YACd;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACD;AAEA,cAAI,OAAO,SAAS,YAAsB,GAAG;AAC5C,2BAAe,EAAE,QAAQ,aAAa;AAAA,UACvC,OAAO;AACN,kBAAM,IAAI;AAAA,cACT,KAAK,QAAQ;AAAA,cACb,yBAAyB,GAAG,MAAM,YAAY;AAAA,cAC9C,EAAE,WAAW,EAAE;AAAA,YAChB;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AACA,QAAI,MAAM,QAAQ,YAAY,GAAG;AAChC,iBAAW,KAAK,MAAM,YAAY,YAA6B;AAAA,IAChE,WAAW,iBAAiB,QAAW;AACtC,iBAAW,KAAK,YAA2B;AAAA,IAC5C;AACA,WAAO,CAAC,KAAK,QAAQ,gBAAgB,UAAU,CAAC;AAAA,EACjD;AACD;","names":[]}