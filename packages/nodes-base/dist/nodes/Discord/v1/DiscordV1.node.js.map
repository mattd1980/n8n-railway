{"version":3,"sources":["../../../../nodes/Discord/v1/DiscordV1.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeBaseDescription,\n\tINodeTypeDescription,\n\tIRequestOptions,\n} from 'n8n-workflow';\nimport {\n\tjsonParse,\n\tNodeApiError,\n\tNodeConnectionTypes,\n\tNodeOperationError,\n\tsleep,\n} from 'n8n-workflow';\n\nimport type { DiscordAttachment, DiscordWebhook } from './Interfaces';\nimport { oldVersionNotice } from '../../../utils/descriptions';\n\nconst versionDescription: INodeTypeDescription = {\n\tdisplayName: 'Discord',\n\tname: 'discord',\n\ticon: 'file:discord.svg',\n\tgroup: ['output'],\n\tversion: 1,\n\tdescription: 'Sends data to Discord',\n\tdefaults: {\n\t\tname: 'Discord',\n\t},\n\tinputs: [NodeConnectionTypes.Main],\n\toutputs: [NodeConnectionTypes.Main],\n\tproperties: [\n\t\toldVersionNotice,\n\t\t{\n\t\t\tdisplayName: 'Webhook URL',\n\t\t\tname: 'webhookUri',\n\t\t\ttype: 'string',\n\t\t\trequired: true,\n\t\t\tdefault: '',\n\t\t\tplaceholder: 'https://discord.com/api/webhooks/ID/TOKEN',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Content',\n\t\t\tname: 'text',\n\t\t\ttype: 'string',\n\t\t\ttypeOptions: {\n\t\t\t\tmaxValue: 2000,\n\t\t\t},\n\t\t\tdefault: '',\n\t\t\tplaceholder: 'Hello World!',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Additional Fields',\n\t\t\tname: 'options',\n\t\t\ttype: 'collection',\n\t\t\tplaceholder: 'Add option',\n\t\t\tdefault: {},\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\tdisplayName: 'Allowed Mentions',\n\t\t\t\t\tname: 'allowedMentions',\n\t\t\t\t\ttype: 'json',\n\t\t\t\t\ttypeOptions: { alwaysOpenEditWindow: true },\n\t\t\t\t\tdefault: '',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdisplayName: 'Attachments',\n\t\t\t\t\tname: 'attachments',\n\t\t\t\t\ttype: 'json',\n\t\t\t\t\ttypeOptions: { alwaysOpenEditWindow: true },\n\t\t\t\t\tdefault: '',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdisplayName: 'Avatar URL',\n\t\t\t\t\tname: 'avatarUrl',\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdefault: '',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdisplayName: 'Components',\n\t\t\t\t\tname: 'components',\n\t\t\t\t\ttype: 'json',\n\t\t\t\t\ttypeOptions: { alwaysOpenEditWindow: true },\n\t\t\t\t\tdefault: '',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdisplayName: 'Embeds',\n\t\t\t\t\tname: 'embeds',\n\t\t\t\t\ttype: 'json',\n\t\t\t\t\ttypeOptions: { alwaysOpenEditWindow: true },\n\t\t\t\t\tdefault: '',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdisplayName: 'Flags',\n\t\t\t\t\tname: 'flags',\n\t\t\t\t\ttype: 'number',\n\t\t\t\t\tdefault: '',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdisplayName: 'JSON Payload',\n\t\t\t\t\tname: 'payloadJson',\n\t\t\t\t\ttype: 'json',\n\t\t\t\t\ttypeOptions: { alwaysOpenEditWindow: true },\n\t\t\t\t\tdefault: '',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdisplayName: 'Username',\n\t\t\t\t\tname: 'username',\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdefault: '',\n\t\t\t\t\tplaceholder: 'User',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdisplayName: 'TTS',\n\t\t\t\t\tname: 'tts',\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: false,\n\t\t\t\t\tdescription: 'Whether this message be sent as a Text To Speech message',\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t],\n};\n\nexport class DiscordV1 implements INodeType {\n\tdescription: INodeTypeDescription;\n\n\tconstructor(baseDescription: INodeTypeBaseDescription) {\n\t\tthis.description = {\n\t\t\t...baseDescription,\n\t\t\t...versionDescription,\n\t\t};\n\t}\n\n\tasync execute(this: IExecuteFunctions) {\n\t\tconst returnData: INodeExecutionData[] = [];\n\n\t\tconst webhookUri = this.getNodeParameter('webhookUri', 0, '') as string;\n\n\t\tif (!webhookUri) throw new NodeOperationError(this.getNode(), 'Webhook uri is required.');\n\n\t\tconst items = this.getInputData();\n\t\tconst length = items.length;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tconst body: DiscordWebhook = {};\n\n\t\t\tconst iterationWebhookUri = this.getNodeParameter('webhookUri', i) as string;\n\t\t\tbody.content = this.getNodeParameter('text', i) as string;\n\t\t\tconst options = this.getNodeParameter('options', i);\n\n\t\t\tif (!body.content && !options.embeds) {\n\t\t\t\tthrow new NodeOperationError(this.getNode(), 'Either content or embeds must be set.', {\n\t\t\t\t\titemIndex: i,\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (options.embeds) {\n\t\t\t\ttry {\n\t\t\t\t\t//@ts-expect-error\n\t\t\t\t\tbody.embeds = JSON.parse(options.embeds);\n\t\t\t\t\tif (!Array.isArray(body.embeds)) {\n\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'Embeds must be an array of embeds.', {\n\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'Embeds must be valid JSON.', {\n\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (options.username) {\n\t\t\t\tbody.username = options.username as string;\n\t\t\t}\n\n\t\t\tif (options.components) {\n\t\t\t\ttry {\n\t\t\t\t\t//@ts-expect-error\n\t\t\t\t\tbody.components = JSON.parse(options.components);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'Components must be valid JSON.', {\n\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options.allowed_mentions) {\n\t\t\t\t//@ts-expect-error\n\t\t\t\tbody.allowed_mentions = jsonParse(options.allowed_mentions);\n\t\t\t}\n\n\t\t\tif (options.avatarUrl) {\n\t\t\t\tbody.avatar_url = options.avatarUrl as string;\n\t\t\t}\n\n\t\t\tif (options.flags) {\n\t\t\t\tbody.flags = options.flags as number;\n\t\t\t}\n\n\t\t\tif (options.tts) {\n\t\t\t\tbody.tts = options.tts as boolean;\n\t\t\t}\n\n\t\t\tif (options.payloadJson) {\n\t\t\t\t//@ts-expect-error\n\t\t\t\tbody.payload_json = jsonParse(options.payloadJson);\n\t\t\t}\n\n\t\t\tif (options.attachments) {\n\t\t\t\t//@ts-expect-error\n\t\t\t\tbody.attachments = jsonParse(options.attachments as DiscordAttachment[]);\n\t\t\t}\n\n\t\t\t//* Not used props, delete them from the payload as Discord won't need them :^\n\t\t\tif (!body.content) delete body.content;\n\t\t\tif (!body.username) delete body.username;\n\t\t\tif (!body.avatar_url) delete body.avatar_url;\n\t\t\tif (!body.embeds) delete body.embeds;\n\t\t\tif (!body.allowed_mentions) delete body.allowed_mentions;\n\t\t\tif (!body.flags) delete body.flags;\n\t\t\tif (!body.components) delete body.components;\n\t\t\tif (!body.payload_json) delete body.payload_json;\n\t\t\tif (!body.attachments) delete body.attachments;\n\n\t\t\tlet requestOptions: IRequestOptions;\n\n\t\t\tif (!body.payload_json) {\n\t\t\t\trequestOptions = {\n\t\t\t\t\tresolveWithFullResponse: true,\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\tbody,\n\t\t\t\t\turi: iterationWebhookUri,\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'content-type': 'application/json; charset=utf-8',\n\t\t\t\t\t},\n\t\t\t\t\tjson: true,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\trequestOptions = {\n\t\t\t\t\tresolveWithFullResponse: true,\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\tbody,\n\t\t\t\t\turi: iterationWebhookUri,\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'content-type': 'multipart/form-data; charset=utf-8',\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t\tlet maxTries = 5;\n\t\t\tlet response;\n\n\t\t\tdo {\n\t\t\t\ttry {\n\t\t\t\t\tresponse = await this.helpers.request(requestOptions);\n\t\t\t\t\tconst resetAfter = response.headers['x-ratelimit-reset-after'] * 1000;\n\t\t\t\t\tconst remainingRatelimit = response.headers['x-ratelimit-remaining'];\n\n\t\t\t\t\t// remaining requests 0\n\t\t\t\t\t// https://discord.com/developers/docs/topics/rate-limits\n\t\t\t\t\tif (!+remainingRatelimit) {\n\t\t\t\t\t\tawait sleep(resetAfter ?? 1000);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// HTTP/1.1 429 TOO MANY REQUESTS\n\t\t\t\t\t// Await when the current rate limit will reset\n\t\t\t\t\t// https://discord.com/developers/docs/topics/rate-limits\n\t\t\t\t\tif (error.statusCode === 429) {\n\t\t\t\t\t\tconst retryAfter = error.response?.headers['retry-after'] || 1000;\n\n\t\t\t\t\t\tawait sleep(+retryAfter);\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t} while (--maxTries);\n\n\t\t\tif (maxTries <= 0) {\n\t\t\t\tthrow new NodeApiError(this.getNode(), {\n\t\t\t\t\terror: 'Could not send Webhook message. Max amount of rate-limit retries reached.',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\tthis.helpers.returnJsonArray({ success: true }),\n\t\t\t\t{ itemData: { item: i } },\n\t\t\t);\n\t\t\treturnData.push(...executionData);\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":[]}