{"version":3,"sources":["../../../../../../nodes/Discord/v2/actions/message/getAll.operation.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tINodeProperties,\n} from 'n8n-workflow';\n\nimport { returnAllOrLimit } from '../../../../../utils/descriptions';\nimport { updateDisplayOptions } from '../../../../../utils/utilities';\nimport {\n\tcreateSimplifyFunction,\n\tparseDiscordError,\n\tprepareErrorData,\n\tsetupChannelGetter,\n} from '../../helpers/utils';\nimport { discordApiRequest } from '../../transport';\nimport { channelRLC, simplifyBoolean } from '../common.description';\n\nconst properties: INodeProperties[] = [\n\tchannelRLC,\n\t...returnAllOrLimit,\n\t{\n\t\tdisplayName: 'Options',\n\t\tname: 'options',\n\t\ttype: 'collection',\n\t\tplaceholder: 'Add option',\n\t\tdefault: {},\n\t\toptions: [simplifyBoolean],\n\t},\n];\n\nconst displayOptions = {\n\tshow: {\n\t\tresource: ['message'],\n\t\toperation: ['getAll'],\n\t},\n\thide: {\n\t\tauthentication: ['webhook'],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n\nexport async function execute(\n\tthis: IExecuteFunctions,\n\t_guildId: string,\n\tuserGuilds: IDataObject[],\n): Promise<INodeExecutionData[]> {\n\tconst returnData: INodeExecutionData[] = [];\n\tconst items = this.getInputData();\n\tconst simplifyResponse = createSimplifyFunction([\n\t\t'id',\n\t\t'channel_id',\n\t\t'author',\n\t\t'content',\n\t\t'timestamp',\n\t\t'type',\n\t]);\n\n\tconst getChannelId = await setupChannelGetter.call(this, userGuilds);\n\n\tfor (let i = 0; i < items.length; i++) {\n\t\ttry {\n\t\t\tconst channelId = await getChannelId(i);\n\n\t\t\tconst returnAll = this.getNodeParameter('returnAll', i, false);\n\n\t\t\tconst qs: IDataObject = {};\n\n\t\t\tlet response: IDataObject[] = [];\n\n\t\t\tif (!returnAll) {\n\t\t\t\tconst limit = this.getNodeParameter('limit', 0);\n\t\t\t\tqs.limit = limit;\n\t\t\t\tresponse = await discordApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t`/channels/${channelId}/messages`,\n\t\t\t\t\tundefined,\n\t\t\t\t\tqs,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tlet responseData;\n\t\t\t\tqs.limit = 100;\n\n\t\t\t\tdo {\n\t\t\t\t\tresponseData = await discordApiRequest.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t`/channels/${channelId}/messages`,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tqs,\n\t\t\t\t\t);\n\t\t\t\t\tif (!responseData?.length) break;\n\t\t\t\t\tqs.before = responseData[responseData.length - 1].id;\n\t\t\t\t\tresponse.push(...responseData);\n\t\t\t\t} while (responseData.length);\n\t\t\t}\n\n\t\t\tconst simplify = this.getNodeParameter('options.simplify', i, false) as boolean;\n\n\t\t\tif (simplify) {\n\t\t\t\tresponse = response.map(simplifyResponse);\n\t\t\t}\n\n\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\tthis.helpers.returnJsonArray(response),\n\t\t\t\t{ itemData: { item: i } },\n\t\t\t);\n\n\t\t\treturnData.push(...executionData);\n\t\t} catch (error) {\n\t\t\tconst err = parseDiscordError.call(this, error, i);\n\n\t\t\tif (this.continueOnFail()) {\n\t\t\t\treturnData.push(...prepareErrorData.call(this, err, i));\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\treturn returnData;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,0BAAiC;AACjC,uBAAqC;AACrC,mBAKO;AACP,uBAAkC;AAClC,oBAA4C;AAE5C,MAAM,aAAgC;AAAA,EACrC;AAAA,EACA,GAAG;AAAA,EACH;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,SAAS,CAAC;AAAA,IACV,SAAS,CAAC,6BAAe;AAAA,EAC1B;AACD;AAEA,MAAM,iBAAiB;AAAA,EACtB,MAAM;AAAA,IACL,UAAU,CAAC,SAAS;AAAA,IACpB,WAAW,CAAC,QAAQ;AAAA,EACrB;AAAA,EACA,MAAM;AAAA,IACL,gBAAgB,CAAC,SAAS;AAAA,EAC3B;AACD;AAEO,MAAM,kBAAc,uCAAqB,gBAAgB,UAAU;AAE1E,eAAsB,QAErB,UACA,YACgC;AAChC,QAAM,aAAmC,CAAC;AAC1C,QAAM,QAAQ,KAAK,aAAa;AAChC,QAAM,uBAAmB,qCAAuB;AAAA,IAC/C;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD,CAAC;AAED,QAAM,eAAe,MAAM,gCAAmB,KAAK,MAAM,UAAU;AAEnE,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACtC,QAAI;AACH,YAAM,YAAY,MAAM,aAAa,CAAC;AAEtC,YAAM,YAAY,KAAK,iBAAiB,aAAa,GAAG,KAAK;AAE7D,YAAM,KAAkB,CAAC;AAEzB,UAAI,WAA0B,CAAC;AAE/B,UAAI,CAAC,WAAW;AACf,cAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC9C,WAAG,QAAQ;AACX,mBAAW,MAAM,mCAAkB;AAAA,UAClC;AAAA,UACA;AAAA,UACA,aAAa,SAAS;AAAA,UACtB;AAAA,UACA;AAAA,QACD;AAAA,MACD,OAAO;AACN,YAAI;AACJ,WAAG,QAAQ;AAEX,WAAG;AACF,yBAAe,MAAM,mCAAkB;AAAA,YACtC;AAAA,YACA;AAAA,YACA,aAAa,SAAS;AAAA,YACtB;AAAA,YACA;AAAA,UACD;AACA,cAAI,CAAC,cAAc,OAAQ;AAC3B,aAAG,SAAS,aAAa,aAAa,SAAS,CAAC,EAAE;AAClD,mBAAS,KAAK,GAAG,YAAY;AAAA,QAC9B,SAAS,aAAa;AAAA,MACvB;AAEA,YAAM,WAAW,KAAK,iBAAiB,oBAAoB,GAAG,KAAK;AAEnE,UAAI,UAAU;AACb,mBAAW,SAAS,IAAI,gBAAgB;AAAA,MACzC;AAEA,YAAM,gBAAgB,KAAK,QAAQ;AAAA,QAClC,KAAK,QAAQ,gBAAgB,QAAQ;AAAA,QACrC,EAAE,UAAU,EAAE,MAAM,EAAE,EAAE;AAAA,MACzB;AAEA,iBAAW,KAAK,GAAG,aAAa;AAAA,IACjC,SAAS,OAAO;AACf,YAAM,MAAM,+BAAkB,KAAK,MAAM,OAAO,CAAC;AAEjD,UAAI,KAAK,eAAe,GAAG;AAC1B,mBAAW,KAAK,GAAG,8BAAiB,KAAK,MAAM,KAAK,CAAC,CAAC;AACtD;AAAA,MACD;AAEA,YAAM;AAAA,IACP;AAAA,EACD;AAEA,SAAO;AACR;","names":[]}