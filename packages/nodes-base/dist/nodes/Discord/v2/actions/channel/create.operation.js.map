{"version":3,"sources":["../../../../../../nodes/Discord/v2/actions/channel/create.operation.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tINodeProperties,\n} from 'n8n-workflow';\n\nimport { updateDisplayOptions } from '../../../../../utils/utilities';\nimport { parseDiscordError, prepareErrorData } from '../../helpers/utils';\nimport { discordApiRequest } from '../../transport';\nimport { categoryRLC } from '../common.description';\n\nconst properties: INodeProperties[] = [\n\t{\n\t\tdisplayName: 'Name',\n\t\tname: 'name',\n\t\ttype: 'string',\n\t\tdefault: '',\n\t\trequired: true,\n\t\tdescription: 'The name of the channel',\n\t\tplaceholder: 'e.g. new-channel',\n\t},\n\t{\n\t\tdisplayName: 'Type',\n\t\tname: 'type',\n\t\ttype: 'options',\n\t\tdefault: '0',\n\t\trequired: true,\n\t\tdescription: 'The type of channel to create',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tname: 'Guild Text',\n\t\t\t\tvalue: '0',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Guild Voice',\n\t\t\t\tvalue: '2',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Guild Category',\n\t\t\t\tvalue: '4',\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tdisplayName: 'Options',\n\t\tname: 'options',\n\t\ttype: 'collection',\n\t\tplaceholder: 'Add option',\n\t\tdefault: {},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Age-Restricted (NSFW)',\n\t\t\t\tname: 'nsfw',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: 'Whether the content of the channel might be nsfw (not safe for work)',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\thide: {\n\t\t\t\t\t\t'/type': ['4'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Bitrate',\n\t\t\t\tname: 'bitrate',\n\t\t\t\ttype: 'number',\n\t\t\t\tdefault: 8000,\n\t\t\t\tplaceholder: 'e.g. 8000',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tminValue: 8000,\n\t\t\t\t\tmaxValue: 96000,\n\t\t\t\t},\n\t\t\t\tdescription: 'The bitrate (in bits) of the voice channel',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\t'/type': ['2'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t...categoryRLC,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\thide: {\n\t\t\t\t\t\t'/type': ['4'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Position',\n\t\t\t\tname: 'position',\n\t\t\t\ttype: 'number',\n\t\t\t\tdefault: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Rate Limit Per User',\n\t\t\t\tname: 'rate_limit_per_user',\n\t\t\t\ttype: 'number',\n\t\t\t\tdefault: 0,\n\t\t\t\tdescription: 'Amount of seconds a user has to wait before sending another message',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\thide: {\n\t\t\t\t\t\t'/type': ['4'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Topic',\n\t\t\t\tname: 'topic',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\trows: 2,\n\t\t\t\t},\n\t\t\t\tdescription: 'The channel topic description (0-1024 characters)',\n\t\t\t\tplaceholder: 'e.g. This channel is aboutâ€¦',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\thide: {\n\t\t\t\t\t\t'/type': ['4'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'User Limit',\n\t\t\t\tname: 'user_limit',\n\t\t\t\ttype: 'number',\n\t\t\t\tdefault: 0,\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tminValue: 0,\n\t\t\t\t\tmaxValue: 99,\n\t\t\t\t},\n\t\t\t\tplaceholder: 'e.g. 20',\n\t\t\t\tdescription:\n\t\t\t\t\t'The limit for the number of members that can be in the channel (0 refers to no limit)',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\t'/type': ['2'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n];\n\nconst displayOptions = {\n\tshow: {\n\t\tresource: ['channel'],\n\t\toperation: ['create'],\n\t},\n\thide: {\n\t\tauthentication: ['webhook'],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n\nexport async function execute(\n\tthis: IExecuteFunctions,\n\tguildId: string,\n): Promise<INodeExecutionData[]> {\n\tconst returnData: INodeExecutionData[] = [];\n\tconst items = this.getInputData();\n\n\tfor (let i = 0; i < items.length; i++) {\n\t\ttry {\n\t\t\tconst name = this.getNodeParameter('name', i) as string;\n\t\t\tconst type = this.getNodeParameter('type', i) as string;\n\t\t\tconst options = this.getNodeParameter('options', i);\n\n\t\t\tif (options.categoryId) {\n\t\t\t\toptions.parent_id = (options.categoryId as IDataObject).value;\n\t\t\t\tdelete options.categoryId;\n\t\t\t}\n\n\t\t\tconst body: IDataObject = {\n\t\t\t\tname,\n\t\t\t\ttype,\n\t\t\t\t...options,\n\t\t\t};\n\n\t\t\tconst response = await discordApiRequest.call(\n\t\t\t\tthis,\n\t\t\t\t'POST',\n\t\t\t\t`/guilds/${guildId}/channels`,\n\t\t\t\tbody,\n\t\t\t);\n\n\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\tthis.helpers.returnJsonArray(response),\n\t\t\t\t{ itemData: { item: i } },\n\t\t\t);\n\n\t\t\treturnData.push(...executionData);\n\t\t} catch (error) {\n\t\t\tconst err = parseDiscordError.call(this, error, i);\n\n\t\t\tif (this.continueOnFail()) {\n\t\t\t\treturnData.push(...prepareErrorData.call(this, err, i));\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\treturn returnData;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,uBAAqC;AACrC,mBAAoD;AACpD,uBAAkC;AAClC,oBAA4B;AAE5B,MAAM,aAAgC;AAAA,EACrC;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS;AAAA,IACT,UAAU;AAAA,IACV,aAAa;AAAA,IACb,aAAa;AAAA,EACd;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS;AAAA,IACT,UAAU;AAAA,IACV,aAAa;AAAA,IACb,SAAS;AAAA,MACR;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,IACD;AAAA,EACD;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,SAAS,CAAC;AAAA,IACV,SAAS;AAAA,MACR;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aAAa;AAAA,QACb,gBAAgB;AAAA,UACf,MAAM;AAAA,YACL,SAAS,CAAC,GAAG;AAAA,UACd;AAAA,QACD;AAAA,MACD;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aAAa;AAAA,QACb,aAAa;AAAA,UACZ,UAAU;AAAA,UACV,UAAU;AAAA,QACX;AAAA,QACA,aAAa;AAAA,QACb,gBAAgB;AAAA,UACf,MAAM;AAAA,YACL,SAAS,CAAC,GAAG;AAAA,UACd;AAAA,QACD;AAAA,MACD;AAAA,MACA;AAAA,QACC,GAAG;AAAA,QACH,gBAAgB;AAAA,UACf,MAAM;AAAA,YACL,SAAS,CAAC,GAAG;AAAA,UACd;AAAA,QACD;AAAA,MACD;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,MACV;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aAAa;AAAA,QACb,gBAAgB;AAAA,UACf,MAAM;AAAA,YACL,SAAS,CAAC,GAAG;AAAA,UACd;AAAA,QACD;AAAA,MACD;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aAAa;AAAA,UACZ,MAAM;AAAA,QACP;AAAA,QACA,aAAa;AAAA,QACb,aAAa;AAAA,QACb,gBAAgB;AAAA,UACf,MAAM;AAAA,YACL,SAAS,CAAC,GAAG;AAAA,UACd;AAAA,QACD;AAAA,MACD;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aAAa;AAAA,UACZ,UAAU;AAAA,UACV,UAAU;AAAA,QACX;AAAA,QACA,aAAa;AAAA,QACb,aACC;AAAA,QACD,gBAAgB;AAAA,UACf,MAAM;AAAA,YACL,SAAS,CAAC,GAAG;AAAA,UACd;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;AAEA,MAAM,iBAAiB;AAAA,EACtB,MAAM;AAAA,IACL,UAAU,CAAC,SAAS;AAAA,IACpB,WAAW,CAAC,QAAQ;AAAA,EACrB;AAAA,EACA,MAAM;AAAA,IACL,gBAAgB,CAAC,SAAS;AAAA,EAC3B;AACD;AAEO,MAAM,kBAAc,uCAAqB,gBAAgB,UAAU;AAE1E,eAAsB,QAErB,SACgC;AAChC,QAAM,aAAmC,CAAC;AAC1C,QAAM,QAAQ,KAAK,aAAa;AAEhC,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACtC,QAAI;AACH,YAAM,OAAO,KAAK,iBAAiB,QAAQ,CAAC;AAC5C,YAAM,OAAO,KAAK,iBAAiB,QAAQ,CAAC;AAC5C,YAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAElD,UAAI,QAAQ,YAAY;AACvB,gBAAQ,YAAa,QAAQ,WAA2B;AACxD,eAAO,QAAQ;AAAA,MAChB;AAEA,YAAM,OAAoB;AAAA,QACzB;AAAA,QACA;AAAA,QACA,GAAG;AAAA,MACJ;AAEA,YAAM,WAAW,MAAM,mCAAkB;AAAA,QACxC;AAAA,QACA;AAAA,QACA,WAAW,OAAO;AAAA,QAClB;AAAA,MACD;AAEA,YAAM,gBAAgB,KAAK,QAAQ;AAAA,QAClC,KAAK,QAAQ,gBAAgB,QAAQ;AAAA,QACrC,EAAE,UAAU,EAAE,MAAM,EAAE,EAAE;AAAA,MACzB;AAEA,iBAAW,KAAK,GAAG,aAAa;AAAA,IACjC,SAAS,OAAO;AACf,YAAM,MAAM,+BAAkB,KAAK,MAAM,OAAO,CAAC;AAEjD,UAAI,KAAK,eAAe,GAAG;AAC1B,mBAAW,KAAK,GAAG,8BAAiB,KAAK,MAAM,KAAK,CAAC,CAAC;AACtD;AAAA,MACD;AAEA,YAAM;AAAA,IACP;AAAA,EACD;AAEA,SAAO;AACR;","names":[]}