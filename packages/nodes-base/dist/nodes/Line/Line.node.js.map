{"version":3,"sources":["../../../nodes/Line/Line.node.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes } from 'n8n-workflow';\n\nimport { lineApiRequest } from './GenericFunctions';\nimport { notificationFields, notificationOperations } from './NotificationDescription';\n\nexport class Line implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Line',\n\t\tname: 'line',\n\t\t// eslint-disable-next-line n8n-nodes-base/node-class-description-icon-not-svg\n\t\ticon: 'file:line.png',\n\t\tgroup: ['input'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume Line API',\n\t\tdefaults: {\n\t\t\tname: 'Line',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'lineNotifyOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['notification'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName:\n\t\t\t\t\t'End of service: LINE Notify will be discontinued from April 1st 2025, You can find more information <a href=\"https://notify-bot.line.me/closing-announce\" target=\"_blank\">here</a>',\n\t\t\t\tname: 'notice',\n\t\t\t\ttype: 'notice',\n\t\t\t\tdefault: '',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Notification',\n\t\t\t\t\t\tvalue: 'notification',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'notification',\n\t\t\t},\n\t\t\t...notificationOperations,\n\t\t\t...notificationFields,\n\t\t],\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst length = items.length;\n\t\tlet responseData;\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'notification') {\n\t\t\t\t\t//https://notify-bot.line.me/doc/en/\n\t\t\t\t\tif (operation === 'send') {\n\t\t\t\t\t\tconst message = this.getNodeParameter('message', i) as string;\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tObject.assign(body, additionalFields);\n\n\t\t\t\t\t\tif (body.hasOwnProperty('notificationDisabled')) {\n\t\t\t\t\t\t\tbody.notificationDisabled = body.notificationDisabled ? 'true' : 'false';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (body.stickerUi) {\n\t\t\t\t\t\t\tconst sticker = (body.stickerUi as IDataObject).stickerValue as IDataObject;\n\t\t\t\t\t\t\tif (sticker) {\n\t\t\t\t\t\t\t\tbody.stickerId = sticker.stickerId;\n\t\t\t\t\t\t\t\tbody.stickerPackageId = sticker.stickerPackageId;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete body.stickerUi;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (body.imageUi) {\n\t\t\t\t\t\t\tconst image = (body.imageUi as IDataObject).imageValue as IDataObject;\n\n\t\t\t\t\t\t\tif (image && image.binaryData === true) {\n\t\t\t\t\t\t\t\tconst binaryProperty = image.binaryProperty as string;\n\t\t\t\t\t\t\t\tconst binaryData = this.helpers.assertBinaryData(i, binaryProperty);\n\t\t\t\t\t\t\t\tconst binaryDataBuffer = await this.helpers.getBinaryDataBuffer(i, binaryProperty);\n\n\t\t\t\t\t\t\t\tbody.imageFile = {\n\t\t\t\t\t\t\t\t\tvalue: binaryDataBuffer,\n\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\tfilename: binaryData.fileName,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbody.imageFullsize = image.imageFullsize;\n\t\t\t\t\t\t\t\tbody.imageThumbnail = image.imageThumbnail;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete body.imageUi;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await lineApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t'https://notify-api.line.me/api/notify',\n\t\t\t\t\t\t\t{ formData: body },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject),\n\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t);\n\n\t\t\t\treturnData.push(...executionData);\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":[]}