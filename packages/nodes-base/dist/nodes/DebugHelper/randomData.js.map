{"version":3,"sources":["../../../nodes/DebugHelper/randomData.ts"],"sourcesContent":["import {\n\tfirstName,\n\tlastName,\n\tstreetAddress,\n\tcityName,\n\tzipCode,\n\tstate,\n\tcountry,\n\tpassword,\n\tcreditCardNumber,\n\tcreditCardCVV,\n\temail,\n\tboolean,\n\tuuid,\n\tnanoId,\n\tdomainUrl,\n\tsemver,\n\tlatLong,\n\tmacAddress,\n\tip,\n\tipv6,\n\tnumber,\n} from 'minifaker';\nimport 'minifaker/locales/en';\n\nexport function generateRandomUser() {\n\treturn {\n\t\tuid: uuid.v4(),\n\t\temail: email(),\n\t\tfirstname: firstName(),\n\t\tlastname: lastName(),\n\t\tpassword: password(),\n\t};\n}\n\nexport function generateRandomAddress() {\n\treturn {\n\t\tfirstname: firstName(),\n\t\tlastname: lastName(),\n\t\tstreet: streetAddress(),\n\t\tcity: cityName(),\n\t\tzip: zipCode({ format: '#####' }),\n\t\tstate: state(),\n\t\tcountry: country(),\n\t};\n}\n\nexport function generateRandomEmail() {\n\treturn {\n\t\temail: email(),\n\t\tconfirmed: boolean(),\n\t};\n}\n\nexport function generateUUID() {\n\treturn { uuid: uuid.v4() };\n}\n\nexport function generateNanoid(customAlphabet: string, length: string) {\n\treturn { nanoId: nanoId.customAlphabet(customAlphabet, parseInt(length, 10))().toString() };\n}\n\nexport function generateCreditCard() {\n\treturn {\n\t\ttype: boolean() ? 'MasterCard' : 'Visa',\n\t\tnumber: creditCardNumber(),\n\t\tccv: creditCardCVV(),\n\t\texp: `${number({ min: 1, max: 12, float: false }).toString().padStart(2, '0')}/${number({\n\t\t\tmin: 1,\n\t\t\tmax: 40,\n\t\t\tfloat: false,\n\t\t})\n\t\t\t.toString()\n\t\t\t.padStart(2, '0')}`,\n\t\tholder_name: `${firstName()} ${lastName()}`,\n\t};\n}\n\nexport function generateURL() {\n\treturn { url: domainUrl() };\n}\n\nexport function generateIPv4() {\n\treturn { ip: ip() };\n}\n\nexport function generateIPv6() {\n\treturn { ipv6: ipv6() };\n}\n\nexport function generateMAC() {\n\treturn { mac: macAddress() };\n}\n\nexport function generateLocation() {\n\treturn { location: latLong() };\n}\n\nexport function generateVersion() {\n\treturn { version: semver() };\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAsBO;AACP,gBAAO;AAEA,SAAS,qBAAqB;AACpC,SAAO;AAAA,IACN,KAAK,sBAAK,GAAG;AAAA,IACb,WAAO,wBAAM;AAAA,IACb,eAAW,4BAAU;AAAA,IACrB,cAAU,2BAAS;AAAA,IACnB,cAAU,2BAAS;AAAA,EACpB;AACD;AAEO,SAAS,wBAAwB;AACvC,SAAO;AAAA,IACN,eAAW,4BAAU;AAAA,IACrB,cAAU,2BAAS;AAAA,IACnB,YAAQ,gCAAc;AAAA,IACtB,UAAM,2BAAS;AAAA,IACf,SAAK,0BAAQ,EAAE,QAAQ,QAAQ,CAAC;AAAA,IAChC,WAAO,wBAAM;AAAA,IACb,aAAS,0BAAQ;AAAA,EAClB;AACD;AAEO,SAAS,sBAAsB;AACrC,SAAO;AAAA,IACN,WAAO,wBAAM;AAAA,IACb,eAAW,0BAAQ;AAAA,EACpB;AACD;AAEO,SAAS,eAAe;AAC9B,SAAO,EAAE,MAAM,sBAAK,GAAG,EAAE;AAC1B;AAEO,SAAS,eAAe,gBAAwB,QAAgB;AACtE,SAAO,EAAE,QAAQ,wBAAO,eAAe,gBAAgB,SAAS,QAAQ,EAAE,CAAC,EAAE,EAAE,SAAS,EAAE;AAC3F;AAEO,SAAS,qBAAqB;AACpC,SAAO;AAAA,IACN,UAAM,0BAAQ,IAAI,eAAe;AAAA,IACjC,YAAQ,mCAAiB;AAAA,IACzB,SAAK,gCAAc;AAAA,IACnB,KAAK,OAAG,yBAAO,EAAE,KAAK,GAAG,KAAK,IAAI,OAAO,MAAM,CAAC,EAAE,SAAS,EAAE,SAAS,GAAG,GAAG,CAAC,QAAI,yBAAO;AAAA,MACvF,KAAK;AAAA,MACL,KAAK;AAAA,MACL,OAAO;AAAA,IACR,CAAC,EACC,SAAS,EACT,SAAS,GAAG,GAAG,CAAC;AAAA,IAClB,aAAa,OAAG,4BAAU,CAAC,QAAI,2BAAS,CAAC;AAAA,EAC1C;AACD;AAEO,SAAS,cAAc;AAC7B,SAAO,EAAE,SAAK,4BAAU,EAAE;AAC3B;AAEO,SAAS,eAAe;AAC9B,SAAO,EAAE,QAAI,qBAAG,EAAE;AACnB;AAEO,SAAS,eAAe;AAC9B,SAAO,EAAE,UAAM,uBAAK,EAAE;AACvB;AAEO,SAAS,cAAc;AAC7B,SAAO,EAAE,SAAK,6BAAW,EAAE;AAC5B;AAEO,SAAS,mBAAmB;AAClC,SAAO,EAAE,cAAU,0BAAQ,EAAE;AAC9B;AAEO,SAAS,kBAAkB;AACjC,SAAO,EAAE,aAAS,yBAAO,EAAE;AAC5B;","names":[]}