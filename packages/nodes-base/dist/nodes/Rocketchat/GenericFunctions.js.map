{"version":3,"sources":["../../../nodes/Rocketchat/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHttpRequestMethods,\n\tILoadOptionsFunctions,\n\tIRequestOptions,\n} from 'n8n-workflow';\n\nexport async function rocketchatApiRequest(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions,\n\tresource: string,\n\tmethod: IHttpRequestMethods,\n\toperation: string,\n\n\tbody: any = {},\n\theaders?: IDataObject,\n): Promise<any> {\n\tconst credentials = await this.getCredentials('rocketchatApi');\n\n\tconst options: IRequestOptions = {\n\t\theaders,\n\t\tmethod,\n\t\tbody,\n\t\turi: `${credentials.domain}/api/v1${resource}.${operation}`,\n\t\tjson: true,\n\t};\n\tif (Object.keys(options.body as IDataObject).length === 0) {\n\t\tdelete options.body;\n\t}\n\treturn await this.helpers.requestWithAuthentication.call(this, 'rocketchatApi', options);\n}\n\nexport function validateJSON(json: string | undefined): any {\n\tlet result;\n\ttry {\n\t\tresult = JSON.parse(json!);\n\t} catch (exception) {\n\t\tresult = [];\n\t}\n\treturn result;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,eAAsB,qBAErB,UACA,QACA,WAEA,OAAY,CAAC,GACb,SACe;AACf,QAAM,cAAc,MAAM,KAAK,eAAe,eAAe;AAE7D,QAAM,UAA2B;AAAA,IAChC;AAAA,IACA;AAAA,IACA;AAAA,IACA,KAAK,GAAG,YAAY,MAAM,UAAU,QAAQ,IAAI,SAAS;AAAA,IACzD,MAAM;AAAA,EACP;AACA,MAAI,OAAO,KAAK,QAAQ,IAAmB,EAAE,WAAW,GAAG;AAC1D,WAAO,QAAQ;AAAA,EAChB;AACA,SAAO,MAAM,KAAK,QAAQ,0BAA0B,KAAK,MAAM,iBAAiB,OAAO;AACxF;AAEO,SAAS,aAAa,MAA+B;AAC3D,MAAI;AACJ,MAAI;AACH,aAAS,KAAK,MAAM,IAAK;AAAA,EAC1B,SAAS,WAAW;AACnB,aAAS,CAAC;AAAA,EACX;AACA,SAAO;AACR;","names":[]}