{"version":3,"sources":["../../../../nodes/Files/ConvertToFile/ConvertToFile.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes } from 'n8n-workflow';\n\nimport * as iCall from './actions/iCall.operation';\nimport * as spreadsheet from './actions/spreadsheet.operation';\nimport * as toBinary from './actions/toBinary.operation';\nimport * as toJson from './actions/toJson.operation';\nimport * as toText from './actions/toText.operation';\n\nexport class ConvertToFile implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Convert to File',\n\t\tname: 'convertToFile',\n\t\ticon: { light: 'file:convertToFile.svg', dark: 'file:convertToFile.dark.svg' },\n\t\tgroup: ['input'],\n\t\tversion: [1, 1.1],\n\t\tdescription: 'Convert JSON data to binary data',\n\t\tdefaults: {\n\t\t\tname: 'Convert to File',\n\t\t},\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Convert to CSV',\n\t\t\t\t\t\tvalue: 'csv',\n\t\t\t\t\t\taction: 'Convert to CSV',\n\t\t\t\t\t\tdescription: 'Transform input data into a CSV file',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Convert to HTML',\n\t\t\t\t\t\tvalue: 'html',\n\t\t\t\t\t\taction: 'Convert to HTML',\n\t\t\t\t\t\tdescription: 'Transform input data into a table in an HTML file',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Convert to ICS',\n\t\t\t\t\t\tvalue: 'iCal',\n\t\t\t\t\t\taction: 'Convert to ICS',\n\t\t\t\t\t\tdescription: 'Converts each input item to an ICS event file',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Convert to JSON',\n\t\t\t\t\t\tvalue: 'toJson',\n\t\t\t\t\t\taction: 'Convert to JSON',\n\t\t\t\t\t\tdescription: 'Transform input data into a single or multiple JSON files',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Convert to ODS',\n\t\t\t\t\t\tvalue: 'ods',\n\t\t\t\t\t\taction: 'Convert to ODS',\n\t\t\t\t\t\tdescription: 'Transform input data into an ODS file',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Convert to RTF',\n\t\t\t\t\t\tvalue: 'rtf',\n\t\t\t\t\t\taction: 'Convert to RTF',\n\t\t\t\t\t\tdescription: 'Transform input data into a table in an RTF file',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Convert to Text File',\n\t\t\t\t\t\tvalue: 'toText',\n\t\t\t\t\t\taction: 'Convert to text file',\n\t\t\t\t\t\tdescription: 'Transform input data string into a file',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Convert to XLS',\n\t\t\t\t\t\tvalue: 'xls',\n\t\t\t\t\t\taction: 'Convert to XLS',\n\t\t\t\t\t\tdescription: 'Transform input data into an Excel file',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Convert to XLSX',\n\t\t\t\t\t\tvalue: 'xlsx',\n\t\t\t\t\t\taction: 'Convert to XLSX',\n\t\t\t\t\t\tdescription: 'Transform input data into an Excel file',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Move Base64 String to File',\n\t\t\t\t\t\tvalue: 'toBinary',\n\t\t\t\t\t\taction: 'Move base64 string to file',\n\t\t\t\t\t\tdescription: 'Convert a base64-encoded string into its original file format',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'csv',\n\t\t\t},\n\t\t\t...spreadsheet.description,\n\t\t\t...toBinary.description,\n\t\t\t...toText.description,\n\t\t\t...toJson.description,\n\t\t\t...iCall.description,\n\t\t],\n\t};\n\n\tasync execute(this: IExecuteFunctions) {\n\t\tconst items = this.getInputData();\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\t\tlet returnData: INodeExecutionData[] = [];\n\n\t\tif (spreadsheet.operations.includes(operation)) {\n\t\t\treturnData = await spreadsheet.execute.call(this, items, operation);\n\t\t}\n\n\t\tif (operation === 'toJson') {\n\t\t\treturnData = await toJson.execute.call(this, items);\n\t\t}\n\n\t\tif (operation === 'toBinary') {\n\t\t\treturnData = await toBinary.execute.call(this, items);\n\t\t}\n\n\t\tif (operation === 'toText') {\n\t\t\treturnData = await toText.execute.call(this, items);\n\t\t}\n\n\t\tif (operation === 'iCal') {\n\t\t\treturnData = await iCall.execute.call(this, items);\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":[]}