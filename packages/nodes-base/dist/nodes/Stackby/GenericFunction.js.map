{"version":3,"sources":["../../../nodes/Stackby/GenericFunction.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHookFunctions,\n\tIHttpRequestMethods,\n\tILoadOptionsFunctions,\n\tIPollFunctions,\n\tIRequestOptions,\n\tJsonObject,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\n/**\n * Make an API request to Airtable\n *\n */\nexport async function apiRequest(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions | IPollFunctions,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\tbody: IDataObject,\n\tquery?: IDataObject,\n\turi?: string,\n\toption: IDataObject = {},\n): Promise<any> {\n\tconst credentials = await this.getCredentials('stackbyApi');\n\n\tconst options: IRequestOptions = {\n\t\theaders: {\n\t\t\t'api-key': credentials.apiKey,\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tmethod,\n\t\tbody,\n\t\tqs: query,\n\t\turi: uri || `https://stackby.com/api/betav1${endpoint}`,\n\t\tjson: true,\n\t};\n\n\tif (Object.keys(option).length !== 0) {\n\t\tObject.assign(options, option);\n\t}\n\n\tif (Object.keys(body).length === 0) {\n\t\tdelete options.body;\n\t}\n\n\ttry {\n\t\treturn await this.helpers.request(options);\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\n/**\n * Make an API request to paginated Airtable endpoint\n * and return all results\n *\n * @param {(IHookFunctions | IExecuteFunctions)} this\n */\nexport async function apiRequestAllItems(\n\tthis: IHookFunctions | IExecuteFunctions | IPollFunctions,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\tbody: IDataObject = {},\n\tquery: IDataObject = {},\n) {\n\tquery.maxrecord = 100;\n\n\tquery.offset = 0;\n\n\tconst returnData: IDataObject[] = [];\n\n\tlet responseData;\n\n\tdo {\n\t\tresponseData = await apiRequest.call(this, method, endpoint, body, query);\n\t\treturnData.push.apply(returnData, responseData as IDataObject[]);\n\t\tquery.offset += query.maxrecord;\n\t} while (responseData.length !== 0);\n\n\treturn returnData;\n}\n\nexport interface IRecord {\n\tfield: {\n\t\t[key: string]: string;\n\t};\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA,0BAA6B;AAM7B,eAAsB,WAErB,QACA,UACA,MACA,OACA,KACA,SAAsB,CAAC,GACR;AACf,QAAM,cAAc,MAAM,KAAK,eAAe,YAAY;AAE1D,QAAM,UAA2B;AAAA,IAChC,SAAS;AAAA,MACR,WAAW,YAAY;AAAA,MACvB,gBAAgB;AAAA,IACjB;AAAA,IACA;AAAA,IACA;AAAA,IACA,IAAI;AAAA,IACJ,KAAK,OAAO,iCAAiC,QAAQ;AAAA,IACrD,MAAM;AAAA,EACP;AAEA,MAAI,OAAO,KAAK,MAAM,EAAE,WAAW,GAAG;AACrC,WAAO,OAAO,SAAS,MAAM;AAAA,EAC9B;AAEA,MAAI,OAAO,KAAK,IAAI,EAAE,WAAW,GAAG;AACnC,WAAO,QAAQ;AAAA,EAChB;AAEA,MAAI;AACH,WAAO,MAAM,KAAK,QAAQ,QAAQ,OAAO;AAAA,EAC1C,SAAS,OAAO;AACf,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,KAAmB;AAAA,EAC3D;AACD;AAQA,eAAsB,mBAErB,QACA,UACA,OAAoB,CAAC,GACrB,QAAqB,CAAC,GACrB;AACD,QAAM,YAAY;AAElB,QAAM,SAAS;AAEf,QAAM,aAA4B,CAAC;AAEnC,MAAI;AAEJ,KAAG;AACF,mBAAe,MAAM,WAAW,KAAK,MAAM,QAAQ,UAAU,MAAM,KAAK;AACxE,eAAW,KAAK,MAAM,YAAY,YAA6B;AAC/D,UAAM,UAAU,MAAM;AAAA,EACvB,SAAS,aAAa,WAAW;AAEjC,SAAO;AACR;","names":[]}