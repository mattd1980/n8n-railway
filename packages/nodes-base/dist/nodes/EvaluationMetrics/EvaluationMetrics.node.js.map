{"version":3,"sources":["../../../nodes/EvaluationMetrics/EvaluationMetrics.node.ts"],"sourcesContent":["import type {\n\tAssignmentCollectionValue,\n\tFieldType,\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport { composeReturnItem, validateEntry } from '../Set/v2/helpers/utils';\n\nexport class EvaluationMetrics implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Evaluation Metrics',\n\t\tname: 'evaluationMetrics',\n\t\ticon: 'fa:check-double',\n\t\tgroup: ['input'],\n\t\ticonColor: 'light-green',\n\t\tversion: 1,\n\t\tdescription: 'Define the metrics returned for workflow evaluation',\n\t\tdefaults: {\n\t\t\tname: 'Evaluation Metrics',\n\t\t\tcolor: '#29A568',\n\t\t},\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName:\n\t\t\t\t\t\"Define the evaluation metrics returned in your report. Only numeric values are supported. <a href='https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.evaluationmetric/' target='_blank'>More Info</a>\",\n\t\t\t\tname: 'notice',\n\t\t\t\ttype: 'notice',\n\t\t\t\tdefault: '',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Metrics to Return',\n\t\t\t\tname: 'metrics',\n\t\t\t\ttype: 'assignmentCollection',\n\t\t\t\tdefault: {\n\t\t\t\t\tassignments: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: '',\n\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tassignment: {\n\t\t\t\t\t\tdisableType: true,\n\t\t\t\t\t\tdefaultType: 'number',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst metrics: INodeExecutionData[] = [];\n\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\tconst dataToSave = this.getNodeParameter('metrics', i, {}) as AssignmentCollectionValue;\n\n\t\t\tconst newItem: INodeExecutionData = {\n\t\t\t\tjson: {},\n\t\t\t\tpairedItem: { item: i },\n\t\t\t};\n\t\t\tconst newData = Object.fromEntries(\n\t\t\t\t(dataToSave?.assignments ?? []).map((assignment) => {\n\t\t\t\t\tconst assignmentValue =\n\t\t\t\t\t\ttypeof assignment.value === 'number' ? assignment.value : Number(assignment.value);\n\n\t\t\t\t\tif (isNaN(assignmentValue)) {\n\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t`Invalid numeric value: \"${assignment.value}\". Please provide a valid number.`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst { name, value } = validateEntry(\n\t\t\t\t\t\tassignment.name,\n\t\t\t\t\t\tassignment.type as FieldType,\n\t\t\t\t\t\tassignmentValue,\n\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t1,\n\t\t\t\t\t);\n\n\t\t\t\t\treturn [name, value];\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst returnItem = composeReturnItem.call(\n\t\t\t\tthis,\n\t\t\t\ti,\n\t\t\t\tnewItem,\n\t\t\t\tnewData,\n\t\t\t\t{ dotNotation: false, include: 'none' },\n\t\t\t\t1,\n\t\t\t);\n\t\t\tmetrics.push(returnItem);\n\t\t}\n\n\t\treturn [metrics];\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,0BAAwD;AAExD,mBAAiD;AAE1C,MAAM,kBAAuC;AAAA,EAA7C;AACN,uBAAoC;AAAA,MACnC,aAAa;AAAA,MACb,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO,CAAC,OAAO;AAAA,MACf,WAAW;AAAA,MACX,SAAS;AAAA,MACT,aAAa;AAAA,MACb,UAAU;AAAA,QACT,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,MACA,QAAQ,CAAC,wCAAoB,IAAI;AAAA,MACjC,SAAS,CAAC,wCAAoB,IAAI;AAAA,MAClC,YAAY;AAAA,QACX;AAAA,UACC,aACC;AAAA,UACD,MAAM;AAAA,UACN,MAAM;AAAA,UACN,SAAS;AAAA,QACV;AAAA,QACA;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,SAAS;AAAA,YACR,aAAa;AAAA,cACZ;AAAA,gBACC,MAAM;AAAA,gBACN,OAAO;AAAA,gBACP,MAAM;AAAA,cACP;AAAA,YACD;AAAA,UACD;AAAA,UACA,aAAa;AAAA,YACZ,YAAY;AAAA,cACX,aAAa;AAAA,cACb,aAAa;AAAA,YACd;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA;AAAA,EAEA,MAAM,UAAkE;AACvE,UAAM,QAAQ,KAAK,aAAa;AAChC,UAAM,UAAgC,CAAC;AAEvC,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACtC,YAAM,aAAa,KAAK,iBAAiB,WAAW,GAAG,CAAC,CAAC;AAEzD,YAAM,UAA8B;AAAA,QACnC,MAAM,CAAC;AAAA,QACP,YAAY,EAAE,MAAM,EAAE;AAAA,MACvB;AACA,YAAM,UAAU,OAAO;AAAA,SACrB,YAAY,eAAe,CAAC,GAAG,IAAI,CAAC,eAAe;AACnD,gBAAM,kBACL,OAAO,WAAW,UAAU,WAAW,WAAW,QAAQ,OAAO,WAAW,KAAK;AAElF,cAAI,MAAM,eAAe,GAAG;AAC3B,kBAAM,IAAI;AAAA,cACT,KAAK,QAAQ;AAAA,cACb,2BAA2B,WAAW,KAAK;AAAA,YAC5C;AAAA,UACD;AAEA,gBAAM,EAAE,MAAM,MAAM,QAAI;AAAA,YACvB,WAAW;AAAA,YACX,WAAW;AAAA,YACX;AAAA,YACA,KAAK,QAAQ;AAAA,YACb;AAAA,YACA;AAAA,YACA;AAAA,UACD;AAEA,iBAAO,CAAC,MAAM,KAAK;AAAA,QACpB,CAAC;AAAA,MACF;AAEA,YAAM,aAAa,+BAAkB;AAAA,QACpC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,EAAE,aAAa,OAAO,SAAS,OAAO;AAAA,QACtC;AAAA,MACD;AACA,cAAQ,KAAK,UAAU;AAAA,IACxB;AAEA,WAAO,CAAC,OAAO;AAAA,EAChB;AACD;","names":[]}