{"version":3,"sources":["../../../nodes/Keap/GenericFunctions.ts"],"sourcesContent":["import { snakeCase } from 'change-case';\nimport type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHookFunctions,\n\tIHttpRequestMethods,\n\tILoadOptionsFunctions,\n\tIRequestOptions,\n\tIWebhookFunctions,\n\tJsonObject,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\nexport async function keapApiRequest(\n\tthis: IWebhookFunctions | IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tresource: string,\n\n\tbody: any = {},\n\tqs: IDataObject = {},\n\turi?: string,\n\theaders: IDataObject = {},\n\toption: IDataObject = {},\n): Promise<any> {\n\tlet options: IRequestOptions = {\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tmethod,\n\t\tbody,\n\t\tqs,\n\t\turi: uri || `https://api.infusionsoft.com/crm/rest/v1${resource}`,\n\t\tjson: true,\n\t};\n\ttry {\n\t\toptions = Object.assign({}, options, option);\n\t\tif (Object.keys(headers).length !== 0) {\n\t\t\toptions.headers = Object.assign({}, options.headers, headers);\n\t\t}\n\t\tif (Object.keys(body as IDataObject).length === 0) {\n\t\t\tdelete options.body;\n\t\t}\n\t\treturn await this.helpers.requestOAuth2.call(this, 'keapOAuth2Api', options);\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\nexport async function keapApiRequestAllItems(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tpropertyName: string,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\n\tbody: any = {},\n\tquery: IDataObject = {},\n): Promise<any> {\n\tconst returnData: IDataObject[] = [];\n\n\tlet responseData;\n\tlet uri: string | undefined;\n\tquery.limit = 50;\n\n\tdo {\n\t\tresponseData = await keapApiRequest.call(this, method, endpoint, body, query, uri);\n\t\turi = responseData.next;\n\t\treturnData.push.apply(returnData, responseData[propertyName] as IDataObject[]);\n\t} while (returnData.length < responseData.count);\n\n\treturn returnData;\n}\n\nexport function keysToSnakeCase(elements: IDataObject[] | IDataObject): IDataObject[] {\n\tif (!Array.isArray(elements)) {\n\t\telements = [elements];\n\t}\n\tfor (const element of elements) {\n\t\tfor (const key of Object.keys(element)) {\n\t\t\tif (key !== snakeCase(key)) {\n\t\t\t\telement[snakeCase(key)] = element[key];\n\t\t\t\tdelete element[key];\n\t\t\t}\n\t\t}\n\t}\n\treturn elements;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAA0B;AAW1B,0BAA6B;AAE7B,eAAsB,eAErB,QACA,UAEA,OAAY,CAAC,GACb,KAAkB,CAAC,GACnB,KACA,UAAuB,CAAC,GACxB,SAAsB,CAAC,GACR;AACf,MAAI,UAA2B;AAAA,IAC9B,SAAS;AAAA,MACR,gBAAgB;AAAA,IACjB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,KAAK,OAAO,2CAA2C,QAAQ;AAAA,IAC/D,MAAM;AAAA,EACP;AACA,MAAI;AACH,cAAU,OAAO,OAAO,CAAC,GAAG,SAAS,MAAM;AAC3C,QAAI,OAAO,KAAK,OAAO,EAAE,WAAW,GAAG;AACtC,cAAQ,UAAU,OAAO,OAAO,CAAC,GAAG,QAAQ,SAAS,OAAO;AAAA,IAC7D;AACA,QAAI,OAAO,KAAK,IAAmB,EAAE,WAAW,GAAG;AAClD,aAAO,QAAQ;AAAA,IAChB;AACA,WAAO,MAAM,KAAK,QAAQ,cAAc,KAAK,MAAM,iBAAiB,OAAO;AAAA,EAC5E,SAAS,OAAO;AACf,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,KAAmB;AAAA,EAC3D;AACD;AAEA,eAAsB,uBAErB,cACA,QACA,UAEA,OAAY,CAAC,GACb,QAAqB,CAAC,GACP;AACf,QAAM,aAA4B,CAAC;AAEnC,MAAI;AACJ,MAAI;AACJ,QAAM,QAAQ;AAEd,KAAG;AACF,mBAAe,MAAM,eAAe,KAAK,MAAM,QAAQ,UAAU,MAAM,OAAO,GAAG;AACjF,UAAM,aAAa;AACnB,eAAW,KAAK,MAAM,YAAY,aAAa,YAAY,CAAkB;AAAA,EAC9E,SAAS,WAAW,SAAS,aAAa;AAE1C,SAAO;AACR;AAEO,SAAS,gBAAgB,UAAsD;AACrF,MAAI,CAAC,MAAM,QAAQ,QAAQ,GAAG;AAC7B,eAAW,CAAC,QAAQ;AAAA,EACrB;AACA,aAAW,WAAW,UAAU;AAC/B,eAAW,OAAO,OAAO,KAAK,OAAO,GAAG;AACvC,UAAI,YAAQ,8BAAU,GAAG,GAAG;AAC3B,oBAAQ,8BAAU,GAAG,CAAC,IAAI,QAAQ,GAAG;AACrC,eAAO,QAAQ,GAAG;AAAA,MACnB;AAAA,IACD;AAAA,EACD;AACA,SAAO;AACR;","names":[]}