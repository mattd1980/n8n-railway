{"version":3,"sources":["../../../nodes/Shopify/Shopify.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport { keysToSnakeCase, shopifyApiRequest, shopifyApiRequestAllItems } from './GenericFunctions';\nimport { orderFields, orderOperations } from './OrderDescription';\nimport type { IAddress, IDiscountCode, ILineItem, IOrder } from './OrderInterface';\nimport { productFields, productOperations } from './ProductDescription';\nimport type { IProduct } from './ProductInterface';\n\nexport class Shopify implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Shopify',\n\t\tname: 'shopify',\n\t\ticon: 'file:shopify.svg',\n\t\tgroup: ['output'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume Shopify API',\n\t\tdefaults: {\n\t\t\tname: 'Shopify',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'shopifyApi',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['apiKey'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'shopifyAccessTokenApi',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['accessToken'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'shopifyOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['oAuth2'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Shopify API Version: 2024-07',\n\t\t\t\ttype: 'notice',\n\t\t\t\tname: 'apiVersion',\n\t\t\t\tdefault: '',\n\t\t\t\tisNodeSetting: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Authentication',\n\t\t\t\tname: 'authentication',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Access Token',\n\t\t\t\t\t\tvalue: 'accessToken',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'OAuth2',\n\t\t\t\t\t\tvalue: 'oAuth2',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'API Key',\n\t\t\t\t\t\tvalue: 'apiKey',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'apiKey',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Order',\n\t\t\t\t\t\tvalue: 'order',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Product',\n\t\t\t\t\t\tvalue: 'product',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'order',\n\t\t\t},\n\t\t\t// ORDER\n\t\t\t...orderOperations,\n\t\t\t...orderFields,\n\t\t\t// PRODUCTS\n\t\t\t...productOperations,\n\t\t\t...productFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get all the available products to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getProducts(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst products = await shopifyApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'products',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/products.json',\n\t\t\t\t\t{},\n\t\t\t\t\t{ fields: 'id,title' },\n\t\t\t\t);\n\t\t\t\tfor (const product of products) {\n\t\t\t\t\tconst productName = product.title;\n\t\t\t\t\tconst productId = product.id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: productName,\n\t\t\t\t\t\tvalue: productId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the available locations to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getLocations(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst locations = await shopifyApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'locations',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/locations.json',\n\t\t\t\t\t{},\n\t\t\t\t\t{ fields: 'id,name' },\n\t\t\t\t);\n\t\t\t\tfor (const location of locations) {\n\t\t\t\t\tconst locationName = location.name;\n\t\t\t\t\tconst locationId = location.id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: locationName,\n\t\t\t\t\t\tvalue: locationId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst length = items.length;\n\t\tlet responseData;\n\t\tconst qs: IDataObject = {};\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'order') {\n\t\t\t\t\t//https://shopify.dev/docs/admin-api/rest/reference/orders/order#create-2020-04\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst discount = additionalFields.discountCodesUi as IDataObject;\n\t\t\t\t\t\tconst billing = additionalFields.billingAddressUi as IDataObject;\n\t\t\t\t\t\tconst shipping = additionalFields.shippingAddressUi as IDataObject;\n\t\t\t\t\t\tconst lineItem = (this.getNodeParameter('limeItemsUi', i) as IDataObject)\n\t\t\t\t\t\t\t.lineItemValues as IDataObject[];\n\t\t\t\t\t\tif (lineItem === undefined) {\n\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t'At least one line item has to be added',\n\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst body: IOrder = {\n\t\t\t\t\t\t\ttest: true,\n\t\t\t\t\t\t\tline_items: keysToSnakeCase(lineItem) as ILineItem[],\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (additionalFields.fulfillmentStatus) {\n\t\t\t\t\t\t\tbody.fulfillment_status = additionalFields.fulfillmentStatus as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.inventoryBehaviour) {\n\t\t\t\t\t\t\tbody.inventory_behaviour = additionalFields.inventoryBehaviour as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.locationId) {\n\t\t\t\t\t\t\tbody.location_id = additionalFields.locationId as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.note) {\n\t\t\t\t\t\t\tbody.note = additionalFields.note as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.sendFulfillmentReceipt) {\n\t\t\t\t\t\t\tbody.send_fulfillment_receipt = additionalFields.sendFulfillmentReceipt as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.sendReceipt) {\n\t\t\t\t\t\t\tbody.send_receipt = additionalFields.sendReceipt as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.sendReceipt) {\n\t\t\t\t\t\t\tbody.send_receipt = additionalFields.sendReceipt as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.sourceName) {\n\t\t\t\t\t\t\tbody.source_name = additionalFields.sourceName as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.tags) {\n\t\t\t\t\t\t\tbody.tags = additionalFields.tags as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.test) {\n\t\t\t\t\t\t\tbody.test = additionalFields.test as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.email) {\n\t\t\t\t\t\t\tbody.email = additionalFields.email as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (discount) {\n\t\t\t\t\t\t\tbody.discount_codes = discount.discountCodesValues as IDiscountCode[];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (billing) {\n\t\t\t\t\t\t\tbody.billing_address = keysToSnakeCase(\n\t\t\t\t\t\t\t\tbilling.billingAddressValues as IDataObject,\n\t\t\t\t\t\t\t)[0] as IAddress;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (shipping) {\n\t\t\t\t\t\t\tbody.shipping_address = keysToSnakeCase(\n\t\t\t\t\t\t\t\tshipping.shippingAddressValues as IDataObject,\n\t\t\t\t\t\t\t)[0] as IAddress;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await shopifyApiRequest.call(this, 'POST', '/orders.json', {\n\t\t\t\t\t\t\torder: body,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tresponseData = responseData.order;\n\t\t\t\t\t}\n\t\t\t\t\t//https://shopify.dev/docs/admin-api/rest/reference/orders/order#destroy-2020-04\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst orderId = this.getNodeParameter('orderId', i) as string;\n\t\t\t\t\t\tresponseData = await shopifyApiRequest.call(this, 'DELETE', `/orders/${orderId}.json`);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t\t//https://shopify.dev/docs/admin-api/rest/reference/orders/order#show-2020-04\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst orderId = this.getNodeParameter('orderId', i) as string;\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tif (options.fields) {\n\t\t\t\t\t\t\tqs.fields = options.fields as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await shopifyApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/orders/${orderId}.json`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.order;\n\t\t\t\t\t}\n\t\t\t\t\t//https://shopify.dev/docs/admin-api/rest/reference/orders/order#index-2020-04\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tif (options.fields) {\n\t\t\t\t\t\t\tqs.fields = options.fields as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.attributionAppId) {\n\t\t\t\t\t\t\tqs.attribution_app_id = options.attributionAppId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.createdAtMin) {\n\t\t\t\t\t\t\tqs.created_at_min = options.createdAtMin as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.createdAtMax) {\n\t\t\t\t\t\t\tqs.created_at_max = options.createdAtMax as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.updatedAtMax) {\n\t\t\t\t\t\t\tqs.updated_at_max = options.updatedAtMax as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.updatedAtMin) {\n\t\t\t\t\t\t\tqs.updated_at_min = options.updatedAtMin as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.processedAtMin) {\n\t\t\t\t\t\t\tqs.processed_at_min = options.processedAtMin as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.processedAtMax) {\n\t\t\t\t\t\t\tqs.processed_at_max = options.processedAtMax as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.sinceId) {\n\t\t\t\t\t\t\tqs.since_id = options.sinceId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.ids) {\n\t\t\t\t\t\t\tqs.ids = options.ids as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.status) {\n\t\t\t\t\t\t\tqs.status = options.status as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.financialStatus) {\n\t\t\t\t\t\t\tqs.financial_status = options.financialStatus as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.fulfillmentStatus) {\n\t\t\t\t\t\t\tqs.fulfillment_status = options.fulfillmentStatus as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await shopifyApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'orders',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/orders.json',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await shopifyApiRequest.call(this, 'GET', '/orders.json', {}, qs);\n\t\t\t\t\t\t\tresponseData = responseData.orders;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://shopify.dev/docs/admin-api/rest/reference/orders/order#update-2019-10\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst orderId = this.getNodeParameter('orderId', i) as string;\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\tconst shipping = updateFields.shippingAddressUi as IDataObject;\n\t\t\t\t\t\tconst body: IOrder = {};\n\t\t\t\t\t\tif (updateFields.locationId) {\n\t\t\t\t\t\t\tbody.location_id = updateFields.locationId as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.note) {\n\t\t\t\t\t\t\tbody.note = updateFields.note as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.sourceName) {\n\t\t\t\t\t\t\tbody.source_name = updateFields.sourceName as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.tags) {\n\t\t\t\t\t\t\tbody.tags = updateFields.tags as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.email) {\n\t\t\t\t\t\t\tbody.email = updateFields.email as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (shipping) {\n\t\t\t\t\t\t\tbody.shipping_address = keysToSnakeCase(\n\t\t\t\t\t\t\t\tshipping.shippingAddressValues as IDataObject,\n\t\t\t\t\t\t\t)[0] as IAddress;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await shopifyApiRequest.call(this, 'PUT', `/orders/${orderId}.json`, {\n\t\t\t\t\t\t\torder: body,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tresponseData = responseData.order;\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'product') {\n\t\t\t\t\tconst productId = this.getNodeParameter('productId', i, '') as string;\n\t\t\t\t\tlet body: IProduct = {};\n\t\t\t\t\t//https://shopify.dev/docs/admin-api/rest/reference/products/product#create-2020-04\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst title = this.getNodeParameter('title', i) as string;\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i, {});\n\n\t\t\t\t\t\tif (additionalFields.productOptions) {\n\t\t\t\t\t\t\tconst metadata = (additionalFields.productOptions as IDataObject)\n\t\t\t\t\t\t\t\t.option as IDataObject[];\n\t\t\t\t\t\t\tadditionalFields.options = {};\n\t\t\t\t\t\t\tfor (const data of metadata) {\n\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\tadditionalFields.options[data.name as string] = data.value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete additionalFields.productOptions;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbody = additionalFields;\n\n\t\t\t\t\t\tbody.title = title;\n\n\t\t\t\t\t\tresponseData = await shopifyApiRequest.call(this, 'POST', '/products.json', {\n\t\t\t\t\t\t\tproduct: body,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tresponseData = responseData.product;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\t//https://shopify.dev/docs/admin-api/rest/reference/products/product#destroy-2020-04\n\t\t\t\t\t\tresponseData = await shopifyApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/products/${productId}.json`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\t//https://shopify.dev/docs/admin-api/rest/reference/products/product#show-2020-04\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i, {});\n\t\t\t\t\t\tObject.assign(qs, additionalFields);\n\t\t\t\t\t\tresponseData = await shopifyApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/products/${productId}.json`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.product;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\t//https://shopify.dev/docs/admin-api/rest/reference/products/product#index-2020-04\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i, {});\n\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\n\t\t\t\t\t\tObject.assign(qs, additionalFields);\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await shopifyApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'products',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/products.json',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await shopifyApiRequest.call(this, 'GET', '/products.json', {}, qs);\n\t\t\t\t\t\t\tresponseData = responseData.products;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\t//https://shopify.dev/docs/admin-api/rest/reference/products/product?api[version]=2020-07#update-2020-07\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i, {});\n\n\t\t\t\t\t\tif (updateFields.productOptions) {\n\t\t\t\t\t\t\tconst metadata = (updateFields.productOptions as IDataObject).option as IDataObject[];\n\t\t\t\t\t\t\tupdateFields.options = {};\n\t\t\t\t\t\t\tfor (const data of metadata) {\n\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\tupdateFields.options[data.name as string] = data.value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete updateFields.productOptions;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbody = updateFields;\n\n\t\t\t\t\t\tresponseData = await shopifyApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t\t`/products/${productId}.json`,\n\t\t\t\t\t\t\t{ product: body },\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData = responseData.product;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t);\n\n\t\t\t\treturnData.push(...executionData);\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,0BAAwD;AAExD,8BAA8E;AAC9E,8BAA6C;AAE7C,gCAAiD;AAG1C,MAAM,QAA6B;AAAA,EAAnC;AACN,uBAAoC;AAAA,MACnC,aAAa;AAAA,MACb,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO,CAAC,QAAQ;AAAA,MAChB,SAAS;AAAA,MACT,UAAU;AAAA,MACV,aAAa;AAAA,MACb,UAAU;AAAA,QACT,MAAM;AAAA,MACP;AAAA,MACA,cAAc;AAAA,MACd,QAAQ,CAAC,wCAAoB,IAAI;AAAA,MACjC,SAAS,CAAC,wCAAoB,IAAI;AAAA,MAClC,aAAa;AAAA,QACZ;AAAA,UACC,MAAM;AAAA,UACN,UAAU;AAAA,UACV,gBAAgB;AAAA,YACf,MAAM;AAAA,cACL,gBAAgB,CAAC,QAAQ;AAAA,YAC1B;AAAA,UACD;AAAA,QACD;AAAA,QACA;AAAA,UACC,MAAM;AAAA,UACN,UAAU;AAAA,UACV,gBAAgB;AAAA,YACf,MAAM;AAAA,cACL,gBAAgB,CAAC,aAAa;AAAA,YAC/B;AAAA,UACD;AAAA,QACD;AAAA,QACA;AAAA,UACC,MAAM;AAAA,UACN,UAAU;AAAA,UACV,gBAAgB;AAAA,YACf,MAAM;AAAA,cACL,gBAAgB,CAAC,QAAQ;AAAA,YAC1B;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,MACA,YAAY;AAAA,QACX;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,SAAS;AAAA,UACT,eAAe;AAAA,QAChB;AAAA,QACA;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,SAAS;AAAA,YACR;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,UACD;AAAA,UACA,SAAS;AAAA,QACV;AAAA,QACA;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,kBAAkB;AAAA,UAClB,SAAS;AAAA,YACR;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,UACD;AAAA,UACA,SAAS;AAAA,QACV;AAAA;AAAA,QAEA,GAAG;AAAA,QACH,GAAG;AAAA;AAAA,QAEH,GAAG;AAAA,QACH,GAAG;AAAA,MACJ;AAAA,IACD;AAEA,mBAAU;AAAA,MACT,aAAa;AAAA;AAAA;AAAA,QAGZ,MAAM,cAA0E;AAC/E,gBAAM,aAAqC,CAAC;AAC5C,gBAAM,WAAW,MAAM,kDAA0B;AAAA,YAChD;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA,CAAC;AAAA,YACD,EAAE,QAAQ,WAAW;AAAA,UACtB;AACA,qBAAW,WAAW,UAAU;AAC/B,kBAAM,cAAc,QAAQ;AAC5B,kBAAM,YAAY,QAAQ;AAC1B,uBAAW,KAAK;AAAA,cACf,MAAM;AAAA,cACN,OAAO;AAAA,YACR,CAAC;AAAA,UACF;AACA,iBAAO;AAAA,QACR;AAAA;AAAA;AAAA,QAGA,MAAM,eAA2E;AAChF,gBAAM,aAAqC,CAAC;AAC5C,gBAAM,YAAY,MAAM,kDAA0B;AAAA,YACjD;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA,CAAC;AAAA,YACD,EAAE,QAAQ,UAAU;AAAA,UACrB;AACA,qBAAW,YAAY,WAAW;AACjC,kBAAM,eAAe,SAAS;AAC9B,kBAAM,aAAa,SAAS;AAC5B,uBAAW,KAAK;AAAA,cACf,MAAM;AAAA,cACN,OAAO;AAAA,YACR,CAAC;AAAA,UACF;AACA,iBAAO;AAAA,QACR;AAAA,MACD;AAAA,IACD;AAAA;AAAA,EAEA,MAAM,UAAkE;AACvE,UAAM,QAAQ,KAAK,aAAa;AAChC,UAAM,aAAmC,CAAC;AAC1C,UAAM,SAAS,MAAM;AACrB,QAAI;AACJ,UAAM,KAAkB,CAAC;AACzB,UAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AACpD,UAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,aAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAChC,UAAI;AACH,YAAI,aAAa,SAAS;AAEzB,cAAI,cAAc,UAAU;AAC3B,kBAAM,mBAAmB,KAAK,iBAAiB,oBAAoB,CAAC;AACpE,kBAAM,WAAW,iBAAiB;AAClC,kBAAM,UAAU,iBAAiB;AACjC,kBAAM,WAAW,iBAAiB;AAClC,kBAAM,WAAY,KAAK,iBAAiB,eAAe,CAAC,EACtD;AACF,gBAAI,aAAa,QAAW;AAC3B,oBAAM,IAAI;AAAA,gBACT,KAAK,QAAQ;AAAA,gBACb;AAAA,gBACA,EAAE,WAAW,EAAE;AAAA,cAChB;AAAA,YACD;AACA,kBAAM,OAAe;AAAA,cACpB,MAAM;AAAA,cACN,gBAAY,yCAAgB,QAAQ;AAAA,YACrC;AACA,gBAAI,iBAAiB,mBAAmB;AACvC,mBAAK,qBAAqB,iBAAiB;AAAA,YAC5C;AACA,gBAAI,iBAAiB,oBAAoB;AACxC,mBAAK,sBAAsB,iBAAiB;AAAA,YAC7C;AACA,gBAAI,iBAAiB,YAAY;AAChC,mBAAK,cAAc,iBAAiB;AAAA,YACrC;AACA,gBAAI,iBAAiB,MAAM;AAC1B,mBAAK,OAAO,iBAAiB;AAAA,YAC9B;AACA,gBAAI,iBAAiB,wBAAwB;AAC5C,mBAAK,2BAA2B,iBAAiB;AAAA,YAClD;AACA,gBAAI,iBAAiB,aAAa;AACjC,mBAAK,eAAe,iBAAiB;AAAA,YACtC;AACA,gBAAI,iBAAiB,aAAa;AACjC,mBAAK,eAAe,iBAAiB;AAAA,YACtC;AACA,gBAAI,iBAAiB,YAAY;AAChC,mBAAK,cAAc,iBAAiB;AAAA,YACrC;AACA,gBAAI,iBAAiB,MAAM;AAC1B,mBAAK,OAAO,iBAAiB;AAAA,YAC9B;AACA,gBAAI,iBAAiB,MAAM;AAC1B,mBAAK,OAAO,iBAAiB;AAAA,YAC9B;AACA,gBAAI,iBAAiB,OAAO;AAC3B,mBAAK,QAAQ,iBAAiB;AAAA,YAC/B;AACA,gBAAI,UAAU;AACb,mBAAK,iBAAiB,SAAS;AAAA,YAChC;AACA,gBAAI,SAAS;AACZ,mBAAK,sBAAkB;AAAA,gBACtB,QAAQ;AAAA,cACT,EAAE,CAAC;AAAA,YACJ;AACA,gBAAI,UAAU;AACb,mBAAK,uBAAmB;AAAA,gBACvB,SAAS;AAAA,cACV,EAAE,CAAC;AAAA,YACJ;AACA,2BAAe,MAAM,0CAAkB,KAAK,MAAM,QAAQ,gBAAgB;AAAA,cACzE,OAAO;AAAA,YACR,CAAC;AACD,2BAAe,aAAa;AAAA,UAC7B;AAEA,cAAI,cAAc,UAAU;AAC3B,kBAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAClD,2BAAe,MAAM,0CAAkB,KAAK,MAAM,UAAU,WAAW,OAAO,OAAO;AACrF,2BAAe,EAAE,SAAS,KAAK;AAAA,UAChC;AAEA,cAAI,cAAc,OAAO;AACxB,kBAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAClD,kBAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAClD,gBAAI,QAAQ,QAAQ;AACnB,iBAAG,SAAS,QAAQ;AAAA,YACrB;AACA,2BAAe,MAAM,0CAAkB;AAAA,cACtC;AAAA,cACA;AAAA,cACA,WAAW,OAAO;AAAA,cAClB,CAAC;AAAA,cACD;AAAA,YACD;AACA,2BAAe,aAAa;AAAA,UAC7B;AAEA,cAAI,cAAc,UAAU;AAC3B,kBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,kBAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAClD,gBAAI,QAAQ,QAAQ;AACnB,iBAAG,SAAS,QAAQ;AAAA,YACrB;AACA,gBAAI,QAAQ,kBAAkB;AAC7B,iBAAG,qBAAqB,QAAQ;AAAA,YACjC;AACA,gBAAI,QAAQ,cAAc;AACzB,iBAAG,iBAAiB,QAAQ;AAAA,YAC7B;AACA,gBAAI,QAAQ,cAAc;AACzB,iBAAG,iBAAiB,QAAQ;AAAA,YAC7B;AACA,gBAAI,QAAQ,cAAc;AACzB,iBAAG,iBAAiB,QAAQ;AAAA,YAC7B;AACA,gBAAI,QAAQ,cAAc;AACzB,iBAAG,iBAAiB,QAAQ;AAAA,YAC7B;AACA,gBAAI,QAAQ,gBAAgB;AAC3B,iBAAG,mBAAmB,QAAQ;AAAA,YAC/B;AACA,gBAAI,QAAQ,gBAAgB;AAC3B,iBAAG,mBAAmB,QAAQ;AAAA,YAC/B;AACA,gBAAI,QAAQ,SAAS;AACpB,iBAAG,WAAW,QAAQ;AAAA,YACvB;AACA,gBAAI,QAAQ,KAAK;AAChB,iBAAG,MAAM,QAAQ;AAAA,YAClB;AACA,gBAAI,QAAQ,QAAQ;AACnB,iBAAG,SAAS,QAAQ;AAAA,YACrB;AACA,gBAAI,QAAQ,iBAAiB;AAC5B,iBAAG,mBAAmB,QAAQ;AAAA,YAC/B;AACA,gBAAI,QAAQ,mBAAmB;AAC9B,iBAAG,qBAAqB,QAAQ;AAAA,YACjC;AAEA,gBAAI,WAAW;AACd,6BAAe,MAAM,kDAA0B;AAAA,gBAC9C;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,CAAC;AAAA,gBACD;AAAA,cACD;AAAA,YACD,OAAO;AACN,iBAAG,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC3C,6BAAe,MAAM,0CAAkB,KAAK,MAAM,OAAO,gBAAgB,CAAC,GAAG,EAAE;AAC/E,6BAAe,aAAa;AAAA,YAC7B;AAAA,UACD;AAEA,cAAI,cAAc,UAAU;AAC3B,kBAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAClD,kBAAM,eAAe,KAAK,iBAAiB,gBAAgB,CAAC;AAC5D,kBAAM,WAAW,aAAa;AAC9B,kBAAM,OAAe,CAAC;AACtB,gBAAI,aAAa,YAAY;AAC5B,mBAAK,cAAc,aAAa;AAAA,YACjC;AACA,gBAAI,aAAa,MAAM;AACtB,mBAAK,OAAO,aAAa;AAAA,YAC1B;AACA,gBAAI,aAAa,YAAY;AAC5B,mBAAK,cAAc,aAAa;AAAA,YACjC;AACA,gBAAI,aAAa,MAAM;AACtB,mBAAK,OAAO,aAAa;AAAA,YAC1B;AACA,gBAAI,aAAa,OAAO;AACvB,mBAAK,QAAQ,aAAa;AAAA,YAC3B;AACA,gBAAI,UAAU;AACb,mBAAK,uBAAmB;AAAA,gBACvB,SAAS;AAAA,cACV,EAAE,CAAC;AAAA,YACJ;AACA,2BAAe,MAAM,0CAAkB,KAAK,MAAM,OAAO,WAAW,OAAO,SAAS;AAAA,cACnF,OAAO;AAAA,YACR,CAAC;AACD,2BAAe,aAAa;AAAA,UAC7B;AAAA,QACD,WAAW,aAAa,WAAW;AAClC,gBAAM,YAAY,KAAK,iBAAiB,aAAa,GAAG,EAAE;AAC1D,cAAI,OAAiB,CAAC;AAEtB,cAAI,cAAc,UAAU;AAC3B,kBAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAE9C,kBAAM,mBAAmB,KAAK,iBAAiB,oBAAoB,GAAG,CAAC,CAAC;AAExE,gBAAI,iBAAiB,gBAAgB;AACpC,oBAAM,WAAY,iBAAiB,eACjC;AACF,+BAAiB,UAAU,CAAC;AAC5B,yBAAW,QAAQ,UAAU;AAE5B,iCAAiB,QAAQ,KAAK,IAAc,IAAI,KAAK;AAAA,cACtD;AACA,qBAAO,iBAAiB;AAAA,YACzB;AAEA,mBAAO;AAEP,iBAAK,QAAQ;AAEb,2BAAe,MAAM,0CAAkB,KAAK,MAAM,QAAQ,kBAAkB;AAAA,cAC3E,SAAS;AAAA,YACV,CAAC;AACD,2BAAe,aAAa;AAAA,UAC7B;AACA,cAAI,cAAc,UAAU;AAE3B,2BAAe,MAAM,0CAAkB;AAAA,cACtC;AAAA,cACA;AAAA,cACA,aAAa,SAAS;AAAA,YACvB;AACA,2BAAe,EAAE,SAAS,KAAK;AAAA,UAChC;AACA,cAAI,cAAc,OAAO;AAExB,kBAAM,mBAAmB,KAAK,iBAAiB,oBAAoB,GAAG,CAAC,CAAC;AACxE,mBAAO,OAAO,IAAI,gBAAgB;AAClC,2BAAe,MAAM,0CAAkB;AAAA,cACtC;AAAA,cACA;AAAA,cACA,aAAa,SAAS;AAAA,cACtB,CAAC;AAAA,cACD;AAAA,YACD;AACA,2BAAe,aAAa;AAAA,UAC7B;AACA,cAAI,cAAc,UAAU;AAE3B,kBAAM,mBAAmB,KAAK,iBAAiB,oBAAoB,GAAG,CAAC,CAAC;AAExE,kBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AAEtD,mBAAO,OAAO,IAAI,gBAAgB;AAElC,gBAAI,WAAW;AACd,6BAAe,MAAM,kDAA0B;AAAA,gBAC9C;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,CAAC;AAAA,gBACD;AAAA,cACD;AAAA,YACD,OAAO;AACN,iBAAG,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC3C,6BAAe,MAAM,0CAAkB,KAAK,MAAM,OAAO,kBAAkB,CAAC,GAAG,EAAE;AACjF,6BAAe,aAAa;AAAA,YAC7B;AAAA,UACD;AACA,cAAI,cAAc,UAAU;AAE3B,kBAAM,eAAe,KAAK,iBAAiB,gBAAgB,GAAG,CAAC,CAAC;AAEhE,gBAAI,aAAa,gBAAgB;AAChC,oBAAM,WAAY,aAAa,eAA+B;AAC9D,2BAAa,UAAU,CAAC;AACxB,yBAAW,QAAQ,UAAU;AAE5B,6BAAa,QAAQ,KAAK,IAAc,IAAI,KAAK;AAAA,cAClD;AACA,qBAAO,aAAa;AAAA,YACrB;AAEA,mBAAO;AAEP,2BAAe,MAAM,0CAAkB;AAAA,cACtC;AAAA,cACA;AAAA,cACA,aAAa,SAAS;AAAA,cACtB,EAAE,SAAS,KAAK;AAAA,YACjB;AAEA,2BAAe,aAAa;AAAA,UAC7B;AAAA,QACD;AAEA,cAAM,gBAAgB,KAAK,QAAQ;AAAA,UAClC,KAAK,QAAQ,gBAAgB,YAA6B;AAAA,UAC1D,EAAE,UAAU,EAAE,MAAM,EAAE,EAAE;AAAA,QACzB;AAEA,mBAAW,KAAK,GAAG,aAAa;AAAA,MACjC,SAAS,OAAO;AACf,YAAI,KAAK,eAAe,GAAG;AAC1B,gBAAM,qBAAqB,KAAK,QAAQ;AAAA,YACvC,KAAK,QAAQ,gBAAgB,EAAE,OAAO,MAAM,QAAQ,CAAC;AAAA,YACrD,EAAE,UAAU,EAAE,MAAM,EAAE,EAAE;AAAA,UACzB;AACA,qBAAW,KAAK,GAAG,kBAAkB;AACrC;AAAA,QACD;AACA,cAAM;AAAA,MACP;AAAA,IACD;AACA,WAAO,CAAC,UAAU;AAAA,EACnB;AACD;","names":[]}