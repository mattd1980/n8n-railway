{"version":3,"sources":["../../../nodes/Freshdesk/Freshdesk.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport { contactFields, contactOperations } from './ContactDescription';\nimport type { ICreateContactBody } from './ContactInterface';\nimport {\n\tcapitalize,\n\tfreshdeskApiRequest,\n\tfreshdeskApiRequestAllItems,\n\t// validateJSON,\n} from './GenericFunctions';\n\nconst Status = {\n\tOpen: 2,\n\tPending: 3,\n\tResolved: 4,\n\tClosed: 5,\n} as const;\n\nconst Priority = {\n\tLow: 1,\n\tMedium: 2,\n\tHigh: 3,\n\tUrgent: 4,\n} as const;\n\nconst Source = {\n\tEmail: 1,\n\tPortal: 2,\n\tPhone: 3,\n\tChat: 7,\n\tMobihelp: 8,\n\tFeedbackWidget: 9,\n\tOutboundEmail: 10,\n} as const;\n\ntype StatusKey = keyof typeof Status;\ntype PriorityKey = keyof typeof Priority;\ntype SourceKey = keyof typeof Source;\n\ntype StatusValue = (typeof Status)[keyof typeof Status];\ntype PriorityValue = (typeof Priority)[keyof typeof Priority];\ntype SourceValue = (typeof Source)[keyof typeof Source];\n\ninterface ICreateTicketBody {\n\tname?: string;\n\trequester_id?: number;\n\temail?: string;\n\tfacebook_id?: string;\n\tphone?: string;\n\ttwitter_id?: string;\n\tunique_external_id?: string;\n\tsubject?: string | null;\n\ttype?: string;\n\tstatus?: StatusValue;\n\tpriority?: PriorityValue;\n\tdescription?: string;\n\tresponder_id?: number;\n\tcc_emails?: [string];\n\tcustom_fields?: IDataObject;\n\tdue_by?: string;\n\temail_config_id?: number;\n\tfr_due_by?: string;\n\tgroup_id?: number;\n\tproduct_id?: number;\n\tsource?: SourceValue;\n\ttags?: [string];\n\tcompany_id?: number;\n}\n\nexport class Freshdesk implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Freshdesk',\n\t\tname: 'freshdesk',\n\n\t\ticon: 'file:freshdesk.svg',\n\t\tgroup: ['output'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume Freshdesk API',\n\t\tdefaults: {\n\t\t\tname: 'Freshdesk',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'freshdeskApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\trequired: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Contact',\n\t\t\t\t\t\tvalue: 'contact',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Ticket',\n\t\t\t\t\t\tvalue: 'ticket',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'ticket',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['ticket'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Create',\n\t\t\t\t\t\tvalue: 'create',\n\t\t\t\t\t\tdescription: 'Create a new ticket',\n\t\t\t\t\t\taction: 'Create a ticket',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Delete',\n\t\t\t\t\t\tvalue: 'delete',\n\t\t\t\t\t\tdescription: 'Delete a ticket',\n\t\t\t\t\t\taction: 'Delete a ticket',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get',\n\t\t\t\t\t\tvalue: 'get',\n\t\t\t\t\t\tdescription: 'Get a ticket',\n\t\t\t\t\t\taction: 'Get a ticket',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get Many',\n\t\t\t\t\t\tvalue: 'getAll',\n\t\t\t\t\t\tdescription: 'Get many tickets',\n\t\t\t\t\t\taction: 'Get many tickets',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Update',\n\t\t\t\t\t\tvalue: 'update',\n\t\t\t\t\t\tdescription: 'Update a ticket',\n\t\t\t\t\t\taction: 'Update a ticket',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'create',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Requester Identification',\n\t\t\t\tname: 'requester',\n\t\t\t\ttype: 'options',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['ticket'],\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Email',\n\t\t\t\t\t\tvalue: 'email',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Email address of the requester. If no contact exists with this email address in Freshdesk, it will be added as a new contact.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Facebook ID',\n\t\t\t\t\t\tvalue: 'facebookId',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Facebook ID of the requester. If no contact exists with this facebook_id, then a new contact will be created.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Phone',\n\t\t\t\t\t\tvalue: 'phone',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Phone number of the requester. If no contact exists with this phone number in Freshdesk, it will be added as a new contact. If the phone number is set and the email address is not, then the name attribute is mandatory.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Requester ID',\n\t\t\t\t\t\tvalue: 'requesterId',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\"User ID of the requester. For existing contacts, the requester_id can be passed instead of the requester's email.\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Twitter ID',\n\t\t\t\t\t\tvalue: 'twitterId',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Twitter handle of the requester. If no contact exists with this handle in Freshdesk, it will be added as a new contact.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Unique External ID',\n\t\t\t\t\t\tvalue: 'uniqueExternalId',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'External ID of the requester. If no contact exists with this external ID in Freshdesk, they will be added as a new contact.',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'requesterId',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Value',\n\t\t\t\tname: 'requesterIdentificationValue',\n\t\t\t\ttype: 'string',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['ticket'],\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\tdescription: 'Value of the identification selected',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Status',\n\t\t\t\tname: 'status',\n\t\t\t\ttype: 'options',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['ticket'],\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Closed',\n\t\t\t\t\t\tvalue: 'closed',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Open',\n\t\t\t\t\t\tvalue: 'open',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Pending',\n\t\t\t\t\t\tvalue: 'pending',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Resolved',\n\t\t\t\t\t\tvalue: 'resolved',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'pending',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Priority',\n\t\t\t\tname: 'priority',\n\t\t\t\ttype: 'options',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['ticket'],\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Low',\n\t\t\t\t\t\tvalue: 'low',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Medium',\n\t\t\t\t\t\tvalue: 'medium',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'High',\n\t\t\t\t\t\tvalue: 'high',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Urgent',\n\t\t\t\t\t\tvalue: 'urgent',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'low',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Source',\n\t\t\t\tname: 'source',\n\t\t\t\ttype: 'options',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['ticket'],\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Chat',\n\t\t\t\t\t\tvalue: 'chat',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Email',\n\t\t\t\t\t\tvalue: 'email',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Feedback Widget',\n\t\t\t\t\t\tvalue: 'feedbackWidget',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Mobihelp',\n\t\t\t\t\t\tvalue: 'mobileHelp',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Outbound Email',\n\t\t\t\t\t\tvalue: 'OutboundEmail',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Phone',\n\t\t\t\t\t\tvalue: 'phone',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Portal',\n\t\t\t\t\t\tvalue: 'portal',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'portal',\n\t\t\t\tdescription: 'The channel through which the ticket was created',\n\t\t\t},\n\t\t\t// {\n\t\t\t// \tdisplayName: 'JSON Parameters',\n\t\t\t// \tname: 'jsonParameters',\n\t\t\t// \ttype: 'boolean',\n\t\t\t// \tdefault: false,\n\t\t\t// \tdescription: '',\n\t\t\t// \tdisplayOptions: {\n\t\t\t// \t\tshow: {\n\t\t\t// \t\t\tresource: [\n\t\t\t// \t\t\t\t'ticket'\n\t\t\t// \t\t\t],\n\t\t\t// \t\t\toperation: [\n\t\t\t// \t\t\t\t'create',\n\t\t\t// \t\t\t]\n\t\t\t// \t\t},\n\t\t\t// \t},\n\t\t\t// },\n\t\t\t{\n\t\t\t\tdisplayName: 'Options',\n\t\t\t\tname: 'options',\n\t\t\t\ttype: 'collection',\n\t\t\t\tplaceholder: 'Add option',\n\t\t\t\tdefault: {},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['ticket'],\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Agent Name or ID',\n\t\t\t\t\t\tname: 'agent',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tloadOptionsMethod: 'getAgents',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'ID of the agent to whom the ticket has been assigned. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'CC Emails',\n\t\t\t\t\t\tname: 'ccEmails',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\"Separated by a comma (,) email addresses added in the 'cc' field of the incoming ticket email\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Company Name or ID',\n\t\t\t\t\t\tname: 'company',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tloadOptionsMethod: 'getCompanies',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Company ID of the requester. This attribute can only be set if the Multiple Companies feature is enabled (Estate plan and above). Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Description',\n\t\t\t\t\t\tname: 'description',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\trows: 5,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdescription: 'HTML content of the ticket',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Due By',\n\t\t\t\t\t\tname: 'dueBy',\n\t\t\t\t\t\ttype: 'dateTime',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Timestamp that denotes when the ticket is due to be resolved',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Email Config ID',\n\t\t\t\t\t\tname: 'emailConfigId',\n\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\"ID of email config which is used for this ticket. (i.e., support@yourcompany.com/sales@yourcompany.com) If product_id is given and email_config_id is not given, product's primary email_config_id will be set.\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'FR Due By',\n\t\t\t\t\t\tname: 'frDueBy',\n\t\t\t\t\t\ttype: 'dateTime',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Timestamp that denotes when the first response is due',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Group Name or ID',\n\t\t\t\t\t\tname: 'group',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tloadOptionsMethod: 'getGroups',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'ID of the group to which the ticket has been assigned. The default value is the ID of the group that is associated with the given email_config_id. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Name',\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tplaceholder: '',\n\t\t\t\t\t\tdescription: 'Name of the requester',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Product Name or ID',\n\t\t\t\t\t\tname: 'product',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tloadOptionsMethod: 'getProducts',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'ID of the product to which the ticket is associated. It will be ignored if the email_config_id attribute is set in the request. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Subject',\n\t\t\t\t\t\tname: 'subject',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tplaceholder: '',\n\t\t\t\t\t\tdescription: 'Subject of the ticket',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Tags',\n\t\t\t\t\t\tname: 'tags',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Separated by a comma (,) tags that have been associated with the ticket',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Type',\n\t\t\t\t\t\tname: 'type',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\tdefault: 'Question',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Helps categorize the ticket according to the different kinds of issues your support team deals with',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Feature Request',\n\t\t\t\t\t\t\t\tvalue: 'Feature Request',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Incident',\n\t\t\t\t\t\t\t\tvalue: 'Incident',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Problem',\n\t\t\t\t\t\t\t\tvalue: 'Problem',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Question',\n\t\t\t\t\t\t\t\tvalue: 'Question',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Refund',\n\t\t\t\t\t\t\t\tvalue: 'Refund',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t// {\n\t\t\t// \tdisplayName: 'Custom Fields',\n\t\t\t// \tname: 'customFieldsUi',\n\t\t\t// \tplaceholder: 'Add Custom fields',\n\t\t\t// \ttype: 'fixedCollection',\n\t\t\t// \trequired: false,\n\t\t\t// \tdefault: '',\n\t\t\t// \ttypeOptions: {\n\t\t\t// \t\tmultipleValues: true,\n\t\t\t// \t},\n\t\t\t// \tdisplayOptions: {\n\t\t\t// \t\tshow: {\n\t\t\t// \t\t\tresource: [\n\t\t\t// \t\t\t\t'ticket'\n\t\t\t// \t\t\t],\n\t\t\t// \t\t\toperation: [\n\t\t\t// \t\t\t\t'create'\n\t\t\t// \t\t\t],\n\t\t\t// \t\t\tjsonParameters: [\n\t\t\t// \t\t\t\tfalse,\n\t\t\t// \t\t\t],\n\t\t\t// \t\t},\n\t\t\t// \t},\n\t\t\t// \tdescription: 'Key value pairs containing the names and values of custom fields.',\n\t\t\t// \toptions: [\n\t\t\t// \t\t{\n\t\t\t// \t\t\tname: 'customFieldsValues',\n\t\t\t// \t\t\tdisplayName: 'Custom fields',\n\t\t\t// \t\t\tvalues: [\n\t\t\t// \t\t\t\t{\n\t\t\t// \t\t\t\t\tdisplayName: 'Key',\n\t\t\t// \t\t\t\t\trequired: false,\n\t\t\t// \t\t\t\t\tname: 'key',\n\t\t\t// \t\t\t\t\ttype: 'string',\n\t\t\t// \t\t\t\t\tdefault: '',\n\t\t\t// \t\t\t\t},\n\t\t\t// \t\t\t\t{\n\t\t\t// \t\t\t\t\tdisplayName: 'Value',\n\t\t\t// \t\t\t\t\tname: 'value',\n\t\t\t// \t\t\t\t\ttype: 'string',\n\t\t\t// \t\t\t\t\trequired: false,\n\t\t\t// \t\t\t\t\tdefault: '',\n\t\t\t// \t\t\t\t},\n\t\t\t// \t\t\t],\n\t\t\t// \t\t},\n\t\t\t// \t],\n\t\t\t// },\n\t\t\t// {\n\t\t\t// \tdisplayName: 'Custom Fields',\n\t\t\t// \tname: 'customFieldsJson',\n\t\t\t// \ttype: 'json',\n\t\t\t// \ttypeOptions: {\n\t\t\t// \t\talwaysOpenEditWindow: true,\n\t\t\t// \t},\n\t\t\t// \tdisplayOptions: {\n\t\t\t// \t\tshow: {\n\t\t\t// \t\t\tresource: [\n\t\t\t// \t\t\t\t'ticket',\n\t\t\t// \t\t\t],\n\t\t\t// \t\t\toperation: [\n\t\t\t// \t\t\t\t'create',\n\t\t\t// \t\t\t],\n\t\t\t// \t\t\tjsonParameters: [\n\t\t\t// \t\t\t\ttrue,\n\t\t\t// \t\t\t],\n\t\t\t// \t\t},\n\t\t\t// \t},\n\t\t\t// \tdefault: '',\n\t\t\t// \trequired: false,\n\t\t\t// \tplaceholder: `{\n\t\t\t// \t\t'gadget': 'Cold Welder',\n\t\t\t// \t}`,\n\t\t\t// \tdescription: 'Key value pairs containing the names and values of custom fields.',\n\t\t\t// },\n\t\t\t{\n\t\t\t\tdisplayName: 'Ticket ID',\n\t\t\t\tname: 'ticketId',\n\t\t\t\ttype: 'string',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['ticket'],\n\t\t\t\t\t\toperation: ['update'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Update Fields',\n\t\t\t\tname: 'updateFields',\n\t\t\t\ttype: 'collection',\n\t\t\t\tplaceholder: 'Add Field',\n\t\t\t\tdefault: {},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['ticket'],\n\t\t\t\t\t\toperation: ['update'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Agent Name or ID',\n\t\t\t\t\t\tname: 'agent',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tloadOptionsMethod: 'getAgents',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'ID of the agent to whom the ticket has been assigned. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'CC Emails',\n\t\t\t\t\t\tname: 'ccEmails',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\"Separated by a comma (,) email addresses added in the 'cc' field of the incoming ticket email\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Company Name or ID',\n\t\t\t\t\t\tname: 'company',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tloadOptionsMethod: 'getCompanies',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Company ID of the requester. This attribute can only be set if the Multiple Companies feature is enabled (Estate plan and above). Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Due By',\n\t\t\t\t\t\tname: 'dueBy',\n\t\t\t\t\t\ttype: 'dateTime',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Timestamp that denotes when the ticket is due to be resolved',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Email Config ID',\n\t\t\t\t\t\tname: 'emailConfigId',\n\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\"ID of email config which is used for this ticket. (i.e., support@yourcompany.com/sales@yourcompany.com) If product_id is given and email_config_id is not given, product's primary email_config_id will be set.\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'FR Due By',\n\t\t\t\t\t\tname: 'frDueBy',\n\t\t\t\t\t\ttype: 'dateTime',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Timestamp that denotes when the first response is due',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Group Name or ID',\n\t\t\t\t\t\tname: 'group',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tloadOptionsMethod: 'getGroups',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'ID of the group to which the ticket has been assigned. The default value is the ID of the group that is associated with the given email_config_id. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Name',\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tplaceholder: '',\n\t\t\t\t\t\tdescription: 'Name of the requester',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Product Name or ID',\n\t\t\t\t\t\tname: 'product',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tloadOptionsMethod: 'getProducts',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'ID of the product to which the ticket is associated. It will be ignored if the email_config_id attribute is set in the request. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Priority',\n\t\t\t\t\t\tname: 'priority',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Low',\n\t\t\t\t\t\t\t\tvalue: 'low',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Medium',\n\t\t\t\t\t\t\t\tvalue: 'medium',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'High',\n\t\t\t\t\t\t\t\tvalue: 'high',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Urgent',\n\t\t\t\t\t\t\t\tvalue: 'urgent',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: 'low',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Requester Identification',\n\t\t\t\t\t\tname: 'requester',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Email',\n\t\t\t\t\t\t\t\tvalue: 'email',\n\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t'Email address of the requester. If no contact exists with this email address in Freshdesk, it will be added as a new contact.',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Facebook ID',\n\t\t\t\t\t\t\t\tvalue: 'facebookId',\n\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t'Facebook ID of the requester. If no contact exists with this facebook_id, then a new contact will be created.',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Phone',\n\t\t\t\t\t\t\t\tvalue: 'phone',\n\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t'Phone number of the requester. If no contact exists with this phone number in Freshdesk, it will be added as a new contact. If the phone number is set and the email address is not, then the name attribute is mandatory.',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Requester ID',\n\t\t\t\t\t\t\t\tvalue: 'requesterId',\n\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t\"User ID of the requester. For existing contacts, the requester_id can be passed instead of the requester's email.\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Twitter ID',\n\t\t\t\t\t\t\t\tvalue: 'twitterId',\n\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t'Twitter handle of the requester. If no contact exists with this handle in Freshdesk, it will be added as a new contact.',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Unique External ID',\n\t\t\t\t\t\t\t\tvalue: 'uniqueExternalId',\n\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t'External ID of the requester. If no contact exists with this external ID in Freshdesk, they will be added as a new contact.',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: 'requesterId',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Requester Value',\n\t\t\t\t\t\tname: 'requesterIdentificationValue',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Value of the identification selected',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Status',\n\t\t\t\t\t\tname: 'status',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Open',\n\t\t\t\t\t\t\t\tvalue: 'open',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Pending',\n\t\t\t\t\t\t\t\tvalue: 'pending',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Resolved',\n\t\t\t\t\t\t\t\tvalue: 'resolved',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Closed',\n\t\t\t\t\t\t\t\tvalue: 'closed',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: 'pending',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Source',\n\t\t\t\t\t\tname: 'source',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Chat',\n\t\t\t\t\t\t\t\tvalue: 'chat',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Email',\n\t\t\t\t\t\t\t\tvalue: 'email',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Feedback Widget',\n\t\t\t\t\t\t\t\tvalue: 'feedbackWidget',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Mobihelp',\n\t\t\t\t\t\t\t\tvalue: 'mobileHelp',\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Outbound Email',\n\t\t\t\t\t\t\t\tvalue: 'OutboundEmail',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Phone',\n\t\t\t\t\t\t\t\tvalue: 'phone',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Portal',\n\t\t\t\t\t\t\t\tvalue: 'portal',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: 'portal',\n\t\t\t\t\t\tdescription: 'The channel through which the ticket was created',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Tags',\n\t\t\t\t\t\tname: 'tags',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Separated by a comma (,) tags that have been associated with the ticket',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Type',\n\t\t\t\t\t\tname: 'type',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\tdefault: 'Question',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Helps categorize the ticket according to the different kinds of issues your support team deals with',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Feature Request',\n\t\t\t\t\t\t\t\tvalue: 'Feature Request',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Incident',\n\t\t\t\t\t\t\t\tvalue: 'Incident',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Problem',\n\t\t\t\t\t\t\t\tvalue: 'Problem',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Question',\n\t\t\t\t\t\t\t\tvalue: 'Question',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Refund',\n\t\t\t\t\t\t\t\tvalue: 'Refund',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Ticket ID',\n\t\t\t\tname: 'ticketId',\n\t\t\t\ttype: 'string',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['ticket'],\n\t\t\t\t\t\toperation: ['get'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Return All',\n\t\t\t\tname: 'returnAll',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['ticket'],\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: 'Whether to return all results or only up to a given limit',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Limit',\n\t\t\t\tname: 'limit',\n\t\t\t\ttype: 'number',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['ticket'],\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t\treturnAll: [false],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tminValue: 1,\n\t\t\t\t\tmaxValue: 10,\n\t\t\t\t},\n\t\t\t\tdefault: 5,\n\t\t\t\tdescription: 'Max number of results to return',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Options',\n\t\t\t\tname: 'options',\n\t\t\t\ttype: 'collection',\n\t\t\t\tplaceholder: 'Add option',\n\t\t\t\tdefault: {},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['ticket'],\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Company ID',\n\t\t\t\t\t\tname: 'companyId',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Include',\n\t\t\t\t\t\tname: 'include',\n\t\t\t\t\t\ttype: 'multiOptions',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Company',\n\t\t\t\t\t\t\t\tvalue: 'company',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Description',\n\t\t\t\t\t\t\t\tvalue: 'description',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Requester',\n\t\t\t\t\t\t\t\tvalue: 'requester',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Stats',\n\t\t\t\t\t\t\t\tvalue: 'stats',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: [],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Order',\n\t\t\t\t\t\tname: 'order',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'ASC',\n\t\t\t\t\t\t\t\tvalue: 'asc',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'DESC',\n\t\t\t\t\t\t\t\tvalue: 'desc',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: 'desc',\n\t\t\t\t\t\tdescription: 'Order sort attribute ascending or descending',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Order By',\n\t\t\t\t\t\tname: 'orderBy',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Created At',\n\t\t\t\t\t\t\t\tvalue: 'createdAt',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Due By',\n\t\t\t\t\t\t\t\tvalue: 'dueBy',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Updated At',\n\t\t\t\t\t\t\t\tvalue: 'updatedAt',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Sort collection by object attribute',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Requester Email',\n\t\t\t\t\t\tname: 'requesterEmail',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Requester ID',\n\t\t\t\t\t\tname: 'requesterId',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Updated Since',\n\t\t\t\t\t\tname: 'updatedSince',\n\t\t\t\t\t\ttype: 'dateTime',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Ticket ID',\n\t\t\t\tname: 'ticketId',\n\t\t\t\ttype: 'string',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['ticket'],\n\t\t\t\t\t\toperation: ['delete'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t},\n\t\t\t// CONTACTS\n\t\t\t...contactOperations,\n\t\t\t...contactFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get all the agents to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getAgents(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst agents = await freshdeskApiRequest.call(this, 'GET', '/agents');\n\t\t\t\tfor (const agent of agents) {\n\t\t\t\t\tconst agentName = agent.contact.name;\n\t\t\t\t\tconst agentId = agent.id;\n\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: agentName,\n\t\t\t\t\t\tvalue: agentId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\n\t\t\t// Get all the groups to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getGroups(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst groups = await freshdeskApiRequest.call(this, 'GET', '/groups');\n\t\t\t\tfor (const group of groups) {\n\t\t\t\t\tconst groupName = group.name;\n\t\t\t\t\tconst groupId = group.id;\n\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: groupName,\n\t\t\t\t\t\tvalue: groupId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\n\t\t\t// Get all the products to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getProducts(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst products = await freshdeskApiRequest.call(this, 'GET', '/products');\n\t\t\t\tfor (const product of products) {\n\t\t\t\t\tconst productName = product.name;\n\t\t\t\t\tconst productId = product.id;\n\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: productName,\n\t\t\t\t\t\tvalue: productId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\n\t\t\t// Get all the companies to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getCompanies(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst companies = await freshdeskApiRequest.call(this, 'GET', '/companies');\n\t\t\t\tfor (const company of companies) {\n\t\t\t\t\tconst companyName = company.name;\n\t\t\t\t\tconst companyId = company.id;\n\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: companyName,\n\t\t\t\t\t\tvalue: companyId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tlet responseData;\n\t\tconst qs: IDataObject = {};\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'ticket') {\n\t\t\t\t\t//https://developers.freshdesk.com/api/#create_ticket\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst requester = this.getNodeParameter('requester', i) as string;\n\t\t\t\t\t\tconst value = this.getNodeParameter('requesterIdentificationValue', i) as string;\n\t\t\t\t\t\tconst status = this.getNodeParameter('status', i) as string;\n\t\t\t\t\t\tconst priority = this.getNodeParameter('priority', i) as string;\n\t\t\t\t\t\tconst source = this.getNodeParameter('source', i) as string;\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\t//const jsonActive = this.getNodeParameter('jsonParameters') as boolean;\n\t\t\t\t\t\tconst body: ICreateTicketBody = {\n\t\t\t\t\t\t\tstatus: Status[capitalize(status) as StatusKey],\n\t\t\t\t\t\t\tpriority: Priority[capitalize(priority) as PriorityKey],\n\t\t\t\t\t\t\tsource: Source[capitalize(source) as SourceKey],\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (requester === 'requesterId') {\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tif (isNaN(value)) {\n\t\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'Requester Id must be a number', {\n\t\t\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbody.requester_id = parseInt(value, 10);\n\t\t\t\t\t\t} else if (requester === 'email') {\n\t\t\t\t\t\t\tbody.email = value;\n\t\t\t\t\t\t} else if (requester === 'facebookId') {\n\t\t\t\t\t\t\tbody.facebook_id = value;\n\t\t\t\t\t\t} else if (requester === 'phone') {\n\t\t\t\t\t\t\tbody.phone = value;\n\t\t\t\t\t\t} else if (requester === 'twitterId') {\n\t\t\t\t\t\t\tbody.twitter_id = value;\n\t\t\t\t\t\t} else if (requester === 'uniqueExternalId') {\n\t\t\t\t\t\t\tbody.unique_external_id = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// if (!jsonActive) {\n\t\t\t\t\t\t// \tconst customFieldsUi = this.getNodeParameter('customFieldsUi') as IDataObject;\n\t\t\t\t\t\t// \tif (Object.keys(customFieldsUi).length > 0) {\n\t\t\t\t\t\t// \t\tconst aux: IDataObject = {};\n\t\t\t\t\t\t// \t\t// @ts-ignore\n\t\t\t\t\t\t// \t\tcustomFieldsUi.customFieldsValues.forEach( o => {\n\t\t\t\t\t\t// \t\t\taux[`${o.key}`] = o.value;\n\t\t\t\t\t\t// \t\t\treturn aux;\n\t\t\t\t\t\t// \t\t});\n\t\t\t\t\t\t// \t\tbody.custom_fields = aux;\n\t\t\t\t\t\t// } else {\n\t\t\t\t\t\t// \tbody.custom_fields = validateJSON(this.getNodeParameter('customFielsJson') as string);\n\t\t\t\t\t\t// }\n\n\t\t\t\t\t\tif (options.name) {\n\t\t\t\t\t\t\tbody.name = options.name as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.subject) {\n\t\t\t\t\t\t\tbody.subject = options.subject as string;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbody.subject = 'null';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.type) {\n\t\t\t\t\t\t\tbody.type = options.type as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.description) {\n\t\t\t\t\t\t\tbody.description = options.description as string;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbody.description = 'null';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.agent) {\n\t\t\t\t\t\t\tbody.responder_id = options.agent as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.company) {\n\t\t\t\t\t\t\tbody.company_id = options.company as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.product) {\n\t\t\t\t\t\t\tbody.product_id = options.product as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.group) {\n\t\t\t\t\t\t\tbody.group_id = options.group as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.frDueBy) {\n\t\t\t\t\t\t\tbody.fr_due_by = options.frDueBy as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.emailConfigId) {\n\t\t\t\t\t\t\tbody.email_config_id = options.emailConfigId as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.dueBy) {\n\t\t\t\t\t\t\tbody.due_by = options.dueBy as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.tags) {\n\t\t\t\t\t\t\tbody.tags = (options.tags as string).split(',') as [string];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.ccEmails) {\n\t\t\t\t\t\t\tbody.cc_emails = (options.ccEmails as string).split(',') as [string];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await freshdeskApiRequest.call(this, 'POST', '/tickets', body);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developers.freshdesk.com/api/#update_ticket\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst ticketId = this.getNodeParameter('ticketId', i) as string;\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\tconst body: ICreateTicketBody = {};\n\n\t\t\t\t\t\tif (updateFields.requester) {\n\t\t\t\t\t\t\tconst value = updateFields.requesterIdentificationValue as string;\n\t\t\t\t\t\t\tif (updateFields.requester === 'requesterId') {\n\t\t\t\t\t\t\t\tif (isNaN(parseInt(value, 10))) {\n\t\t\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'Requester Id must be a number', {\n\t\t\t\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbody.requester_id = parseInt(value, 10);\n\t\t\t\t\t\t\t} else if (updateFields.requester === 'email') {\n\t\t\t\t\t\t\t\tbody.email = value;\n\t\t\t\t\t\t\t} else if (updateFields.requester === 'facebookId') {\n\t\t\t\t\t\t\t\tbody.facebook_id = value;\n\t\t\t\t\t\t\t} else if (updateFields.requester === 'phone') {\n\t\t\t\t\t\t\t\tbody.phone = value;\n\t\t\t\t\t\t\t} else if (updateFields.requester === 'twitterId') {\n\t\t\t\t\t\t\t\tbody.twitter_id = value;\n\t\t\t\t\t\t\t} else if (updateFields.requester === 'uniqueExternalId') {\n\t\t\t\t\t\t\t\tbody.unique_external_id = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.status) {\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tbody.status = Status[capitalize(updateFields.status)];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.priority) {\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tbody.priority = Priority[capitalize(updateFields.priority)];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.source) {\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tbody.source = Source[capitalize(updateFields.source)];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.name) {\n\t\t\t\t\t\t\tbody.name = updateFields.name as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.type) {\n\t\t\t\t\t\t\tbody.type = updateFields.type as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.agent) {\n\t\t\t\t\t\t\tbody.responder_id = updateFields.agent as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.company) {\n\t\t\t\t\t\t\tbody.company_id = updateFields.company as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.product) {\n\t\t\t\t\t\t\tbody.product_id = updateFields.product as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.group) {\n\t\t\t\t\t\t\tbody.group_id = updateFields.group as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.frDueBy) {\n\t\t\t\t\t\t\tbody.fr_due_by = updateFields.frDueBy as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.emailConfigId) {\n\t\t\t\t\t\t\tbody.email_config_id = updateFields.emailConfigId as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.dueBy) {\n\t\t\t\t\t\t\tbody.due_by = updateFields.dueBy as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.tags) {\n\t\t\t\t\t\t\tbody.tags = (updateFields.tags as string).split(',') as [string];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.ccEmails) {\n\t\t\t\t\t\t\tbody.cc_emails = (updateFields.ccEmails as string).split(',') as [string];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await freshdeskApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t\t`/tickets/${ticketId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developers.freshdesk.com/api/#view_a_ticket\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst ticketId = this.getNodeParameter('ticketId', i) as string;\n\t\t\t\t\t\tresponseData = await freshdeskApiRequest.call(this, 'GET', `/tickets/${ticketId}`);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developers.freshdesk.com/api/#list_all_tickets\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tif (options.requesterId) {\n\t\t\t\t\t\t\tqs.requester_id = options.requesterId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.requesterEmail) {\n\t\t\t\t\t\t\tqs.email = options.requesterEmail as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.companyId) {\n\t\t\t\t\t\t\tqs.company_id = options.companyId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.updatedSince) {\n\t\t\t\t\t\t\tqs.updated_since = options.updatedSince as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.orderBy) {\n\t\t\t\t\t\t\tqs.order_by = options.orderBy as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.order) {\n\t\t\t\t\t\t\tqs.order_type = options.order as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.include) {\n\t\t\t\t\t\t\tif ((options.include as string[]).length !== 0) {\n\t\t\t\t\t\t\t\tqs.include = (options.include as string[]).join(',');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await freshdeskApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/tickets',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.per_page = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await freshdeskApiRequest.call(this, 'GET', '/tickets', {}, qs);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://developers.freshdesk.com/api/#delete_a_ticket\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst ticketId = this.getNodeParameter('ticketId', i) as string;\n\t\t\t\t\t\tresponseData = await freshdeskApiRequest.call(this, 'DELETE', `/tickets/${ticketId}`);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'contact') {\n\t\t\t\t\t//https://developers.freshdesk.com/api/#create_contact\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst name = this.getNodeParameter('name', i) as string;\n\t\t\t\t\t\tconst email = this.getNodeParameter('email', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i, {});\n\n\t\t\t\t\t\tif (additionalFields.customFields) {\n\t\t\t\t\t\t\tconst metadata = (additionalFields.customFields as IDataObject)\n\t\t\t\t\t\t\t\t.customField as IDataObject[];\n\t\t\t\t\t\t\tadditionalFields.custom_fields = {};\n\t\t\t\t\t\t\tfor (const data of metadata) {\n\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\tadditionalFields.custom_fields[data.name as string] = data.value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete additionalFields.customFields;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst body: ICreateContactBody = additionalFields;\n\t\t\t\t\t\tbody.name = name;\n\t\t\t\t\t\tif (email) {\n\t\t\t\t\t\t\tbody.email = email;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await freshdeskApiRequest.call(this, 'POST', '/contacts', body);\n\t\t\t\t\t\t//https://developers.freshdesk.com/api/#delete_contact\n\t\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i) as string;\n\t\t\t\t\t\tresponseData = await freshdeskApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/contacts/${contactId}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (operation === 'get') {\n\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i) as string;\n\t\t\t\t\t\tresponseData = await freshdeskApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/contacts/${contactId}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t);\n\t\t\t\t\t\t//https://developers.freshdesk.com/api/#list_all_contacts\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i, {});\n\t\t\t\t\t\tresponseData = await freshdeskApiRequest.call(this, 'GET', '/contacts', {}, filters);\n\t\t\t\t\t\t//https://developers.freshdesk.com/api/#update_contact\n\t\t\t\t\t} else if (operation === 'update') {\n\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i, {});\n\n\t\t\t\t\t\tif (additionalFields.customFields) {\n\t\t\t\t\t\t\tconst metadata = (additionalFields.customFields as IDataObject)\n\t\t\t\t\t\t\t\t.customField as IDataObject[];\n\t\t\t\t\t\t\tadditionalFields.custom_fields = {};\n\t\t\t\t\t\t\tfor (const data of metadata) {\n\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\tadditionalFields.custom_fields[data.name as string] = data.value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete additionalFields.customFields;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst body: ICreateContactBody = additionalFields;\n\t\t\t\t\t\tresponseData = await freshdeskApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t\t`/contacts/${contactId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!Array.isArray(responseData) && responseData === undefined) {\n\t\t\t\t\tresponseData = {\n\t\t\t\t\t\tsuccess: true,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t);\n\t\t\t\treturnData.push(...executionData);\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":[]}