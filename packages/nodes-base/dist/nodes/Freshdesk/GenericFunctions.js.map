{"version":3,"sources":["../../../nodes/Freshdesk/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHttpRequestMethods,\n\tILoadOptionsFunctions,\n\tIRequestOptions,\n\tJsonObject,\n} from 'n8n-workflow';\nimport { BINARY_ENCODING, NodeApiError } from 'n8n-workflow';\n\nexport async function freshdeskApiRequest(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tresource: string,\n\n\tbody: any = {},\n\tquery: IDataObject = {},\n\turi?: string,\n\toption: IDataObject = {},\n) {\n\tconst credentials = await this.getCredentials('freshdeskApi');\n\n\tconst apiKey = `${credentials.apiKey}:X`;\n\n\tconst endpoint = 'freshdesk.com/api/v2';\n\n\tlet options: IRequestOptions = {\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `${Buffer.from(apiKey).toString(BINARY_ENCODING)}`,\n\t\t},\n\t\tmethod,\n\t\tbody,\n\t\tqs: query,\n\t\turi: uri || `https://${credentials.domain}.${endpoint}${resource}`,\n\t\tjson: true,\n\t};\n\tif (!Object.keys(body as IDataObject).length) {\n\t\tdelete options.body;\n\t}\n\tif (!Object.keys(query).length) {\n\t\tdelete options.qs;\n\t}\n\toptions = Object.assign({}, options, option);\n\ttry {\n\t\treturn await this.helpers.request(options);\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\nexport async function freshdeskApiRequestAllItems(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\n\tbody: any = {},\n\tquery: IDataObject = {},\n) {\n\tconst returnData: IDataObject[] = [];\n\n\tlet responseData;\n\tlet uri: string | undefined;\n\tquery.per_page = 100;\n\tdo {\n\t\tresponseData = await freshdeskApiRequest.call(this, method, endpoint, body, query, uri, {\n\t\t\tresolveWithFullResponse: true,\n\t\t});\n\t\tif (responseData.headers.link) {\n\t\t\turi = responseData.headers.link.split(';')[0].replace('<', '').replace('>', '');\n\t\t}\n\t\treturnData.push.apply(returnData, responseData.body as IDataObject[]);\n\t} while (responseData.headers.link?.includes('rel=\"next\"'));\n\treturn returnData;\n}\n\nexport function validateJSON(json: string | undefined): any {\n\tlet result;\n\ttry {\n\t\tresult = JSON.parse(json!);\n\t} catch (exception) {\n\t\tresult = [];\n\t}\n\treturn result;\n}\n\nexport function capitalize(s: string): string {\n\tif (typeof s !== 'string') return '';\n\treturn s.charAt(0).toUpperCase() + s.slice(1);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,0BAA8C;AAE9C,eAAsB,oBAErB,QACA,UAEA,OAAY,CAAC,GACb,QAAqB,CAAC,GACtB,KACA,SAAsB,CAAC,GACtB;AACD,QAAM,cAAc,MAAM,KAAK,eAAe,cAAc;AAE5D,QAAM,SAAS,GAAG,YAAY,MAAM;AAEpC,QAAM,WAAW;AAEjB,MAAI,UAA2B;AAAA,IAC9B,SAAS;AAAA,MACR,gBAAgB;AAAA,MAChB,eAAe,GAAG,OAAO,KAAK,MAAM,EAAE,SAAS,mCAAe,CAAC;AAAA,IAChE;AAAA,IACA;AAAA,IACA;AAAA,IACA,IAAI;AAAA,IACJ,KAAK,OAAO,WAAW,YAAY,MAAM,IAAI,QAAQ,GAAG,QAAQ;AAAA,IAChE,MAAM;AAAA,EACP;AACA,MAAI,CAAC,OAAO,KAAK,IAAmB,EAAE,QAAQ;AAC7C,WAAO,QAAQ;AAAA,EAChB;AACA,MAAI,CAAC,OAAO,KAAK,KAAK,EAAE,QAAQ;AAC/B,WAAO,QAAQ;AAAA,EAChB;AACA,YAAU,OAAO,OAAO,CAAC,GAAG,SAAS,MAAM;AAC3C,MAAI;AACH,WAAO,MAAM,KAAK,QAAQ,QAAQ,OAAO;AAAA,EAC1C,SAAS,OAAO;AACf,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,KAAmB;AAAA,EAC3D;AACD;AAEA,eAAsB,4BAErB,QACA,UAEA,OAAY,CAAC,GACb,QAAqB,CAAC,GACrB;AACD,QAAM,aAA4B,CAAC;AAEnC,MAAI;AACJ,MAAI;AACJ,QAAM,WAAW;AACjB,KAAG;AACF,mBAAe,MAAM,oBAAoB,KAAK,MAAM,QAAQ,UAAU,MAAM,OAAO,KAAK;AAAA,MACvF,yBAAyB;AAAA,IAC1B,CAAC;AACD,QAAI,aAAa,QAAQ,MAAM;AAC9B,YAAM,aAAa,QAAQ,KAAK,MAAM,GAAG,EAAE,CAAC,EAAE,QAAQ,KAAK,EAAE,EAAE,QAAQ,KAAK,EAAE;AAAA,IAC/E;AACA,eAAW,KAAK,MAAM,YAAY,aAAa,IAAqB;AAAA,EACrE,SAAS,aAAa,QAAQ,MAAM,SAAS,YAAY;AACzD,SAAO;AACR;AAEO,SAAS,aAAa,MAA+B;AAC3D,MAAI;AACJ,MAAI;AACH,aAAS,KAAK,MAAM,IAAK;AAAA,EAC1B,SAAS,WAAW;AACnB,aAAS,CAAC;AAAA,EACX;AACA,SAAO;AACR;AAEO,SAAS,WAAW,GAAmB;AAC7C,MAAI,OAAO,MAAM,SAAU,QAAO;AAClC,SAAO,EAAE,OAAO,CAAC,EAAE,YAAY,IAAI,EAAE,MAAM,CAAC;AAC7C;","names":[]}