{"version":3,"sources":["../../../nodes/CustomerIo/CustomerIoTrigger.node.ts"],"sourcesContent":["import type {\n\tIHookFunctions,\n\tIWebhookFunctions,\n\tIDataObject,\n\tINodeType,\n\tINodeTypeDescription,\n\tIWebhookResponseData,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes } from 'n8n-workflow';\n\nimport { customerIoApiRequest, eventExists } from './GenericFunctions';\n\ninterface IEvent {\n\tcustomer?: IDataObject;\n\temail?: IDataObject;\n\tpush?: IDataObject;\n\tslack?: IDataObject;\n\tsms?: IDataObject;\n\twebhook?: IDataObject;\n}\n\nexport class CustomerIoTrigger implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Customer.io Trigger',\n\t\tname: 'customerIoTrigger',\n\t\tgroup: ['trigger'],\n\t\ticon: { light: 'file:customerio.svg', dark: 'file:customerio.dark.svg' },\n\t\tversion: 1,\n\t\tdescription: 'Starts the workflow on a Customer.io update (Beta)',\n\t\tdefaults: {\n\t\t\tname: 'Customer.io Trigger',\n\t\t},\n\t\tinputs: [],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'customerIoApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\twebhooks: [\n\t\t\t{\n\t\t\t\tname: 'default',\n\t\t\t\thttpMethod: 'POST',\n\t\t\t\tresponseMode: 'onReceived',\n\t\t\t\tpath: 'webhook',\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Events',\n\t\t\t\tname: 'events',\n\t\t\t\ttype: 'multiOptions',\n\t\t\t\trequired: true,\n\t\t\t\tdefault: [],\n\t\t\t\tdescription: 'The events that can trigger the webhook and whether they are enabled',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Customer Subscribed',\n\t\t\t\t\t\tvalue: 'customer.subscribed',\n\t\t\t\t\t\tdescription: 'Whether the webhook is triggered when a list subscriber is added',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Customer Unsubscribe',\n\t\t\t\t\t\tvalue: 'customer.unsubscribed',\n\t\t\t\t\t\tdescription: 'Whether the webhook is triggered when a list member unsubscribes',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Email Attempted',\n\t\t\t\t\t\tvalue: 'email.attempted',\n\t\t\t\t\t\tdescription: 'Whether the webhook is triggered when a list member unsubscribes',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Email Bounced',\n\t\t\t\t\t\tvalue: 'email.bounced',\n\t\t\t\t\t\tdescription: 'Whether the webhook is triggered when a list member unsubscribes',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Email Clicked',\n\t\t\t\t\t\tvalue: 'email.clicked',\n\t\t\t\t\t\tdescription: 'Whether the webhook is triggered when a list member unsubscribes',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Email Converted',\n\t\t\t\t\t\tvalue: 'email.converted',\n\t\t\t\t\t\tdescription: 'Whether the webhook is triggered when a list member unsubscribes',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Email Delivered',\n\t\t\t\t\t\tvalue: 'email.delivered',\n\t\t\t\t\t\tdescription: 'Whether the webhook is triggered when a list member unsubscribes',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Email Drafted',\n\t\t\t\t\t\tvalue: 'email.drafted',\n\t\t\t\t\t\tdescription: 'Whether the webhook is triggered when a list member unsubscribes',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Email Failed',\n\t\t\t\t\t\tvalue: 'email.failed',\n\t\t\t\t\t\tdescription: 'Whether the webhook is triggered when a list member unsubscribes',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Email Opened',\n\t\t\t\t\t\tvalue: 'email.opened',\n\t\t\t\t\t\tdescription: 'Whether the webhook is triggered when a list member unsubscribes',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Email Sent',\n\t\t\t\t\t\tvalue: 'email.sent',\n\t\t\t\t\t\tdescription: 'Whether the webhook is triggered when a list member unsubscribes',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Email Spammed',\n\t\t\t\t\t\tvalue: 'email.spammed',\n\t\t\t\t\t\tdescription: 'Whether the webhook is triggered when a list member unsubscribes',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Push Attempted',\n\t\t\t\t\t\tvalue: 'push.attempted',\n\t\t\t\t\t\tdescription: 'Whether the webhook is triggered when a list member unsubscribes',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Push Bounced',\n\t\t\t\t\t\tvalue: 'push.bounced',\n\t\t\t\t\t\tdescription: 'Whether the webhook is triggered when a list member unsubscribes',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Push Clicked',\n\t\t\t\t\t\tvalue: 'push.clicked',\n\t\t\t\t\t\tdescription: 'Whether the webhook is triggered when a list member unsubscribes',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Push Delivered',\n\t\t\t\t\t\tvalue: 'push.delivered',\n\t\t\t\t\t\tdescription: 'Whether the webhook is triggered when a list member unsubscribes',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Push Drafted',\n\t\t\t\t\t\tvalue: 'push.drafted',\n\t\t\t\t\t\tdescription: 'Whether the webhook is triggered when a list member unsubscribes',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Push Failed',\n\t\t\t\t\t\tvalue: 'push.failed',\n\t\t\t\t\t\tdescription: 'Whether the webhook is triggered when a list member unsubscribes',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Push Opened',\n\t\t\t\t\t\tvalue: 'push.opened',\n\t\t\t\t\t\tdescription: 'Whether the webhook is triggered when a list member unsubscribes',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Push Sent',\n\t\t\t\t\t\tvalue: 'push.sent',\n\t\t\t\t\t\tdescription: 'Whether the webhook is triggered when a list member unsubscribes',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Slack Attempted',\n\t\t\t\t\t\tvalue: 'slack.attempted',\n\t\t\t\t\t\tdescription: 'Whether the webhook is triggered when a list member unsubscribes',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Slack Clicked',\n\t\t\t\t\t\tvalue: 'slack.clicked',\n\t\t\t\t\t\tdescription: 'Whether the webhook is triggered when a list member unsubscribes',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Slack Drafted',\n\t\t\t\t\t\tvalue: 'slack.drafted',\n\t\t\t\t\t\tdescription: 'Whether the webhook is triggered when a list member unsubscribes',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Slack Failed',\n\t\t\t\t\t\tvalue: 'slack.failed',\n\t\t\t\t\t\tdescription: 'Whether the webhook is triggered when a list member unsubscribes',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Slack Sent',\n\t\t\t\t\t\tvalue: 'slack.sent',\n\t\t\t\t\t\tdescription: 'Whether the webhook is triggered when a list member unsubscribes',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'SMS Attempted',\n\t\t\t\t\t\tvalue: 'sms.attempted',\n\t\t\t\t\t\tdescription: 'Whether the webhook is triggered when a list member unsubscribes',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'SMS Bounced',\n\t\t\t\t\t\tvalue: 'sms.bounced',\n\t\t\t\t\t\tdescription: 'Whether the webhook is triggered when a list member unsubscribes',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'SMS Clicked',\n\t\t\t\t\t\tvalue: 'sms.clicked',\n\t\t\t\t\t\tdescription: 'Whether the webhook is triggered when a list member unsubscribes',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'SMS Delivered',\n\t\t\t\t\t\tvalue: 'sms.delivered',\n\t\t\t\t\t\tdescription: 'Whether the webhook is triggered when a list member unsubscribes',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'SMS Drafted',\n\t\t\t\t\t\tvalue: 'sms.drafted',\n\t\t\t\t\t\tdescription: 'Whether the webhook is triggered when a list member unsubscribes',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'SMS Failed',\n\t\t\t\t\t\tvalue: 'sms.failed',\n\t\t\t\t\t\tdescription: 'Whether the webhook is triggered when a list member unsubscribes',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'SMS Sent',\n\t\t\t\t\t\tvalue: 'sms.sent',\n\t\t\t\t\t\tdescription: 'Whether the webhook is triggered when a list member unsubscribes',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t};\n\n\twebhookMethods = {\n\t\tdefault: {\n\t\t\tasync checkExists(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookUrl = this.getNodeWebhookUrl('default');\n\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\n\t\t\t\tconst currentEvents = this.getNodeParameter('events', []) as string[];\n\n\t\t\t\tconst endpoint = '/reporting_webhooks';\n\n\t\t\t\tlet { reporting_webhooks: webhooks } = await customerIoApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\tendpoint,\n\t\t\t\t\t{},\n\t\t\t\t\t'beta',\n\t\t\t\t);\n\n\t\t\t\tif (webhooks === null) {\n\t\t\t\t\twebhooks = [];\n\t\t\t\t}\n\n\t\t\t\tfor (const webhook of webhooks) {\n\t\t\t\t\tif (\n\t\t\t\t\t\twebhook.endpoint === webhookUrl &&\n\t\t\t\t\t\teventExists(currentEvents, webhook.events as IDataObject)\n\t\t\t\t\t) {\n\t\t\t\t\t\twebhookData.webhookId = webhook.id;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tasync create(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookUrl = this.getNodeWebhookUrl('default');\n\t\t\t\tconst events = this.getNodeParameter('events', []) as string[];\n\n\t\t\t\tconst endpoint = '/reporting_webhooks';\n\n\t\t\t\tconst data: IEvent = {\n\t\t\t\t\tcustomer: {},\n\t\t\t\t\temail: {},\n\t\t\t\t\tpush: {},\n\t\t\t\t\tslack: {},\n\t\t\t\t\tsms: {},\n\t\t\t\t\twebhook: {},\n\t\t\t\t};\n\n\t\t\t\tfor (const event of events) {\n\t\t\t\t\tconst option = event.split('.')[1];\n\t\t\t\t\tif (event.startsWith('customer')) {\n\t\t\t\t\t\tdata.customer![option] = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (event.startsWith('email')) {\n\t\t\t\t\t\tdata.email![option] = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (event.startsWith('push')) {\n\t\t\t\t\t\tdata.push![option] = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (event.startsWith('slack')) {\n\t\t\t\t\t\tdata.slack![option] = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (event.startsWith('sms')) {\n\t\t\t\t\t\tdata.sms![option] = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (event.startsWith('webhook')) {\n\t\t\t\t\t\tdata.webhook![option] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst body = {\n\t\t\t\t\tendpoint: webhookUrl,\n\t\t\t\t\tevents: data,\n\t\t\t\t};\n\n\t\t\t\tconst webhook = await customerIoApiRequest.call(this, 'POST', endpoint, body, 'beta');\n\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\twebhookData.webhookId = webhook.id as string;\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tasync delete(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\n\t\t\t\tif (webhookData.webhookId !== undefined) {\n\t\t\t\t\tconst endpoint = `/reporting_webhooks/${webhookData.webhookId}`;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait customerIoApiRequest.call(this, 'DELETE', endpoint, {}, 'beta');\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tdelete webhookData.webhookId;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync webhook(this: IWebhookFunctions): Promise<IWebhookResponseData> {\n\t\tconst bodyData = this.getBodyData();\n\t\treturn {\n\t\t\tworkflowData: [this.helpers.returnJsonArray(bodyData)],\n\t\t};\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,0BAAoC;AAEpC,8BAAkD;AAW3C,MAAM,kBAAuC;AAAA,EAA7C;AACN,uBAAoC;AAAA,MACnC,aAAa;AAAA,MACb,MAAM;AAAA,MACN,OAAO,CAAC,SAAS;AAAA,MACjB,MAAM,EAAE,OAAO,uBAAuB,MAAM,2BAA2B;AAAA,MACvE,SAAS;AAAA,MACT,aAAa;AAAA,MACb,UAAU;AAAA,QACT,MAAM;AAAA,MACP;AAAA,MACA,QAAQ,CAAC;AAAA,MACT,SAAS,CAAC,wCAAoB,IAAI;AAAA,MAClC,aAAa;AAAA,QACZ;AAAA,UACC,MAAM;AAAA,UACN,UAAU;AAAA,QACX;AAAA,MACD;AAAA,MACA,UAAU;AAAA,QACT;AAAA,UACC,MAAM;AAAA,UACN,YAAY;AAAA,UACZ,cAAc;AAAA,UACd,MAAM;AAAA,QACP;AAAA,MACD;AAAA,MACA,YAAY;AAAA,QACX;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,UAAU;AAAA,UACV,SAAS,CAAC;AAAA,UACV,aAAa;AAAA,UACb,SAAS;AAAA,YACR;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aAAa;AAAA,YACd;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aAAa;AAAA,YACd;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aAAa;AAAA,YACd;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aAAa;AAAA,YACd;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aAAa;AAAA,YACd;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aAAa;AAAA,YACd;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aAAa;AAAA,YACd;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aAAa;AAAA,YACd;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aAAa;AAAA,YACd;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aAAa;AAAA,YACd;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aAAa;AAAA,YACd;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aAAa;AAAA,YACd;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aAAa;AAAA,YACd;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aAAa;AAAA,YACd;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aAAa;AAAA,YACd;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aAAa;AAAA,YACd;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aAAa;AAAA,YACd;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aAAa;AAAA,YACd;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aAAa;AAAA,YACd;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aAAa;AAAA,YACd;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aAAa;AAAA,YACd;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aAAa;AAAA,YACd;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aAAa;AAAA,YACd;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aAAa;AAAA,YACd;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aAAa;AAAA,YACd;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aAAa;AAAA,YACd;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aAAa;AAAA,Y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","names":[]}