{"version":3,"sources":["../../../nodes/CustomerIo/CustomerIo.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport { campaignFields, campaignOperations } from './CampaignDescription';\nimport { customerFields, customerOperations } from './CustomerDescription';\nimport { eventFields, eventOperations } from './EventDescription';\nimport { customerIoApiRequest, validateJSON } from './GenericFunctions';\nimport { segmentFields, segmentOperations } from './SegmentDescription';\n\nexport class CustomerIo implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Customer.io',\n\t\tname: 'customerIo',\n\t\ticon: { light: 'file:customerio.svg', dark: 'file:customerio.dark.svg' },\n\t\tgroup: ['output'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume Customer.io API',\n\t\tdefaults: {\n\t\t\tname: 'Customer.io',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'customerIoApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Customer',\n\t\t\t\t\t\tvalue: 'customer',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Event',\n\t\t\t\t\t\tvalue: 'event',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Campaign',\n\t\t\t\t\t\tvalue: 'campaign',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Segment',\n\t\t\t\t\t\tvalue: 'segment',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'customer',\n\t\t\t},\n\t\t\t// CAMPAIGN\n\t\t\t...campaignOperations,\n\t\t\t...campaignFields,\n\t\t\t// CUSTOMER\n\t\t\t...customerOperations,\n\t\t\t...customerFields,\n\t\t\t// EVENT\n\t\t\t...eventOperations,\n\t\t\t...eventFields,\n\t\t\t// SEGMENT\n\t\t\t...segmentOperations,\n\t\t\t...segmentFields,\n\t\t],\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst returnData: IDataObject[] = [];\n\t\tconst items = this.getInputData();\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\t\tconst body: IDataObject = {};\n\n\t\tlet responseData;\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'campaign') {\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst campaignId = this.getNodeParameter('campaignId', i) as number;\n\t\t\t\t\t\tconst endpoint = `/campaigns/${campaignId}`;\n\n\t\t\t\t\t\tresponseData = await customerIoApiRequest.call(this, 'GET', endpoint, body, 'beta');\n\t\t\t\t\t\tresponseData = responseData.campaign;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst endpoint = '/campaigns';\n\n\t\t\t\t\t\tresponseData = await customerIoApiRequest.call(this, 'GET', endpoint, body, 'beta');\n\t\t\t\t\t\tresponseData = responseData.campaigns;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'getMetrics') {\n\t\t\t\t\t\tconst campaignId = this.getNodeParameter('campaignId', i) as number;\n\t\t\t\t\t\tconst jsonParameters = this.getNodeParameter('jsonParameters', i);\n\n\t\t\t\t\t\tif (jsonParameters) {\n\t\t\t\t\t\t\tconst additionalFieldsJson = this.getNodeParameter(\n\t\t\t\t\t\t\t\t'additionalFieldsJson',\n\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t) as string;\n\n\t\t\t\t\t\t\tif (additionalFieldsJson !== '') {\n\t\t\t\t\t\t\t\tif (validateJSON(additionalFieldsJson) !== undefined) {\n\t\t\t\t\t\t\t\t\tObject.assign(body, JSON.parse(additionalFieldsJson));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t\t\t'Additional fields must be a valid JSON',\n\t\t\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\t\tconst period = this.getNodeParameter('period', i) as string;\n\t\t\t\t\t\t\tlet endpoint = `/campaigns/${campaignId}/metrics`;\n\n\t\t\t\t\t\t\tif (period !== 'days') {\n\t\t\t\t\t\t\t\tendpoint = `${endpoint}?period=${period}`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.steps) {\n\t\t\t\t\t\t\t\tbody.steps = additionalFields.steps as number;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.type) {\n\t\t\t\t\t\t\t\tif (additionalFields.type === 'urbanAirship') {\n\t\t\t\t\t\t\t\t\tadditionalFields.type = 'urban_airship';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tbody.type = additionalFields.type as string;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tresponseData = await customerIoApiRequest.call(this, 'GET', endpoint, body, 'beta');\n\t\t\t\t\t\t\tresponseData = responseData.metric;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (resource === 'customer') {\n\t\t\t\t\tif (operation === 'upsert') {\n\t\t\t\t\t\tconst id = this.getNodeParameter('id', i) as number;\n\t\t\t\t\t\tconst jsonParameters = this.getNodeParameter('jsonParameters', i);\n\n\t\t\t\t\t\tif (jsonParameters) {\n\t\t\t\t\t\t\tconst additionalFieldsJson = this.getNodeParameter(\n\t\t\t\t\t\t\t\t'additionalFieldsJson',\n\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t) as string;\n\n\t\t\t\t\t\t\tif (additionalFieldsJson !== '') {\n\t\t\t\t\t\t\t\tif (validateJSON(additionalFieldsJson) !== undefined) {\n\t\t\t\t\t\t\t\t\tObject.assign(body, JSON.parse(additionalFieldsJson));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t\t\t'Additional fields must be a valid JSON',\n\t\t\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\t\tif (additionalFields.customProperties) {\n\t\t\t\t\t\t\t\tconst data: any = {};\n\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\tadditionalFields.customProperties.customProperty.map((property) => {\n\t\t\t\t\t\t\t\t\tdata[property.key] = property.value;\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tbody.data = data;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (additionalFields.email) {\n\t\t\t\t\t\t\t\tbody.email = additionalFields.email as string;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (additionalFields.createdAt) {\n\t\t\t\t\t\t\t\tbody.created_at = new Date(additionalFields.createdAt as string).getTime() / 1000;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst endpoint = `/customers/${id}`;\n\n\t\t\t\t\t\tresponseData = await customerIoApiRequest.call(this, 'PUT', endpoint, body, 'tracking');\n\n\t\t\t\t\t\tresponseData = Object.assign({ id }, body);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst id = this.getNodeParameter('id', i) as number;\n\n\t\t\t\t\t\tbody.id = id;\n\n\t\t\t\t\t\tconst endpoint = `/customers/${id}`;\n\n\t\t\t\t\t\tawait customerIoApiRequest.call(this, 'DELETE', endpoint, body, 'tracking');\n\n\t\t\t\t\t\tresponseData = {\n\t\t\t\t\t\t\tsuccess: true,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (resource === 'event') {\n\t\t\t\t\tif (operation === 'track') {\n\t\t\t\t\t\tconst customerId = this.getNodeParameter('customerId', i) as number;\n\t\t\t\t\t\tconst eventName = this.getNodeParameter('eventName', i) as string;\n\t\t\t\t\t\tconst jsonParameters = this.getNodeParameter('jsonParameters', i);\n\n\t\t\t\t\t\tbody.name = eventName;\n\n\t\t\t\t\t\tif (jsonParameters) {\n\t\t\t\t\t\t\tconst additionalFieldsJson = this.getNodeParameter(\n\t\t\t\t\t\t\t\t'additionalFieldsJson',\n\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t) as string;\n\n\t\t\t\t\t\t\tif (additionalFieldsJson !== '') {\n\t\t\t\t\t\t\t\tif (validateJSON(additionalFieldsJson) !== undefined) {\n\t\t\t\t\t\t\t\t\tObject.assign(body, JSON.parse(additionalFieldsJson));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t\t\t'Additional fields must be a valid JSON',\n\t\t\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\t\tconst data: any = {};\n\n\t\t\t\t\t\t\tif (additionalFields.customAttributes) {\n\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\tadditionalFields.customAttributes.customAttribute.map((property) => {\n\t\t\t\t\t\t\t\t\tdata[property.key] = property.value;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (additionalFields.type) {\n\t\t\t\t\t\t\t\tdata.type = additionalFields.type as string;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbody.data = data;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst endpoint = `/customers/${customerId}/events`;\n\n\t\t\t\t\t\tawait customerIoApiRequest.call(this, 'POST', endpoint, body, 'tracking');\n\t\t\t\t\t\tresponseData = {\n\t\t\t\t\t\t\tsuccess: true,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'trackAnonymous') {\n\t\t\t\t\t\tconst eventName = this.getNodeParameter('eventName', i) as string;\n\t\t\t\t\t\tconst jsonParameters = this.getNodeParameter('jsonParameters', i);\n\n\t\t\t\t\t\tbody.name = eventName;\n\n\t\t\t\t\t\tif (jsonParameters) {\n\t\t\t\t\t\t\tconst additionalFieldsJson = this.getNodeParameter(\n\t\t\t\t\t\t\t\t'additionalFieldsJson',\n\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t) as string;\n\n\t\t\t\t\t\t\tif (additionalFieldsJson !== '') {\n\t\t\t\t\t\t\t\tif (validateJSON(additionalFieldsJson) !== undefined) {\n\t\t\t\t\t\t\t\t\tObject.assign(body, JSON.parse(additionalFieldsJson));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t\t\t'Additional fields must be a valid JSON',\n\t\t\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\t\tconst data: any = {};\n\n\t\t\t\t\t\t\tif (additionalFields.customAttributes) {\n\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\tadditionalFields.customAttributes.customAttribute.map((property) => {\n\t\t\t\t\t\t\t\t\tdata[property.key] = property.value;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbody.data = data;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst endpoint = '/events';\n\t\t\t\t\t\tawait customerIoApiRequest.call(this, 'POST', endpoint, body, 'tracking');\n\n\t\t\t\t\t\tresponseData = {\n\t\t\t\t\t\t\tsuccess: true,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (resource === 'segment') {\n\t\t\t\t\tconst segmentId = this.getNodeParameter('segmentId', i) as number;\n\t\t\t\t\tconst customerIds = this.getNodeParameter('customerIds', i) as string;\n\n\t\t\t\t\tbody.id = segmentId;\n\t\t\t\t\tbody.ids = customerIds.split(',');\n\n\t\t\t\t\tlet endpoint = '';\n\n\t\t\t\t\tif (operation === 'add') {\n\t\t\t\t\t\tendpoint = `/segments/${segmentId}/add_customers`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tendpoint = `/segments/${segmentId}/remove_customers`;\n\t\t\t\t\t}\n\n\t\t\t\t\tresponseData = await customerIoApiRequest.call(this, 'POST', endpoint, body, 'tracking');\n\n\t\t\t\t\tresponseData = {\n\t\t\t\t\t\tsuccess: true,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (Array.isArray(responseData)) {\n\t\t\t\t\treturnData.push.apply(returnData, responseData as IDataObject[]);\n\t\t\t\t} else {\n\t\t\t\t\treturnData.push(responseData as unknown as IDataObject);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\treturnData.push({ error: error.message });\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn [this.helpers.returnJsonArray(returnData)];\n\t}\n}\n"],"mappings":"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","names":[]}