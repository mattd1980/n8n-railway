{"version":3,"sources":["../../../nodes/HomeAssistant/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tILoadOptionsFunctions,\n\tIDataObject,\n\tINodePropertyOptions,\n\tJsonObject,\n\tIHttpRequestMethods,\n\tIRequestOptions,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\nexport async function homeAssistantApiRequest(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tresource: string,\n\tbody: IDataObject = {},\n\tqs: IDataObject = {},\n\turi?: string,\n\toption: IDataObject = {},\n) {\n\tconst credentials = await this.getCredentials('homeAssistantApi');\n\n\tlet options: IRequestOptions = {\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${credentials.accessToken}`,\n\t\t},\n\t\tmethod,\n\t\tqs,\n\t\tbody,\n\t\turi:\n\t\t\turi ??\n\t\t\t`${credentials.ssl === true ? 'https' : 'http'}://${credentials.host}:${\n\t\t\t\tcredentials.port\n\t\t\t}/api${resource}`,\n\t\tjson: true,\n\t};\n\n\toptions = Object.assign({}, options, option);\n\tif (Object.keys(options.body as IDataObject).length === 0) {\n\t\tdelete options.body;\n\t}\n\ttry {\n\t\tif (this.helpers.request) {\n\t\t\treturn await this.helpers.request(options);\n\t\t}\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\nexport async function getHomeAssistantEntities(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions,\n\tdomain = '',\n) {\n\tconst returnData: INodePropertyOptions[] = [];\n\tconst entities = await homeAssistantApiRequest.call(this, 'GET', '/states');\n\tfor (const entity of entities) {\n\t\tconst entityId = entity.entity_id as string;\n\t\tif (domain === '' || (domain && entityId.startsWith(domain))) {\n\t\t\tconst entityName = (entity.attributes.friendly_name as string) || entityId;\n\t\t\treturnData.push({\n\t\t\t\tname: entityName,\n\t\t\t\tvalue: entityId,\n\t\t\t});\n\t\t}\n\t}\n\treturn returnData;\n}\n\nexport async function getHomeAssistantServices(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions,\n\tdomain = '',\n) {\n\tconst returnData: INodePropertyOptions[] = [];\n\tconst services = await homeAssistantApiRequest.call(this, 'GET', '/services');\n\tif (domain === '') {\n\t\t// If no domain specified return domains\n\t\tconst domains = services.map(({ domain: service }: IDataObject) => service as string).sort();\n\t\treturnData.push(\n\t\t\t...(domains.map((service: string) => ({\n\t\t\t\tname: service,\n\t\t\t\tvalue: service,\n\t\t\t})) as INodePropertyOptions[]),\n\t\t);\n\t\treturn returnData;\n\t} else {\n\t\t// If we have a domain, return all relevant services\n\t\tconst domainServices = services.filter((service: IDataObject) => service.domain === domain);\n\t\tfor (const domainService of domainServices) {\n\t\t\tfor (const [serviceID, value] of Object.entries(domainService.services as IDataObject)) {\n\t\t\t\tconst serviceProperties = value as IDataObject;\n\t\t\t\tconst serviceName = serviceProperties.description || serviceID;\n\t\t\t\treturnData.push({\n\t\t\t\t\tname: serviceName as string,\n\t\t\t\t\tvalue: serviceID,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\treturn returnData;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,0BAA6B;AAE7B,eAAsB,wBAErB,QACA,UACA,OAAoB,CAAC,GACrB,KAAkB,CAAC,GACnB,KACA,SAAsB,CAAC,GACtB;AACD,QAAM,cAAc,MAAM,KAAK,eAAe,kBAAkB;AAEhE,MAAI,UAA2B;AAAA,IAC9B,SAAS;AAAA,MACR,eAAe,UAAU,YAAY,WAAW;AAAA,IACjD;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,KACC,OACA,GAAG,YAAY,QAAQ,OAAO,UAAU,MAAM,MAAM,YAAY,IAAI,IACnE,YAAY,IACb,OAAO,QAAQ;AAAA,IAChB,MAAM;AAAA,EACP;AAEA,YAAU,OAAO,OAAO,CAAC,GAAG,SAAS,MAAM;AAC3C,MAAI,OAAO,KAAK,QAAQ,IAAmB,EAAE,WAAW,GAAG;AAC1D,WAAO,QAAQ;AAAA,EAChB;AACA,MAAI;AACH,QAAI,KAAK,QAAQ,SAAS;AACzB,aAAO,MAAM,KAAK,QAAQ,QAAQ,OAAO;AAAA,IAC1C;AAAA,EACD,SAAS,OAAO;AACf,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,KAAmB;AAAA,EAC3D;AACD;AAEA,eAAsB,yBAErB,SAAS,IACR;AACD,QAAM,aAAqC,CAAC;AAC5C,QAAM,WAAW,MAAM,wBAAwB,KAAK,MAAM,OAAO,SAAS;AAC1E,aAAW,UAAU,UAAU;AAC9B,UAAM,WAAW,OAAO;AACxB,QAAI,WAAW,MAAO,UAAU,SAAS,WAAW,MAAM,GAAI;AAC7D,YAAM,aAAc,OAAO,WAAW,iBAA4B;AAClE,iBAAW,KAAK;AAAA,QACf,MAAM;AAAA,QACN,OAAO;AAAA,MACR,CAAC;AAAA,IACF;AAAA,EACD;AACA,SAAO;AACR;AAEA,eAAsB,yBAErB,SAAS,IACR;AACD,QAAM,aAAqC,CAAC;AAC5C,QAAM,WAAW,MAAM,wBAAwB,KAAK,MAAM,OAAO,WAAW;AAC5E,MAAI,WAAW,IAAI;AAElB,UAAM,UAAU,SAAS,IAAI,CAAC,EAAE,QAAQ,QAAQ,MAAmB,OAAiB,EAAE,KAAK;AAC3F,eAAW;AAAA,MACV,GAAI,QAAQ,IAAI,CAAC,aAAqB;AAAA,QACrC,MAAM;AAAA,QACN,OAAO;AAAA,MACR,EAAE;AAAA,IACH;AACA,WAAO;AAAA,EACR,OAAO;AAEN,UAAM,iBAAiB,SAAS,OAAO,CAAC,YAAyB,QAAQ,WAAW,MAAM;AAC1F,eAAW,iBAAiB,gBAAgB;AAC3C,iBAAW,CAAC,WAAW,KAAK,KAAK,OAAO,QAAQ,cAAc,QAAuB,GAAG;AACvF,cAAM,oBAAoB;AAC1B,cAAM,cAAc,kBAAkB,eAAe;AACrD,mBAAW,KAAK;AAAA,UACf,MAAM;AAAA,UACN,OAAO;AAAA,QACR,CAAC;AAAA,MACF;AAAA,IACD;AAAA,EACD;AACA,SAAO;AACR;","names":[]}