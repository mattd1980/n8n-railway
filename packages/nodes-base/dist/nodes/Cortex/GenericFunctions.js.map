{"version":3,"sources":["../../../nodes/Cortex/GenericFunctions.ts"],"sourcesContent":["import moment from 'moment-timezone';\nimport type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHookFunctions,\n\tIHttpRequestMethods,\n\tILoadOptionsFunctions,\n\tIRequestOptions,\n} from 'n8n-workflow';\n\nexport async function cortexApiRequest(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tresource: string,\n\n\tbody: any = {},\n\tquery: IDataObject = {},\n\turi?: string,\n\toption: IDataObject = {},\n): Promise<any> {\n\tconst credentials = await this.getCredentials('cortexApi');\n\n\tlet options: IRequestOptions = {\n\t\theaders: {},\n\t\tmethod,\n\t\tqs: query,\n\t\turi: uri || `${credentials.host}/api${resource}`,\n\t\tbody,\n\t\tjson: true,\n\t};\n\tif (Object.keys(option).length !== 0) {\n\t\toptions = Object.assign({}, options, option);\n\t}\n\tif (Object.keys(body as IDataObject).length === 0) {\n\t\tdelete options.body;\n\t}\n\tif (Object.keys(query).length === 0) {\n\t\tdelete options.qs;\n\t}\n\n\treturn await this.helpers.requestWithAuthentication.call(this, 'cortexApi', options);\n}\n\nexport function getEntityLabel(entity: IDataObject): string {\n\tlet label = '';\n\tswitch (entity._type) {\n\t\tcase 'case':\n\t\t\tlabel = `#${entity.caseId} ${entity.title}`;\n\t\t\tbreak;\n\t\tcase 'case_artifact':\n\t\t\t//@ts-ignore\n\t\t\tlabel = `[${entity.dataType}] ${entity.data ? entity.data : entity.attachment.name}`;\n\t\t\tbreak;\n\t\tcase 'alert':\n\t\t\tlabel = `[${entity.source}:${entity.sourceRef}] ${entity.title}`;\n\t\t\tbreak;\n\t\tcase 'case_task_log':\n\t\t\tlabel = `${entity.message} from ${entity.createdBy}`;\n\t\t\tbreak;\n\t\tcase 'case_task':\n\t\t\tlabel = `${entity.title} (${entity.status})`;\n\t\t\tbreak;\n\t\tcase 'job':\n\t\t\tlabel = `${entity.analyzerName} (${entity.status})`;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\treturn label;\n}\n\nexport function splitTags(tags: string): string[] {\n\treturn tags.split(',').filter((tag) => tag !== ' ' && tag);\n}\n\nexport function prepareParameters(values: IDataObject): IDataObject {\n\tconst response: IDataObject = {};\n\tfor (const key in values) {\n\t\tif (values[key] !== undefined && values[key] !== null && values[key] !== '') {\n\t\t\tif (moment(values[key] as string, moment.ISO_8601).isValid()) {\n\t\t\t\tresponse[key] = Date.parse(values[key] as string);\n\t\t\t} else if (key === 'tags') {\n\t\t\t\tresponse[key] = splitTags(values[key] as string);\n\t\t\t} else {\n\t\t\t\tresponse[key] = values[key];\n\t\t\t}\n\t\t}\n\t}\n\treturn response;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAmB;AAUnB,eAAsB,iBAErB,QACA,UAEA,OAAY,CAAC,GACb,QAAqB,CAAC,GACtB,KACA,SAAsB,CAAC,GACR;AACf,QAAM,cAAc,MAAM,KAAK,eAAe,WAAW;AAEzD,MAAI,UAA2B;AAAA,IAC9B,SAAS,CAAC;AAAA,IACV;AAAA,IACA,IAAI;AAAA,IACJ,KAAK,OAAO,GAAG,YAAY,IAAI,OAAO,QAAQ;AAAA,IAC9C;AAAA,IACA,MAAM;AAAA,EACP;AACA,MAAI,OAAO,KAAK,MAAM,EAAE,WAAW,GAAG;AACrC,cAAU,OAAO,OAAO,CAAC,GAAG,SAAS,MAAM;AAAA,EAC5C;AACA,MAAI,OAAO,KAAK,IAAmB,EAAE,WAAW,GAAG;AAClD,WAAO,QAAQ;AAAA,EAChB;AACA,MAAI,OAAO,KAAK,KAAK,EAAE,WAAW,GAAG;AACpC,WAAO,QAAQ;AAAA,EAChB;AAEA,SAAO,MAAM,KAAK,QAAQ,0BAA0B,KAAK,MAAM,aAAa,OAAO;AACpF;AAEO,SAAS,eAAe,QAA6B;AAC3D,MAAI,QAAQ;AACZ,UAAQ,OAAO,OAAO;AAAA,IACrB,KAAK;AACJ,cAAQ,IAAI,OAAO,MAAM,IAAI,OAAO,KAAK;AACzC;AAAA,IACD,KAAK;AAEJ,cAAQ,IAAI,OAAO,QAAQ,KAAK,OAAO,OAAO,OAAO,OAAO,OAAO,WAAW,IAAI;AAClF;AAAA,IACD,KAAK;AACJ,cAAQ,IAAI,OAAO,MAAM,IAAI,OAAO,SAAS,KAAK,OAAO,KAAK;AAC9D;AAAA,IACD,KAAK;AACJ,cAAQ,GAAG,OAAO,OAAO,SAAS,OAAO,SAAS;AAClD;AAAA,IACD,KAAK;AACJ,cAAQ,GAAG,OAAO,KAAK,KAAK,OAAO,MAAM;AACzC;AAAA,IACD,KAAK;AACJ,cAAQ,GAAG,OAAO,YAAY,KAAK,OAAO,MAAM;AAChD;AAAA,IACD;AACC;AAAA,EACF;AACA,SAAO;AACR;AAEO,SAAS,UAAU,MAAwB;AACjD,SAAO,KAAK,MAAM,GAAG,EAAE,OAAO,CAAC,QAAQ,QAAQ,OAAO,GAAG;AAC1D;AAEO,SAAS,kBAAkB,QAAkC;AACnE,QAAM,WAAwB,CAAC;AAC/B,aAAW,OAAO,QAAQ;AACzB,QAAI,OAAO,GAAG,MAAM,UAAa,OAAO,GAAG,MAAM,QAAQ,OAAO,GAAG,MAAM,IAAI;AAC5E,cAAI,uBAAAA,SAAO,OAAO,GAAG,GAAa,uBAAAA,QAAO,QAAQ,EAAE,QAAQ,GAAG;AAC7D,iBAAS,GAAG,IAAI,KAAK,MAAM,OAAO,GAAG,CAAW;AAAA,MACjD,WAAW,QAAQ,QAAQ;AAC1B,iBAAS,GAAG,IAAI,UAAU,OAAO,GAAG,CAAW;AAAA,MAChD,OAAO;AACN,iBAAS,GAAG,IAAI,OAAO,GAAG;AAAA,MAC3B;AAAA,IACD;AAAA,EACD;AACA,SAAO;AACR;","names":["moment"]}