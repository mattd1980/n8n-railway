{"version":3,"sources":["../../../nodes/Cortex/AnalyzerDescriptions.ts"],"sourcesContent":["import type { INodeProperties } from 'n8n-workflow';\n\nimport { TLPs } from './AnalyzerInterface';\n\nexport const analyzersOperations: INodeProperties[] = [\n\t{\n\t\tdisplayName: 'Operation',\n\t\tname: 'operation',\n\t\ttype: 'options',\n\t\tnoDataExpression: true,\n\t\trequired: true,\n\t\tdescription: 'Choose an operation',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['analyzer'],\n\t\t\t},\n\t\t},\n\t\tdefault: 'execute',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tname: 'Execute',\n\t\t\t\tvalue: 'execute',\n\t\t\t\tdescription: 'Execute Analyzer',\n\t\t\t\taction: 'Execute an analyzer',\n\t\t\t},\n\t\t],\n\t},\n];\n\nexport const analyzerFields: INodeProperties[] = [\n\t{\n\t\tdisplayName: 'Analyzer Type Name or ID',\n\t\tname: 'analyzer',\n\t\ttype: 'options',\n\t\trequired: true,\n\t\ttypeOptions: {\n\t\t\tloadOptionsMethod: 'loadActiveAnalyzers',\n\t\t},\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['analyzer'],\n\t\t\t\toperation: ['execute'],\n\t\t\t},\n\t\t},\n\t\tdescription:\n\t\t\t'Choose the analyzer. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\tdefault: '',\n\t},\n\t{\n\t\tdisplayName: 'Observable Type Name or ID',\n\t\tname: 'observableType',\n\t\ttype: 'options',\n\t\trequired: true,\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['analyzer'],\n\t\t\t\toperation: ['execute'],\n\t\t\t},\n\t\t\thide: {\n\t\t\t\tanalyzer: [''],\n\t\t\t},\n\t\t},\n\t\ttypeOptions: {\n\t\t\tloadOptionsMethod: 'loadObservableOptions',\n\t\t\tloadOptionsDependsOn: ['analyzer'],\n\t\t},\n\t\tdefault: '',\n\t\tdescription:\n\t\t\t'Choose the observable type. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t},\n\n\t// Observable type != file\n\t{\n\t\tdisplayName: 'Observable Value',\n\t\tname: 'observableValue',\n\t\ttype: 'string',\n\t\trequired: true,\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['analyzer'],\n\t\t\t\toperation: ['execute'],\n\t\t\t},\n\t\t\thide: {\n\t\t\t\tobservableType: ['file'],\n\t\t\t\tanalyzer: [''],\n\t\t\t},\n\t\t},\n\t\tdefault: '',\n\t\tdescription: 'Enter the observable value',\n\t},\n\t{\n\t\tdisplayName: 'Put Output File in Field',\n\t\tname: 'binaryPropertyName',\n\t\ttype: 'string',\n\t\tdefault: 'data',\n\t\trequired: true,\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tobservableType: ['file'],\n\t\t\t\tresource: ['analyzer'],\n\t\t\t\toperation: ['execute'],\n\t\t\t},\n\t\t},\n\t\thint: 'The name of the output binary field to put the file in',\n\t},\n\t{\n\t\tdisplayName: 'TLP',\n\t\tname: 'tlp',\n\t\ttype: 'options',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['analyzer'],\n\t\t\t\toperation: ['execute'],\n\t\t\t},\n\t\t\thide: {\n\t\t\t\tobservableType: [''],\n\t\t\t\tanalyzer: [''],\n\t\t\t},\n\t\t},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tname: 'White',\n\t\t\t\tvalue: TLPs.white,\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Green',\n\t\t\t\tvalue: TLPs.green,\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Amber',\n\t\t\t\tvalue: TLPs.amber,\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Red',\n\t\t\t\tvalue: TLPs.red,\n\t\t\t},\n\t\t],\n\t\tdefault: 2,\n\t\tdescription: 'The TLP of the analyzed observable',\n\t},\n\t{\n\t\tdisplayName: 'Additional Fields',\n\t\tname: 'additionalFields',\n\t\ttype: 'collection',\n\t\tplaceholder: 'Add Field',\n\t\tdefault: {},\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['analyzer'],\n\t\t\t\toperation: ['execute'],\n\t\t\t},\n\t\t},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Force',\n\t\t\t\tname: 'force',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: 'Whether to force bypassing the cache',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Timeout (Seconds)',\n\t\t\t\tname: 'timeout',\n\t\t\t\ttype: 'number',\n\t\t\t\tdefault: 3,\n\t\t\t\tdescription:\n\t\t\t\t\t'Timeout to wait for the report in case it is not available at the time the query was made',\n\t\t\t},\n\t\t],\n\t},\n];\n"],"mappings":"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","names":[]}