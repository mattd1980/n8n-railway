{"version":3,"sources":["../../../nodes/ProfitWell/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHookFunctions,\n\tILoadOptionsFunctions,\n\tJsonObject,\n\tIRequestOptions,\n\tIHttpRequestMethods,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\nexport async function profitWellApiRequest(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tresource: string,\n\n\tbody: any = {},\n\tqs: IDataObject = {},\n\turi?: string,\n\toption: IDataObject = {},\n): Promise<any> {\n\ttry {\n\t\tconst credentials = await this.getCredentials('profitWellApi');\n\t\tlet options: IRequestOptions = {\n\t\t\theaders: {\n\t\t\t\tAuthorization: credentials.accessToken,\n\t\t\t},\n\t\t\tmethod,\n\t\t\tqs,\n\t\t\tbody,\n\t\t\turi: uri || `https://api.profitwell.com/v2${resource}`,\n\t\t\tjson: true,\n\t\t};\n\n\t\toptions = Object.assign({}, options, option);\n\n\t\treturn await this.helpers.request(options);\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\nexport type Metrics = {\n\t[key: string]: [{ date: string; value: number | null }];\n};\nexport function simplifyDailyMetrics(responseData: Metrics) {\n\tconst data: IDataObject[] = [];\n\tconst keys = Object.keys(responseData);\n\tconst dates = responseData[keys[0]].map((e) => e.date);\n\tfor (const [index, date] of dates.entries()) {\n\t\tconst element: IDataObject = {\n\t\t\tdate,\n\t\t};\n\t\tfor (const key of keys) {\n\t\t\telement[key] = responseData[key][index].value;\n\t\t}\n\t\tdata.push(element);\n\t}\n\treturn data;\n}\n\nexport function simplifyMontlyMetrics(responseData: Metrics) {\n\tconst data: IDataObject = {};\n\tfor (const key of Object.keys(responseData)) {\n\t\tfor (const [index] of responseData[key].entries()) {\n\t\t\tdata[key] = responseData[key][index].value;\n\t\t\tdata.date = responseData[key][index].date;\n\t\t}\n\t}\n\treturn data;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,0BAA6B;AAE7B,eAAsB,qBAErB,QACA,UAEA,OAAY,CAAC,GACb,KAAkB,CAAC,GACnB,KACA,SAAsB,CAAC,GACR;AACf,MAAI;AACH,UAAM,cAAc,MAAM,KAAK,eAAe,eAAe;AAC7D,QAAI,UAA2B;AAAA,MAC9B,SAAS;AAAA,QACR,eAAe,YAAY;AAAA,MAC5B;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,KAAK,OAAO,gCAAgC,QAAQ;AAAA,MACpD,MAAM;AAAA,IACP;AAEA,cAAU,OAAO,OAAO,CAAC,GAAG,SAAS,MAAM;AAE3C,WAAO,MAAM,KAAK,QAAQ,QAAQ,OAAO;AAAA,EAC1C,SAAS,OAAO;AACf,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,KAAmB;AAAA,EAC3D;AACD;AAIO,SAAS,qBAAqB,cAAuB;AAC3D,QAAM,OAAsB,CAAC;AAC7B,QAAM,OAAO,OAAO,KAAK,YAAY;AACrC,QAAM,QAAQ,aAAa,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI;AACrD,aAAW,CAAC,OAAO,IAAI,KAAK,MAAM,QAAQ,GAAG;AAC5C,UAAM,UAAuB;AAAA,MAC5B;AAAA,IACD;AACA,eAAW,OAAO,MAAM;AACvB,cAAQ,GAAG,IAAI,aAAa,GAAG,EAAE,KAAK,EAAE;AAAA,IACzC;AACA,SAAK,KAAK,OAAO;AAAA,EAClB;AACA,SAAO;AACR;AAEO,SAAS,sBAAsB,cAAuB;AAC5D,QAAM,OAAoB,CAAC;AAC3B,aAAW,OAAO,OAAO,KAAK,YAAY,GAAG;AAC5C,eAAW,CAAC,KAAK,KAAK,aAAa,GAAG,EAAE,QAAQ,GAAG;AAClD,WAAK,GAAG,IAAI,aAAa,GAAG,EAAE,KAAK,EAAE;AACrC,WAAK,OAAO,aAAa,GAAG,EAAE,KAAK,EAAE;AAAA,IACtC;AAAA,EACD;AACA,SAAO;AACR;","names":[]}