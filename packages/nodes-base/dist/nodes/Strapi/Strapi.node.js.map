{"version":3,"sources":["../../../nodes/Strapi/Strapi.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tICredentialsDecrypted,\n\tICredentialTestFunctions,\n\tIDataObject,\n\tINodeCredentialTestResult,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n\tIRequestOptions,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport { entryFields, entryOperations } from './EntryDescription';\nimport {\n\tgetToken,\n\tremoveTrailingSlash,\n\tstrapiApiRequest,\n\tstrapiApiRequestAllItems,\n\tvalidateJSON,\n} from './GenericFunctions';\n\nexport class Strapi implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Strapi',\n\t\tname: 'strapi',\n\t\ticon: 'file:strapi.svg',\n\t\tgroup: ['input'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume Strapi API',\n\t\tdefaults: {\n\t\t\tname: 'Strapi',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'strapiApi',\n\t\t\t\trequired: true,\n\t\t\t\ttestedBy: 'strapiApiTest',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['password'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'strapiTokenApi',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['token'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Authentication',\n\t\t\t\tname: 'authentication',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Username & Password',\n\t\t\t\t\t\tvalue: 'password',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'API Token',\n\t\t\t\t\t\tvalue: 'token',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'password',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Entry',\n\t\t\t\t\t\tvalue: 'entry',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'entry',\n\t\t\t},\n\t\t\t...entryOperations,\n\t\t\t...entryFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tcredentialTest: {\n\t\t\tasync strapiApiTest(\n\t\t\t\tthis: ICredentialTestFunctions,\n\t\t\t\tcredential: ICredentialsDecrypted,\n\t\t\t): Promise<INodeCredentialTestResult> {\n\t\t\t\tconst credentials = credential.data as IDataObject;\n\t\t\t\tlet options: IRequestOptions = {};\n\n\t\t\t\tconst url = removeTrailingSlash(credentials.url as string);\n\n\t\t\t\toptions = {\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'content-type': 'application/json',\n\t\t\t\t\t},\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\tbody: {\n\t\t\t\t\t\tidentifier: credentials.email,\n\t\t\t\t\t\tpassword: credentials.password,\n\t\t\t\t\t},\n\t\t\t\t\turi: credentials.apiVersion === 'v4' ? `${url}/api/auth/local` : `${url}/auth/local`,\n\t\t\t\t\tjson: true,\n\t\t\t\t};\n\n\t\t\t\ttry {\n\t\t\t\t\tawait this.helpers.request(options);\n\t\t\t\t\treturn {\n\t\t\t\t\t\tstatus: 'OK',\n\t\t\t\t\t\tmessage: 'Authentication successful',\n\t\t\t\t\t};\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tstatus: 'Error',\n\t\t\t\t\t\tmessage: `Auth settings are not valid: ${error}`,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst length = items.length;\n\t\tconst qs: IDataObject = {};\n\t\tconst headers: IDataObject = {};\n\t\tlet responseData;\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\tconst authenticationMethod = this.getNodeParameter('authentication', 0);\n\n\t\tlet apiVersion: string;\n\n\t\tif (authenticationMethod === 'password') {\n\t\t\tconst { jwt } = await getToken.call(this);\n\t\t\tapiVersion = (await this.getCredentials('strapiApi')).apiVersion as string;\n\t\t\theaders.Authorization = `Bearer ${jwt}`;\n\t\t} else {\n\t\t\tapiVersion = (await this.getCredentials('strapiTokenApi')).apiVersion as string;\n\t\t}\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'entry') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst body: IDataObject = {};\n\n\t\t\t\t\t\tconst contentType = this.getNodeParameter('contentType', i) as string;\n\n\t\t\t\t\t\tconst columns = this.getNodeParameter('columns', i) as string;\n\n\t\t\t\t\t\tconst columnList = columns.split(',').map((column) => column.trim());\n\n\t\t\t\t\t\tfor (const key of Object.keys(items[i].json)) {\n\t\t\t\t\t\t\tif (columnList.includes(key)) {\n\t\t\t\t\t\t\t\tapiVersion === 'v4'\n\t\t\t\t\t\t\t\t\t? (body.data = items[i].json)\n\t\t\t\t\t\t\t\t\t: (body[key] = items[i].json[key]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await strapiApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/${contentType}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\theaders,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject),\n\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst contentType = this.getNodeParameter('contentType', i) as string;\n\n\t\t\t\t\t\tconst entryId = this.getNodeParameter('entryId', i) as string;\n\n\t\t\t\t\t\tresponseData = await strapiApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/${contentType}/${entryId}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\theaders,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject),\n\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\n\t\t\t\t\t\tconst contentType = this.getNodeParameter('contentType', i) as string;\n\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\n\t\t\t\t\t\tif (apiVersion === 'v4') {\n\t\t\t\t\t\t\t// Sort Option\n\t\t\t\t\t\t\tif (options.sort && (options.sort as string[]).length !== 0) {\n\t\t\t\t\t\t\t\tconst sortFields = options.sort as string[];\n\t\t\t\t\t\t\t\tqs.sort = sortFields.join(',');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Filter Option\n\t\t\t\t\t\t\tif (options.where) {\n\t\t\t\t\t\t\t\tconst query = validateJSON(options.where as string);\n\t\t\t\t\t\t\t\tif (query !== undefined) {\n\t\t\t\t\t\t\t\t\tqs.filters = query;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'Query must be a valid JSON', {\n\t\t\t\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Publication Option\n\t\t\t\t\t\t\tif (options.publicationState) {\n\t\t\t\t\t\t\t\tqs.publicationState = options.publicationState as string;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Limit Option\n\t\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\t\tresponseData = await strapiApiRequestAllItems.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t`/${contentType}`,\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t\theaders,\n\t\t\t\t\t\t\t\t\tapiVersion,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tqs['pagination[pageSize]'] = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\t\t({ data: responseData } = await strapiApiRequest.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t`/${contentType}`,\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t\theaders,\n\t\t\t\t\t\t\t\t));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Sort Option\n\t\t\t\t\t\t\tif (options.sort && (options.sort as string[]).length !== 0) {\n\t\t\t\t\t\t\t\tconst sortFields = options.sort as string[];\n\t\t\t\t\t\t\t\tqs._sort = sortFields.join(',');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Filter Option\n\t\t\t\t\t\t\tif (options.where) {\n\t\t\t\t\t\t\t\tconst query = validateJSON(options.where as string);\n\t\t\t\t\t\t\t\tif (query !== undefined) {\n\t\t\t\t\t\t\t\t\tqs._where = query;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'Query must be a valid JSON', {\n\t\t\t\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Publication Option\n\t\t\t\t\t\t\tif (options.publicationState) {\n\t\t\t\t\t\t\t\tqs._publicationState = options.publicationState as string;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Limit Option\n\t\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\t\tresponseData = await strapiApiRequestAllItems.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t`/${contentType}`,\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t\theaders,\n\t\t\t\t\t\t\t\t\tapiVersion,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tqs._limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\t\tresponseData = await strapiApiRequest.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t`/${contentType}`,\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t\theaders,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject),\n\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst contentType = this.getNodeParameter('contentType', i) as string;\n\n\t\t\t\t\t\tconst entryId = this.getNodeParameter('entryId', i) as string;\n\n\t\t\t\t\t\tresponseData = await strapiApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/${contentType}/${entryId}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\theaders,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (apiVersion === 'v4') {\n\t\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject),\n\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst body: IDataObject = {};\n\n\t\t\t\t\t\tconst contentType = this.getNodeParameter('contentType', i) as string;\n\n\t\t\t\t\t\tconst columns = this.getNodeParameter('columns', i) as string;\n\n\t\t\t\t\t\tconst updateKey = this.getNodeParameter('updateKey', i) as string;\n\n\t\t\t\t\t\tconst columnList = columns.split(',').map((column) => column.trim());\n\n\t\t\t\t\t\tconst entryId = items[i].json[updateKey];\n\n\t\t\t\t\t\tfor (const key of Object.keys(items[i].json)) {\n\t\t\t\t\t\t\tif (columnList.includes(key)) {\n\t\t\t\t\t\t\t\tapiVersion === 'v4'\n\t\t\t\t\t\t\t\t\t? (body.data = items[i].json)\n\t\t\t\t\t\t\t\t\t: (body[key] = items[i].json[key]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await strapiApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t\t`/${contentType}/${entryId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\theaders,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (apiVersion === 'v4') {\n\t\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject),\n\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":[]}