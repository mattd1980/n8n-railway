{"version":3,"sources":["../../credentials/PushoverApi.credentials.ts"],"sourcesContent":["import type {\n\tICredentialDataDecryptedObject,\n\tICredentialTestRequest,\n\tICredentialType,\n\tIHttpRequestOptions,\n\tINodeProperties,\n} from 'n8n-workflow';\n\nexport class PushoverApi implements ICredentialType {\n\tname = 'pushoverApi';\n\n\tdisplayName = 'Pushover API';\n\n\tdocumentationUrl = 'pushover';\n\n\tproperties: INodeProperties[] = [\n\t\t{\n\t\t\tdisplayName: 'API Key',\n\t\t\tname: 'apiKey',\n\t\t\ttype: 'string',\n\t\t\ttypeOptions: { password: true },\n\t\t\tdefault: '',\n\t\t},\n\t];\n\n\tasync authenticate(\n\t\tcredentials: ICredentialDataDecryptedObject,\n\t\trequestOptions: IHttpRequestOptions,\n\t): Promise<IHttpRequestOptions> {\n\t\tif (requestOptions.method === 'GET' && requestOptions.qs) {\n\t\t\tObject.assign(requestOptions.qs, { token: credentials.apiKey });\n\t\t} else if (requestOptions.body) {\n\t\t\tObject.assign(requestOptions.body, { token: credentials.apiKey });\n\t\t}\n\t\treturn requestOptions;\n\t}\n\n\ttest: ICredentialTestRequest = {\n\t\trequest: {\n\t\t\tbaseURL: 'https://api.pushover.net/1',\n\t\t\turl: '=/licenses.json?token={{$credentials?.apiKey}}',\n\t\t\tmethod: 'GET',\n\t\t},\n\t};\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAQO,MAAM,YAAuC;AAAA,EAA7C;AACN,gBAAO;AAEP,uBAAc;AAEd,4BAAmB;AAEnB,sBAAgC;AAAA,MAC/B;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,aAAa,EAAE,UAAU,KAAK;AAAA,QAC9B,SAAS;AAAA,MACV;AAAA,IACD;AAcA,gBAA+B;AAAA,MAC9B,SAAS;AAAA,QACR,SAAS;AAAA,QACT,KAAK;AAAA,QACL,QAAQ;AAAA,MACT;AAAA,IACD;AAAA;AAAA,EAlBA,MAAM,aACL,aACA,gBAC+B;AAC/B,QAAI,eAAe,WAAW,SAAS,eAAe,IAAI;AACzD,aAAO,OAAO,eAAe,IAAI,EAAE,OAAO,YAAY,OAAO,CAAC;AAAA,IAC/D,WAAW,eAAe,MAAM;AAC/B,aAAO,OAAO,eAAe,MAAM,EAAE,OAAO,YAAY,OAAO,CAAC;AAAA,IACjE;AACA,WAAO;AAAA,EACR;AASD;","names":[]}