{"version":3,"sources":["../../credentials/ElasticSecurityApi.credentials.ts"],"sourcesContent":["import type {\n\tICredentialDataDecryptedObject,\n\tICredentialTestRequest,\n\tICredentialType,\n\tIHttpRequestOptions,\n\tINodeProperties,\n} from 'n8n-workflow';\n\nexport class ElasticSecurityApi implements ICredentialType {\n\tname = 'elasticSecurityApi';\n\n\tdisplayName = 'Elastic Security API';\n\n\tdocumentationUrl = 'elasticSecurity';\n\n\tproperties: INodeProperties[] = [\n\t\t{\n\t\t\tdisplayName: 'Base URL',\n\t\t\tname: 'baseUrl',\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t\tplaceholder: 'e.g. https://mydeployment.kb.us-central1.gcp.cloud.es.io:9243',\n\t\t\tdescription: \"Referred to as Kibana 'endpoint' in the Elastic deployment dashboard\",\n\t\t\trequired: true,\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Type',\n\t\t\tname: 'type',\n\t\t\ttype: 'options',\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\tname: 'API Key',\n\t\t\t\t\tvalue: 'apiKey',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Basic Auth',\n\t\t\t\t\tvalue: 'basicAuth',\n\t\t\t\t},\n\t\t\t],\n\t\t\tdefault: 'basicAuth',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Username',\n\t\t\tname: 'username',\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t\trequired: true,\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: {\n\t\t\t\t\ttype: ['basicAuth'],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Password',\n\t\t\tname: 'password',\n\t\t\ttype: 'string',\n\t\t\ttypeOptions: {\n\t\t\t\tpassword: true,\n\t\t\t},\n\t\t\tdefault: '',\n\t\t\trequired: true,\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: {\n\t\t\t\t\ttype: ['basicAuth'],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'API Key',\n\t\t\tname: 'apiKey',\n\t\t\trequired: true,\n\t\t\ttype: 'string',\n\t\t\ttypeOptions: { password: true },\n\t\t\tdefault: '',\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: {\n\t\t\t\t\ttype: ['apiKey'],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t];\n\n\tasync authenticate(\n\t\tcredentials: ICredentialDataDecryptedObject,\n\t\trequestOptions: IHttpRequestOptions,\n\t): Promise<IHttpRequestOptions> {\n\t\tif (credentials.type === 'apiKey') {\n\t\t\trequestOptions.headers = {\n\t\t\t\tAuthorization: `ApiKey ${credentials.apiKey}`,\n\t\t\t};\n\t\t} else {\n\t\t\trequestOptions.auth = {\n\t\t\t\tusername: credentials.username as string,\n\t\t\t\tpassword: credentials.password as string,\n\t\t\t};\n\t\t\trequestOptions.headers = {\n\t\t\t\t'kbn-xsrf': true,\n\t\t\t};\n\t\t}\n\t\treturn requestOptions;\n\t}\n\n\ttest: ICredentialTestRequest = {\n\t\trequest: {\n\t\t\tbaseURL: '={{$credentials.baseUrl}}',\n\t\t\turl: '/api/endpoint/metadata',\n\t\t\tmethod: 'GET',\n\t\t},\n\t};\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAQO,MAAM,mBAA8C;AAAA,EAApD;AACN,gBAAO;AAEP,uBAAc;AAEd,4BAAmB;AAEnB,sBAAgC;AAAA,MAC/B;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aAAa;AAAA,QACb,aAAa;AAAA,QACb,UAAU;AAAA,MACX;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,UACR;AAAA,YACC,MAAM;AAAA,YACN,OAAO;AAAA,UACR;AAAA,UACA;AAAA,YACC,MAAM;AAAA,YACN,OAAO;AAAA,UACR;AAAA,QACD;AAAA,QACA,SAAS;AAAA,MACV;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,UAAU;AAAA,QACV,gBAAgB;AAAA,UACf,MAAM;AAAA,YACL,MAAM,CAAC,WAAW;AAAA,UACnB;AAAA,QACD;AAAA,MACD;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,aAAa;AAAA,UACZ,UAAU;AAAA,QACX;AAAA,QACA,SAAS;AAAA,QACT,UAAU;AAAA,QACV,gBAAgB;AAAA,UACf,MAAM;AAAA,YACL,MAAM,CAAC,WAAW;AAAA,UACnB;AAAA,QACD;AAAA,MACD;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,QACV,MAAM;AAAA,QACN,aAAa,EAAE,UAAU,KAAK;AAAA,QAC9B,SAAS;AAAA,QACT,gBAAgB;AAAA,UACf,MAAM;AAAA,YACL,MAAM,CAAC,QAAQ;AAAA,UAChB;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAsBA,gBAA+B;AAAA,MAC9B,SAAS;AAAA,QACR,SAAS;AAAA,QACT,KAAK;AAAA,QACL,QAAQ;AAAA,MACT;AAAA,IACD;AAAA;AAAA,EA1BA,MAAM,aACL,aACA,gBAC+B;AAC/B,QAAI,YAAY,SAAS,UAAU;AAClC,qBAAe,UAAU;AAAA,QACxB,eAAe,UAAU,YAAY,MAAM;AAAA,MAC5C;AAAA,IACD,OAAO;AACN,qBAAe,OAAO;AAAA,QACrB,UAAU,YAAY;AAAA,QACtB,UAAU,YAAY;AAAA,MACvB;AACA,qBAAe,UAAU;AAAA,QACxB,YAAY;AAAA,MACb;AAAA,IACD;AACA,WAAO;AAAA,EACR;AASD;","names":[]}