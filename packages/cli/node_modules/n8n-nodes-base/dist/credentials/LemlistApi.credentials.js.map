{"version":3,"sources":["../../credentials/LemlistApi.credentials.ts"],"sourcesContent":["import type {\n\tICredentialDataDecryptedObject,\n\tICredentialTestRequest,\n\tICredentialType,\n\tIHttpRequestOptions,\n\tINodeProperties,\n} from 'n8n-workflow';\n\nexport class LemlistApi implements ICredentialType {\n\tname = 'lemlistApi';\n\n\tdisplayName = 'Lemlist API';\n\n\tdocumentationUrl = 'lemlist';\n\n\tproperties: INodeProperties[] = [\n\t\t{\n\t\t\tdisplayName: 'API Key',\n\t\t\tname: 'apiKey',\n\t\t\ttype: 'string',\n\t\t\ttypeOptions: { password: true },\n\t\t\tdefault: '',\n\t\t},\n\t];\n\n\tasync authenticate(\n\t\tcredentials: ICredentialDataDecryptedObject,\n\t\trequestOptions: IHttpRequestOptions,\n\t): Promise<IHttpRequestOptions> {\n\t\tconst encodedApiKey = Buffer.from(':' + (credentials.apiKey as string)).toString('base64');\n\t\trequestOptions.headers!.Authorization = `Basic ${encodedApiKey}`;\n\t\trequestOptions.headers!['user-agent'] = 'n8n';\n\t\treturn requestOptions;\n\t}\n\n\ttest: ICredentialTestRequest = {\n\t\trequest: {\n\t\t\tbaseURL: 'https://api.lemlist.com/api',\n\t\t\turl: '/campaigns',\n\t\t},\n\t};\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAQO,MAAM,WAAsC;AAAA,EAA5C;AACN,gBAAO;AAEP,uBAAc;AAEd,4BAAmB;AAEnB,sBAAgC;AAAA,MAC/B;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,aAAa,EAAE,UAAU,KAAK;AAAA,QAC9B,SAAS;AAAA,MACV;AAAA,IACD;AAYA,gBAA+B;AAAA,MAC9B,SAAS;AAAA,QACR,SAAS;AAAA,QACT,KAAK;AAAA,MACN;AAAA,IACD;AAAA;AAAA,EAfA,MAAM,aACL,aACA,gBAC+B;AAC/B,UAAM,gBAAgB,OAAO,KAAK,MAAO,YAAY,MAAiB,EAAE,SAAS,QAAQ;AACzF,mBAAe,QAAS,gBAAgB,SAAS,aAAa;AAC9D,mBAAe,QAAS,YAAY,IAAI;AACxC,WAAO;AAAA,EACR;AAQD;","names":[]}