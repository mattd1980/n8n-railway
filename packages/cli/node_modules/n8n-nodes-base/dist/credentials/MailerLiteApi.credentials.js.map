{"version":3,"sources":["../../credentials/MailerLiteApi.credentials.ts"],"sourcesContent":["import type {\n\tICredentialDataDecryptedObject,\n\tICredentialTestRequest,\n\tICredentialType,\n\tIHttpRequestOptions,\n\tINodeProperties,\n} from 'n8n-workflow';\n\nexport class MailerLiteApi implements ICredentialType {\n\tname = 'mailerLiteApi';\n\n\tdisplayName = 'Mailer Lite API';\n\n\tdocumentationUrl = 'mailerLite';\n\n\tproperties: INodeProperties[] = [\n\t\t{\n\t\t\tdisplayName: 'API Key',\n\t\t\tname: 'apiKey',\n\t\t\ttype: 'string',\n\t\t\ttypeOptions: { password: true },\n\t\t\tdefault: '',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Classic API',\n\t\t\tname: 'classicApi',\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tdescription:\n\t\t\t\t'If the Classic API should be used, If this is your first time using this node this should be false.',\n\t\t},\n\t];\n\n\tasync authenticate(\n\t\tcredentials: ICredentialDataDecryptedObject,\n\t\trequestOptions: IHttpRequestOptions,\n\t): Promise<IHttpRequestOptions> {\n\t\tif (credentials.classicApi === true) {\n\t\t\trequestOptions.headers = {\n\t\t\t\t'X-MailerLite-ApiKey': credentials.apiKey as string,\n\t\t\t};\n\t\t} else {\n\t\t\trequestOptions.headers = {\n\t\t\t\tAuthorization: `Bearer ${credentials.apiKey as string}`,\n\t\t\t};\n\t\t}\n\t\treturn requestOptions;\n\t}\n\n\ttest: ICredentialTestRequest = {\n\t\trequest: {\n\t\t\tbaseURL:\n\t\t\t\t'={{$credentials.classicApi ? \"https://api.mailerlite.com/api/v2\" : \"https://connect.mailerlite.com/api\"}}',\n\t\t\turl: '/groups',\n\t\t},\n\t};\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAQO,MAAM,cAAyC;AAAA,EAA/C;AACN,gBAAO;AAEP,uBAAc;AAEd,4BAAmB;AAEnB,sBAAgC;AAAA,MAC/B;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,aAAa,EAAE,UAAU,KAAK;AAAA,QAC9B,SAAS;AAAA,MACV;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aACC;AAAA,MACF;AAAA,IACD;AAkBA,gBAA+B;AAAA,MAC9B,SAAS;AAAA,QACR,SACC;AAAA,QACD,KAAK;AAAA,MACN;AAAA,IACD;AAAA;AAAA,EAtBA,MAAM,aACL,aACA,gBAC+B;AAC/B,QAAI,YAAY,eAAe,MAAM;AACpC,qBAAe,UAAU;AAAA,QACxB,uBAAuB,YAAY;AAAA,MACpC;AAAA,IACD,OAAO;AACN,qBAAe,UAAU;AAAA,QACxB,eAAe,UAAU,YAAY,MAAgB;AAAA,MACtD;AAAA,IACD;AACA,WAAO;AAAA,EACR;AASD;","names":[]}