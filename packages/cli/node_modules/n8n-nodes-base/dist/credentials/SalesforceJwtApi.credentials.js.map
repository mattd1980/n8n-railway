{"version":3,"sources":["../../credentials/SalesforceJwtApi.credentials.ts"],"sourcesContent":["import type { AxiosRequestConfig } from 'axios';\nimport axios from 'axios';\nimport jwt from 'jsonwebtoken';\nimport moment from 'moment-timezone';\nimport type {\n\tICredentialDataDecryptedObject,\n\tICredentialTestRequest,\n\tICredentialType,\n\tIHttpRequestOptions,\n\tINodeProperties,\n} from 'n8n-workflow';\n\nexport class SalesforceJwtApi implements ICredentialType {\n\tname = 'salesforceJwtApi';\n\n\tdisplayName = 'Salesforce JWT API';\n\n\tdocumentationUrl = 'salesforce';\n\n\tproperties: INodeProperties[] = [\n\t\t{\n\t\t\tdisplayName: 'Environment Type',\n\t\t\tname: 'environment',\n\t\t\ttype: 'options',\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\tname: 'Production',\n\t\t\t\t\tvalue: 'production',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Sandbox',\n\t\t\t\t\tvalue: 'sandbox',\n\t\t\t\t},\n\t\t\t],\n\t\t\tdefault: 'production',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Client ID',\n\t\t\tname: 'clientId',\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t\trequired: true,\n\t\t\tdescription: 'Consumer Key from Salesforce Connected App',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Username',\n\t\t\tname: 'username',\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t\trequired: true,\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Private Key',\n\t\t\tname: 'privateKey',\n\t\t\ttype: 'string',\n\t\t\ttypeOptions: {\n\t\t\t\tpassword: true,\n\t\t\t},\n\t\t\tdefault: '',\n\t\t\trequired: true,\n\t\t\tdescription:\n\t\t\t\t'Use the multiline editor. Make sure it is in standard PEM key format:<br />-----BEGIN PRIVATE KEY-----<br />KEY DATA GOES HERE<br />-----END PRIVATE KEY-----',\n\t\t},\n\t];\n\n\tasync authenticate(\n\t\tcredentials: ICredentialDataDecryptedObject,\n\t\trequestOptions: IHttpRequestOptions,\n\t): Promise<IHttpRequestOptions> {\n\t\tconst now = moment().unix();\n\t\tconst authUrl =\n\t\t\tcredentials.environment === 'sandbox'\n\t\t\t\t? 'https://test.salesforce.com'\n\t\t\t\t: 'https://login.salesforce.com';\n\t\tconst signature = jwt.sign(\n\t\t\t{\n\t\t\t\tiss: credentials.clientId as string,\n\t\t\t\tsub: credentials.username as string,\n\t\t\t\taud: authUrl,\n\t\t\t\texp: now + 3 * 60,\n\t\t\t},\n\t\t\tcredentials.privateKey as string,\n\t\t\t{\n\t\t\t\talgorithm: 'RS256',\n\t\t\t\theader: {\n\t\t\t\t\talg: 'RS256',\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tconst axiosRequestConfig: AxiosRequestConfig = {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t\t},\n\t\t\tmethod: 'POST',\n\t\t\tdata: new URLSearchParams({\n\t\t\t\tgrant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n\t\t\t\tassertion: signature,\n\t\t\t}).toString(),\n\t\t\turl: `${authUrl}/services/oauth2/token`,\n\t\t\tresponseType: 'json',\n\t\t};\n\t\tconst result = await axios(axiosRequestConfig);\n\t\tconst { access_token } = result.data as { access_token: string };\n\n\t\treturn {\n\t\t\t...requestOptions,\n\t\t\theaders: {\n\t\t\t\t...requestOptions.headers,\n\t\t\t\tAuthorization: `Bearer ${access_token}`,\n\t\t\t},\n\t\t};\n\t}\n\n\ttest: ICredentialTestRequest = {\n\t\trequest: {\n\t\t\tbaseURL:\n\t\t\t\t'={{$credentials?.environment === \"sandbox\" ? \"https://test.salesforce.com\" : \"https://login.salesforce.com\"}}',\n\t\t\turl: '/services/oauth2/userinfo',\n\t\t\tmethod: 'GET',\n\t\t},\n\t};\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,mBAAkB;AAClB,0BAAgB;AAChB,6BAAmB;AASZ,MAAM,iBAA4C;AAAA,EAAlD;AACN,gBAAO;AAEP,uBAAc;AAEd,4BAAmB;AAEnB,sBAAgC;AAAA,MAC/B;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,UACR;AAAA,YACC,MAAM;AAAA,YACN,OAAO;AAAA,UACR;AAAA,UACA;AAAA,YACC,MAAM;AAAA,YACN,OAAO;AAAA,UACR;AAAA,QACD;AAAA,QACA,SAAS;AAAA,MACV;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,UAAU;AAAA,QACV,aAAa;AAAA,MACd;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,UAAU;AAAA,MACX;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,aAAa;AAAA,UACZ,UAAU;AAAA,QACX;AAAA,QACA,SAAS;AAAA,QACT,UAAU;AAAA,QACV,aACC;AAAA,MACF;AAAA,IACD;AAmDA,gBAA+B;AAAA,MAC9B,SAAS;AAAA,QACR,SACC;AAAA,QACD,KAAK;AAAA,QACL,QAAQ;AAAA,MACT;AAAA,IACD;AAAA;AAAA,EAxDA,MAAM,aACL,aACA,gBAC+B;AAC/B,UAAM,UAAM,uBAAAA,SAAO,EAAE,KAAK;AAC1B,UAAM,UACL,YAAY,gBAAgB,YACzB,gCACA;AACJ,UAAM,YAAY,oBAAAC,QAAI;AAAA,MACrB;AAAA,QACC,KAAK,YAAY;AAAA,QACjB,KAAK,YAAY;AAAA,QACjB,KAAK;AAAA,QACL,KAAK,MAAM,IAAI;AAAA,MAChB;AAAA,MACA,YAAY;AAAA,MACZ;AAAA,QACC,WAAW;AAAA,QACX,QAAQ;AAAA,UACP,KAAK;AAAA,QACN;AAAA,MACD;AAAA,IACD;AAEA,UAAM,qBAAyC;AAAA,MAC9C,SAAS;AAAA,QACR,gBAAgB;AAAA,MACjB;AAAA,MACA,QAAQ;AAAA,MACR,MAAM,IAAI,gBAAgB;AAAA,QACzB,YAAY;AAAA,QACZ,WAAW;AAAA,MACZ,CAAC,EAAE,SAAS;AAAA,MACZ,KAAK,GAAG,OAAO;AAAA,MACf,cAAc;AAAA,IACf;AACA,UAAM,SAAS,UAAM,aAAAC,SAAM,kBAAkB;AAC7C,UAAM,EAAE,aAAa,IAAI,OAAO;AAEhC,WAAO;AAAA,MACN,GAAG;AAAA,MACH,SAAS;AAAA,QACR,GAAG,eAAe;AAAA,QAClB,eAAe,UAAU,YAAY;AAAA,MACtC;AAAA,IACD;AAAA,EACD;AAUD;","names":["moment","jwt","axios"]}