{"version":3,"sources":["../../credentials/AzureStorageSharedKeyApi.credentials.ts"],"sourcesContent":["import type {\n\tICredentialDataDecryptedObject,\n\tICredentialType,\n\tIHttpRequestOptions,\n\tINodeProperties,\n} from 'n8n-workflow';\nimport { createHmac } from 'node:crypto';\n\nimport {\n\tgetCanonicalizedHeadersString,\n\tgetCanonicalizedResourceString,\n\tHeaderConstants,\n} from '../nodes/Microsoft/Storage/GenericFunctions';\n\nexport class AzureStorageSharedKeyApi implements ICredentialType {\n\tname = 'azureStorageSharedKeyApi';\n\n\tdisplayName = 'Azure Storage Shared Key API';\n\n\tdocumentationUrl = 'azurestorage';\n\n\tproperties: INodeProperties[] = [\n\t\t{\n\t\t\tdisplayName: 'Account',\n\t\t\tname: 'account',\n\t\t\tdescription: 'Account name',\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Key',\n\t\t\tname: 'key',\n\t\t\tdescription: 'Account key',\n\t\t\ttype: 'string',\n\t\t\ttypeOptions: {\n\t\t\t\tpassword: true,\n\t\t\t},\n\t\t\tdefault: '',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Base URL',\n\t\t\tname: 'baseUrl',\n\t\t\ttype: 'hidden',\n\t\t\tdefault: '=https://{{ $self[\"account\"] }}.blob.core.windows.net',\n\t\t},\n\t];\n\n\tasync authenticate(\n\t\tcredentials: ICredentialDataDecryptedObject,\n\t\trequestOptions: IHttpRequestOptions,\n\t): Promise<IHttpRequestOptions> {\n\t\tif (requestOptions.qs) {\n\t\t\tfor (const [key, value] of Object.entries(requestOptions.qs)) {\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\tdelete requestOptions.qs[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (requestOptions.headers) {\n\t\t\tfor (const [key, value] of Object.entries(requestOptions.headers)) {\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\tdelete requestOptions.headers[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\trequestOptions.method ??= 'GET';\n\t\trequestOptions.headers ??= {};\n\n\t\tconst stringToSign: string = [\n\t\t\trequestOptions.method.toUpperCase(),\n\t\t\trequestOptions.headers[HeaderConstants.CONTENT_LANGUAGE] ?? '',\n\t\t\trequestOptions.headers[HeaderConstants.CONTENT_ENCODING] ?? '',\n\t\t\trequestOptions.headers[HeaderConstants.CONTENT_LENGTH] ?? '',\n\t\t\trequestOptions.headers[HeaderConstants.CONTENT_MD5] ?? '',\n\t\t\trequestOptions.headers[HeaderConstants.CONTENT_TYPE] ?? '',\n\t\t\trequestOptions.headers[HeaderConstants.DATE] ?? '',\n\t\t\trequestOptions.headers[HeaderConstants.IF_MODIFIED_SINCE] ?? '',\n\t\t\trequestOptions.headers[HeaderConstants.IF_MATCH] ?? '',\n\t\t\trequestOptions.headers[HeaderConstants.IF_NONE_MATCH] ?? '',\n\t\t\trequestOptions.headers[HeaderConstants.IF_UNMODIFIED_SINCE] ?? '',\n\t\t\trequestOptions.headers[HeaderConstants.RANGE] ?? '',\n\t\t\tgetCanonicalizedHeadersString(requestOptions) +\n\t\t\t\tgetCanonicalizedResourceString(requestOptions, credentials),\n\t\t].join('\\n');\n\n\t\tconst signature: string = createHmac('sha256', Buffer.from(credentials.key as string, 'base64'))\n\t\t\t.update(stringToSign, 'utf8')\n\t\t\t.digest('base64');\n\n\t\trequestOptions.headers[HeaderConstants.AUTHORIZATION] =\n\t\t\t`SharedKey ${credentials.account as string}:${signature}`;\n\n\t\treturn requestOptions;\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,yBAA2B;AAE3B,8BAIO;AAEA,MAAM,yBAAoD;AAAA,EAA1D;AACN,gBAAO;AAEP,uBAAc;AAEd,4BAAmB;AAEnB,sBAAgC;AAAA,MAC/B;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,aAAa;AAAA,QACb,MAAM;AAAA,QACN,SAAS;AAAA,MACV;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,aAAa;AAAA,QACb,MAAM;AAAA,QACN,aAAa;AAAA,UACZ,UAAU;AAAA,QACX;AAAA,QACA,SAAS;AAAA,MACV;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,MACV;AAAA,IACD;AAAA;AAAA,EAEA,MAAM,aACL,aACA,gBAC+B;AAC/B,QAAI,eAAe,IAAI;AACtB,iBAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,eAAe,EAAE,GAAG;AAC7D,YAAI,UAAU,QAAW;AACxB,iBAAO,eAAe,GAAG,GAAG;AAAA,QAC7B;AAAA,MACD;AAAA,IACD;AACA,QAAI,eAAe,SAAS;AAC3B,iBAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,eAAe,OAAO,GAAG;AAClE,YAAI,UAAU,QAAW;AACxB,iBAAO,eAAe,QAAQ,GAAG;AAAA,QAClC;AAAA,MACD;AAAA,IACD;AAEA,mBAAe,WAAW;AAC1B,mBAAe,YAAY,CAAC;AAE5B,UAAM,eAAuB;AAAA,MAC5B,eAAe,OAAO,YAAY;AAAA,MAClC,eAAe,QAAQ,wCAAgB,gBAAgB,KAAK;AAAA,MAC5D,eAAe,QAAQ,wCAAgB,gBAAgB,KAAK;AAAA,MAC5D,eAAe,QAAQ,wCAAgB,cAAc,KAAK;AAAA,MAC1D,eAAe,QAAQ,wCAAgB,WAAW,KAAK;AAAA,MACvD,eAAe,QAAQ,wCAAgB,YAAY,KAAK;AAAA,MACxD,eAAe,QAAQ,wCAAgB,IAAI,KAAK;AAAA,MAChD,eAAe,QAAQ,wCAAgB,iBAAiB,KAAK;AAAA,MAC7D,eAAe,QAAQ,wCAAgB,QAAQ,KAAK;AAAA,MACpD,eAAe,QAAQ,wCAAgB,aAAa,KAAK;AAAA,MACzD,eAAe,QAAQ,wCAAgB,mBAAmB,KAAK;AAAA,MAC/D,eAAe,QAAQ,wCAAgB,KAAK,KAAK;AAAA,UACjD,uDAA8B,cAAc,QAC3C,wDAA+B,gBAAgB,WAAW;AAAA,IAC5D,EAAE,KAAK,IAAI;AAEX,UAAM,gBAAoB,+BAAW,UAAU,OAAO,KAAK,YAAY,KAAe,QAAQ,CAAC,EAC7F,OAAO,cAAc,MAAM,EAC3B,OAAO,QAAQ;AAEjB,mBAAe,QAAQ,wCAAgB,aAAa,IACnD,aAAa,YAAY,OAAiB,IAAI,SAAS;AAExD,WAAO;AAAA,EACR;AACD;","names":[]}