{"version":3,"sources":["../../../nodes/Supabase/GenericFunctions.ts"],"sourcesContent":["import type {\n\tICredentialDataDecryptedObject,\n\tICredentialTestFunctions,\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHookFunctions,\n\tILoadOptionsFunctions,\n\tIWebhookFunctions,\n\tINodeProperties,\n\tIPairedItemData,\n\tJsonObject,\n\tIHttpRequestMethods,\n\tIRequestOptions,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\nexport async function supabaseApiRequest(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions | IHookFunctions | IWebhookFunctions,\n\tmethod: IHttpRequestMethods,\n\tresource: string,\n\tbody: IDataObject | IDataObject[] = {},\n\tqs: IDataObject = {},\n\turi?: string,\n\theaders: IDataObject = {},\n) {\n\tconst credentials = await this.getCredentials<{\n\t\thost: string;\n\t\tserviceRole: string;\n\t}>('supabaseApi');\n\n\tif (this.getNodeParameter('useCustomSchema', false)) {\n\t\tconst schema = this.getNodeParameter('schema', 'public');\n\t\tif (['POST', 'PATCH', 'PUT', 'DELETE'].includes(method)) {\n\t\t\theaders['Content-Profile'] = schema;\n\t\t} else if (['GET', 'HEAD'].includes(method)) {\n\t\t\theaders['Accept-Profile'] = schema;\n\t\t}\n\t}\n\n\tconst options: IRequestOptions = {\n\t\theaders: {\n\t\t\tPrefer: 'return=representation',\n\t\t},\n\t\tmethod,\n\t\tqs,\n\t\tbody,\n\t\turi: uri ?? `${credentials.host}/rest/v1${resource}`,\n\t\tjson: true,\n\t};\n\n\ttry {\n\t\toptions.headers = Object.assign({}, options.headers, headers);\n\t\tif (Object.keys(body).length === 0) {\n\t\t\tdelete options.body;\n\t\t}\n\t\treturn await this.helpers.requestWithAuthentication.call(this, 'supabaseApi', options);\n\t} catch (error) {\n\t\tif (error.description) {\n\t\t\terror.message = `${error.message}: ${error.description}`;\n\t\t}\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\nconst mapOperations: { [key: string]: string } = {\n\tcreate: 'created',\n\tupdate: 'updated',\n\tgetAll: 'retrieved',\n\tdelete: 'deleted',\n};\n\nexport function getFilters(\n\tresources: string[],\n\toperations: string[],\n\t{\n\t\tincludeNoneOption = true,\n\t\tfilterTypeDisplayName = 'Filter',\n\t\tfilterFixedCollectionDisplayName = 'Filters',\n\n\t\tmustMatchOptions = [\n\t\t\t{\n\t\t\t\tname: 'Any Filter',\n\t\t\t\tvalue: 'anyFilter',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'All Filters',\n\t\t\t\tvalue: 'allFilters',\n\t\t\t},\n\t\t],\n\t},\n): INodeProperties[] {\n\treturn [\n\t\t{\n\t\t\tdisplayName: filterTypeDisplayName,\n\t\t\tname: 'filterType',\n\t\t\ttype: 'options',\n\t\t\toptions: [\n\t\t\t\t...(includeNoneOption ? [{ name: 'None', value: 'none' }] : []),\n\t\t\t\t{\n\t\t\t\t\tname: 'Build Manually',\n\t\t\t\t\tvalue: 'manual',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'String',\n\t\t\t\t\tvalue: 'string',\n\t\t\t\t},\n\t\t\t],\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: {\n\t\t\t\t\tresource: resources,\n\t\t\t\t\toperation: operations,\n\t\t\t\t},\n\t\t\t},\n\t\t\tdefault: 'manual',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Must Match',\n\t\t\tname: 'matchType',\n\t\t\ttype: 'options',\n\t\t\toptions: mustMatchOptions,\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: {\n\t\t\t\t\tresource: resources,\n\t\t\t\t\toperation: operations,\n\t\t\t\t\tfilterType: ['manual'],\n\t\t\t\t},\n\t\t\t},\n\t\t\tdefault: 'anyFilter',\n\t\t},\n\t\t{\n\t\t\tdisplayName: filterFixedCollectionDisplayName,\n\t\t\tname: 'filters',\n\t\t\ttype: 'fixedCollection',\n\t\t\ttypeOptions: {\n\t\t\t\tmultipleValues: true,\n\t\t\t},\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: {\n\t\t\t\t\tresource: resources,\n\t\t\t\t\toperation: operations,\n\t\t\t\t\tfilterType: ['manual'],\n\t\t\t\t},\n\t\t\t},\n\t\t\tdefault: {},\n\t\t\tplaceholder: 'Add Condition',\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\tdisplayName: 'Conditions',\n\t\t\t\t\tname: 'conditions',\n\t\t\t\t\tvalues: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdisplayName: 'Field Name or ID',\n\t\t\t\t\t\t\tname: 'keyName',\n\t\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t'Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>',\n\t\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\t\tloadOptionsDependsOn: ['tableId'],\n\t\t\t\t\t\t\t\tloadOptionsMethod: 'getTableColumns',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdisplayName: 'Condition',\n\t\t\t\t\t\t\tname: 'condition',\n\t\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: 'Equals',\n\t\t\t\t\t\t\t\t\tvalue: 'eq',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: 'Full-Text',\n\t\t\t\t\t\t\t\t\tvalue: 'fullText',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: 'Greater Than',\n\t\t\t\t\t\t\t\t\tvalue: 'gt',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: 'Greater Than or Equal',\n\t\t\t\t\t\t\t\t\tvalue: 'gte',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: 'ILIKE operator',\n\t\t\t\t\t\t\t\t\tvalue: 'ilike',\n\t\t\t\t\t\t\t\t\tdescription: 'Use * in place of %',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: 'Is',\n\t\t\t\t\t\t\t\t\tvalue: 'is',\n\t\t\t\t\t\t\t\t\tdescription: 'Checking for exact equality (null,true,false,unknown)',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: 'Less Than',\n\t\t\t\t\t\t\t\t\tvalue: 'lt',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: 'Less Than or Equal',\n\t\t\t\t\t\t\t\t\tvalue: 'lte',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: 'LIKE operator',\n\t\t\t\t\t\t\t\t\tvalue: 'like',\n\t\t\t\t\t\t\t\t\tdescription: 'Use * in place of %',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: 'Not Equals',\n\t\t\t\t\t\t\t\t\tvalue: 'neq',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdisplayName: 'Search Function',\n\t\t\t\t\t\t\tname: 'searchFunction',\n\t\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\t\t\tcondition: ['fullText'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: 'to_tsquery',\n\t\t\t\t\t\t\t\t\tvalue: 'fts',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: 'plainto_tsquery',\n\t\t\t\t\t\t\t\t\tvalue: 'plfts',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: 'phraseto_tsquery',\n\t\t\t\t\t\t\t\t\tvalue: 'phfts',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: 'websearch_to_tsquery',\n\t\t\t\t\t\t\t\t\tvalue: 'wfts',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdisplayName: 'Field Value',\n\t\t\t\t\t\t\tname: 'keyValue',\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t],\n\t\t\tdescription: `Filter to decide which rows get ${mapOperations[operations[0]]}`,\n\t\t},\n\t\t{\n\t\t\tdisplayName:\n\t\t\t\t'See <a href=\"https://postgrest.org/en/stable/references/api/tables_views.html#horizontal-filtering\" target=\"_blank\">PostgREST guide</a> to creating filters',\n\t\t\tname: 'jsonNotice',\n\t\t\ttype: 'notice',\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: {\n\t\t\t\t\tresource: resources,\n\t\t\t\t\toperation: operations,\n\t\t\t\t\tfilterType: ['string'],\n\t\t\t\t},\n\t\t\t},\n\t\t\tdefault: '',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Filters (String)',\n\t\t\tname: 'filterString',\n\t\t\ttype: 'string',\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: {\n\t\t\t\t\tresource: resources,\n\t\t\t\t\toperation: operations,\n\t\t\t\t\tfilterType: ['string'],\n\t\t\t\t},\n\t\t\t},\n\t\t\tdefault: '',\n\t\t\tplaceholder: 'name=eq.jhon',\n\t\t},\n\t];\n}\n\nexport const buildQuery = (obj: IDataObject, value: IDataObject) => {\n\tif (value.condition === 'fullText') {\n\t\treturn Object.assign(obj, {\n\t\t\t[`${value.keyName}`]: `${value.searchFunction}.${value.keyValue}`,\n\t\t});\n\t}\n\treturn Object.assign(obj, { [`${value.keyName}`]: `${value.condition}.${value.keyValue}` });\n};\n\nexport const buildOrQuery = (key: IDataObject) => {\n\tif (key.condition === 'fullText') {\n\t\treturn `${key.keyName}.${key.searchFunction}.${key.keyValue}`;\n\t}\n\treturn `${key.keyName}.${key.condition}.${key.keyValue}`;\n};\n\nexport const buildGetQuery = (obj: IDataObject, value: IDataObject) => {\n\treturn Object.assign(obj, { [`${value.keyName}`]: `eq.${value.keyValue}` });\n};\n\nexport async function validateCredentials(\n\tthis: ICredentialTestFunctions,\n\tdecryptedCredentials: ICredentialDataDecryptedObject,\n): Promise<any> {\n\tconst credentials = decryptedCredentials;\n\n\tconst { serviceRole } = credentials as {\n\t\tserviceRole: string;\n\t};\n\n\tconst options: IRequestOptions = {\n\t\theaders: {\n\t\t\tapikey: serviceRole,\n\t\t\tAuthorization: 'Bearer ' + serviceRole,\n\t\t},\n\t\tmethod: 'GET',\n\t\turi: `${credentials.host}/rest/v1/`,\n\t\tjson: true,\n\t};\n\n\treturn await this.helpers.request(options);\n}\n\nexport function mapPairedItemsFrom<T>(iterable: Iterable<T> | ArrayLike<T>): IPairedItemData[] {\n\treturn Array.from(iterable, (_, i) => i).map((index) => {\n\t\treturn {\n\t\t\titem: index,\n\t\t};\n\t});\n}\n"],"mappings":"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","names":[]}