{"version":3,"sources":["../../../../../nodes/Merge/v3/methods/loadOptions.ts"],"sourcesContent":["import type { ILoadOptionsFunctions, INodePropertyOptions } from 'n8n-workflow';\n\nexport async function getResolveClashOptions(\n\tthis: ILoadOptionsFunctions,\n): Promise<INodePropertyOptions[]> {\n\tconst numberOfInputs = this.getNodeParameter('numberInputs', 2) as number;\n\n\tif (numberOfInputs <= 2) {\n\t\treturn [\n\t\t\t{\n\t\t\t\tname: 'Always Add Input Number to Field Names',\n\t\t\t\tvalue: 'addSuffix',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Prefer Input 1 Version',\n\t\t\t\tvalue: 'preferInput1',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Prefer Input 2 Version',\n\t\t\t\tvalue: 'preferLast',\n\t\t\t},\n\t\t];\n\t} else {\n\t\treturn [\n\t\t\t{\n\t\t\t\tname: 'Always Add Input Number to Field Names',\n\t\t\t\tvalue: 'addSuffix',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Use Earliest Version',\n\t\t\t\tvalue: 'preferInput1',\n\t\t\t},\n\t\t];\n\t}\n}\nexport async function getInputs(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\tconst numberOfInputs = this.getNodeParameter('numberInputs', 2) as number;\n\n\tconst returnData: INodePropertyOptions[] = [];\n\n\tfor (let i = 0; i < numberOfInputs; i++) {\n\t\treturnData.push({\n\t\t\tname: `${i + 1}`,\n\t\t\tvalue: i + 1,\n\t\t});\n\t}\n\n\treturn returnData;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,eAAsB,yBAEa;AAClC,QAAM,iBAAiB,KAAK,iBAAiB,gBAAgB,CAAC;AAE9D,MAAI,kBAAkB,GAAG;AACxB,WAAO;AAAA,MACN;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,IACD;AAAA,EACD,OAAO;AACN,WAAO;AAAA,MACN;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,IACD;AAAA,EACD;AACD;AACA,eAAsB,YAAwE;AAC7F,QAAM,iBAAiB,KAAK,iBAAiB,gBAAgB,CAAC;AAE9D,QAAM,aAAqC,CAAC;AAE5C,WAAS,IAAI,GAAG,IAAI,gBAAgB,KAAK;AACxC,eAAW,KAAK;AAAA,MACf,MAAM,GAAG,IAAI,CAAC;AAAA,MACd,OAAO,IAAI;AAAA,IACZ,CAAC;AAAA,EACF;AAEA,SAAO;AACR;","names":[]}