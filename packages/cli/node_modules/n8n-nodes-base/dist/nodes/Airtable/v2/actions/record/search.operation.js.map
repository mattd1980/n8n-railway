{"version":3,"sources":["../../../../../../nodes/Airtable/v2/actions/record/search.operation.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tINodeExecutionData,\n\tINodeProperties,\n\tIExecuteFunctions,\n} from 'n8n-workflow';\n\nimport { generatePairedItemData, updateDisplayOptions } from '../../../../../utils/utilities';\nimport type { IRecord } from '../../helpers/interfaces';\nimport { flattenOutput } from '../../helpers/utils';\nimport { apiRequest, apiRequestAllItems, downloadRecordAttachments } from '../../transport';\nimport { viewRLC } from '../common.descriptions';\n\nconst properties: INodeProperties[] = [\n\t{\n\t\tdisplayName: 'Filter By Formula',\n\t\tname: 'filterByFormula',\n\t\ttype: 'string',\n\t\tdefault: '',\n\t\tplaceholder: \"e.g. NOT({Name} = 'Admin')\",\n\t\thint: 'If empty, all the records will be returned',\n\t\tdescription:\n\t\t\t'The formula will be evaluated for each record, and if the result is not 0, false, \"\", NaN, [], or #Error! the record will be included in the response. <a href=\"https://support.airtable.com/docs/formula-field-reference\" target=\"_blank\">More info</a>.',\n\t},\n\t{\n\t\tdisplayName: 'Return All',\n\t\tname: 'returnAll',\n\t\ttype: 'boolean',\n\t\tdefault: true,\n\t\tdescription: 'Whether to return all results or only up to a given limit',\n\t},\n\t{\n\t\tdisplayName: 'Limit',\n\t\tname: 'limit',\n\t\ttype: 'number',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\treturnAll: [false],\n\t\t\t},\n\t\t},\n\t\ttypeOptions: {\n\t\t\tminValue: 1,\n\t\t\tmaxValue: 100,\n\t\t},\n\t\tdefault: 100,\n\t\tdescription: 'Max number of results to return',\n\t},\n\t{\n\t\tdisplayName: 'Options',\n\t\tname: 'options',\n\t\ttype: 'collection',\n\t\tdefault: {},\n\t\tdescription: 'Additional options which decide which records should be returned',\n\t\tplaceholder: 'Add option',\n\t\toptions: [\n\t\t\t{\n\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-display-name-wrong-for-dynamic-multi-options\n\t\t\t\tdisplayName: 'Download Attachments',\n\t\t\t\tname: 'downloadFields',\n\t\t\t\ttype: 'multiOptions',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getAttachmentColumns',\n\t\t\t\t\tloadOptionsDependsOn: ['base.value', 'table.value'],\n\t\t\t\t},\n\t\t\t\tdefault: [],\n\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-description-wrong-for-dynamic-multi-options\n\t\t\t\tdescription: \"The fields of type 'attachment' that should be downloaded\",\n\t\t\t},\n\t\t\t{\n\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-display-name-wrong-for-dynamic-multi-options\n\t\t\t\tdisplayName: 'Output Fields',\n\t\t\t\tname: 'fields',\n\t\t\t\ttype: 'multiOptions',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getColumns',\n\t\t\t\t\tloadOptionsDependsOn: ['base.value', 'table.value'],\n\t\t\t\t},\n\t\t\t\tdefault: [],\n\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-description-wrong-for-dynamic-multi-options\n\t\t\t\tdescription: 'The fields you want to include in the output',\n\t\t\t},\n\t\t\tviewRLC,\n\t\t],\n\t},\n\t{\n\t\tdisplayName: 'Sort',\n\t\tname: 'sort',\n\t\tplaceholder: 'Add Sort Rule',\n\t\tdescription: 'Defines how the returned records should be ordered',\n\t\ttype: 'fixedCollection',\n\t\ttypeOptions: {\n\t\t\tmultipleValues: true,\n\t\t},\n\t\tdefault: {},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tname: 'property',\n\t\t\t\tdisplayName: 'Property',\n\t\t\t\tvalues: [\n\t\t\t\t\t{\n\t\t\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-display-name-wrong-for-dynamic-options\n\t\t\t\t\t\tdisplayName: 'Field',\n\t\t\t\t\t\tname: 'field',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tloadOptionsMethod: 'getColumns',\n\t\t\t\t\t\t\tloadOptionsDependsOn: ['base.value', 'table.value'],\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Name of the field to sort on. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Direction',\n\t\t\t\t\t\tname: 'direction',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'ASC',\n\t\t\t\t\t\t\t\tvalue: 'asc',\n\t\t\t\t\t\t\t\tdescription: 'Sort in ascending order (small -> large)',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'DESC',\n\t\t\t\t\t\t\t\tvalue: 'desc',\n\t\t\t\t\t\t\t\tdescription: 'Sort in descending order (large -> small)',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: 'asc',\n\t\t\t\t\t\tdescription: 'The sort direction',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t},\n];\n\nconst displayOptions = {\n\tshow: {\n\t\tresource: ['record'],\n\t\toperation: ['search'],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n\nexport async function execute(\n\tthis: IExecuteFunctions,\n\titems: INodeExecutionData[],\n\tbase: string,\n\ttable: string,\n): Promise<INodeExecutionData[]> {\n\tconst returnData: INodeExecutionData[] = [];\n\tconst nodeVersion = this.getNode().typeVersion;\n\n\tconst endpoint = `${base}/${table}`;\n\n\tlet itemsLength = items.length ? 1 : 0;\n\tlet fallbackPairedItems;\n\n\tif (nodeVersion >= 2.1) {\n\t\titemsLength = items.length;\n\t} else {\n\t\tfallbackPairedItems = generatePairedItemData(items.length);\n\t}\n\n\tfor (let i = 0; i < itemsLength; i++) {\n\t\ttry {\n\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\tconst options = this.getNodeParameter('options', i, {});\n\t\t\tconst sort = this.getNodeParameter('sort', i, {}) as IDataObject;\n\t\t\tconst filterByFormula = this.getNodeParameter('filterByFormula', i) as string;\n\n\t\t\tconst body: IDataObject = {};\n\t\t\tconst qs: IDataObject = {};\n\n\t\t\tif (filterByFormula) {\n\t\t\t\tqs.filterByFormula = filterByFormula;\n\t\t\t}\n\n\t\t\tif (options.fields) {\n\t\t\t\tif (typeof options.fields === 'string') {\n\t\t\t\t\tqs.fields = options.fields.split(',').map((field) => field.trim());\n\t\t\t\t} else {\n\t\t\t\t\tqs.fields = options.fields as string[];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (sort.property) {\n\t\t\t\tqs.sort = sort.property;\n\t\t\t}\n\n\t\t\tif (options.view) {\n\t\t\t\tqs.view = (options.view as IDataObject).value as string;\n\t\t\t}\n\n\t\t\tlet responseData;\n\n\t\t\tif (returnAll) {\n\t\t\t\tresponseData = await apiRequestAllItems.call(this, 'GET', endpoint, body, qs);\n\t\t\t} else {\n\t\t\t\tqs.maxRecords = this.getNodeParameter('limit', i);\n\t\t\t\tresponseData = await apiRequest.call(this, 'GET', endpoint, body, qs);\n\t\t\t}\n\n\t\t\tif (options.downloadFields) {\n\t\t\t\tconst itemWithAttachments = await downloadRecordAttachments.call(\n\t\t\t\t\tthis,\n\t\t\t\t\tresponseData.records as IRecord[],\n\t\t\t\t\toptions.downloadFields as string[],\n\t\t\t\t\tfallbackPairedItems || [{ item: i }],\n\t\t\t\t);\n\t\t\t\treturnData.push(...itemWithAttachments);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet records = responseData.records;\n\n\t\t\trecords = (records as IDataObject[]).map((record) => ({\n\t\t\t\tjson: flattenOutput(record),\n\t\t\t})) as INodeExecutionData[];\n\n\t\t\tconst itemData = fallbackPairedItems || [{ item: i }];\n\n\t\t\tconst executionData = this.helpers.constructExecutionMetaData(records, {\n\t\t\t\titemData,\n\t\t\t});\n\n\t\t\treturnData.push(...executionData);\n\t\t} catch (error) {\n\t\t\tif (this.continueOnFail()) {\n\t\t\t\treturnData.push({ json: { message: error.message, error }, pairedItem: { item: i } });\n\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn returnData;\n}\n"],"mappings":"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","names":[]}