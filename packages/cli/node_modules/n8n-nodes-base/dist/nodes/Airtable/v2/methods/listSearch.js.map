{"version":3,"sources":["../../../../../nodes/Airtable/v2/methods/listSearch.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodeListSearchItems,\n\tINodeListSearchResult,\n} from 'n8n-workflow';\nimport { NodeOperationError } from 'n8n-workflow';\n\nimport { apiRequest } from '../transport';\n\nexport async function baseSearch(\n\tthis: ILoadOptionsFunctions,\n\tfilter?: string,\n\tpaginationToken?: string,\n): Promise<INodeListSearchResult> {\n\tlet qs;\n\tif (paginationToken) {\n\t\tqs = {\n\t\t\toffset: paginationToken,\n\t\t};\n\t}\n\n\tconst response = await apiRequest.call(this, 'GET', 'meta/bases', undefined, qs);\n\n\tif (filter) {\n\t\tconst results: INodeListSearchItems[] = [];\n\n\t\tfor (const base of response.bases || []) {\n\t\t\tif ((base.name as string)?.toLowerCase().includes(filter.toLowerCase())) {\n\t\t\t\tresults.push({\n\t\t\t\t\tname: base.name as string,\n\t\t\t\t\tvalue: base.id as string,\n\t\t\t\t\turl: `https://airtable.com/${base.id}`,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tresults,\n\t\t\tpaginationToken: response.offset,\n\t\t};\n\t} else {\n\t\treturn {\n\t\t\tresults: (response.bases || []).map((base: IDataObject) => ({\n\t\t\t\tname: base.name as string,\n\t\t\t\tvalue: base.id as string,\n\t\t\t\turl: `https://airtable.com/${base.id}`,\n\t\t\t})),\n\t\t\tpaginationToken: response.offset,\n\t\t};\n\t}\n}\n\nexport async function tableSearch(\n\tthis: ILoadOptionsFunctions,\n\tfilter?: string,\n\tpaginationToken?: string,\n): Promise<INodeListSearchResult> {\n\tconst baseId = this.getNodeParameter('base', undefined, {\n\t\textractValue: true,\n\t}) as string;\n\n\tlet qs;\n\tif (paginationToken) {\n\t\tqs = {\n\t\t\toffset: paginationToken,\n\t\t};\n\t}\n\n\tconst response = await apiRequest.call(this, 'GET', `meta/bases/${baseId}/tables`, undefined, qs);\n\n\tif (filter) {\n\t\tconst results: INodeListSearchItems[] = [];\n\n\t\tfor (const table of response.tables || []) {\n\t\t\tif ((table.name as string)?.toLowerCase().includes(filter.toLowerCase())) {\n\t\t\t\tresults.push({\n\t\t\t\t\tname: table.name as string,\n\t\t\t\t\tvalue: table.id as string,\n\t\t\t\t\turl: `https://airtable.com/${baseId}/${table.id}`,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tresults,\n\t\t\tpaginationToken: response.offset,\n\t\t};\n\t} else {\n\t\treturn {\n\t\t\tresults: (response.tables || []).map((table: IDataObject) => ({\n\t\t\t\tname: table.name as string,\n\t\t\t\tvalue: table.id as string,\n\t\t\t\turl: `https://airtable.com/${baseId}/${table.id}`,\n\t\t\t})),\n\t\t\tpaginationToken: response.offset,\n\t\t};\n\t}\n}\n\nexport async function viewSearch(\n\tthis: ILoadOptionsFunctions,\n\tfilter?: string,\n): Promise<INodeListSearchResult> {\n\tconst baseId = this.getNodeParameter('base', undefined, {\n\t\textractValue: true,\n\t}) as string;\n\n\tconst tableId = encodeURI(\n\t\tthis.getNodeParameter('table', undefined, {\n\t\t\textractValue: true,\n\t\t}) as string,\n\t);\n\n\tconst response = await apiRequest.call(this, 'GET', `meta/bases/${baseId}/tables`);\n\n\tconst tableData = ((response.tables as IDataObject[]) || []).find((table: IDataObject) => {\n\t\treturn table.id === tableId;\n\t});\n\n\tif (!tableData) {\n\t\tthrow new NodeOperationError(this.getNode(), 'Table information could not be found!', {\n\t\t\tlevel: 'warning',\n\t\t});\n\t}\n\n\tif (filter) {\n\t\tconst results: INodeListSearchItems[] = [];\n\n\t\tfor (const view of (tableData.views as IDataObject[]) || []) {\n\t\t\tif ((view.name as string)?.toLowerCase().includes(filter.toLowerCase())) {\n\t\t\t\tresults.push({\n\t\t\t\t\tname: view.name as string,\n\t\t\t\t\tvalue: view.id as string,\n\t\t\t\t\turl: `https://airtable.com/${baseId}/${tableId}/${view.id}`,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tresults,\n\t\t};\n\t} else {\n\t\treturn {\n\t\t\tresults: ((tableData.views as IDataObject[]) || []).map((view) => ({\n\t\t\t\tname: view.name as string,\n\t\t\t\tvalue: view.id as string,\n\t\t\t\turl: `https://airtable.com/${baseId}/${tableId}/${view.id}`,\n\t\t\t})),\n\t\t};\n\t}\n}\n"],"mappings":"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","names":[]}