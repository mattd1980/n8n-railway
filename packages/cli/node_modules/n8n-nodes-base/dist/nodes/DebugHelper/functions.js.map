{"version":3,"sources":["../../../nodes/DebugHelper/functions.ts"],"sourcesContent":["import { setFlagsFromString } from 'v8';\nimport { runInNewContext } from 'vm';\n\nexport const runGarbageCollector = () => {\n\ttry {\n\t\tsetFlagsFromString('--expose_gc');\n\t\tconst gc = runInNewContext('gc'); // nocommit\n\t\tgc();\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n};\n\nexport const generateGarbageMemory = (sizeInMB: number, onHeap = true) => {\n\tconst divider = onHeap ? 8 : 1;\n\tconst size = Math.max(1, Math.floor((sizeInMB * 1024 * 1024) / divider));\n\tif (onHeap) {\n\t\t// arrays are allocated on the heap\n\t\t// size in this case is only an approximation...\n\t\tconst array = Array(size);\n\t\tarray.fill(0);\n\t} else {\n\t\tconst array = new Uint8Array(size);\n\t\tarray.fill(0);\n\t}\n\treturn { ...process.memoryUsage() };\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAmC;AACnC,gBAAgC;AAEzB,MAAM,sBAAsB,MAAM;AACxC,MAAI;AACH,sCAAmB,aAAa;AAChC,UAAM,SAAK,2BAAgB,IAAI;AAC/B,OAAG;AAAA,EACJ,SAAS,OAAO;AACf,YAAQ,MAAM,KAAK;AAAA,EACpB;AACD;AAEO,MAAM,wBAAwB,CAAC,UAAkB,SAAS,SAAS;AACzE,QAAM,UAAU,SAAS,IAAI;AAC7B,QAAM,OAAO,KAAK,IAAI,GAAG,KAAK,MAAO,WAAW,OAAO,OAAQ,OAAO,CAAC;AACvE,MAAI,QAAQ;AAGX,UAAM,QAAQ,MAAM,IAAI;AACxB,UAAM,KAAK,CAAC;AAAA,EACb,OAAO;AACN,UAAM,QAAQ,IAAI,WAAW,IAAI;AACjC,UAAM,KAAK,CAAC;AAAA,EACb;AACA,SAAO,EAAE,GAAG,QAAQ,YAAY,EAAE;AACnC;","names":[]}