{"version":3,"sources":["../../../nodes/Gong/Gong.node.ts"],"sourcesContent":["import {\n\tNodeConnectionTypes,\n\ttype IDataObject,\n\ttype ILoadOptionsFunctions,\n\ttype INodeListSearchItems,\n\ttype INodeListSearchResult,\n\ttype INodeType,\n\ttype INodeTypeDescription,\n} from 'n8n-workflow';\n\nimport { callFields, callOperations, userFields, userOperations } from './descriptions';\nimport { gongApiRequest } from './GenericFunctions';\n\nexport class Gong implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Gong',\n\t\tname: 'gong',\n\t\ticon: 'file:gong.svg',\n\t\tgroup: ['transform'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Interact with Gong API',\n\t\tdefaults: {\n\t\t\tname: 'Gong',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'gongApi',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['accessToken'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'gongOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['oAuth2'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\trequestDefaults: {\n\t\t\tbaseURL: '={{ $credentials.baseUrl.replace(new RegExp(\"/$\"), \"\") }}',\n\t\t},\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Authentication',\n\t\t\t\tname: 'authentication',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Access Token',\n\t\t\t\t\t\tvalue: 'accessToken',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'OAuth2',\n\t\t\t\t\t\tvalue: 'oAuth2',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'accessToken',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Call',\n\t\t\t\t\t\tvalue: 'call',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'User',\n\t\t\t\t\t\tvalue: 'user',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'call',\n\t\t\t},\n\t\t\t...callOperations,\n\t\t\t...callFields,\n\t\t\t...userOperations,\n\t\t\t...userFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tlistSearch: {\n\t\t\tasync getCalls(\n\t\t\t\tthis: ILoadOptionsFunctions,\n\t\t\t\tfilter?: string,\n\t\t\t\tpaginationToken?: string,\n\t\t\t): Promise<INodeListSearchResult> {\n\t\t\t\tconst query: IDataObject = {};\n\t\t\t\tif (paginationToken) {\n\t\t\t\t\tquery.cursor = paginationToken;\n\t\t\t\t}\n\n\t\t\t\tconst responseData = await gongApiRequest.call(this, 'GET', '/v2/calls', {}, query);\n\n\t\t\t\tconst calls: Array<{\n\t\t\t\t\tid: string;\n\t\t\t\t\ttitle: string;\n\t\t\t\t}> = responseData.calls;\n\n\t\t\t\tconst results: INodeListSearchItems[] = calls\n\t\t\t\t\t.map((c) => ({\n\t\t\t\t\t\tname: c.title,\n\t\t\t\t\t\tvalue: c.id,\n\t\t\t\t\t}))\n\t\t\t\t\t.filter(\n\t\t\t\t\t\t(c) =>\n\t\t\t\t\t\t\t!filter ||\n\t\t\t\t\t\t\tc.name.toLowerCase().includes(filter.toLowerCase()) ||\n\t\t\t\t\t\t\tc.value?.toString() === filter,\n\t\t\t\t\t)\n\t\t\t\t\t.sort((a, b) => {\n\t\t\t\t\t\tif (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n\t\t\t\t\t\tif (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t});\n\n\t\t\t\treturn { results, paginationToken: responseData.records.cursor };\n\t\t\t},\n\n\t\t\tasync getUsers(\n\t\t\t\tthis: ILoadOptionsFunctions,\n\t\t\t\tfilter?: string,\n\t\t\t\tpaginationToken?: string,\n\t\t\t): Promise<INodeListSearchResult> {\n\t\t\t\tconst query: IDataObject = {};\n\t\t\t\tif (paginationToken) {\n\t\t\t\t\tquery.cursor = paginationToken;\n\t\t\t\t}\n\n\t\t\t\tconst responseData = await gongApiRequest.call(this, 'GET', '/v2/users', {}, query);\n\n\t\t\t\tconst users: Array<{\n\t\t\t\t\tid: string;\n\t\t\t\t\temailAddress: string;\n\t\t\t\t\tfirstName: string;\n\t\t\t\t\tlastName: string;\n\t\t\t\t}> = responseData.users;\n\n\t\t\t\tconst results: INodeListSearchItems[] = users\n\t\t\t\t\t.map((u) => ({\n\t\t\t\t\t\tname: `${u.firstName} ${u.lastName} (${u.emailAddress})`,\n\t\t\t\t\t\tvalue: u.id,\n\t\t\t\t\t}))\n\t\t\t\t\t.filter(\n\t\t\t\t\t\t(u) =>\n\t\t\t\t\t\t\t!filter ||\n\t\t\t\t\t\t\tu.name.toLowerCase().includes(filter.toLowerCase()) ||\n\t\t\t\t\t\t\tu.value?.toString() === filter,\n\t\t\t\t\t)\n\t\t\t\t\t.sort((a, b) => {\n\t\t\t\t\t\tif (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n\t\t\t\t\t\tif (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t});\n\n\t\t\t\treturn { results, paginationToken: responseData.records.cursor };\n\t\t\t},\n\t\t},\n\t};\n}\n"],"mappings":"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","names":[]}