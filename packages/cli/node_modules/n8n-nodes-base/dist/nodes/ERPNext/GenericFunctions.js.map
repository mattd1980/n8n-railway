{"version":3,"sources":["../../../nodes/ERPNext/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tILoadOptionsFunctions,\n\tIDataObject,\n\tIHookFunctions,\n\tIWebhookFunctions,\n\tIHttpRequestMethods,\n\tIRequestOptions,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\n/**\n * Return the base API URL based on the user's environment.\n */\nconst getBaseUrl = ({ environment, domain, subdomain }: ERPNextApiCredentials) =>\n\tenvironment === 'cloudHosted' ? `https://${subdomain}.${domain}` : domain;\n\nexport async function erpNextApiRequest(\n\tthis: IExecuteFunctions | IWebhookFunctions | IHookFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tresource: string,\n\tbody: IDataObject = {},\n\tquery: IDataObject = {},\n\turi?: string,\n\toption: IDataObject = {},\n) {\n\tconst credentials = await this.getCredentials<ERPNextApiCredentials>('erpNextApi');\n\tconst baseUrl = getBaseUrl(credentials);\n\n\tlet options: IRequestOptions = {\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tmethod,\n\t\tbody,\n\t\tqs: query,\n\t\turi: uri || `${baseUrl}${resource}`,\n\t\tjson: true,\n\t\trejectUnauthorized: !credentials.allowUnauthorizedCerts,\n\t};\n\n\toptions = Object.assign({}, options, option);\n\n\tif (!Object.keys(options.body as IDataObject).length) {\n\t\tdelete options.body;\n\t}\n\n\tif (!Object.keys(options.qs as IDataObject).length) {\n\t\tdelete options.qs;\n\t}\n\ttry {\n\t\treturn await this.helpers.requestWithAuthentication.call(this, 'erpNextApi', options);\n\t} catch (error) {\n\t\tif (error.statusCode === 403) {\n\t\t\tthrow new NodeApiError(this.getNode(), { message: 'DocType unavailable.' });\n\t\t}\n\n\t\tif (error.statusCode === 307) {\n\t\t\tthrow new NodeApiError(this.getNode(), {\n\t\t\t\tmessage: 'Please ensure the subdomain is correct.',\n\t\t\t});\n\t\t}\n\t\tthrow error;\n\t}\n}\n\nexport async function erpNextApiRequestAllItems(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tpropertyName: string,\n\tmethod: IHttpRequestMethods,\n\tresource: string,\n\tbody: IDataObject,\n\tquery: IDataObject = {},\n) {\n\tconst returnData: any[] = [];\n\n\tlet responseData;\n\tquery.limit_start = 0;\n\tquery.limit_page_length = 1000;\n\n\tdo {\n\t\tresponseData = await erpNextApiRequest.call(this, method, resource, body, query);\n\t\treturnData.push.apply(returnData, responseData[propertyName] as IDataObject[]);\n\t\tquery.limit_start += query.limit_page_length - 1;\n\t} while (responseData.data && responseData.data.length > 0);\n\n\treturn returnData;\n}\n\ntype ERPNextApiCredentials = {\n\tapiKey: string;\n\tapiSecret: string;\n\tenvironment: 'cloudHosted' | 'selfHosted';\n\tsubdomain?: string;\n\tdomain?: string;\n\tallowUnauthorizedCerts?: boolean;\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,0BAA6B;AAK7B,MAAM,aAAa,CAAC,EAAE,aAAa,QAAQ,UAAU,MACpD,gBAAgB,gBAAgB,WAAW,SAAS,IAAI,MAAM,KAAK;AAEpE,eAAsB,kBAErB,QACA,UACA,OAAoB,CAAC,GACrB,QAAqB,CAAC,GACtB,KACA,SAAsB,CAAC,GACtB;AACD,QAAM,cAAc,MAAM,KAAK,eAAsC,YAAY;AACjF,QAAM,UAAU,WAAW,WAAW;AAEtC,MAAI,UAA2B;AAAA,IAC9B,SAAS;AAAA,MACR,QAAQ;AAAA,MACR,gBAAgB;AAAA,IACjB;AAAA,IACA;AAAA,IACA;AAAA,IACA,IAAI;AAAA,IACJ,KAAK,OAAO,GAAG,OAAO,GAAG,QAAQ;AAAA,IACjC,MAAM;AAAA,IACN,oBAAoB,CAAC,YAAY;AAAA,EAClC;AAEA,YAAU,OAAO,OAAO,CAAC,GAAG,SAAS,MAAM;AAE3C,MAAI,CAAC,OAAO,KAAK,QAAQ,IAAmB,EAAE,QAAQ;AACrD,WAAO,QAAQ;AAAA,EAChB;AAEA,MAAI,CAAC,OAAO,KAAK,QAAQ,EAAiB,EAAE,QAAQ;AACnD,WAAO,QAAQ;AAAA,EAChB;AACA,MAAI;AACH,WAAO,MAAM,KAAK,QAAQ,0BAA0B,KAAK,MAAM,cAAc,OAAO;AAAA,EACrF,SAAS,OAAO;AACf,QAAI,MAAM,eAAe,KAAK;AAC7B,YAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,EAAE,SAAS,uBAAuB,CAAC;AAAA,IAC3E;AAEA,QAAI,MAAM,eAAe,KAAK;AAC7B,YAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG;AAAA,QACtC,SAAS;AAAA,MACV,CAAC;AAAA,IACF;AACA,UAAM;AAAA,EACP;AACD;AAEA,eAAsB,0BAErB,cACA,QACA,UACA,MACA,QAAqB,CAAC,GACrB;AACD,QAAM,aAAoB,CAAC;AAE3B,MAAI;AACJ,QAAM,cAAc;AACpB,QAAM,oBAAoB;AAE1B,KAAG;AACF,mBAAe,MAAM,kBAAkB,KAAK,MAAM,QAAQ,UAAU,MAAM,KAAK;AAC/E,eAAW,KAAK,MAAM,YAAY,aAAa,YAAY,CAAkB;AAC7E,UAAM,eAAe,MAAM,oBAAoB;AAAA,EAChD,SAAS,aAAa,QAAQ,aAAa,KAAK,SAAS;AAEzD,SAAO;AACR;","names":[]}