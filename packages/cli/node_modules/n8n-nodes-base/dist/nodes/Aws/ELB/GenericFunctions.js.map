{"version":3,"sources":["../../../../nodes/Aws/ELB/GenericFunctions.ts"],"sourcesContent":["import get from 'lodash/get';\nimport type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHookFunctions,\n\tILoadOptionsFunctions,\n\tIWebhookFunctions,\n\tIHttpRequestOptions,\n\tJsonObject,\n\tIHttpRequestMethods,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\nimport { parseString } from 'xml2js';\n\nexport async function awsApiRequest(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions | IWebhookFunctions,\n\tservice: string,\n\tmethod: IHttpRequestMethods,\n\tpath: string,\n\tbody?: string | Buffer,\n\tquery: IDataObject = {},\n\theaders?: object,\n\t_option: IDataObject = {},\n\t_region?: string,\n) {\n\tconst credentials = await this.getCredentials('aws');\n\n\tconst requestOptions = {\n\t\tqs: {\n\t\t\t...query,\n\t\t\tservice,\n\t\t\tpath,\n\t\t},\n\t\theaders,\n\t\tmethod,\n\t\turl: '',\n\t\tbody,\n\t\tregion: credentials?.region as string,\n\t} as IHttpRequestOptions;\n\n\ttry {\n\t\treturn await this.helpers.requestWithAuthentication.call(this, 'aws', requestOptions);\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\nexport async function awsApiRequestREST(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tservice: string,\n\tmethod: IHttpRequestMethods,\n\tpath: string,\n\tbody?: string,\n\tquery: IDataObject = {},\n\theaders?: object,\n\toptions: IDataObject = {},\n\tregion?: string,\n) {\n\tconst response = await awsApiRequest.call(\n\t\tthis,\n\t\tservice,\n\t\tmethod,\n\t\tpath,\n\t\tbody,\n\t\tquery,\n\t\theaders,\n\t\toptions,\n\t\tregion,\n\t);\n\ttry {\n\t\treturn JSON.parse(response as string);\n\t} catch (e) {\n\t\treturn response;\n\t}\n}\n\nexport async function awsApiRequestSOAP(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions | IWebhookFunctions,\n\tservice: string,\n\tmethod: IHttpRequestMethods,\n\tpath: string,\n\tbody?: string | Buffer,\n\tquery: IDataObject = {},\n\theaders?: object,\n\toption: IDataObject = {},\n\tregion?: string,\n) {\n\tconst response = await awsApiRequest.call(\n\t\tthis,\n\t\tservice,\n\t\tmethod,\n\t\tpath,\n\t\tbody,\n\t\tquery,\n\t\theaders,\n\t\toption,\n\t\tregion,\n\t);\n\ttry {\n\t\treturn await new Promise((resolve, reject) => {\n\t\t\tparseString(response as string, { explicitArray: false }, (err, data) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn reject(err);\n\t\t\t\t}\n\t\t\t\tresolve(data);\n\t\t\t});\n\t\t});\n\t} catch (e) {\n\t\treturn e;\n\t}\n}\n\nexport async function awsApiRequestSOAPAllItems(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions | IWebhookFunctions,\n\tpropertyName: string,\n\tservice: string,\n\tmethod: IHttpRequestMethods,\n\tpath: string,\n\tbody?: string,\n\tquery: IDataObject = {},\n\theaders: IDataObject = {},\n\toption: IDataObject = {},\n\tregion?: string,\n) {\n\tconst returnData: IDataObject[] = [];\n\n\tlet responseData;\n\n\tconst propertyNameArray = propertyName.split('.');\n\n\tdo {\n\t\tresponseData = await awsApiRequestSOAP.call(\n\t\t\tthis,\n\t\t\tservice,\n\t\t\tmethod,\n\t\t\tpath,\n\t\t\tbody,\n\t\t\tquery,\n\t\t\theaders,\n\t\t\toption,\n\t\t\tregion,\n\t\t);\n\n\t\tif (get(responseData, [propertyNameArray[0], propertyNameArray[1], 'NextMarker'])) {\n\t\t\tquery.Marker = get(responseData, [propertyNameArray[0], propertyNameArray[1], 'NextMarker']);\n\t\t}\n\t\tif (get(responseData, propertyName)) {\n\t\t\tif (Array.isArray(get(responseData, propertyName))) {\n\t\t\t\treturnData.push.apply(returnData, get(responseData, propertyName) as IDataObject[]);\n\t\t\t} else {\n\t\t\t\treturnData.push(get(responseData, propertyName) as IDataObject);\n\t\t\t}\n\t\t}\n\t} while (\n\t\tget(responseData, [propertyNameArray[0], propertyNameArray[1], 'NextMarker']) !== undefined\n\t);\n\n\treturn returnData;\n}\n"],"mappings":"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","names":["get"]}