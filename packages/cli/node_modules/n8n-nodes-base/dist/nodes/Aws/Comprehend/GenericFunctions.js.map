{"version":3,"sources":["../../../../nodes/Aws/Comprehend/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIHookFunctions,\n\tILoadOptionsFunctions,\n\tIWebhookFunctions,\n\tIHttpRequestOptions,\n\tIHttpRequestMethods,\n} from 'n8n-workflow';\nimport { parseString } from 'xml2js';\n\nexport async function awsApiRequest(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions | IWebhookFunctions,\n\tservice: string,\n\tmethod: IHttpRequestMethods,\n\tpath: string,\n\tbody?: string,\n\theaders?: object,\n): Promise<any> {\n\tconst credentials = await this.getCredentials('aws');\n\n\tconst requestOptions = {\n\t\tqs: {\n\t\t\tservice,\n\t\t\tpath,\n\t\t},\n\t\tmethod,\n\t\tbody,\n\t\turl: '',\n\t\theaders,\n\t\tregion: credentials?.region as string,\n\t} as IHttpRequestOptions;\n\treturn await this.helpers.requestWithAuthentication.call(this, 'aws', requestOptions);\n}\n\nexport async function awsApiRequestREST(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tservice: string,\n\tmethod: IHttpRequestMethods,\n\tpath: string,\n\tbody?: string,\n\theaders?: object,\n): Promise<any> {\n\tconst response = await awsApiRequest.call(this, service, method, path, body, headers);\n\ttry {\n\t\treturn JSON.parse(response as string);\n\t} catch (error) {\n\t\treturn response;\n\t}\n}\n\nexport async function awsApiRequestSOAP(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions | IWebhookFunctions,\n\tservice: string,\n\tmethod: IHttpRequestMethods,\n\tpath: string,\n\tbody?: string,\n\theaders?: object,\n): Promise<any> {\n\tconst response = await awsApiRequest.call(this, service, method, path, body, headers);\n\ttry {\n\t\treturn await new Promise((resolve, reject) => {\n\t\t\tparseString(response as string, { explicitArray: false }, (err, data) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn reject(err);\n\t\t\t\t}\n\t\t\t\tresolve(data);\n\t\t\t});\n\t\t});\n\t} catch (error) {\n\t\treturn response;\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,oBAA4B;AAE5B,eAAsB,cAErB,SACA,QACA,MACA,MACA,SACe;AACf,QAAM,cAAc,MAAM,KAAK,eAAe,KAAK;AAEnD,QAAM,iBAAiB;AAAA,IACtB,IAAI;AAAA,MACH;AAAA,MACA;AAAA,IACD;AAAA,IACA;AAAA,IACA;AAAA,IACA,KAAK;AAAA,IACL;AAAA,IACA,QAAQ,aAAa;AAAA,EACtB;AACA,SAAO,MAAM,KAAK,QAAQ,0BAA0B,KAAK,MAAM,OAAO,cAAc;AACrF;AAEA,eAAsB,kBAErB,SACA,QACA,MACA,MACA,SACe;AACf,QAAM,WAAW,MAAM,cAAc,KAAK,MAAM,SAAS,QAAQ,MAAM,MAAM,OAAO;AACpF,MAAI;AACH,WAAO,KAAK,MAAM,QAAkB;AAAA,EACrC,SAAS,OAAO;AACf,WAAO;AAAA,EACR;AACD;AAEA,eAAsB,kBAErB,SACA,QACA,MACA,MACA,SACe;AACf,QAAM,WAAW,MAAM,cAAc,KAAK,MAAM,SAAS,QAAQ,MAAM,MAAM,OAAO;AACpF,MAAI;AACH,WAAO,MAAM,IAAI,QAAQ,CAAC,SAAS,WAAW;AAC7C,qCAAY,UAAoB,EAAE,eAAe,MAAM,GAAG,CAAC,KAAK,SAAS;AACxE,YAAI,KAAK;AACR,iBAAO,OAAO,GAAG;AAAA,QAClB;AACA,gBAAQ,IAAI;AAAA,MACb,CAAC;AAAA,IACF,CAAC;AAAA,EACF,SAAS,OAAO;AACf,WAAO;AAAA,EACR;AACD;","names":[]}