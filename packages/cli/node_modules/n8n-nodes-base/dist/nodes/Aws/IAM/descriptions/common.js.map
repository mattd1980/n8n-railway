{"version":3,"sources":["../../../../../nodes/Aws/IAM/descriptions/common.ts"],"sourcesContent":["import type { INodeProperties } from 'n8n-workflow';\n\nimport { validateName } from '../helpers/utils';\n\nexport const paginationParameters: INodeProperties[] = [\n\t{\n\t\tdisplayName: 'Return All',\n\t\tname: 'returnAll',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tdescription: 'Whether to return all results or only up to a given limit',\n\t},\n\t{\n\t\tdisplayName: 'Limit',\n\t\tname: 'limit',\n\t\tdefault: 100,\n\t\ttype: 'number',\n\t\tvalidateType: 'number',\n\t\ttypeOptions: {\n\t\t\tminValue: 1,\n\t\t},\n\t\tdescription: 'Max number of results to return',\n\t\tdisplayOptions: {\n\t\t\thide: {\n\t\t\t\treturnAll: [true],\n\t\t\t},\n\t\t},\n\t\trouting: {\n\t\t\tsend: {\n\t\t\t\tproperty: 'MaxItems',\n\t\t\t\ttype: 'body',\n\t\t\t\tvalue: '={{ $value }}',\n\t\t\t},\n\t\t},\n\t},\n];\n\nexport const userLocator: INodeProperties = {\n\tdisplayName: 'User',\n\tname: 'user',\n\trequired: true,\n\ttype: 'resourceLocator',\n\tdefault: {\n\t\tmode: 'list',\n\t\tvalue: '',\n\t},\n\tmodes: [\n\t\t{\n\t\t\tdisplayName: 'From list',\n\t\t\tname: 'list',\n\t\t\ttype: 'list',\n\t\t\ttypeOptions: {\n\t\t\t\tsearchListMethod: 'searchUsers',\n\t\t\t\tsearchable: true,\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'By Name',\n\t\t\tname: 'userName',\n\t\t\ttype: 'string',\n\t\t\tplaceholder: 'e.g. Admins',\n\t\t\thint: 'Enter the user name',\n\t\t\tvalidation: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'regex',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tregex: '^[\\\\w+=,.@-]+$',\n\t\t\t\t\t\terrorMessage: 'The user name must follow the allowed pattern',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t],\n};\n\nexport const groupLocator: INodeProperties = {\n\tdisplayName: 'Group',\n\tname: 'group',\n\trequired: true,\n\ttype: 'resourceLocator',\n\tdefault: {\n\t\tmode: 'list',\n\t\tvalue: '',\n\t},\n\tmodes: [\n\t\t{\n\t\t\tdisplayName: 'From list',\n\t\t\tname: 'list',\n\t\t\ttype: 'list',\n\t\t\ttypeOptions: {\n\t\t\t\tsearchListMethod: 'searchGroups',\n\t\t\t\tsearchable: true,\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'By Name',\n\t\t\tname: 'groupName',\n\t\t\ttype: 'string',\n\t\t\tplaceholder: 'e.g. Admins',\n\t\t\thint: 'Enter the group name',\n\t\t\tvalidation: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'regex',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tregex: '^[\\\\w+=,.@-]+$',\n\t\t\t\t\t\terrorMessage: 'The group name must follow the allowed pattern.',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t],\n};\n\nexport const pathParameter: INodeProperties = {\n\tdisplayName: 'Path',\n\tname: 'path',\n\ttype: 'string',\n\tvalidateType: 'string',\n\tdefault: '/',\n};\n\nexport const groupNameParameter: INodeProperties = {\n\tdisplayName: 'Group Name',\n\tname: 'groupName',\n\trequired: true,\n\ttype: 'string',\n\tvalidateType: 'string',\n\ttypeOptions: {\n\t\tmaxLength: 128,\n\t\tregex: '^[+=,.@\\\\-_A-Za-z0-9]+$',\n\t},\n\tdefault: '',\n\tplaceholder: 'e.g. GroupName',\n\trouting: {\n\t\tsend: {\n\t\t\tpreSend: [validateName],\n\t\t},\n\t},\n};\n\nexport const userNameParameter: INodeProperties = {\n\tdisplayName: 'User Name',\n\tname: 'userName',\n\trequired: true,\n\ttype: 'string',\n\tvalidateType: 'string',\n\tdefault: '',\n\tplaceholder: 'e.g. JohnSmith',\n\ttypeOptions: {\n\t\tmaxLength: 64,\n\t\tregex: '^[A-Za-z0-9+=,\\\\.@_-]+$',\n\t},\n\trouting: {\n\t\tsend: {\n\t\t\tpreSend: [validateName],\n\t\t},\n\t},\n};\n"],"mappings":"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","names":[]}