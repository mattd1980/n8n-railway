{"version":3,"sources":["../../../nodes/ActiveCampaign/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHookFunctions,\n\tILoadOptionsFunctions,\n\tINodeProperties,\n\tJsonObject,\n\tIRequestOptions,\n\tIHttpRequestMethods,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\nexport interface IProduct {\n\tfields: {\n\t\titem?: object[];\n\t};\n}\n\n/**\n * Make an API request to ActiveCampaign\n *\n */\nexport async function activeCampaignApiRequest(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\tbody: IDataObject,\n\tquery?: IDataObject,\n\tdataKey?: string,\n): Promise<any> {\n\tconst credentials = await this.getCredentials('activeCampaignApi');\n\n\tif (query === undefined) {\n\t\tquery = {};\n\t}\n\n\tconst options: IRequestOptions = {\n\t\theaders: {},\n\t\tmethod,\n\t\tqs: query,\n\t\turi: `${credentials.apiUrl}${endpoint}`,\n\t\tjson: true,\n\t};\n\n\tif (Object.keys(body).length !== 0) {\n\t\toptions.body = body;\n\t}\n\n\ttry {\n\t\tconst responseData = await this.helpers.requestWithAuthentication.call(\n\t\t\tthis,\n\t\t\t'activeCampaignApi',\n\t\t\toptions,\n\t\t);\n\n\t\tif (responseData.success === false) {\n\t\t\tthrow new NodeApiError(this.getNode(), responseData as JsonObject);\n\t\t}\n\n\t\tif (dataKey === undefined) {\n\t\t\treturn responseData;\n\t\t} else {\n\t\t\treturn responseData[dataKey] as IDataObject;\n\t\t}\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\n/**\n * Make an API request to paginated ActiveCampaign endpoint\n * and return all results\n *\n * @param {(IHookFunctions | IExecuteFunctions)} this\n */\nexport async function activeCampaignApiRequestAllItems(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\tbody: IDataObject,\n\tquery?: IDataObject,\n\tdataKey?: string,\n): Promise<any> {\n\tif (query === undefined) {\n\t\tquery = {};\n\t}\n\tquery.limit = 100;\n\tquery.offset = 0;\n\n\tconst returnData: IDataObject[] = [];\n\n\tlet responseData;\n\n\tlet itemsReceived = 0;\n\tdo {\n\t\tresponseData = await activeCampaignApiRequest.call(this, method, endpoint, body, query);\n\n\t\tif (dataKey === undefined) {\n\t\t\treturnData.push.apply(returnData, responseData as IDataObject[]);\n\t\t\tif (returnData !== undefined) {\n\t\t\t\titemsReceived += returnData.length;\n\t\t\t}\n\t\t} else {\n\t\t\treturnData.push.apply(returnData, responseData[dataKey] as IDataObject[]);\n\t\t\tif (responseData[dataKey] !== undefined) {\n\t\t\t\titemsReceived += responseData[dataKey].length;\n\t\t\t}\n\t\t}\n\n\t\tquery.offset = itemsReceived;\n\t} while (responseData.meta?.total !== undefined && responseData.meta.total > itemsReceived);\n\n\treturn returnData;\n}\n\nexport function activeCampaignDefaultGetAllProperties(\n\tresource: string,\n\toperation: string,\n): INodeProperties[] {\n\treturn [\n\t\t{\n\t\t\tdisplayName: 'Return All',\n\t\t\tname: 'returnAll',\n\t\t\ttype: 'boolean',\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: {\n\t\t\t\t\toperation: [operation],\n\t\t\t\t\tresource: [resource],\n\t\t\t\t},\n\t\t\t},\n\t\t\tdefault: false,\n\t\t\tdescription: 'Whether to return all results or only up to a given limit',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Limit',\n\t\t\tname: 'limit',\n\t\t\ttype: 'number',\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: {\n\t\t\t\t\toperation: [operation],\n\t\t\t\t\tresource: [resource],\n\t\t\t\t\treturnAll: [false],\n\t\t\t\t},\n\t\t\t},\n\t\t\ttypeOptions: {\n\t\t\t\tminValue: 1,\n\t\t\t\tmaxValue: 500,\n\t\t\t},\n\t\t\tdefault: 100,\n\t\t\tdescription: 'Max number of results to return',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Simplify',\n\t\t\tname: 'simple',\n\t\t\ttype: 'boolean',\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: {\n\t\t\t\t\toperation: [operation],\n\t\t\t\t\tresource: [resource],\n\t\t\t\t},\n\t\t\t},\n\t\t\tdefault: true,\n\t\t\tdescription: 'Whether to return a simplified version of the response instead of the raw data',\n\t\t},\n\t];\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA,0BAA6B;AAY7B,eAAsB,yBAErB,QACA,UACA,MACA,OACA,SACe;AACf,QAAM,cAAc,MAAM,KAAK,eAAe,mBAAmB;AAEjE,MAAI,UAAU,QAAW;AACxB,YAAQ,CAAC;AAAA,EACV;AAEA,QAAM,UAA2B;AAAA,IAChC,SAAS,CAAC;AAAA,IACV;AAAA,IACA,IAAI;AAAA,IACJ,KAAK,GAAG,YAAY,MAAM,GAAG,QAAQ;AAAA,IACrC,MAAM;AAAA,EACP;AAEA,MAAI,OAAO,KAAK,IAAI,EAAE,WAAW,GAAG;AACnC,YAAQ,OAAO;AAAA,EAChB;AAEA,MAAI;AACH,UAAM,eAAe,MAAM,KAAK,QAAQ,0BAA0B;AAAA,MACjE;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAEA,QAAI,aAAa,YAAY,OAAO;AACnC,YAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,YAA0B;AAAA,IAClE;AAEA,QAAI,YAAY,QAAW;AAC1B,aAAO;AAAA,IACR,OAAO;AACN,aAAO,aAAa,OAAO;AAAA,IAC5B;AAAA,EACD,SAAS,OAAO;AACf,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,KAAmB;AAAA,EAC3D;AACD;AAQA,eAAsB,iCAErB,QACA,UACA,MACA,OACA,SACe;AACf,MAAI,UAAU,QAAW;AACxB,YAAQ,CAAC;AAAA,EACV;AACA,QAAM,QAAQ;AACd,QAAM,SAAS;AAEf,QAAM,aAA4B,CAAC;AAEnC,MAAI;AAEJ,MAAI,gBAAgB;AACpB,KAAG;AACF,mBAAe,MAAM,yBAAyB,KAAK,MAAM,QAAQ,UAAU,MAAM,KAAK;AAEtF,QAAI,YAAY,QAAW;AAC1B,iBAAW,KAAK,MAAM,YAAY,YAA6B;AAC/D,UAAI,eAAe,QAAW;AAC7B,yBAAiB,WAAW;AAAA,MAC7B;AAAA,IACD,OAAO;AACN,iBAAW,KAAK,MAAM,YAAY,aAAa,OAAO,CAAkB;AACxE,UAAI,aAAa,OAAO,MAAM,QAAW;AACxC,yBAAiB,aAAa,OAAO,EAAE;AAAA,MACxC;AAAA,IACD;AAEA,UAAM,SAAS;AAAA,EAChB,SAAS,aAAa,MAAM,UAAU,UAAa,aAAa,KAAK,QAAQ;AAE7E,SAAO;AACR;AAEO,SAAS,sCACf,UACA,WACoB;AACpB,SAAO;AAAA,IACN;AAAA,MACC,aAAa;AAAA,MACb,MAAM;AAAA,MACN,MAAM;AAAA,MACN,gBAAgB;AAAA,QACf,MAAM;AAAA,UACL,WAAW,CAAC,SAAS;AAAA,UACrB,UAAU,CAAC,QAAQ;AAAA,QACpB;AAAA,MACD;AAAA,MACA,SAAS;AAAA,MACT,aAAa;AAAA,IACd;AAAA,IACA;AAAA,MACC,aAAa;AAAA,MACb,MAAM;AAAA,MACN,MAAM;AAAA,MACN,gBAAgB;AAAA,QACf,MAAM;AAAA,UACL,WAAW,CAAC,SAAS;AAAA,UACrB,UAAU,CAAC,QAAQ;AAAA,UACnB,WAAW,CAAC,KAAK;AAAA,QAClB;AAAA,MACD;AAAA,MACA,aAAa;AAAA,QACZ,UAAU;AAAA,QACV,UAAU;AAAA,MACX;AAAA,MACA,SAAS;AAAA,MACT,aAAa;AAAA,IACd;AAAA,IACA;AAAA,MACC,aAAa;AAAA,MACb,MAAM;AAAA,MACN,MAAM;AAAA,MACN,gBAAgB;AAAA,QACf,MAAM;AAAA,UACL,WAAW,CAAC,SAAS;AAAA,UACrB,UAAU,CAAC,QAAQ;AAAA,QACpB;AAAA,MACD;AAAA,MACA,SAAS;AAAA,MACT,aAAa;AAAA,IACd;AAAA,EACD;AACD;","names":[]}