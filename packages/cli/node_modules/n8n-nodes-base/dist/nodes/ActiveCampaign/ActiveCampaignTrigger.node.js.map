{"version":3,"sources":["../../../nodes/ActiveCampaign/ActiveCampaignTrigger.node.ts"],"sourcesContent":["import type {\n\tIHookFunctions,\n\tIWebhookFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n\tIWebhookResponseData,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes } from 'n8n-workflow';\n\nimport { activeCampaignApiRequest, activeCampaignApiRequestAllItems } from './GenericFunctions';\n\nexport class ActiveCampaignTrigger implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'ActiveCampaign Trigger',\n\t\tname: 'activeCampaignTrigger',\n\t\ticon: { light: 'file:activeCampaign.svg', dark: 'file:activeCampaign.dark.svg' },\n\t\tgroup: ['trigger'],\n\t\tversion: 1,\n\t\tdescription: 'Handle ActiveCampaign events via webhooks',\n\t\tdefaults: {\n\t\t\tname: 'ActiveCampaign Trigger',\n\t\t},\n\t\tinputs: [],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'activeCampaignApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\twebhooks: [\n\t\t\t{\n\t\t\t\tname: 'default',\n\t\t\t\thttpMethod: 'POST',\n\t\t\t\tresponseMode: 'onReceived',\n\t\t\t\tpath: 'webhook',\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Event Names or IDs',\n\t\t\t\tname: 'events',\n\t\t\t\ttype: 'multiOptions',\n\t\t\t\tdescription:\n\t\t\t\t\t'Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getEvents',\n\t\t\t\t},\n\t\t\t\tdefault: [],\n\t\t\t\toptions: [],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Source',\n\t\t\t\tname: 'sources',\n\t\t\t\ttype: 'multiOptions',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Public',\n\t\t\t\t\t\tvalue: 'public',\n\t\t\t\t\t\tdescription: 'Run the hooks when a contact triggers the action',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Admin',\n\t\t\t\t\t\tvalue: 'admin',\n\t\t\t\t\t\tdescription: 'Run the hooks when an admin user triggers the action',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Api',\n\t\t\t\t\t\tvalue: 'api',\n\t\t\t\t\t\tdescription: 'Run the hooks when an API call triggers the action',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'System',\n\t\t\t\t\t\tvalue: 'system',\n\t\t\t\t\t\tdescription: 'Run the hooks when automated systems triggers the action',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: [],\n\t\t\t},\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get all the events to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getEvents(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst events = await activeCampaignApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/api/3/webhook/events',\n\t\t\t\t\t{},\n\t\t\t\t\t{},\n\t\t\t\t\t'webhookEvents',\n\t\t\t\t);\n\t\t\t\tfor (const event of events) {\n\t\t\t\t\tconst eventName = event;\n\t\t\t\t\tconst eventId = event;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: eventName,\n\t\t\t\t\t\tvalue: eventId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\twebhookMethods = {\n\t\tdefault: {\n\t\t\tasync checkExists(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tif (webhookData.webhookId === undefined) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tconst endpoint = `/api/3/webhooks/${webhookData.webhookId}`;\n\t\t\t\ttry {\n\t\t\t\t\tawait activeCampaignApiRequest.call(this, 'GET', endpoint, {});\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tasync create(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookUrl = this.getNodeWebhookUrl('default') as string;\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tconst events = this.getNodeParameter('events', []) as string[];\n\t\t\t\tconst sources = this.getNodeParameter('sources', '') as string[];\n\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\twebhook: {\n\t\t\t\t\t\tname: `n8n-webhook:${webhookUrl}`,\n\t\t\t\t\t\turl: webhookUrl,\n\t\t\t\t\t\tevents,\n\t\t\t\t\t\tsources,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t\tconst { webhook } = await activeCampaignApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'POST',\n\t\t\t\t\t'/api/3/webhooks',\n\t\t\t\t\tbody,\n\t\t\t\t);\n\t\t\t\twebhookData.webhookId = webhook.id;\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tasync delete(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\ttry {\n\t\t\t\t\tawait activeCampaignApiRequest.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t`/api/3/webhooks/${webhookData.webhookId}`,\n\t\t\t\t\t\t{},\n\t\t\t\t\t);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tdelete webhookData.webhookId;\n\t\t\t\treturn true;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync webhook(this: IWebhookFunctions): Promise<IWebhookResponseData> {\n\t\tconst req = this.getRequestObject();\n\t\treturn {\n\t\t\tworkflowData: [this.helpers.returnJsonArray(req.body as IDataObject[])],\n\t\t};\n\t}\n}\n"],"mappings":"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","names":[]}