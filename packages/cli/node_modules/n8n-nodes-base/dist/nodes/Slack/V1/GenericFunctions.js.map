{"version":3,"sources":["../../../../nodes/Slack/V1/GenericFunctions.ts"],"sourcesContent":["import get from 'lodash/get';\nimport type {\n\tIExecuteFunctions,\n\tILoadOptionsFunctions,\n\tIDataObject,\n\tIOAuth2Options,\n\tJsonObject,\n\tIHttpRequestMethods,\n\tIRequestOptions,\n} from 'n8n-workflow';\nimport { NodeApiError, NodeOperationError } from 'n8n-workflow';\n\nexport async function slackApiRequest(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tresource: string,\n\tbody: object = {},\n\tquery: IDataObject = {},\n\theaders: IDataObject | undefined = undefined,\n\toption: IDataObject = {},\n): Promise<any> {\n\tconst authenticationMethod = this.getNodeParameter('authentication', 0, 'accessToken') as string;\n\tlet options: IRequestOptions = {\n\t\tmethod,\n\t\theaders: headers || {\n\t\t\t'Content-Type': 'application/json; charset=utf-8',\n\t\t},\n\t\tbody,\n\t\tqs: query,\n\t\turi: `https://slack.com/api${resource}`,\n\t\tjson: true,\n\t};\n\toptions = Object.assign({}, options, option);\n\tif (Object.keys(body).length === 0) {\n\t\tdelete options.body;\n\t}\n\tif (Object.keys(query).length === 0) {\n\t\tdelete options.qs;\n\t}\n\n\tconst oAuth2Options: IOAuth2Options = {\n\t\ttokenType: 'Bearer',\n\t\tproperty: 'authed_user.access_token',\n\t};\n\n\ttry {\n\t\tconst credentialType = authenticationMethod === 'accessToken' ? 'slackApi' : 'slackOAuth2Api';\n\t\tconst response = await this.helpers.requestWithAuthentication.call(\n\t\t\tthis,\n\t\t\tcredentialType,\n\t\t\toptions,\n\t\t\t{\n\t\t\t\toauth2: oAuth2Options,\n\t\t\t},\n\t\t);\n\n\t\tif (response.ok === false) {\n\t\t\tif (response.error === 'paid_teams_only') {\n\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t`Your current Slack plan does not include the resource '${this.getNodeParameter(\n\t\t\t\t\t\t'resource',\n\t\t\t\t\t\t0,\n\t\t\t\t\t)}'`,\n\t\t\t\t\t{\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Hint: Upgrate to the Slack plan that includes the funcionality you want to use.',\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthrow new NodeOperationError(\n\t\t\t\tthis.getNode(),\n\t\t\t\t'Slack error response: ' + JSON.stringify(response),\n\t\t\t);\n\t\t}\n\n\t\treturn response;\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\nexport async function slackApiRequestAllItems(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions,\n\tpropertyName: string,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\n\tbody: any = {},\n\tquery: IDataObject = {},\n): Promise<any> {\n\tconst returnData: IDataObject[] = [];\n\tlet responseData;\n\tquery.page = 1;\n\t//if the endpoint uses legacy pagination use count\n\t//https://api.slack.com/docs/pagination#classic\n\tif (endpoint.includes('files.list')) {\n\t\tquery.count = 100;\n\t} else {\n\t\tquery.limit = 100;\n\t}\n\tdo {\n\t\tresponseData = await slackApiRequest.call(this, method, endpoint, body as IDataObject, query);\n\t\tquery.cursor = get(responseData, 'response_metadata.next_cursor');\n\t\tquery.page++;\n\t\treturnData.push.apply(returnData, responseData[propertyName] as IDataObject[]);\n\t} while (\n\t\t(responseData.response_metadata?.next_cursor !== undefined &&\n\t\t\tresponseData.response_metadata.next_cursor !== '' &&\n\t\t\tresponseData.response_metadata.next_cursor !== null) ||\n\t\t(responseData.paging?.pages !== undefined &&\n\t\t\tresponseData.paging.page !== undefined &&\n\t\t\tresponseData.paging.page < responseData.paging.pages)\n\t);\n\n\treturn returnData;\n}\n\nexport function validateJSON(json: string | undefined): any {\n\tlet result;\n\ttry {\n\t\tresult = JSON.parse(json!);\n\t} catch (exception) {\n\t\tresult = undefined;\n\t}\n\treturn result;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAgB;AAUhB,0BAAiD;AAEjD,eAAsB,gBAErB,QACA,UACA,OAAe,CAAC,GAChB,QAAqB,CAAC,GACtB,UAAmC,QACnC,SAAsB,CAAC,GACR;AACf,QAAM,uBAAuB,KAAK,iBAAiB,kBAAkB,GAAG,aAAa;AACrF,MAAI,UAA2B;AAAA,IAC9B;AAAA,IACA,SAAS,WAAW;AAAA,MACnB,gBAAgB;AAAA,IACjB;AAAA,IACA;AAAA,IACA,IAAI;AAAA,IACJ,KAAK,wBAAwB,QAAQ;AAAA,IACrC,MAAM;AAAA,EACP;AACA,YAAU,OAAO,OAAO,CAAC,GAAG,SAAS,MAAM;AAC3C,MAAI,OAAO,KAAK,IAAI,EAAE,WAAW,GAAG;AACnC,WAAO,QAAQ;AAAA,EAChB;AACA,MAAI,OAAO,KAAK,KAAK,EAAE,WAAW,GAAG;AACpC,WAAO,QAAQ;AAAA,EAChB;AAEA,QAAM,gBAAgC;AAAA,IACrC,WAAW;AAAA,IACX,UAAU;AAAA,EACX;AAEA,MAAI;AACH,UAAM,iBAAiB,yBAAyB,gBAAgB,aAAa;AAC7E,UAAM,WAAW,MAAM,KAAK,QAAQ,0BAA0B;AAAA,MAC7D;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,QACC,QAAQ;AAAA,MACT;AAAA,IACD;AAEA,QAAI,SAAS,OAAO,OAAO;AAC1B,UAAI,SAAS,UAAU,mBAAmB;AACzC,cAAM,IAAI;AAAA,UACT,KAAK,QAAQ;AAAA,UACb,0DAA0D,KAAK;AAAA,YAC9D;AAAA,YACA;AAAA,UACD,CAAC;AAAA,UACD;AAAA,YACC,aACC;AAAA,UACF;AAAA,QACD;AAAA,MACD;AAEA,YAAM,IAAI;AAAA,QACT,KAAK,QAAQ;AAAA,QACb,2BAA2B,KAAK,UAAU,QAAQ;AAAA,MACnD;AAAA,IACD;AAEA,WAAO;AAAA,EACR,SAAS,OAAO;AACf,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,KAAmB;AAAA,EAC3D;AACD;AAEA,eAAsB,wBAErB,cACA,QACA,UAEA,OAAY,CAAC,GACb,QAAqB,CAAC,GACP;AACf,QAAM,aAA4B,CAAC;AACnC,MAAI;AACJ,QAAM,OAAO;AAGb,MAAI,SAAS,SAAS,YAAY,GAAG;AACpC,UAAM,QAAQ;AAAA,EACf,OAAO;AACN,UAAM,QAAQ;AAAA,EACf;AACA,KAAG;AACF,mBAAe,MAAM,gBAAgB,KAAK,MAAM,QAAQ,UAAU,MAAqB,KAAK;AAC5F,UAAM,aAAS,WAAAA,SAAI,cAAc,+BAA+B;AAChE,UAAM;AACN,eAAW,KAAK,MAAM,YAAY,aAAa,YAAY,CAAkB;AAAA,EAC9E,SACE,aAAa,mBAAmB,gBAAgB,UAChD,aAAa,kBAAkB,gBAAgB,MAC/C,aAAa,kBAAkB,gBAAgB,QAC/C,aAAa,QAAQ,UAAU,UAC/B,aAAa,OAAO,SAAS,UAC7B,aAAa,OAAO,OAAO,aAAa,OAAO;AAGjD,SAAO;AACR;AAEO,SAAS,aAAa,MAA+B;AAC3D,MAAI;AACJ,MAAI;AACH,aAAS,KAAK,MAAM,IAAK;AAAA,EAC1B,SAAS,WAAW;AACnB,aAAS;AAAA,EACV;AACA,SAAO;AACR;","names":["get"]}