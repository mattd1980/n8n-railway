{"version":3,"sources":["../../../../../../nodes/SeaTable/v2/actions/asset/getPublicURL.operation.ts"],"sourcesContent":["import {\n\ttype IDataObject,\n\ttype INodeExecutionData,\n\ttype INodeProperties,\n\ttype IExecuteFunctions,\n\tupdateDisplayOptions,\n} from 'n8n-workflow';\n\nimport { seaTableApiRequest } from '../../GenericFunctions';\n\nconst properties: INodeProperties[] = [\n\t{\n\t\tdisplayName: 'Asset Path',\n\t\tname: 'assetPath',\n\t\ttype: 'string',\n\t\tplaceholder: '/images/2023-09/logo.png',\n\t\trequired: true,\n\t\tdefault: '',\n\t},\n];\n\nconst displayOptions = {\n\tshow: {\n\t\tresource: ['asset'],\n\t\toperation: ['getPublicURL'],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n\nexport async function execute(\n\tthis: IExecuteFunctions,\n\tindex: number,\n): Promise<INodeExecutionData[]> {\n\tconst assetPath = this.getNodeParameter('assetPath', index) as string;\n\n\tlet responseData = [] as IDataObject[];\n\tif (assetPath) {\n\t\tresponseData = await seaTableApiRequest.call(\n\t\t\tthis,\n\t\t\t{},\n\t\t\t'GET',\n\t\t\t`/api/v2.1/dtable/app-download-link/?path=${assetPath}`,\n\t\t);\n\t}\n\n\treturn this.helpers.returnJsonArray(responseData);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAMO;AAEP,8BAAmC;AAEnC,MAAM,aAAgC;AAAA,EACrC;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,IACV,SAAS;AAAA,EACV;AACD;AAEA,MAAM,iBAAiB;AAAA,EACtB,MAAM;AAAA,IACL,UAAU,CAAC,OAAO;AAAA,IAClB,WAAW,CAAC,cAAc;AAAA,EAC3B;AACD;AAEO,MAAM,kBAAc,0CAAqB,gBAAgB,UAAU;AAE1E,eAAsB,QAErB,OACgC;AAChC,QAAM,YAAY,KAAK,iBAAiB,aAAa,KAAK;AAE1D,MAAI,eAAe,CAAC;AACpB,MAAI,WAAW;AACd,mBAAe,MAAM,2CAAmB;AAAA,MACvC;AAAA,MACA,CAAC;AAAA,MACD;AAAA,MACA,4CAA4C,SAAS;AAAA,IACtD;AAAA,EACD;AAEA,SAAO,KAAK,QAAQ,gBAAgB,YAAY;AACjD;","names":[]}