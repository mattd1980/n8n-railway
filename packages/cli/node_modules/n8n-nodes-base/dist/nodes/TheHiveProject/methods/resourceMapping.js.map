{"version":3,"sources":["../../../../nodes/TheHiveProject/methods/resourceMapping.ts"],"sourcesContent":["import type {\n\tFieldType,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tResourceMapperField,\n\tResourceMapperFields,\n} from 'n8n-workflow';\n\nimport {\n\tloadAlertStatus,\n\tloadCaseStatus,\n\tloadCaseTemplate,\n\tloadObservableTypes,\n\tloadUsers,\n} from './loadOptions';\nimport {\n\talertCommonFields,\n\tcaseCommonFields,\n\tobservableCommonFields,\n\ttaskCommonFields,\n} from '../helpers/constants';\nimport { theHiveApiRequest } from '../transport';\n\nasync function getCustomFields(this: ILoadOptionsFunctions) {\n\tconst customFields = (await theHiveApiRequest.call(this, 'POST', '/v1/query', {\n\t\tquery: [\n\t\t\t{\n\t\t\t\t_name: 'listCustomField',\n\t\t\t},\n\t\t],\n\t})) as IDataObject[];\n\n\treturn customFields.map((field) => ({\n\t\tdisplayName: `Custom Field: ${(field.displayName || field.name) as string}`,\n\t\tid: `customFields.${field.name}`,\n\t\trequired: false,\n\t\tdisplay: true,\n\t\ttype: (field.options as string[])?.length ? 'options' : (field.type as FieldType),\n\t\tdefaultMatch: false,\n\t\toptions: (field.options as string[])?.length\n\t\t\t? (field.options as string[]).map((option) => ({ name: option, value: option }))\n\t\t\t: undefined,\n\t\tremoved: true,\n\t}));\n}\n\nexport async function getAlertFields(this: ILoadOptionsFunctions): Promise<ResourceMapperFields> {\n\tconst alertStatus = await loadAlertStatus.call(this);\n\tconst caseTemplates = await loadCaseTemplate.call(this);\n\n\tconst requiredFields = ['title', 'description', 'type', 'source', 'sourceRef'];\n\tconst excludeFields = ['addTags', 'removeTags', 'lastSyncDate'];\n\n\tconst fields: ResourceMapperField[] = alertCommonFields\n\t\t.filter((entry) => !excludeFields.includes(entry.id))\n\t\t.map((entry) => {\n\t\t\tconst type = entry.type as FieldType;\n\t\t\tconst field: ResourceMapperField = {\n\t\t\t\t...entry,\n\t\t\t\ttype,\n\t\t\t\trequired: false,\n\t\t\t\tdisplay: true,\n\t\t\t\tdefaultMatch: false,\n\t\t\t};\n\n\t\t\tif (requiredFields.includes(entry.id)) {\n\t\t\t\tfield.required = true;\n\t\t\t}\n\n\t\t\tif (field.id === 'status') {\n\t\t\t\tfield.options = alertStatus;\n\t\t\t}\n\n\t\t\tif (field.id === 'caseTemplate') {\n\t\t\t\tfield.options = caseTemplates;\n\t\t\t}\n\t\t\treturn field;\n\t\t});\n\n\tconst customFields = (await getCustomFields.call(this)) || [];\n\tfields.push(...customFields);\n\n\tconst columnData: ResourceMapperFields = {\n\t\tfields,\n\t};\n\n\treturn columnData;\n}\n\nexport async function getAlertUpdateFields(\n\tthis: ILoadOptionsFunctions,\n): Promise<ResourceMapperFields> {\n\tconst alertStatus = await loadAlertStatus.call(this);\n\tconst excludedFromMatching = ['addTags', 'removeTags'];\n\tconst excludeFields = ['flag', 'caseTemplate'];\n\n\tconst alertUpdateFields = alertCommonFields\n\t\t.filter((entry) => !excludeFields.includes(entry.id))\n\t\t.map((entry) => {\n\t\t\tconst type = entry.type as FieldType;\n\t\t\tconst field: ResourceMapperField = {\n\t\t\t\t...entry,\n\t\t\t\ttype,\n\t\t\t\trequired: false,\n\t\t\t\tdisplay: true,\n\t\t\t\tdefaultMatch: false,\n\t\t\t\tcanBeUsedToMatch: true,\n\t\t\t};\n\n\t\t\tif (excludedFromMatching.includes(field.id)) {\n\t\t\t\tfield.canBeUsedToMatch = false;\n\t\t\t}\n\n\t\t\tif (field.id === 'status') {\n\t\t\t\tfield.options = alertStatus;\n\t\t\t}\n\t\t\treturn field;\n\t\t});\n\n\tconst fields: ResourceMapperField[] = [\n\t\t{\n\t\t\tdisplayName: 'ID',\n\t\t\tid: 'id',\n\t\t\trequired: false,\n\t\t\tdisplay: true,\n\t\t\ttype: 'string',\n\t\t\tdefaultMatch: true,\n\t\t\tcanBeUsedToMatch: true,\n\t\t},\n\t\t...alertUpdateFields,\n\t];\n\n\tconst customFields = (await getCustomFields.call(this)) || [];\n\tfields.push(...customFields);\n\n\tconst columnData: ResourceMapperFields = {\n\t\tfields,\n\t};\n\n\treturn columnData;\n}\n\nexport async function getCaseFields(this: ILoadOptionsFunctions): Promise<ResourceMapperFields> {\n\tconst caseStatus = await loadCaseStatus.call(this);\n\tconst caseTemplates = await loadCaseTemplate.call(this);\n\tconst users = await loadUsers.call(this);\n\n\tconst requiredFields = ['title', 'description'];\n\tconst excludeCreateFields = ['impactStatus', 'taskRule', 'addTags', 'removeTags'];\n\n\tconst fields: ResourceMapperField[] = caseCommonFields\n\t\t.filter((entry) => !excludeCreateFields.includes(entry.id))\n\t\t.map((entry) => {\n\t\t\tconst type = entry.type as FieldType;\n\t\t\tconst field: ResourceMapperField = {\n\t\t\t\t...entry,\n\t\t\t\ttype,\n\t\t\t\trequired: false,\n\t\t\t\tdisplay: true,\n\t\t\t\tdefaultMatch: false,\n\t\t\t};\n\n\t\t\tif (requiredFields.includes(entry.id)) {\n\t\t\t\tfield.required = true;\n\t\t\t}\n\n\t\t\tif (field.id === 'assignee') {\n\t\t\t\tfield.options = users;\n\t\t\t}\n\n\t\t\tif (field.id === 'status') {\n\t\t\t\tfield.options = caseStatus;\n\t\t\t}\n\n\t\t\tif (field.id === 'caseTemplate') {\n\t\t\t\tfield.options = caseTemplates;\n\t\t\t}\n\t\t\treturn field;\n\t\t});\n\n\tconst customFields = (await getCustomFields.call(this)) || [];\n\tfields.push(...customFields);\n\n\tconst columnData: ResourceMapperFields = {\n\t\tfields,\n\t};\n\n\treturn columnData;\n}\n\nexport async function getCaseUpdateFields(\n\tthis: ILoadOptionsFunctions,\n): Promise<ResourceMapperFields> {\n\tconst caseStatus = await loadCaseStatus.call(this);\n\tconst users = await loadUsers.call(this);\n\n\tconst excludedFromMatching = ['addTags', 'removeTags', 'taskRule', 'observableRule'];\n\tconst excludeUpdateFields = ['caseTemplate', 'tasks', 'sharingParameters'];\n\n\tconst caseUpdateFields = caseCommonFields\n\t\t.filter((entry) => !excludeUpdateFields.includes(entry.id))\n\t\t.map((entry) => {\n\t\t\tconst type = entry.type as FieldType;\n\t\t\tconst field: ResourceMapperField = {\n\t\t\t\t...entry,\n\t\t\t\ttype,\n\t\t\t\trequired: false,\n\t\t\t\tdisplay: true,\n\t\t\t\tdefaultMatch: false,\n\t\t\t\tcanBeUsedToMatch: true,\n\t\t\t};\n\n\t\t\tif (excludedFromMatching.includes(field.id)) {\n\t\t\t\tfield.canBeUsedToMatch = false;\n\t\t\t}\n\n\t\t\tif (field.id === 'assignee') {\n\t\t\t\tfield.options = users;\n\t\t\t}\n\n\t\t\tif (field.id === 'status') {\n\t\t\t\tfield.options = caseStatus;\n\t\t\t}\n\t\t\treturn field;\n\t\t});\n\n\tconst fields: ResourceMapperField[] = [\n\t\t{\n\t\t\tdisplayName: 'ID',\n\t\t\tid: 'id',\n\t\t\trequired: false,\n\t\t\tdisplay: true,\n\t\t\ttype: 'string',\n\t\t\tdefaultMatch: true,\n\t\t\tcanBeUsedToMatch: true,\n\t\t},\n\t\t...caseUpdateFields,\n\t];\n\n\tconst customFields = (await getCustomFields.call(this)) || [];\n\tfields.push(...customFields);\n\n\tconst columnData: ResourceMapperFields = {\n\t\tfields,\n\t};\n\n\treturn columnData;\n}\n\nexport async function getTaskFields(this: ILoadOptionsFunctions): Promise<ResourceMapperFields> {\n\tconst users = await loadUsers.call(this);\n\n\tconst requiredFields = ['title'];\n\n\tconst fields: ResourceMapperField[] = taskCommonFields.map((entry) => {\n\t\tconst type = entry.type as FieldType;\n\t\tconst field: ResourceMapperField = {\n\t\t\t...entry,\n\t\t\ttype,\n\t\t\trequired: false,\n\t\t\tdisplay: true,\n\t\t\tdefaultMatch: false,\n\t\t};\n\n\t\tif (requiredFields.includes(entry.id)) {\n\t\t\tfield.required = true;\n\t\t}\n\n\t\tif (field.id === 'assignee') {\n\t\t\tfield.options = users;\n\t\t}\n\n\t\treturn field;\n\t});\n\n\tconst columnData: ResourceMapperFields = {\n\t\tfields,\n\t};\n\n\treturn columnData;\n}\n\nexport async function getTaskUpdateFields(\n\tthis: ILoadOptionsFunctions,\n): Promise<ResourceMapperFields> {\n\tconst users = await loadUsers.call(this);\n\n\tconst caseUpdateFields = taskCommonFields.map((entry) => {\n\t\tconst type = entry.type as FieldType;\n\t\tconst field: ResourceMapperField = {\n\t\t\t...entry,\n\t\t\ttype,\n\t\t\trequired: false,\n\t\t\tdisplay: true,\n\t\t\tdefaultMatch: false,\n\t\t\tcanBeUsedToMatch: true,\n\t\t};\n\n\t\tif (field.id === 'assignee') {\n\t\t\tfield.options = users;\n\t\t}\n\n\t\treturn field;\n\t});\n\n\tconst fields: ResourceMapperField[] = [\n\t\t{\n\t\t\tdisplayName: 'ID',\n\t\t\tid: 'id',\n\t\t\trequired: false,\n\t\t\tdisplay: true,\n\t\t\ttype: 'string',\n\t\t\tdefaultMatch: true,\n\t\t\tcanBeUsedToMatch: true,\n\t\t},\n\t\t...caseUpdateFields,\n\t];\n\n\tconst columnData: ResourceMapperFields = {\n\t\tfields,\n\t};\n\n\treturn columnData;\n}\n\nexport async function getLogFields(this: ILoadOptionsFunctions): Promise<ResourceMapperFields> {\n\tconst fields: ResourceMapperField[] = [\n\t\t{\n\t\t\tdisplayName: 'Message',\n\t\t\tid: 'message',\n\t\t\trequired: true,\n\t\t\tdisplay: true,\n\t\t\ttype: 'string',\n\t\t\tdefaultMatch: true,\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Start Date',\n\t\t\tid: 'startDate',\n\t\t\trequired: false,\n\t\t\tdisplay: true,\n\t\t\ttype: 'dateTime',\n\t\t\tdefaultMatch: false,\n\t\t\tremoved: true,\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Include In Timeline',\n\t\t\tid: 'includeInTimeline',\n\t\t\trequired: false,\n\t\t\tdisplay: true,\n\t\t\ttype: 'dateTime',\n\t\t\tdefaultMatch: false,\n\t\t\tremoved: true,\n\t\t},\n\t];\n\n\tconst columnData: ResourceMapperFields = {\n\t\tfields,\n\t};\n\n\treturn columnData;\n}\n\nexport async function getObservableFields(\n\tthis: ILoadOptionsFunctions,\n): Promise<ResourceMapperFields> {\n\tconst excludeFields = ['addTags', 'removeTags', 'dataType'];\n\n\tconst fields: ResourceMapperField[] = observableCommonFields\n\t\t.filter((entry) => !excludeFields.includes(entry.id))\n\t\t.map((entry) => {\n\t\t\tconst type = entry.type as FieldType;\n\t\t\tconst field: ResourceMapperField = {\n\t\t\t\t...entry,\n\t\t\t\ttype,\n\t\t\t\trequired: false,\n\t\t\t\tdisplay: true,\n\t\t\t\tdefaultMatch: false,\n\t\t\t};\n\n\t\t\treturn field;\n\t\t});\n\n\tconst columnData: ResourceMapperFields = {\n\t\tfields,\n\t};\n\n\treturn columnData;\n}\n\nexport async function getObservableUpdateFields(\n\tthis: ILoadOptionsFunctions,\n): Promise<ResourceMapperFields> {\n\tconst dataTypes = await loadObservableTypes.call(this);\n\n\tconst excludedFromMatching = ['addTags', 'removeTags'];\n\tconst excludeFields: string[] = ['attachment', 'data', 'startDate', 'zipPassword', 'isZip'];\n\n\tconst caseUpdateFields = observableCommonFields\n\t\t.filter((entry) => !excludeFields.includes(entry.id))\n\t\t.map((entry) => {\n\t\t\tconst type = entry.type as FieldType;\n\t\t\tconst field: ResourceMapperField = {\n\t\t\t\t...entry,\n\t\t\t\ttype,\n\t\t\t\trequired: false,\n\t\t\t\tdisplay: true,\n\t\t\t\tdefaultMatch: false,\n\t\t\t\tcanBeUsedToMatch: true,\n\t\t\t};\n\n\t\t\tif (excludedFromMatching.includes(field.id)) {\n\t\t\t\tfield.canBeUsedToMatch = false;\n\t\t\t}\n\n\t\t\tif (field.id === 'dataType') {\n\t\t\t\tfield.options = dataTypes;\n\t\t\t}\n\n\t\t\treturn field;\n\t\t});\n\n\tconst fields: ResourceMapperField[] = [\n\t\t{\n\t\t\tdisplayName: 'ID',\n\t\t\tid: 'id',\n\t\t\trequired: false,\n\t\t\tdisplay: true,\n\t\t\ttype: 'string',\n\t\t\tdefaultMatch: true,\n\t\t\tcanBeUsedToMatch: true,\n\t\t},\n\t\t...caseUpdateFields,\n\t];\n\n\tconst columnData: ResourceMapperFields = {\n\t\tfields,\n\t};\n\n\treturn columnData;\n}\n"],"mappings":"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","names":[]}