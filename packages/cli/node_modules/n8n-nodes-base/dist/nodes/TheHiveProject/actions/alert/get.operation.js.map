{"version":3,"sources":["../../../../../nodes/TheHiveProject/actions/alert/get.operation.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tINodeProperties,\n} from 'n8n-workflow';\n\nimport { updateDisplayOptions, wrapData } from '@utils/utilities';\n\nimport { alertRLC } from '../../descriptions';\nimport { theHiveApiRequest } from '../../transport';\n\nconst properties: INodeProperties[] = [\n\talertRLC,\n\t{\n\t\tdisplayName: 'Options',\n\t\tname: 'options',\n\t\ttype: 'collection',\n\t\tplaceholder: 'Add option',\n\t\tdefault: {},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Include Similar Alerts',\n\t\t\t\tname: 'includeSimilarAlerts',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdescription: 'Whether to include similar cases',\n\t\t\t\tdefault: false,\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Include Similar Cases',\n\t\t\t\tname: 'includeSimilarCases',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdescription: 'Whether to include similar cases',\n\t\t\t\tdefault: false,\n\t\t\t},\n\t\t],\n\t},\n];\n\nconst displayOptions = {\n\tshow: {\n\t\tresource: ['alert'],\n\t\toperation: ['get'],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n\nexport async function execute(this: IExecuteFunctions, i: number): Promise<INodeExecutionData[]> {\n\tlet responseData: IDataObject;\n\n\tconst alertId = this.getNodeParameter('alertId', i, '', { extractValue: true }) as string;\n\tconst options = this.getNodeParameter('options', i, {});\n\n\tresponseData = await theHiveApiRequest.call(this, 'GET', `/v1/alert/${alertId}`);\n\n\tif (responseData && options.includeSimilarAlerts) {\n\t\tconst similarAlerts = await theHiveApiRequest.call(this, 'POST', '/v1/query', {\n\t\t\tquery: [\n\t\t\t\t{\n\t\t\t\t\t_name: 'getAlert',\n\t\t\t\t\tidOrName: alertId,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t_name: 'similarAlerts',\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\n\t\tresponseData = {\n\t\t\t...responseData,\n\t\t\tsimilarAlerts,\n\t\t};\n\t}\n\n\tif (responseData && options.includeSimilarCases) {\n\t\tconst similarCases = await theHiveApiRequest.call(this, 'POST', '/v1/query', {\n\t\t\tquery: [\n\t\t\t\t{\n\t\t\t\t\t_name: 'getAlert',\n\t\t\t\t\tidOrName: alertId,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t_name: 'similarCases',\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\n\t\tresponseData = {\n\t\t\t...responseData,\n\t\t\tsimilarCases,\n\t\t};\n\t}\n\n\tconst executionData = this.helpers.constructExecutionMetaData(wrapData(responseData), {\n\t\titemData: { item: i },\n\t});\n\n\treturn executionData;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,uBAA+C;AAE/C,0BAAyB;AACzB,uBAAkC;AAElC,MAAM,aAAgC;AAAA,EACrC;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,SAAS,CAAC;AAAA,IACV,SAAS;AAAA,MACR;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,aAAa;AAAA,QACb,SAAS;AAAA,MACV;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,aAAa;AAAA,QACb,SAAS;AAAA,MACV;AAAA,IACD;AAAA,EACD;AACD;AAEA,MAAM,iBAAiB;AAAA,EACtB,MAAM;AAAA,IACL,UAAU,CAAC,OAAO;AAAA,IAClB,WAAW,CAAC,KAAK;AAAA,EAClB;AACD;AAEO,MAAM,kBAAc,uCAAqB,gBAAgB,UAAU;AAE1E,eAAsB,QAAiC,GAA0C;AAChG,MAAI;AAEJ,QAAM,UAAU,KAAK,iBAAiB,WAAW,GAAG,IAAI,EAAE,cAAc,KAAK,CAAC;AAC9E,QAAM,UAAU,KAAK,iBAAiB,WAAW,GAAG,CAAC,CAAC;AAEtD,iBAAe,MAAM,mCAAkB,KAAK,MAAM,OAAO,aAAa,OAAO,EAAE;AAE/E,MAAI,gBAAgB,QAAQ,sBAAsB;AACjD,UAAM,gBAAgB,MAAM,mCAAkB,KAAK,MAAM,QAAQ,aAAa;AAAA,MAC7E,OAAO;AAAA,QACN;AAAA,UACC,OAAO;AAAA,UACP,UAAU;AAAA,QACX;AAAA,QACA;AAAA,UACC,OAAO;AAAA,QACR;AAAA,MACD;AAAA,IACD,CAAC;AAED,mBAAe;AAAA,MACd,GAAG;AAAA,MACH;AAAA,IACD;AAAA,EACD;AAEA,MAAI,gBAAgB,QAAQ,qBAAqB;AAChD,UAAM,eAAe,MAAM,mCAAkB,KAAK,MAAM,QAAQ,aAAa;AAAA,MAC5E,OAAO;AAAA,QACN;AAAA,UACC,OAAO;AAAA,UACP,UAAU;AAAA,QACX;AAAA,QACA;AAAA,UACC,OAAO;AAAA,QACR;AAAA,MACD;AAAA,IACD,CAAC;AAED,mBAAe;AAAA,MACd,GAAG;AAAA,MACH;AAAA,IACD;AAAA,EACD;AAEA,QAAM,gBAAgB,KAAK,QAAQ,+BAA2B,2BAAS,YAAY,GAAG;AAAA,IACrF,UAAU,EAAE,MAAM,EAAE;AAAA,EACrB,CAAC;AAED,SAAO;AACR;","names":[]}