{"version":3,"sources":["../../../../../nodes/TheHiveProject/actions/comment/add.operation.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tINodeProperties,\n} from 'n8n-workflow';\n\nimport { updateDisplayOptions, wrapData } from '@utils/utilities';\n\nimport { alertRLC, caseRLC } from '../../descriptions';\nimport { theHiveApiRequest } from '../../transport';\n\nconst properties: INodeProperties[] = [\n\t{\n\t\t// eslint-disable-next-line n8n-nodes-base/node-param-display-name-miscased\n\t\tdisplayName: 'Add to',\n\t\tname: 'addTo',\n\t\ttype: 'options',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tname: 'Alert',\n\t\t\t\tvalue: 'alert',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Case',\n\t\t\t\tvalue: 'case',\n\t\t\t},\n\t\t],\n\t\tdefault: 'alert',\n\t},\n\t{\n\t\t...caseRLC,\n\t\tname: 'id',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\taddTo: ['case'],\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\t...alertRLC,\n\t\tname: 'id',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\taddTo: ['alert'],\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tdisplayName: 'Message',\n\t\tname: 'message',\n\t\ttype: 'string',\n\t\tdefault: '',\n\t\trequired: true,\n\t\ttypeOptions: {\n\t\t\trows: 2,\n\t\t},\n\t},\n];\n\nconst displayOptions = {\n\tshow: {\n\t\tresource: ['comment'],\n\t\toperation: ['add'],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n\nexport async function execute(this: IExecuteFunctions, i: number): Promise<INodeExecutionData[]> {\n\tlet responseData: IDataObject | IDataObject[] = [];\n\n\tconst addTo = this.getNodeParameter('addTo', i) as string;\n\tconst id = this.getNodeParameter('id', i, '', { extractValue: true });\n\tconst message = this.getNodeParameter('message', i) as string;\n\n\tconst body: IDataObject = {\n\t\tmessage,\n\t};\n\n\tresponseData = await theHiveApiRequest.call(this, 'POST', `/v1/${addTo}/${id}/comment`, body);\n\n\tconst executionData = this.helpers.constructExecutionMetaData(wrapData(responseData), {\n\t\titemData: { item: i },\n\t});\n\n\treturn executionData;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,uBAA+C;AAE/C,0BAAkC;AAClC,uBAAkC;AAElC,MAAM,aAAgC;AAAA,EACrC;AAAA;AAAA,IAEC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS;AAAA,MACR;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,IACD;AAAA,IACA,SAAS;AAAA,EACV;AAAA,EACA;AAAA,IACC,GAAG;AAAA,IACH,MAAM;AAAA,IACN,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,OAAO,CAAC,MAAM;AAAA,MACf;AAAA,IACD;AAAA,EACD;AAAA,EACA;AAAA,IACC,GAAG;AAAA,IACH,MAAM;AAAA,IACN,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,OAAO,CAAC,OAAO;AAAA,MAChB;AAAA,IACD;AAAA,EACD;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS;AAAA,IACT,UAAU;AAAA,IACV,aAAa;AAAA,MACZ,MAAM;AAAA,IACP;AAAA,EACD;AACD;AAEA,MAAM,iBAAiB;AAAA,EACtB,MAAM;AAAA,IACL,UAAU,CAAC,SAAS;AAAA,IACpB,WAAW,CAAC,KAAK;AAAA,EAClB;AACD;AAEO,MAAM,kBAAc,uCAAqB,gBAAgB,UAAU;AAE1E,eAAsB,QAAiC,GAA0C;AAChG,MAAI,eAA4C,CAAC;AAEjD,QAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC9C,QAAM,KAAK,KAAK,iBAAiB,MAAM,GAAG,IAAI,EAAE,cAAc,KAAK,CAAC;AACpE,QAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAElD,QAAM,OAAoB;AAAA,IACzB;AAAA,EACD;AAEA,iBAAe,MAAM,mCAAkB,KAAK,MAAM,QAAQ,OAAO,KAAK,IAAI,EAAE,YAAY,IAAI;AAE5F,QAAM,gBAAgB,KAAK,QAAQ,+BAA2B,2BAAS,YAAY,GAAG;AAAA,IACrF,UAAU,EAAE,MAAM,EAAE;AAAA,EACrB,CAAC;AAED,SAAO;AACR;","names":[]}