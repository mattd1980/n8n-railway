{"version":3,"sources":["../../../../../nodes/TheHiveProject/actions/alert/promote.operation.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tINodeProperties,\n} from 'n8n-workflow';\n\nimport { updateDisplayOptions, wrapData } from '@utils/utilities';\n\nimport { alertRLC } from '../../descriptions';\nimport { theHiveApiRequest } from '../../transport';\n\nconst properties: INodeProperties[] = [\n\talertRLC,\n\t{\n\t\tdisplayName: 'Options',\n\t\tname: 'options',\n\t\tplaceholder: 'Add Field',\n\t\ttype: 'collection',\n\t\tdefault: {},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Case Template Name or ID',\n\t\t\t\tname: 'caseTemplate',\n\t\t\t\ttype: 'options',\n\t\t\t\tdescription:\n\t\t\t\t\t'Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>',\n\t\t\t\tdefault: '',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'loadCaseTemplate',\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n];\n\nconst displayOptions = {\n\tshow: {\n\t\tresource: ['alert'],\n\t\toperation: ['promote'],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n\nexport async function execute(this: IExecuteFunctions, i: number): Promise<INodeExecutionData[]> {\n\tlet responseData: IDataObject | IDataObject[] = [];\n\n\tconst alertId = this.getNodeParameter('alertId', i, '', { extractValue: true }) as string;\n\tconst caseTemplate = this.getNodeParameter('options.caseTemplate', i, '') as string;\n\n\tconst body: IDataObject = {};\n\n\t// await theHiveApiRequest.call(this, 'POST', '/v1/caseTemplate', {\n\t// \tname: 'test template 001',\n\t// \tdisplayName: 'Test Template 001',\n\t// \tdescription: 'test',\n\t// });\n\n\tif (caseTemplate) {\n\t\tbody.caseTemplate = caseTemplate;\n\t}\n\n\tresponseData = await theHiveApiRequest.call(this, 'POST', `/v1/alert/${alertId}/case`, body);\n\n\tconst executionData = this.helpers.constructExecutionMetaData(wrapData(responseData), {\n\t\titemData: { item: i },\n\t});\n\n\treturn executionData;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,uBAA+C;AAE/C,0BAAyB;AACzB,uBAAkC;AAElC,MAAM,aAAgC;AAAA,EACrC;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,aAAa;AAAA,IACb,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,IACV,SAAS;AAAA,MACR;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,aACC;AAAA,QACD,SAAS;AAAA,QACT,aAAa;AAAA,UACZ,mBAAmB;AAAA,QACpB;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;AAEA,MAAM,iBAAiB;AAAA,EACtB,MAAM;AAAA,IACL,UAAU,CAAC,OAAO;AAAA,IAClB,WAAW,CAAC,SAAS;AAAA,EACtB;AACD;AAEO,MAAM,kBAAc,uCAAqB,gBAAgB,UAAU;AAE1E,eAAsB,QAAiC,GAA0C;AAChG,MAAI,eAA4C,CAAC;AAEjD,QAAM,UAAU,KAAK,iBAAiB,WAAW,GAAG,IAAI,EAAE,cAAc,KAAK,CAAC;AAC9E,QAAM,eAAe,KAAK,iBAAiB,wBAAwB,GAAG,EAAE;AAExE,QAAM,OAAoB,CAAC;AAQ3B,MAAI,cAAc;AACjB,SAAK,eAAe;AAAA,EACrB;AAEA,iBAAe,MAAM,mCAAkB,KAAK,MAAM,QAAQ,aAAa,OAAO,SAAS,IAAI;AAE3F,QAAM,gBAAgB,KAAK,QAAQ,+BAA2B,2BAAS,YAAY,GAAG;AAAA,IACrF,UAAU,EAAE,MAAM,EAAE;AAAA,EACrB,CAAC;AAED,SAAO;AACR;","names":[]}