{"version":3,"sources":["../../../../../nodes/TheHiveProject/actions/observable/search.operation.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tINodeProperties,\n} from 'n8n-workflow';\nimport { NodeOperationError } from 'n8n-workflow';\n\nimport { updateDisplayOptions, wrapData } from '@utils/utilities';\n\nimport {\n\talertRLC,\n\tcaseRLC,\n\tgenericFiltersCollection,\n\treturnAllAndLimit,\n\tsearchOptions,\n\tsortCollection,\n} from '../../descriptions';\nimport type { QueryScope } from '../../helpers/interfaces';\nimport { theHiveApiQuery } from '../../transport';\n\nconst properties: INodeProperties[] = [\n\t{\n\t\t// eslint-disable-next-line n8n-nodes-base/node-param-display-name-miscased\n\t\tdisplayName: 'Search in',\n\t\tname: 'searchIn',\n\t\ttype: 'options',\n\t\tdefault: 'all',\n\t\tdescription:\n\t\t\t'Whether to search for observables in all alerts and cases or in a specific case or alert',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tname: 'Alerts and Cases',\n\t\t\t\tvalue: 'all',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Alert',\n\t\t\t\tvalue: 'alert',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Case',\n\t\t\t\tvalue: 'case',\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\t...caseRLC,\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tsearchIn: ['case'],\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\t...alertRLC,\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tsearchIn: ['alert'],\n\t\t\t},\n\t\t},\n\t},\n\t...returnAllAndLimit,\n\tgenericFiltersCollection,\n\tsortCollection,\n\tsearchOptions,\n];\n\nconst displayOptions = {\n\tshow: {\n\t\tresource: ['observable'],\n\t\toperation: ['search'],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n\nexport async function execute(this: IExecuteFunctions, i: number): Promise<INodeExecutionData[]> {\n\tlet responseData: IDataObject | IDataObject[] = [];\n\n\tconst searchIn = this.getNodeParameter('searchIn', i) as string;\n\tconst filtersValues = this.getNodeParameter('filters.values', i, []) as IDataObject[];\n\tconst sortFields = this.getNodeParameter('sort.fields', i, []) as IDataObject[];\n\tconst returnAll = this.getNodeParameter('returnAll', i);\n\tconst { returnCount, extraData } = this.getNodeParameter('options', i);\n\n\tlet limit;\n\tlet scope: QueryScope;\n\n\tif (searchIn === 'all') {\n\t\tscope = { query: 'listObservable' };\n\t} else if (searchIn === 'alert') {\n\t\tconst alertId = this.getNodeParameter('alertId', i, '', { extractValue: true }) as string;\n\t\tscope = { query: 'getAlert', id: alertId, restrictTo: 'observables' };\n\t} else if (searchIn === 'case') {\n\t\tconst caseId = this.getNodeParameter('caseId', i, '', { extractValue: true }) as string;\n\t\tscope = { query: 'getCase', id: caseId, restrictTo: 'observables' };\n\t} else {\n\t\tthrow new NodeOperationError(this.getNode(), `Invalid 'Search In ...' value: ${searchIn}`);\n\t}\n\n\tif (!returnAll) {\n\t\tlimit = this.getNodeParameter('limit', i);\n\t}\n\n\tresponseData = await theHiveApiQuery.call(\n\t\tthis,\n\t\tscope,\n\t\tfiltersValues,\n\t\tsortFields,\n\t\tlimit,\n\t\treturnCount as boolean,\n\t\textraData as string[],\n\t);\n\n\tconst executionData = this.helpers.constructExecutionMetaData(wrapData(responseData), {\n\t\titemData: { item: i },\n\t});\n\n\treturn executionData;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,0BAAmC;AAEnC,uBAA+C;AAE/C,0BAOO;AAEP,uBAAgC;AAEhC,MAAM,aAAgC;AAAA,EACrC;AAAA;AAAA,IAEC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aACC;AAAA,IACD,SAAS;AAAA,MACR;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,IACD;AAAA,EACD;AAAA,EACA;AAAA,IACC,GAAG;AAAA,IACH,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,UAAU,CAAC,MAAM;AAAA,MAClB;AAAA,IACD;AAAA,EACD;AAAA,EACA;AAAA,IACC,GAAG;AAAA,IACH,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,UAAU,CAAC,OAAO;AAAA,MACnB;AAAA,IACD;AAAA,EACD;AAAA,EACA,GAAG;AAAA,EACH;AAAA,EACA;AAAA,EACA;AACD;AAEA,MAAM,iBAAiB;AAAA,EACtB,MAAM;AAAA,IACL,UAAU,CAAC,YAAY;AAAA,IACvB,WAAW,CAAC,QAAQ;AAAA,EACrB;AACD;AAEO,MAAM,kBAAc,uCAAqB,gBAAgB,UAAU;AAE1E,eAAsB,QAAiC,GAA0C;AAChG,MAAI,eAA4C,CAAC;AAEjD,QAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AACpD,QAAM,gBAAgB,KAAK,iBAAiB,kBAAkB,GAAG,CAAC,CAAC;AACnE,QAAM,aAAa,KAAK,iBAAiB,eAAe,GAAG,CAAC,CAAC;AAC7D,QAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,QAAM,EAAE,aAAa,UAAU,IAAI,KAAK,iBAAiB,WAAW,CAAC;AAErE,MAAI;AACJ,MAAI;AAEJ,MAAI,aAAa,OAAO;AACvB,YAAQ,EAAE,OAAO,iBAAiB;AAAA,EACnC,WAAW,aAAa,SAAS;AAChC,UAAM,UAAU,KAAK,iBAAiB,WAAW,GAAG,IAAI,EAAE,cAAc,KAAK,CAAC;AAC9E,YAAQ,EAAE,OAAO,YAAY,IAAI,SAAS,YAAY,cAAc;AAAA,EACrE,WAAW,aAAa,QAAQ;AAC/B,UAAM,SAAS,KAAK,iBAAiB,UAAU,GAAG,IAAI,EAAE,cAAc,KAAK,CAAC;AAC5E,YAAQ,EAAE,OAAO,WAAW,IAAI,QAAQ,YAAY,cAAc;AAAA,EACnE,OAAO;AACN,UAAM,IAAI,uCAAmB,KAAK,QAAQ,GAAG,kCAAkC,QAAQ,EAAE;AAAA,EAC1F;AAEA,MAAI,CAAC,WAAW;AACf,YAAQ,KAAK,iBAAiB,SAAS,CAAC;AAAA,EACzC;AAEA,iBAAe,MAAM,iCAAgB;AAAA,IACpC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD;AAEA,QAAM,gBAAgB,KAAK,QAAQ,+BAA2B,2BAAS,YAAY,GAAG;AAAA,IACrF,UAAU,EAAE,MAAM,EAAE;AAAA,EACrB,CAAC;AAED,SAAO;AACR;","names":[]}