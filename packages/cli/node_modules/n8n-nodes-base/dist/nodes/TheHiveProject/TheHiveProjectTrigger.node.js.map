{"version":3,"sources":["../../../nodes/TheHiveProject/TheHiveProjectTrigger.node.ts"],"sourcesContent":["import get from 'lodash/get';\nimport {\n\ttype IWebhookFunctions,\n\ttype IDataObject,\n\ttype IHookFunctions,\n\ttype INodeType,\n\ttype INodeTypeDescription,\n\ttype IWebhookResponseData,\n\tNodeConnectionTypes,\n} from 'n8n-workflow';\n\nexport class TheHiveProjectTrigger implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'TheHive 5 Trigger',\n\t\tname: 'theHiveProjectTrigger',\n\t\ticon: 'file:thehiveproject.svg',\n\t\tgroup: ['trigger'],\n\t\tversion: 1,\n\t\tdescription: 'Starts the workflow when TheHive events occur',\n\t\tdefaults: {\n\t\t\tname: 'TheHive Trigger',\n\t\t},\n\t\tinputs: [],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\twebhooks: [\n\t\t\t{\n\t\t\t\tname: 'default',\n\t\t\t\thttpMethod: 'POST',\n\t\t\t\tresponseMode: 'onReceived',\n\t\t\t\tpath: 'webhook',\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName:\n\t\t\t\t\t'You must set up the webhook in TheHive â€” instructions <a href=\"https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.thehive5trigger/#configure-a-webhook-in-thehive\" target=\"_blank\">here</a>',\n\t\t\t\tname: 'notice',\n\t\t\t\ttype: 'notice',\n\t\t\t\tdefault: '',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Events',\n\t\t\t\tname: 'events',\n\t\t\t\ttype: 'multiOptions',\n\t\t\t\tdefault: [],\n\t\t\t\trequired: true,\n\t\t\t\tdescription: 'Events types',\n\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-multi-options-type-unsorted-items\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: '*',\n\t\t\t\t\t\tvalue: '*',\n\t\t\t\t\t\tdescription: 'Any time any event is triggered (Wildcard Event)',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Alert Created',\n\t\t\t\t\t\tvalue: 'alert_create',\n\t\t\t\t\t\tdescription: 'Triggered when an alert is created',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Alert Deleted',\n\t\t\t\t\t\tvalue: 'alert_delete',\n\t\t\t\t\t\tdescription: 'Triggered when an alert is deleted',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Alert Updated',\n\t\t\t\t\t\tvalue: 'alert_update',\n\t\t\t\t\t\tdescription: 'Triggered when an alert is updated',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Case Created',\n\t\t\t\t\t\tvalue: 'case_create',\n\t\t\t\t\t\tdescription: 'Triggered when a case is created',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Case Deleted',\n\t\t\t\t\t\tvalue: 'case_delete',\n\t\t\t\t\t\tdescription: 'Triggered when a case is deleted',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Case Updated',\n\t\t\t\t\t\tvalue: 'case_update',\n\t\t\t\t\t\tdescription: 'Triggered when a case is updated',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Comment Created',\n\t\t\t\t\t\tvalue: 'comment_create',\n\t\t\t\t\t\tdescription: 'Triggered when a comment is created',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Comment Deleted',\n\t\t\t\t\t\tvalue: 'comment_delete',\n\t\t\t\t\t\tdescription: 'Triggered when a comment is deleted',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Comment Updated',\n\t\t\t\t\t\tvalue: 'comment_update',\n\t\t\t\t\t\tdescription: 'Triggered when a comment is updated',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Observable Created',\n\t\t\t\t\t\tvalue: 'observable_create',\n\t\t\t\t\t\tdescription: 'Triggered when an observable is created',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Observable Deleted',\n\t\t\t\t\t\tvalue: 'observable_delete',\n\t\t\t\t\t\tdescription: 'Triggered when an observable is deleted',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Observable Updated',\n\t\t\t\t\t\tvalue: 'observable_update',\n\t\t\t\t\t\tdescription: 'Triggered when an observable is updated',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Page Created',\n\t\t\t\t\t\tvalue: 'page_create',\n\t\t\t\t\t\tdescription: 'Triggered when an page is created',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Page Deleted',\n\t\t\t\t\t\tvalue: 'page_delete',\n\t\t\t\t\t\tdescription: 'Triggered when an page is deleted',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Page Updated',\n\t\t\t\t\t\tvalue: 'page_update',\n\t\t\t\t\t\tdescription: 'Triggered when an page is updated',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Task Created',\n\t\t\t\t\t\tvalue: 'task_create',\n\t\t\t\t\t\tdescription: 'Triggered when a task is created',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Task Updated',\n\t\t\t\t\t\tvalue: 'task_update',\n\t\t\t\t\t\tdescription: 'Triggered when a task is updated',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Task Log Created',\n\t\t\t\t\t\tvalue: 'log_create',\n\t\t\t\t\t\tdescription: 'Triggered when a task log is created',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Task Log Deleted',\n\t\t\t\t\t\tvalue: 'log_delete',\n\t\t\t\t\t\tdescription: 'Triggered when a task log is deleted',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Task Log Updated',\n\t\t\t\t\t\tvalue: 'log_update',\n\t\t\t\t\t\tdescription: 'Triggered when a task log is updated',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Filters',\n\t\t\t\tdescription: 'Filter any incoming events based on their fields',\n\t\t\t\tname: 'filters',\n\t\t\t\ttype: 'fixedCollection',\n\t\t\t\tplaceholder: 'Add Filter',\n\t\t\t\tdefault: {},\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tmultipleValues: true,\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Values',\n\t\t\t\t\t\tname: 'values',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Field',\n\t\t\t\t\t\t\t\tname: 'field',\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tplaceholder: 'e.g. context.severity',\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\thint: 'The field to filter on, supports dot notation',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Operator',\n\t\t\t\t\t\t\t\tname: 'operator',\n\t\t\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'Equal',\n\t\t\t\t\t\t\t\t\t\tvalue: 'equal',\n\t\t\t\t\t\t\t\t\t\tdescription: 'Field is equal to value',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'Not Equal',\n\t\t\t\t\t\t\t\t\t\tvalue: 'notEqual',\n\t\t\t\t\t\t\t\t\t\tdescription: 'Field is not equal to value',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'Includes',\n\t\t\t\t\t\t\t\t\t\tvalue: 'includes',\n\t\t\t\t\t\t\t\t\t\tdescription: 'Field includes value',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tdefault: 'equal',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Value',\n\t\t\t\t\t\t\t\tname: 'value',\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Options',\n\t\t\t\tname: 'options',\n\t\t\t\ttype: 'collection',\n\t\t\t\tplaceholder: 'Add option',\n\t\t\t\tdefault: {},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Output Only Data',\n\t\t\t\t\t\tdescription: 'Whether to output data with additional details and omit headers',\n\t\t\t\t\t\tname: 'outputOnlyData',\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t};\n\n\twebhookMethods = {\n\t\tdefault: {\n\t\t\tasync checkExists(this: IHookFunctions): Promise<boolean> {\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tasync create(this: IHookFunctions): Promise<boolean> {\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tasync delete(this: IHookFunctions): Promise<boolean> {\n\t\t\t\treturn true;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync webhook(this: IWebhookFunctions): Promise<IWebhookResponseData> {\n\t\t// Get the request body\n\t\tconst bodyData = this.getBodyData();\n\t\tconst events = this.getNodeParameter('events', []) as string[];\n\n\t\tif (!bodyData.action || !bodyData.objectType) {\n\t\t\t// Don't start the workflow if mandatory fields are not specified\n\t\t\treturn {};\n\t\t}\n\n\t\tconst action = (bodyData.action as string).toLowerCase();\n\t\tconst objectType = (bodyData.objectType as string).toLowerCase();\n\t\tconst event = `${objectType}_${action}`;\n\n\t\tif (events.indexOf('*') === -1 && events.indexOf(event) === -1) {\n\t\t\treturn {};\n\t\t}\n\n\t\tconst filters = this.getNodeParameter('filters.values', []) as IDataObject[];\n\n\t\tif (filters.length) {\n\t\t\tfor (const filter of filters) {\n\t\t\t\tconst field = filter.field as string;\n\t\t\t\tconst operator = filter.operator as string;\n\t\t\t\tconst expectedValue = filter.value as string;\n\t\t\t\tconst actualValue = get(bodyData, field);\n\n\t\t\t\tif (operator === 'equal') {\n\t\t\t\t\tif (actualValue !== expectedValue) {\n\t\t\t\t\t\treturn {};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (operator === 'notEqual') {\n\t\t\t\t\tif (actualValue === expectedValue) {\n\t\t\t\t\t\treturn {};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (operator === 'includes') {\n\t\t\t\t\tif (!String(actualValue).includes(expectedValue)) {\n\t\t\t\t\t\treturn {};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// The data to return and so start the workflow with\n\t\tconst returnData: IDataObject[] = [];\n\n\t\tconst outputOnlyData = this.getNodeParameter('options.outputOnlyData', false) as boolean;\n\n\t\tif (outputOnlyData) {\n\t\t\treturnData.push(bodyData);\n\t\t} else {\n\t\t\treturnData.push({\n\t\t\t\tevent,\n\t\t\t\tbody: this.getBodyData(),\n\t\t\t\theaders: this.getHeaderData(),\n\t\t\t\tquery: this.getQueryData(),\n\t\t\t});\n\t\t}\n\n\t\treturn {\n\t\t\tworkflowData: [this.helpers.returnJsonArray(returnData)],\n\t\t};\n\t}\n}\n"],"mappings":"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","names":["get"]}