{"version":3,"sources":["../../../nodes/Bitly/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHookFunctions,\n\tILoadOptionsFunctions,\n\tJsonObject,\n\tIRequestOptions,\n\tIHttpRequestMethods,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\nexport async function bitlyApiRequest(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tresource: string,\n\n\tbody: any = {},\n\tqs: IDataObject = {},\n\turi?: string,\n\toption: IDataObject = {},\n): Promise<any> {\n\tconst authenticationMethod = this.getNodeParameter('authentication', 0) as string;\n\tlet options: IRequestOptions = {\n\t\theaders: {},\n\t\tmethod,\n\t\tqs,\n\t\tbody,\n\t\turi: uri || `https://api-ssl.bitly.com/v4${resource}`,\n\t\tjson: true,\n\t};\n\toptions = Object.assign({}, options, option);\n\tif (Object.keys(options.body as IDataObject).length === 0) {\n\t\tdelete options.body;\n\t}\n\n\ttry {\n\t\tif (authenticationMethod === 'accessToken') {\n\t\t\tconst credentials = await this.getCredentials('bitlyApi');\n\t\t\toptions.headers = { Authorization: `Bearer ${credentials.accessToken}` };\n\n\t\t\treturn await this.helpers.request(options);\n\t\t} else {\n\t\t\treturn await this.helpers.requestOAuth2.call(this, 'bitlyOAuth2Api', options, {\n\t\t\t\ttokenType: 'Bearer',\n\t\t\t});\n\t\t}\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\n/**\n * Make an API request to paginated flow endpoint\n * and return all results\n */\nexport async function bitlyApiRequestAllItems(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tpropertyName: string,\n\tmethod: IHttpRequestMethods,\n\tresource: string,\n\n\tbody: any = {},\n\tquery: IDataObject = {},\n): Promise<any> {\n\tconst returnData: IDataObject[] = [];\n\n\tlet responseData;\n\tlet uri: string | undefined;\n\tquery.size = 50;\n\n\tdo {\n\t\tresponseData = await bitlyApiRequest.call(this, method, resource, body, query, uri);\n\t\treturnData.push.apply(returnData, responseData[propertyName] as IDataObject[]);\n\t\tif (responseData.pagination?.next) {\n\t\t\turi = responseData.pagination.next;\n\t\t}\n\t} while (responseData.pagination?.next !== undefined);\n\treturn returnData;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,0BAA6B;AAE7B,eAAsB,gBAErB,QACA,UAEA,OAAY,CAAC,GACb,KAAkB,CAAC,GACnB,KACA,SAAsB,CAAC,GACR;AACf,QAAM,uBAAuB,KAAK,iBAAiB,kBAAkB,CAAC;AACtE,MAAI,UAA2B;AAAA,IAC9B,SAAS,CAAC;AAAA,IACV;AAAA,IACA;AAAA,IACA;AAAA,IACA,KAAK,OAAO,+BAA+B,QAAQ;AAAA,IACnD,MAAM;AAAA,EACP;AACA,YAAU,OAAO,OAAO,CAAC,GAAG,SAAS,MAAM;AAC3C,MAAI,OAAO,KAAK,QAAQ,IAAmB,EAAE,WAAW,GAAG;AAC1D,WAAO,QAAQ;AAAA,EAChB;AAEA,MAAI;AACH,QAAI,yBAAyB,eAAe;AAC3C,YAAM,cAAc,MAAM,KAAK,eAAe,UAAU;AACxD,cAAQ,UAAU,EAAE,eAAe,UAAU,YAAY,WAAW,GAAG;AAEvE,aAAO,MAAM,KAAK,QAAQ,QAAQ,OAAO;AAAA,IAC1C,OAAO;AACN,aAAO,MAAM,KAAK,QAAQ,cAAc,KAAK,MAAM,kBAAkB,SAAS;AAAA,QAC7E,WAAW;AAAA,MACZ,CAAC;AAAA,IACF;AAAA,EACD,SAAS,OAAO;AACf,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,KAAmB;AAAA,EAC3D;AACD;AAMA,eAAsB,wBAErB,cACA,QACA,UAEA,OAAY,CAAC,GACb,QAAqB,CAAC,GACP;AACf,QAAM,aAA4B,CAAC;AAEnC,MAAI;AACJ,MAAI;AACJ,QAAM,OAAO;AAEb,KAAG;AACF,mBAAe,MAAM,gBAAgB,KAAK,MAAM,QAAQ,UAAU,MAAM,OAAO,GAAG;AAClF,eAAW,KAAK,MAAM,YAAY,aAAa,YAAY,CAAkB;AAC7E,QAAI,aAAa,YAAY,MAAM;AAClC,YAAM,aAAa,WAAW;AAAA,IAC/B;AAAA,EACD,SAAS,aAAa,YAAY,SAAS;AAC3C,SAAO;AACR;","names":[]}