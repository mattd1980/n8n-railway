{"version":3,"sources":["../../../nodes/Airtop/Airtop.node.ts"],"sourcesContent":["import { NodeConnectionTypes } from 'n8n-workflow';\nimport type { IExecuteFunctions, INodeType, INodeTypeDescription } from 'n8n-workflow';\n\nimport * as extraction from './actions/extraction/Extraction.resource';\nimport * as interaction from './actions/interaction/Interaction.resource';\nimport { router } from './actions/router';\nimport * as session from './actions/session/Session.resource';\nimport * as window from './actions/window/Window.resource';\nexport class Airtop implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Airtop',\n\t\tname: 'airtop',\n\t\ticon: 'file:airtop.svg',\n\t\tgroup: ['transform'],\n\t\tdefaultVersion: 1,\n\t\tversion: [1],\n\t\tsubtitle: '={{ $parameter[\"operation\"] + \": \" + $parameter[\"resource\"] }}',\n\t\tdescription: 'Scrape and control any site with Airtop',\n\t\tusableAsTool: true,\n\t\tdefaults: {\n\t\t\tname: 'Airtop',\n\t\t},\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'airtopApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Session',\n\t\t\t\t\t\tvalue: 'session',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Window',\n\t\t\t\t\t\tvalue: 'window',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Extraction',\n\t\t\t\t\t\tvalue: 'extraction',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Interaction',\n\t\t\t\t\t\tvalue: 'interaction',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'session',\n\t\t\t},\n\t\t\t...session.description,\n\t\t\t...window.description,\n\t\t\t...extraction.description,\n\t\t\t...interaction.description,\n\t\t],\n\t};\n\n\tasync execute(this: IExecuteFunctions) {\n\t\treturn await router.call(this);\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAoC;AAGpC,iBAA4B;AAC5B,kBAA6B;AAC7B,oBAAuB;AACvB,cAAyB;AACzB,aAAwB;AACjB,MAAM,OAA4B;AAAA,EAAlC;AACN,uBAAoC;AAAA,MACnC,aAAa;AAAA,MACb,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO,CAAC,WAAW;AAAA,MACnB,gBAAgB;AAAA,MAChB,SAAS,CAAC,CAAC;AAAA,MACX,UAAU;AAAA,MACV,aAAa;AAAA,MACb,cAAc;AAAA,MACd,UAAU;AAAA,QACT,MAAM;AAAA,MACP;AAAA,MACA,QAAQ,CAAC,wCAAoB,IAAI;AAAA,MACjC,SAAS,CAAC,wCAAoB,IAAI;AAAA,MAClC,aAAa;AAAA,QACZ;AAAA,UACC,MAAM;AAAA,UACN,UAAU;AAAA,QACX;AAAA,MACD;AAAA,MACA,YAAY;AAAA,QACX;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,kBAAkB;AAAA,UAClB,SAAS;AAAA,YACR;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,UACD;AAAA,UACA,SAAS;AAAA,QACV;AAAA,QACA,GAAG,QAAQ;AAAA,QACX,GAAG,OAAO;AAAA,QACV,GAAG,WAAW;AAAA,QACd,GAAG,YAAY;AAAA,MAChB;AAAA,IACD;AAAA;AAAA,EAEA,MAAM,UAAiC;AACtC,WAAO,MAAM,qBAAO,KAAK,IAAI;AAAA,EAC9B;AACD;","names":[]}