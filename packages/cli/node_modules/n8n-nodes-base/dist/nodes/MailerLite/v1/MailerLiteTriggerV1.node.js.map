{"version":3,"sources":["../../../../nodes/MailerLite/v1/MailerLiteTriggerV1.node.ts"],"sourcesContent":["import {\n\ttype IHookFunctions,\n\ttype IWebhookFunctions,\n\ttype IDataObject,\n\ttype INodeType,\n\ttype INodeTypeDescription,\n\ttype IWebhookResponseData,\n\ttype INodeTypeBaseDescription,\n\tNodeConnectionTypes,\n} from 'n8n-workflow';\n\nimport { mailerliteApiRequest } from '../GenericFunctions';\n\nexport class MailerLiteTriggerV1 implements INodeType {\n\tdescription: INodeTypeDescription;\n\n\tconstructor(baseDescription: INodeTypeBaseDescription) {\n\t\tthis.description = {\n\t\t\t...baseDescription,\n\t\t\tdisplayName: 'MailerLite Trigger',\n\t\t\tname: 'mailerLiteTrigger',\n\t\t\tgroup: ['trigger'],\n\t\t\tversion: 1,\n\t\t\tdescription: 'Starts the workflow when MailerLite events occur',\n\t\t\tdefaults: {\n\t\t\t\tname: 'MailerLite Trigger',\n\t\t\t},\n\t\t\tinputs: [],\n\t\t\toutputs: [NodeConnectionTypes.Main],\n\t\t\tcredentials: [\n\t\t\t\t{\n\t\t\t\t\tname: 'mailerLiteApi',\n\t\t\t\t\trequired: true,\n\t\t\t\t},\n\t\t\t],\n\t\t\twebhooks: [\n\t\t\t\t{\n\t\t\t\t\tname: 'default',\n\t\t\t\t\thttpMethod: 'POST',\n\t\t\t\t\tresponseMode: 'onReceived',\n\t\t\t\t\tpath: 'webhook',\n\t\t\t\t},\n\t\t\t],\n\t\t\tproperties: [\n\t\t\t\t{\n\t\t\t\t\tdisplayName: 'Event',\n\t\t\t\t\tname: 'event',\n\t\t\t\t\ttype: 'options',\n\t\t\t\t\toptions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'Campaign Sent',\n\t\t\t\t\t\t\tvalue: 'campaign.sent',\n\t\t\t\t\t\t\tdescription: 'Fired when campaign is sent',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'Subscriber Added Through Webform',\n\t\t\t\t\t\t\tvalue: 'subscriber.added_through_webform',\n\t\t\t\t\t\t\tdescription: 'Fired when a subscriber is added though a form',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'Subscriber Added to Group',\n\t\t\t\t\t\t\tvalue: 'subscriber.add_to_group',\n\t\t\t\t\t\t\tdescription: 'Fired when a subscriber is added to a group',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'Subscriber Automation Completed',\n\t\t\t\t\t\t\tvalue: 'subscriber.automation_complete',\n\t\t\t\t\t\t\tdescription: 'Fired when subscriber finishes automation',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'Subscriber Automation Triggered',\n\t\t\t\t\t\t\tvalue: 'subscriber.automation_triggered',\n\t\t\t\t\t\t\tdescription: 'Fired when subscriber starts automation',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'Subscriber Bounced',\n\t\t\t\t\t\t\tvalue: 'subscriber.bounced',\n\t\t\t\t\t\t\tdescription: 'Fired when an email address bounces',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'Subscriber Complained',\n\t\t\t\t\t\t\tvalue: 'subscriber.complaint',\n\t\t\t\t\t\t\tdescription: 'Fired when subscriber marks a campaign as a spam',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'Subscriber Created',\n\t\t\t\t\t\t\tvalue: 'subscriber.create',\n\t\t\t\t\t\t\tdescription: 'Fired when a new subscriber is added to an account',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'Subscriber Removed From Group',\n\t\t\t\t\t\t\tvalue: 'subscriber.remove_from_group',\n\t\t\t\t\t\t\tdescription: 'Fired when a subscriber is removed from a group',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'Subscriber Unsubscribe',\n\t\t\t\t\t\t\tvalue: 'subscriber.unsubscribe',\n\t\t\t\t\t\t\tdescription: 'Fired when a subscriber becomes unsubscribed',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'Subscriber Updated',\n\t\t\t\t\t\t\tvalue: 'subscriber.update',\n\t\t\t\t\t\t\tdescription: \"Fired when any of the subscriber's custom fields are updated\",\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\trequired: true,\n\t\t\t\t\tdefault: [],\n\t\t\t\t\tdescription: 'The events to listen to',\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t}\n\n\twebhookMethods = {\n\t\tdefault: {\n\t\t\tasync checkExists(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookUrl = this.getNodeWebhookUrl('default');\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tconst event = this.getNodeParameter('event') as string;\n\t\t\t\t// Check all the webhooks which exist already if it is identical to the\n\t\t\t\t// one that is supposed to get created.\n\t\t\t\tconst endpoint = '/webhooks';\n\t\t\t\tconst { webhooks } = await mailerliteApiRequest.call(this, 'GET', endpoint, {});\n\t\t\t\tfor (const webhook of webhooks) {\n\t\t\t\t\tif (webhook.url === webhookUrl && webhook.event === event) {\n\t\t\t\t\t\t// Set webhook-id to be sure that it can be deleted\n\t\t\t\t\t\twebhookData.webhookId = webhook.id as string;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tasync create(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tconst webhookUrl = this.getNodeWebhookUrl('default');\n\t\t\t\tconst event = this.getNodeParameter('event') as string;\n\n\t\t\t\tconst endpoint = '/webhooks';\n\n\t\t\t\tconst body = {\n\t\t\t\t\turl: webhookUrl,\n\t\t\t\t\tevent,\n\t\t\t\t};\n\n\t\t\t\tconst responseData = await mailerliteApiRequest.call(this, 'POST', endpoint, body);\n\n\t\t\t\tif (responseData.id === undefined) {\n\t\t\t\t\t// Required data is missing so was not successful\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\twebhookData.webhookId = responseData.id as string;\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tasync delete(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tif (webhookData.webhookId !== undefined) {\n\t\t\t\t\tconst endpoint = `/webhooks/${webhookData.webhookId}`;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait mailerliteApiRequest.call(this, 'DELETE', endpoint);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Remove from the static workflow data so that it is clear\n\t\t\t\t\t// that no webhooks are registered anymore\n\t\t\t\t\tdelete webhookData.webhookId;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync webhook(this: IWebhookFunctions): Promise<IWebhookResponseData> {\n\t\tconst body = this.getBodyData();\n\n\t\tconst events = body.events as IDataObject[];\n\n\t\treturn {\n\t\t\tworkflowData: [this.helpers.returnJsonArray(events)],\n\t\t};\n\t}\n}\n"],"mappings":"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","names":[]}