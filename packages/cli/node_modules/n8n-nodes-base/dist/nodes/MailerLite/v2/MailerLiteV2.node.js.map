{"version":3,"sources":["../../../../nodes/MailerLite/v2/MailerLiteV2.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n\tINodeTypeBaseDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes } from 'n8n-workflow';\n\nimport type { Subscriber } from './MailerLite.Interface';\nimport { subscriberFields, subscriberOperations } from './SubscriberDescription';\nimport {\n\tgetCustomFields,\n\tmailerliteApiRequest,\n\tmailerliteApiRequestAllItems,\n} from '../GenericFunctions';\n\nexport class MailerLiteV2 implements INodeType {\n\tdescription: INodeTypeDescription;\n\n\tconstructor(baseDescription: INodeTypeBaseDescription) {\n\t\tthis.description = {\n\t\t\t...baseDescription,\n\t\t\tdisplayName: 'MailerLite',\n\t\t\tname: 'mailerLite',\n\t\t\tgroup: ['input'],\n\t\t\tversion: [2],\n\t\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\t\tdescription: 'Consume Mailer Lite API',\n\t\t\tdefaults: {\n\t\t\t\tname: 'MailerLite',\n\t\t\t},\n\t\t\tusableAsTool: true,\n\t\t\tinputs: [NodeConnectionTypes.Main],\n\t\t\toutputs: [NodeConnectionTypes.Main],\n\t\t\tcredentials: [\n\t\t\t\t{\n\t\t\t\t\tname: 'mailerLiteApi',\n\t\t\t\t\trequired: true,\n\t\t\t\t},\n\t\t\t],\n\t\t\tproperties: [\n\t\t\t\t{\n\t\t\t\t\tdisplayName: 'Resource',\n\t\t\t\t\tname: 'resource',\n\t\t\t\t\ttype: 'options',\n\t\t\t\t\tnoDataExpression: true,\n\t\t\t\t\toptions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'Subscriber',\n\t\t\t\t\t\t\tvalue: 'subscriber',\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\tdefault: 'subscriber',\n\t\t\t\t},\n\t\t\t\t...subscriberOperations,\n\t\t\t\t...subscriberFields,\n\t\t\t],\n\t\t};\n\t}\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\tgetCustomFields,\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst length = items.length;\n\t\tconst qs: IDataObject = {};\n\t\tlet responseData;\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'subscriber') {\n\t\t\t\t\t//https://developers.mailerlite.com/reference#create-a-subscriber\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst email = this.getNodeParameter('email', i) as string;\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\temail,\n\t\t\t\t\t\t\tfields: [],\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tObject.assign(body, additionalFields);\n\n\t\t\t\t\t\tif (additionalFields.customFieldsUi) {\n\t\t\t\t\t\t\tconst customFieldsValues = (additionalFields.customFieldsUi as IDataObject)\n\t\t\t\t\t\t\t\t.customFieldsValues as IDataObject[];\n\n\t\t\t\t\t\t\tif (customFieldsValues) {\n\t\t\t\t\t\t\t\tconst fields = {};\n\n\t\t\t\t\t\t\t\tfor (const customFieldValue of customFieldsValues) {\n\t\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\t\tfields[customFieldValue.fieldId] = customFieldValue.value;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbody.fields = fields;\n\t\t\t\t\t\t\t\tdelete body.customFieldsUi;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await mailerliteApiRequest.call(this, 'POST', '/subscribers', body);\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t}\n\t\t\t\t\t//https://developers.mailerlite.com/reference#single-subscriber\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst subscriberId = this.getNodeParameter('subscriberId', i) as string;\n\n\t\t\t\t\t\tresponseData = await mailerliteApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/subscribers/${subscriberId}`,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData = responseData.data as Subscriber[];\n\t\t\t\t\t}\n\t\t\t\t\t//https://developers.mailerlite.com/reference#subscribers\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\n\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\n\t\t\t\t\t\tif (filters.status) {\n\t\t\t\t\t\t\tqs['filter[status]'] = filters.status as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await mailerliteApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/subscribers',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\n\t\t\t\t\t\t\tresponseData = await mailerliteApiRequest.call(this, 'GET', '/subscribers', {}, qs);\n\t\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://developers.mailerlite.com/reference#update-subscriber\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst subscriberId = this.getNodeParameter('subscriberId', i) as string;\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tconst body: IDataObject = {};\n\n\t\t\t\t\t\tObject.assign(body, additionalFields);\n\n\t\t\t\t\t\tif (additionalFields.customFieldsUi) {\n\t\t\t\t\t\t\tconst customFieldsValues = (additionalFields.customFieldsUi as IDataObject)\n\t\t\t\t\t\t\t\t.customFieldsValues as IDataObject[];\n\n\t\t\t\t\t\t\tif (customFieldsValues) {\n\t\t\t\t\t\t\t\tconst fields = {};\n\n\t\t\t\t\t\t\t\tfor (const customFieldValue of customFieldsValues) {\n\t\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\t\tfields[customFieldValue.fieldId] = customFieldValue.value;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbody.fields = fields;\n\t\t\t\t\t\t\t\tdelete body.customFieldsUi;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await mailerliteApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t\t`/subscribers/${subscriberId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t{ itemData: { item: i } },\n\t\t\t);\n\n\t\t\treturnData.push(...executionData);\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":[]}