{"version":3,"sources":["../../../nodes/HaloPSA/HaloPSA.node.ts"],"sourcesContent":["import {\n\ttype IExecuteFunctions,\n\ttype ICredentialDataDecryptedObject,\n\ttype ICredentialsDecrypted,\n\ttype ICredentialTestFunctions,\n\ttype IDataObject,\n\ttype ILoadOptionsFunctions,\n\ttype INodeCredentialTestResult,\n\ttype INodeExecutionData,\n\ttype INodePropertyOptions,\n\ttype INodeType,\n\ttype INodeTypeDescription,\n\ttype JsonObject,\n\tNodeConnectionTypes,\n} from 'n8n-workflow';\n\nimport {\n\tclientFields,\n\tclientOperations,\n\tsiteFields,\n\tsiteOperations,\n\tticketFields,\n\tticketOperations,\n\tuserFields,\n\tuserOperations,\n} from './descriptions';\nimport {\n\tgetAccessTokens,\n\thaloPSAApiRequest,\n\thaloPSAApiRequestAllItems,\n\tqsSetStatus,\n\tsimplifyHaloPSAGetOutput,\n\tvalidateCredentials,\n} from './GenericFunctions';\n\nexport class HaloPSA implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'HaloPSA',\n\t\t// eslint-disable-next-line n8n-nodes-base/node-class-description-name-miscased\n\t\tname: 'haloPSA',\n\t\ticon: 'file:halopsa.svg',\n\t\tgroup: ['input'],\n\t\tversion: 1,\n\t\tdescription: 'Consume HaloPSA API',\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdefaults: {\n\t\t\tname: 'HaloPSA',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'haloPSAApi',\n\t\t\t\trequired: true,\n\t\t\t\ttestedBy: 'haloPSAApiCredentialTest',\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Client',\n\t\t\t\t\t\tvalue: 'client',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Site',\n\t\t\t\t\t\tvalue: 'site',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Ticket',\n\t\t\t\t\t\tvalue: 'ticket',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'User',\n\t\t\t\t\t\tvalue: 'user',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'client',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t\t...clientOperations,\n\t\t\t...clientFields,\n\t\t\t...ticketOperations,\n\t\t\t...ticketFields,\n\t\t\t...siteOperations,\n\t\t\t...siteFields,\n\t\t\t...userOperations,\n\t\t\t...userFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\tasync getHaloPSASites(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst tokens = await getAccessTokens.call(this);\n\n\t\t\t\tconst response = (await haloPSAApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'sites',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/site',\n\t\t\t\t\ttokens.access_token,\n\t\t\t\t)) as IDataObject[];\n\n\t\t\t\tconst options = response.map((site) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: site.clientsite_name as string,\n\t\t\t\t\t\tvalue: site.id as number,\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\treturn options.sort((a, b) => a.name.localeCompare(b.name));\n\t\t\t},\n\n\t\t\tasync getHaloPSAClients(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst tokens = await getAccessTokens.call(this);\n\n\t\t\t\tconst response = (await haloPSAApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'clients',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/Client',\n\t\t\t\t\ttokens.access_token,\n\t\t\t\t)) as IDataObject[];\n\n\t\t\t\tconst options = response.map((client) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: client.name as string,\n\t\t\t\t\t\tvalue: client.id as number,\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\treturn options.sort((a, b) => a.name.localeCompare(b.name));\n\t\t\t},\n\n\t\t\tasync getHaloPSATicketsTypes(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst tokens = await getAccessTokens.call(this);\n\n\t\t\t\tconst response = (await haloPSAApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/TicketType',\n\t\t\t\t\ttokens.access_token,\n\t\t\t\t\t{},\n\t\t\t\t)) as IDataObject[];\n\n\t\t\t\tconst options = response.map((ticket) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: ticket.name as string,\n\t\t\t\t\t\tvalue: ticket.id as number,\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\treturn options\n\t\t\t\t\t.filter((ticket) => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t// folowing types throws error 400 - \"CODE:APP03/2 Please select the CAB members to approve\"\n\t\t\t\t\t\t\tticket.name.includes('Request') ||\n\t\t\t\t\t\t\tticket.name.includes('Offboarding') ||\n\t\t\t\t\t\t\tticket.name.includes('Onboarding') ||\n\t\t\t\t\t\t\tticket.name.includes('Other Hardware') ||\n\t\t\t\t\t\t\tticket.name.includes('Software Change')\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t})\n\t\t\t\t\t.sort((a, b) => a.name.localeCompare(b.name));\n\t\t\t},\n\n\t\t\tasync getHaloPSAAgents(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst tokens = await getAccessTokens.call(this);\n\n\t\t\t\tconst response = (await haloPSAApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/agent',\n\t\t\t\t\ttokens.access_token,\n\t\t\t\t\t{},\n\t\t\t\t)) as IDataObject[];\n\n\t\t\t\tconst options = response.map((agent) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: agent.name as string,\n\t\t\t\t\t\tvalue: agent.id as number,\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\treturn options.sort((a, b) => a.name.localeCompare(b.name));\n\t\t\t},\n\t\t},\n\n\t\tcredentialTest: {\n\t\t\tasync haloPSAApiCredentialTest(\n\t\t\t\tthis: ICredentialTestFunctions,\n\t\t\t\tcredential: ICredentialsDecrypted,\n\t\t\t): Promise<INodeCredentialTestResult> {\n\t\t\t\ttry {\n\t\t\t\t\tawait validateCredentials.call(this, credential.data as ICredentialDataDecryptedObject);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tstatus: 'Error',\n\t\t\t\t\t\tmessage: (error as JsonObject).message as string,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tstatus: 'OK',\n\t\t\t\t\tmessage: 'Connection successful!',\n\t\t\t\t};\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tlet responseData;\n\n\t\tconst tokens = await getAccessTokens.call(this);\n\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\t//====================================================================\n\t\t//                        Main Loop\n\t\t//====================================================================\n\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'client') {\n\t\t\t\t\tconst simplifiedOutput = ['id', 'name', 'notes', 'is_vip', 'website'];\n\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst name = this.getNodeParameter('clientName', i) as string;\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t...additionalFields,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tresponseData = await haloPSAApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/client',\n\t\t\t\t\t\t\ttokens.access_token,\n\t\t\t\t\t\t\t[body],\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst clientId = this.getNodeParameter('clientId', i) as string;\n\t\t\t\t\t\t// const reasign = this.getNodeParameter('reasign', i) as boolean;\n\t\t\t\t\t\t// if (reasign) {\n\t\t\t\t\t\t// \tconst reasigmentCliendId = this.getNodeParameter('reasigmentCliendId', i) as string;\n\t\t\t\t\t\t// \tawait reasignTickets.call(this, clientId, reasigmentCliendId, tokens.access_token);\n\t\t\t\t\t\t// }\n\n\t\t\t\t\t\tresponseData = await haloPSAApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/client/${clientId}`,\n\t\t\t\t\t\t\ttokens.access_token,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst clientId = this.getNodeParameter('clientId', i) as string;\n\t\t\t\t\t\tconst simplify = this.getNodeParameter('simplify', i) as boolean;\n\t\t\t\t\t\tconst response = await haloPSAApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/client/${clientId}`,\n\t\t\t\t\t\t\ttokens.access_token,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = simplify\n\t\t\t\t\t\t\t? simplifyHaloPSAGetOutput([response] as IDataObject[], simplifiedOutput)\n\t\t\t\t\t\t\t: response;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst simplify = this.getNodeParameter('simplify', i) as boolean;\n\t\t\t\t\t\tconst qs: IDataObject = {};\n\t\t\t\t\t\tlet response;\n\n\t\t\t\t\t\tObject.assign(qs, filters, qsSetStatus(filters.activeStatus as string));\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponse = await haloPSAApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'clients',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/client',\n\t\t\t\t\t\t\t\ttokens.access_token,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tqs.count = limit;\n\t\t\t\t\t\t\tconst { clients } = await haloPSAApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/client',\n\t\t\t\t\t\t\t\ttokens.access_token,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponse = clients;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = simplify\n\t\t\t\t\t\t\t? simplifyHaloPSAGetOutput(response as IDataObject[], simplifiedOutput)\n\t\t\t\t\t\t\t: response;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst clientId = this.getNodeParameter('clientId', i) as IDataObject;\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tid: clientId,\n\t\t\t\t\t\t\t...updateFields,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tresponseData = await haloPSAApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/client',\n\t\t\t\t\t\t\ttokens.access_token,\n\t\t\t\t\t\t\t[body],\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (resource === 'site') {\n\t\t\t\t\tconst simplifiedOutput = [\n\t\t\t\t\t\t'id',\n\t\t\t\t\t\t'name',\n\t\t\t\t\t\t'client_id',\n\t\t\t\t\t\t'maincontact_name',\n\t\t\t\t\t\t'notes',\n\t\t\t\t\t\t'phonenumber',\n\t\t\t\t\t];\n\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst name = this.getNodeParameter('siteName', i) as string;\n\t\t\t\t\t\tconst clientId = this.getNodeParameter('clientId', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tclient_id: clientId,\n\t\t\t\t\t\t\t...additionalFields,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tresponseData = await haloPSAApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/site',\n\t\t\t\t\t\t\ttokens.access_token,\n\t\t\t\t\t\t\t[body],\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst siteId = this.getNodeParameter('siteId', i) as string;\n\t\t\t\t\t\tresponseData = await haloPSAApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/site/${siteId}`,\n\t\t\t\t\t\t\ttokens.access_token,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst siteId = this.getNodeParameter('siteId', i) as string;\n\t\t\t\t\t\tconst simplify = this.getNodeParameter('simplify', i) as boolean;\n\t\t\t\t\t\tconst response = await haloPSAApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/site/${siteId}`,\n\t\t\t\t\t\t\ttokens.access_token,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = simplify\n\t\t\t\t\t\t\t? simplifyHaloPSAGetOutput([response] as IDataObject[], simplifiedOutput)\n\t\t\t\t\t\t\t: response;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst simplify = this.getNodeParameter('simplify', i) as boolean;\n\t\t\t\t\t\tconst qs: IDataObject = {};\n\t\t\t\t\t\tlet response;\n\n\t\t\t\t\t\tObject.assign(qs, filters, qsSetStatus(filters.activeStatus as string));\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponse = await haloPSAApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'sites',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/site',\n\t\t\t\t\t\t\t\ttokens.access_token,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tqs.count = limit;\n\t\t\t\t\t\t\tconst { sites } = await haloPSAApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/site',\n\t\t\t\t\t\t\t\ttokens.access_token,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponse = sites;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = simplify\n\t\t\t\t\t\t\t? simplifyHaloPSAGetOutput(response as IDataObject[], simplifiedOutput)\n\t\t\t\t\t\t\t: response;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst siteId = this.getNodeParameter('siteId', i) as IDataObject;\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tid: siteId,\n\t\t\t\t\t\t\t...updateFields,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tresponseData = await haloPSAApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/site',\n\t\t\t\t\t\t\ttokens.access_token,\n\t\t\t\t\t\t\t[body],\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (resource === 'ticket') {\n\t\t\t\t\tconst simplifiedOutput = [\n\t\t\t\t\t\t'id',\n\t\t\t\t\t\t'summary',\n\t\t\t\t\t\t'details',\n\t\t\t\t\t\t'agent_id',\n\t\t\t\t\t\t'startdate',\n\t\t\t\t\t\t'targetdate',\n\t\t\t\t\t];\n\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst summary = this.getNodeParameter('summary', i) as string;\n\t\t\t\t\t\tconst details = this.getNodeParameter('details', i) as string;\n\t\t\t\t\t\tconst ticketType = this.getNodeParameter('ticketType', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\ttickettype_id: ticketType,\n\t\t\t\t\t\t\tsummary,\n\t\t\t\t\t\t\tdetails,\n\t\t\t\t\t\t\t...additionalFields,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tresponseData = await haloPSAApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/tickets',\n\t\t\t\t\t\t\ttokens.access_token,\n\t\t\t\t\t\t\t[body],\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst ticketId = this.getNodeParameter('ticketId', i) as string;\n\t\t\t\t\t\tresponseData = await haloPSAApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/tickets/${ticketId}`,\n\t\t\t\t\t\t\ttokens.access_token,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst ticketId = this.getNodeParameter('ticketId', i) as string;\n\t\t\t\t\t\tconst simplify = this.getNodeParameter('simplify', i) as boolean;\n\t\t\t\t\t\tconst response = await haloPSAApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/tickets/${ticketId}`,\n\t\t\t\t\t\t\ttokens.access_token,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = simplify\n\t\t\t\t\t\t\t? simplifyHaloPSAGetOutput([response] as IDataObject[], simplifiedOutput)\n\t\t\t\t\t\t\t: response;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst simplify = this.getNodeParameter('simplify', i) as boolean;\n\t\t\t\t\t\tconst qs: IDataObject = {};\n\t\t\t\t\t\tlet response;\n\n\t\t\t\t\t\tObject.assign(qs, filters, qsSetStatus(filters.activeStatus as string));\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponse = await haloPSAApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'tickets',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/tickets',\n\t\t\t\t\t\t\t\ttokens.access_token,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tqs.count = limit;\n\t\t\t\t\t\t\tconst { tickets } = await haloPSAApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/tickets',\n\t\t\t\t\t\t\t\ttokens.access_token,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponse = tickets;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = simplify\n\t\t\t\t\t\t\t? simplifyHaloPSAGetOutput(response as IDataObject[], simplifiedOutput)\n\t\t\t\t\t\t\t: response;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst ticketId = this.getNodeParameter('ticketId', i) as IDataObject;\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tid: ticketId,\n\t\t\t\t\t\t\t...updateFields,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tresponseData = await haloPSAApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/tickets',\n\t\t\t\t\t\t\ttokens.access_token,\n\t\t\t\t\t\t\t[body],\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (resource === 'user') {\n\t\t\t\t\tconst simplifiedOutput = [\n\t\t\t\t\t\t'id',\n\t\t\t\t\t\t'name',\n\t\t\t\t\t\t'site_id',\n\t\t\t\t\t\t'emailaddress',\n\t\t\t\t\t\t'notes',\n\t\t\t\t\t\t'surname',\n\t\t\t\t\t\t'inactive',\n\t\t\t\t\t];\n\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst name = this.getNodeParameter('userName', i) as string;\n\t\t\t\t\t\tconst siteId = this.getNodeParameter('siteId', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tsite_id: siteId,\n\t\t\t\t\t\t\t...additionalFields,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tresponseData = await haloPSAApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/users',\n\t\t\t\t\t\t\ttokens.access_token,\n\t\t\t\t\t\t\t[body],\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst userId = this.getNodeParameter('userId', i) as string;\n\t\t\t\t\t\tresponseData = await haloPSAApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/users/${userId}`,\n\t\t\t\t\t\t\ttokens.access_token,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst userId = this.getNodeParameter('userId', i) as string;\n\t\t\t\t\t\tconst simplify = this.getNodeParameter('simplify', i) as boolean;\n\t\t\t\t\t\tconst response = await haloPSAApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/users/${userId}`,\n\t\t\t\t\t\t\ttokens.access_token,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = simplify\n\t\t\t\t\t\t\t? simplifyHaloPSAGetOutput([response] as IDataObject[], simplifiedOutput)\n\t\t\t\t\t\t\t: response;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst simplify = this.getNodeParameter('simplify', i) as boolean;\n\t\t\t\t\t\tconst qs: IDataObject = {};\n\t\t\t\t\t\tlet response;\n\n\t\t\t\t\t\tObject.assign(qs, filters, qsSetStatus(filters.activeStatus as string));\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponse = await haloPSAApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'users',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/users',\n\t\t\t\t\t\t\t\ttokens.access_token,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tqs.count = limit;\n\t\t\t\t\t\t\tconst { users } = await haloPSAApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/users',\n\t\t\t\t\t\t\t\ttokens.access_token,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponse = users;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = simplify\n\t\t\t\t\t\t\t? simplifyHaloPSAGetOutput(response as IDataObject[], simplifiedOutput)\n\t\t\t\t\t\t\t: response;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst userId = this.getNodeParameter('userId', i) as IDataObject;\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tid: userId,\n\t\t\t\t\t\t\t...updateFields,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tresponseData = await haloPSAApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/users',\n\t\t\t\t\t\t\ttokens.access_token,\n\t\t\t\t\t\t\t[body],\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t);\n\n\t\t\t\treturnData.push(...executionData);\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAcO;AAEP,0BASO;AACP,8BAOO;AAEA,MAAM,QAA6B;AAAA,EAAnC;AACN,uBAAoC;AAAA,MACnC,aAAa;AAAA;AAAA,MAEb,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO,CAAC,OAAO;AAAA,MACf,SAAS;AAAA,MACT,aAAa;AAAA,MACb,UAAU;AAAA,MACV,UAAU;AAAA,QACT,MAAM;AAAA,MACP;AAAA,MACA,cAAc;AAAA,MACd,QAAQ,CAAC,wCAAoB,IAAI;AAAA,MACjC,SAAS,CAAC,wCAAoB,IAAI;AAAA,MAClC,aAAa;AAAA,QACZ;AAAA,UACC,MAAM;AAAA,UACN,UAAU;AAAA,UACV,UAAU;AAAA,QACX;AAAA,MACD;AAAA,MACA,YAAY;AAAA,QACX;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,kBAAkB;AAAA,UAClB,SAAS;AAAA,YACR;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,UACD;AAAA,UACA,SAAS;AAAA,UACT,UAAU;AAAA,QACX;AAAA,QACA,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,MACJ;AAAA,IACD;AAEA,mBAAU;AAAA,MACT,aAAa;AAAA,QACZ,MAAM,kBAA8E;AACnF,gBAAM,SAAS,MAAM,wCAAgB,KAAK,IAAI;AAE9C,gBAAM,WAAY,MAAM,kDAA0B;AAAA,YACjD;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA,OAAO;AAAA,UACR;AAEA,gBAAM,UAAU,SAAS,IAAI,CAAC,SAAS;AACtC,mBAAO;AAAA,cACN,MAAM,KAAK;AAAA,cACX,OAAO,KAAK;AAAA,YACb;AAAA,UACD,CAAC;AAED,iBAAO,QAAQ,KAAK,CAAC,GAAG,MAAM,EAAE,KAAK,cAAc,EAAE,IAAI,CAAC;AAAA,QAC3D;AAAA,QAEA,MAAM,oBAAgF;AACrF,gBAAM,SAAS,MAAM,wCAAgB,KAAK,IAAI;AAE9C,gBAAM,WAAY,MAAM,kDAA0B;AAAA,YACjD;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA,OAAO;AAAA,UACR;AAEA,gBAAM,UAAU,SAAS,IAAI,CAAC,WAAW;AACxC,mBAAO;AAAA,cACN,MAAM,OAAO;AAAA,cACb,OAAO,OAAO;AAAA,YACf;AAAA,UACD,CAAC;AAED,iBAAO,QAAQ,KAAK,CAAC,GAAG,MAAM,EAAE,KAAK,cAAc,EAAE,IAAI,CAAC;AAAA,QAC3D;AAAA,QAEA,MAAM,yBAAqF;AAC1F,gBAAM,SAAS,MAAM,wCAAgB,KAAK,IAAI;AAE9C,gBAAM,WAAY,MAAM,0CAAkB;AAAA,YACzC;AAAA,YACA;AAAA,YACA;AAAA,YACA,OAAO;AAAA,YACP,CAAC;AAAA,UACF;AAEA,gBAAM,UAAU,SAAS,IAAI,CAAC,WAAW;AACxC,mBAAO;AAAA,cACN,MAAM,OAAO;AAAA,cACb,OAAO,OAAO;AAAA,YACf;AAAA,UACD,CAAC;AAED,iBAAO,QACL,OAAO,CAAC,WAAW;AACnB;AAAA;AAAA,cAEC,OAAO,KAAK,SAAS,SAAS,KAC9B,OAAO,KAAK,SAAS,aAAa,KAClC,OAAO,KAAK,SAAS,YAAY,KACjC,OAAO,KAAK,SAAS,gBAAgB,KACrC,OAAO,KAAK,SAAS,iBAAiB;AAAA,cACrC;AACD,qBAAO;AAAA,YACR;AACA,mBAAO;AAAA,UACR,CAAC,EACA,KAAK,CAAC,GAAG,MAAM,EAAE,KAAK,cAAc,EAAE,IAAI,CAAC;AAAA,QAC9C;AAAA,QAEA,MAAM,mBAA+E;AACpF,gBAAM,SAAS,MAAM,wCAAgB,KAAK,IAAI;AAE9C,gBAAM,WAAY,MAAM,0CAAkB;AAAA,YACzC;AAAA,YACA;AAAA,YACA;AAAA,YACA,OAAO;AAAA,YACP,CAAC;AAAA,UACF;AAEA,gBAAM,UAAU,SAAS,IAAI,CAAC,UAAU;AACvC,mBAAO;AAAA,cACN,MAAM,MAAM;AAAA,cACZ,OAAO,MAAM;AAAA,YACd;AAAA,UACD,CAAC;AAED,iBAAO,QAAQ,KAAK,CAAC,GAAG,MAAM,EAAE,KAAK,cAAc,EAAE,IAAI,CAAC;AAAA,QAC3D;AAAA,MACD;AAAA,MAEA,gBAAgB;AAAA,QACf,MAAM,yBAEL,YACqC;AACrC,cAAI;AACH,kBAAM,4CAAoB,KAAK,MAAM,WAAW,IAAsC;AAAA,UACvF,SAAS,OAAO;AACf,mBAAO;AAAA,cACN,QAAQ;AAAA,cACR,SAAU,MAAqB;AAAA,YAChC;AAAA,UACD;AACA,iBAAO;AAAA,YACN,QAAQ;AAAA,YACR,SAAS;AAAA,UACV;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA;AAAA,EAEA,MAAM,UAAkE;AACvE,UAAM,QAAQ,KAAK,aAAa;AAChC,UAAM,aAAmC,CAAC;AAC1C,QAAI;AAEJ,UAAM,SAAS,MAAM,wCAAgB,KAAK,IAAI;AAE9C,UAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AACpD,UAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AAMtD,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACtC,UAAI;AACH,YAAI,aAAa,UAAU;AAC1B,gBAAM,mBAAmB,CAAC,MAAM,QAAQ,SAAS,UAAU,SAAS;AAEpE,cAAI,cAAc,UAAU;AAC3B,kBAAM,mBAAmB,KAAK,iBAAiB,oBAAoB,CAAC;AACpE,kBAAM,OAAO,KAAK,iBAAiB,cAAc,CAAC;AAClD,kBAAM,OAAoB;AAAA,cACzB;AAAA,cACA,GAAG;AAAA,YACJ;AAEA,2BAAe,MAAM,0CAAkB;AAAA,cACtC;AAAA,cACA;AAAA,cACA;AAAA,cACA,OAAO;AAAA,cACP,CAAC,IAAI;AAAA,YACN;AAAA,UACD;AAEA,cAAI,cAAc,UAAU;AAC3B,kBAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AAOpD,2BAAe,MAAM,0CAAkB;AAAA,cACtC;AAAA,cACA;AAAA,cACA,WAAW,QAAQ;AAAA,cACnB,OAAO;AAAA,YACR;AAAA,UACD;AAEA,cAAI,cAAc,OAAO;AACxB,kBAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AACpD,kBAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AACpD,kBAAM,WAAW,MAAM,0CAAkB;AAAA,cACxC;AAAA,cACA;AAAA,cACA,WAAW,QAAQ;AAAA,cACnB,OAAO;AAAA,YACR;AACA,2BAAe,eACZ,kDAAyB,CAAC,QAAQ,GAAoB,gBAAgB,IACtE;AAAA,UACJ;AAEA,cAAI,cAAc,UAAU;AAC3B,kBAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAClD,kBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,kBAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AACpD,kBAAM,KAAkB,CAAC;AACzB,gBAAI;AAEJ,mBAAO,OAAO,IAAI,aAAS,qCAAY,QAAQ,YAAsB,CAAC;AACtE,gBAAI,WAAW;AACd,yBAAW,MAAM,kDAA0B;AAAA,gBAC1C;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,OAAO;AAAA,gBACP,CAAC;AAAA,gBACD;AAAA,cACD;AAAA,YACD,OAAO;AACN,oBAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC9C,iBAAG,QAAQ;AACX,oBAAM,EAAE,QAAQ,IAAI,MAAM,0CAAkB;AAAA,gBAC3C;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,OAAO;AAAA,gBACP,CAAC;AAAA,gBACD;AAAA,cACD;AACA,yBAAW;AAAA,YACZ;AACA,2BAAe,eACZ,kDAAyB,UAA2B,gBAAgB,IACpE;AAAA,UACJ;AAEA,cAAI,cAAc,UAAU;AAC3B,kBAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AACpD,kBAAM,eAAe,KAAK,iBAAiB,gBAAgB,CAAC;AAC5D,kBAAM,OAAoB;AAAA,cACzB,IAAI;AAAA,cACJ,GAAG;AAAA,YACJ;AAEA,2BAAe,MAAM,0CAAkB;AAAA,cACtC;AAAA,cACA;AAAA,cACA;AAAA,cACA,OAAO;AAAA,cACP,CAAC,IAAI;AAAA,YACN;AAAA,UACD;AAAA,QACD;AAEA,YAAI,aAAa,QAAQ;AACxB,gBAAM,mBAAmB;AAAA,YACxB;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACD;AAEA,cAAI,cAAc,UAAU;AAC3B,kBAAM,OAAO,KAAK,iBAAiB,YAAY,CAAC;AAChD,kBAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AACpD,kBAAM,mBAAmB,KAAK,iBAAiB,oBAAoB,CAAC;AACpE,kBAAM,OAAoB;AAAA,cACzB;AAAA,cACA,WAAW;AAAA,cACX,GAAG;AAAA,YACJ;AAEA,2BAAe,MAAM,0CAAkB;AAAA,cACtC;AAAA,cACA;AAAA,cACA;AAAA,cACA,OAAO;AAAA,cACP,CAAC,IAAI;AAAA,YACN;AAAA,UACD;AAEA,cAAI,cAAc,UAAU;AAC3B,kBAAM,SAAS,KAAK,iBAAiB,UAAU,CAAC;AAChD,2BAAe,MAAM,0CAAkB;AAAA,cACtC;AAAA,cACA;AAAA,cACA,SAAS,MAAM;AAAA,cACf,OAAO;AAAA,YACR;AAAA,UACD;AAEA,cAAI,cAAc,OAAO;AACxB,kBAAM,SAAS,KAAK,iBAAiB,UAAU,CAAC;AAChD,kBAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AACpD,kBAAM,WAAW,MAAM,0CAAkB;AAAA,cACxC;AAAA,cACA;AAAA,cACA,SAAS,MAAM;AAAA,cACf,OAAO;AAAA,YACR;AACA,2BAAe,eACZ,kDAAyB,CAAC,QAAQ,GAAoB,gBAAgB,IACtE;AAAA,UACJ;AAEA,cAAI,cAAc,UAAU;AAC3B,kBAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAClD,kBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,kBAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AACpD,kBAAM,KAAkB,CAAC;AACzB,gBAAI;AAEJ,mBAAO,OAAO,IAAI,aAAS,qCAAY,QAAQ,YAAsB,CAAC;AACtE,gBAAI,WAAW;AACd,yBAAW,MAAM,kDAA0B;AAAA,gBAC1C;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,OAAO;AAAA,gBACP,CAAC;AAAA,gBACD;AAAA,cACD;AAAA,YACD,OAAO;AACN,oBAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC9C,iBAAG,QAAQ;AACX,oBAAM,EAAE,MAAM,IAAI,MAAM,0CAAkB;AAAA,gBACzC;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,OAAO;AAAA,gBACP,CAAC;AAAA,gBACD;AAAA,cACD;AACA,yBAAW;AAAA,YACZ;AACA,2BAAe,eACZ,kDAAyB,UAA2B,gBAAgB,IACpE;AAAA,UACJ;AAEA,cAAI,cAAc,UAAU;AAC3B,kBAAM,SAAS,KAAK,iBAAiB,UAAU,CAAC;AAChD,kBAAM,eAAe,KAAK,iBAAiB,gBAAgB,CAAC;AAC5D,kBAAM,OAAoB;AAAA,cACzB,IAAI;AAAA,cACJ,GAAG;AAAA,YACJ;AAEA,2BAAe,MAAM,0CAAkB;AAAA,cACtC;AAAA,cACA;AAAA,cACA;AAAA,cACA,OAAO;AAAA,cACP,CAAC,IAAI;AAAA,YACN;AAAA,UACD;AAAA,QACD;AAEA,YAAI,aAAa,UAAU;AAC1B,gBAAM,mBAAmB;AAAA,YACxB;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACD;AAEA,cAAI,cAAc,UAAU;AAC3B,kBAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAClD,kBAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAClD,kBAAM,aAAa,KAAK,iBAAiB,cAAc,CAAC;AACxD,kBAAM,mBAAmB,KAAK,iBAAiB,oBAAoB,CAAC;AACpE,kBAAM,OAAoB;AAAA,cACzB,eAAe;AAAA,cACf;AAAA,cACA;AAAA,cACA,GAAG;AAAA,YACJ;AAEA,2BAAe,MAAM,0CAAkB;AAAA,cACtC;AAAA,cACA;AAAA,cACA;AAAA,cACA,OAAO;AAAA,cACP,CAAC,IAAI;AAAA,YACN;AAAA,UACD;AAEA,cAAI,cAAc,UAAU;AAC3B,kBAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AACpD,2BAAe,MAAM,0CAAkB;AAAA,cACtC;AAAA,cACA;AAAA,cACA,YAAY,QAAQ;AAAA,cACpB,OAAO;AAAA,YACR;AAAA,UACD;AAEA,cAAI,cAAc,OAAO;AACxB,kBAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AACpD,kBAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AACpD,kBAAM,WAAW,MAAM,0CAAkB;AAAA,cACxC;AAAA,cACA;AAAA,cACA,YAAY,QAAQ;AAAA,cACpB,OAAO;AAAA,YACR;AACA,2BAAe,eACZ,kDAAyB,CAAC,QAAQ,GAAoB,gBAAgB,IACtE;AAAA,UACJ;AAEA,cAAI,cAAc,UAAU;AAC3B,kBAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAClD,kBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,kBAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AACpD,kBAAM,KAAkB,CAAC;AACzB,gBAAI;AAEJ,mBAAO,OAAO,IAAI,aAAS,qCAAY,QAAQ,YAAsB,CAAC;AACtE,gBAAI,WAAW;AACd,yBAAW,MAAM,kDAA0B;AAAA,gBAC1C;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,OAAO;AAAA,gBACP,CAAC;AAAA,gBACD;AAAA,cACD;AAAA,YACD,OAAO;AACN,oBAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC9C,iBAAG,QAAQ;AACX,oBAAM,EAAE,QAAQ,IAAI,MAAM,0CAAkB;AAAA,gBAC3C;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,OAAO;AAAA,gBACP,CAAC;AAAA,gBACD;AAAA,cACD;AACA,yBAAW;AAAA,YACZ;AACA,2BAAe,eACZ,kDAAyB,UAA2B,gBAAgB,IACpE;AAAA,UACJ;AAEA,cAAI,cAAc,UAAU;AAC3B,kBAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AACpD,kBAAM,eAAe,KAAK,iBAAiB,gBAAgB,CAAC;AAC5D,kBAAM,OAAoB;AAAA,cACzB,IAAI;AAAA,cACJ,GAAG;AAAA,YACJ;AAEA,2BAAe,MAAM,0CAAkB;AAAA,cACtC;AAAA,cACA;AAAA,cACA;AAAA,cACA,OAAO;AAAA,cACP,CAAC,IAAI;AAAA,YACN;AAAA,UACD;AAAA,QACD;AAEA,YAAI,aAAa,QAAQ;AACxB,gBAAM,mBAAmB;AAAA,YACxB;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACD;AAEA,cAAI,cAAc,UAAU;AAC3B,kBAAM,OAAO,KAAK,iBAAiB,YAAY,CAAC;AAChD,kBAAM,SAAS,KAAK,iBAAiB,UAAU,CAAC;AAChD,kBAAM,mBAAmB,KAAK,iBAAiB,oBAAoB,CAAC;AACpE,kBAAM,OAAoB;AAAA,cACzB;AAAA,cACA,SAAS;AAAA,cACT,GAAG;AAAA,YACJ;AAEA,2BAAe,MAAM,0CAAkB;AAAA,cACtC;AAAA,cACA;AAAA,cACA;AAAA,cACA,OAAO;AAAA,cACP,CAAC,IAAI;AAAA,YACN;AAAA,UACD;AAEA,cAAI,cAAc,UAAU;AAC3B,kBAAM,SAAS,KAAK,iBAAiB,UAAU,CAAC;AAChD,2BAAe,MAAM,0CAAkB;AAAA,cACtC;AAAA,cACA;AAAA,cACA,UAAU,MAAM;AAAA,cAChB,OAAO;AAAA,YACR;AAAA,UACD;AAEA,cAAI,cAAc,OAAO;AACxB,kBAAM,SAAS,KAAK,iBAAiB,UAAU,CAAC;AAChD,kBAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AACpD,kBAAM,WAAW,MAAM,0CAAkB;AAAA,cACxC;AAAA,cACA;AAAA,cACA,UAAU,MAAM;AAAA,cAChB,OAAO;AAAA,YACR;AACA,2BAAe,eACZ,kDAAyB,CAAC,QAAQ,GAAoB,gBAAgB,IACtE;AAAA,UACJ;AAEA,cAAI,cAAc,UAAU;AAC3B,kBAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAClD,kBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,kBAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AACpD,kBAAM,KAAkB,CAAC;AACzB,gBAAI;AAEJ,mBAAO,OAAO,IAAI,aAAS,qCAAY,QAAQ,YAAsB,CAAC;AACtE,gBAAI,WAAW;AACd,yBAAW,MAAM,kDAA0B;AAAA,gBAC1C;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,OAAO;AAAA,gBACP,CAAC;AAAA,gBACD;AAAA,cACD;AAAA,YACD,OAAO;AACN,oBAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC9C,iBAAG,QAAQ;AACX,oBAAM,EAAE,MAAM,IAAI,MAAM,0CAAkB;AAAA,gBACzC;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,OAAO;AAAA,gBACP,CAAC;AAAA,gBACD;AAAA,cACD;AACA,yBAAW;AAAA,YACZ;AACA,2BAAe,eACZ,kDAAyB,UAA2B,gBAAgB,IACpE;AAAA,UACJ;AAEA,cAAI,cAAc,UAAU;AAC3B,kBAAM,SAAS,KAAK,iBAAiB,UAAU,CAAC;AAChD,kBAAM,eAAe,KAAK,iBAAiB,gBAAgB,CAAC;AAC5D,kBAAM,OAAoB;AAAA,cACzB,IAAI;AAAA,cACJ,GAAG;AAAA,YACJ;AAEA,2BAAe,MAAM,0CAAkB;AAAA,cACtC;AAAA,cACA;AAAA,cACA;AAAA,cACA,OAAO;AAAA,cACP,CAAC,IAAI;AAAA,YACN;AAAA,UACD;AAAA,QACD;AAEA,cAAM,gBAAgB,KAAK,QAAQ;AAAA,UAClC,KAAK,QAAQ,gBAAgB,YAA6B;AAAA,UAC1D,EAAE,UAAU,EAAE,MAAM,EAAE,EAAE;AAAA,QACzB;AAEA,mBAAW,KAAK,GAAG,aAAa;AAAA,MACjC,SAAS,OAAO;AACf,YAAI,KAAK,eAAe,GAAG;AAC1B,gBAAM,qBAAqB,KAAK,QAAQ;AAAA,YACvC,KAAK,QAAQ,gBAAgB,EAAE,OAAO,MAAM,QAAQ,CAAC;AAAA,YACrD,EAAE,UAAU,EAAE,MAAM,EAAE,EAAE;AAAA,UACzB;AACA,qBAAW,KAAK,GAAG,kBAAkB;AACrC;AAAA,QACD;AACA,cAAM;AAAA,MACP;AAAA,IACD;AAEA,WAAO,CAAC,UAAU;AAAA,EACnB;AACD;","names":[]}