{"version":3,"sources":["../../../../../../../nodes/Mattermost/v1/actions/channel/create/execute.ts"],"sourcesContent":["import type { IExecuteFunctions, IDataObject, INodeExecutionData } from 'n8n-workflow';\n\nimport { apiRequest } from '../../../transport';\n\nexport async function create(\n\tthis: IExecuteFunctions,\n\tindex: number,\n): Promise<INodeExecutionData[]> {\n\tconst body = {} as IDataObject;\n\tconst qs = {} as IDataObject;\n\tconst requestMethod = 'POST';\n\tconst endpoint = 'channels';\n\n\tconst type = this.getNodeParameter('type', index) as string;\n\n\tbody.team_id = this.getNodeParameter('teamId', index) as string;\n\tbody.display_name = this.getNodeParameter('displayName', index) as string;\n\tbody.name = this.getNodeParameter('channel', index) as string;\n\tbody.type = type === 'public' ? 'O' : 'P';\n\n\tconst responseData = await apiRequest.call(this, requestMethod, endpoint, body, qs);\n\n\treturn this.helpers.returnJsonArray(responseData as IDataObject[]);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,uBAA2B;AAE3B,eAAsB,OAErB,OACgC;AAChC,QAAM,OAAO,CAAC;AACd,QAAM,KAAK,CAAC;AACZ,QAAM,gBAAgB;AACtB,QAAM,WAAW;AAEjB,QAAM,OAAO,KAAK,iBAAiB,QAAQ,KAAK;AAEhD,OAAK,UAAU,KAAK,iBAAiB,UAAU,KAAK;AACpD,OAAK,eAAe,KAAK,iBAAiB,eAAe,KAAK;AAC9D,OAAK,OAAO,KAAK,iBAAiB,WAAW,KAAK;AAClD,OAAK,OAAO,SAAS,WAAW,MAAM;AAEtC,QAAM,eAAe,MAAM,4BAAW,KAAK,MAAM,eAAe,UAAU,MAAM,EAAE;AAElF,SAAO,KAAK,QAAQ,gBAAgB,YAA6B;AAClE;","names":[]}