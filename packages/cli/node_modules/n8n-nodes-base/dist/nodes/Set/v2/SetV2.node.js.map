{"version":3,"sources":["../../../../nodes/Set/v2/SetV2.node.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeBaseDescription,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes } from 'n8n-workflow';\n\nimport type { IncludeMods, SetField, SetNodeOptions } from './helpers/interfaces';\nimport { INCLUDE } from './helpers/interfaces';\nimport * as manual from './manual.mode';\nimport * as raw from './raw.mode';\n\ntype Mode = 'manual' | 'raw';\n\nconst versionDescription: INodeTypeDescription = {\n\tdisplayName: 'Edit Fields (Set)',\n\tname: 'set',\n\ticonColor: 'blue',\n\tgroup: ['input'],\n\tversion: [3, 3.1, 3.2, 3.3, 3.4],\n\tdescription: 'Modify, add, or remove item fields',\n\tsubtitle: '={{$parameter[\"mode\"]}}',\n\tdefaults: {\n\t\tname: 'Edit Fields',\n\t},\n\tinputs: [NodeConnectionTypes.Main],\n\toutputs: [NodeConnectionTypes.Main],\n\tproperties: [\n\t\t{\n\t\t\tdisplayName: 'Mode',\n\t\t\tname: 'mode',\n\t\t\ttype: 'options',\n\t\t\tnoDataExpression: true,\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\tname: 'Manual Mapping',\n\t\t\t\t\tvalue: 'manual',\n\t\t\t\t\tdescription: 'Edit item fields one by one',\n\t\t\t\t\taction: 'Edit item fields one by one',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'JSON',\n\t\t\t\t\tvalue: 'raw',\n\t\t\t\t\tdescription: 'Customize item output with JSON',\n\t\t\t\t\taction: 'Customize item output with JSON',\n\t\t\t\t},\n\t\t\t],\n\t\t\tdefault: 'manual',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Duplicate Item',\n\t\t\tname: 'duplicateItem',\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tisNodeSetting: true,\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Duplicate Item Count',\n\t\t\tname: 'duplicateCount',\n\t\t\ttype: 'number',\n\t\t\tdefault: 0,\n\t\t\ttypeOptions: {\n\t\t\t\tminValue: 0,\n\t\t\t},\n\t\t\tdescription:\n\t\t\t\t'How many times the item should be duplicated, mainly used for testing and debugging',\n\t\t\tisNodeSetting: true,\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: {\n\t\t\t\t\tduplicateItem: [true],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tdisplayName:\n\t\t\t\t'Item duplication is set in the node settings. This option will be ignored when the workflow runs automatically.',\n\t\t\tname: 'duplicateWarning',\n\t\t\ttype: 'notice',\n\t\t\tdefault: '',\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: {\n\t\t\t\t\tduplicateItem: [true],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t...raw.description,\n\t\t...manual.description,\n\t\t{\n\t\t\tdisplayName: 'Include in Output',\n\t\t\tname: 'include',\n\t\t\ttype: 'options',\n\t\t\tdescription: 'How to select the fields you want to include in your output items',\n\t\t\tdefault: 'all',\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: {\n\t\t\t\t\t'@version': [3, 3.1, 3.2],\n\t\t\t\t},\n\t\t\t},\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\tname: 'All Input Fields',\n\t\t\t\t\tvalue: INCLUDE.ALL,\n\t\t\t\t\tdescription: 'Also include all unchanged fields from the input',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'No Input Fields',\n\t\t\t\t\tvalue: INCLUDE.NONE,\n\t\t\t\t\tdescription: 'Include only the fields specified above',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Selected Input Fields',\n\t\t\t\t\tvalue: INCLUDE.SELECTED,\n\t\t\t\t\tdescription: 'Also include the fields listed in the parameter “Fields to Include”',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'All Input Fields Except',\n\t\t\t\t\tvalue: INCLUDE.EXCEPT,\n\t\t\t\t\tdescription: 'Exclude the fields listed in the parameter “Fields to Exclude”',\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Include Other Input Fields',\n\t\t\tname: 'includeOtherFields',\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tdescription:\n\t\t\t\t\"Whether to pass to the output all the input fields (along with the fields set in 'Fields to Set')\",\n\t\t\tdisplayOptions: {\n\t\t\t\thide: {\n\t\t\t\t\t'@version': [3, 3.1, 3.2],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Input Fields to Include',\n\t\t\tname: 'include',\n\t\t\ttype: 'options',\n\t\t\tdescription: 'How to select the fields you want to include in your output items',\n\t\t\tdefault: 'all',\n\t\t\tdisplayOptions: {\n\t\t\t\thide: {\n\t\t\t\t\t'@version': [3, 3.1, 3.2],\n\t\t\t\t\t'/includeOtherFields': [false],\n\t\t\t\t},\n\t\t\t},\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\tname: 'All',\n\t\t\t\t\tvalue: INCLUDE.ALL,\n\t\t\t\t\tdescription: 'Also include all unchanged fields from the input',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Selected',\n\t\t\t\t\tvalue: INCLUDE.SELECTED,\n\t\t\t\t\tdescription: 'Also include the fields listed in the parameter “Fields to Include”',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'All Except',\n\t\t\t\t\tvalue: INCLUDE.EXCEPT,\n\t\t\t\t\tdescription: 'Exclude the fields listed in the parameter “Fields to Exclude”',\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Fields to Include',\n\t\t\tname: 'includeFields',\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t\tplaceholder: 'e.g. fieldToInclude1,fieldToInclude2',\n\t\t\tdescription:\n\t\t\t\t'Comma-separated list of the field names you want to include in the output. You can drag the selected fields from the input panel.',\n\t\t\trequiresDataPath: 'multiple',\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: {\n\t\t\t\t\tinclude: ['selected'],\n\t\t\t\t\t'@version': [3, 3.1, 3.2],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Fields to Exclude',\n\t\t\tname: 'excludeFields',\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t\tplaceholder: 'e.g. fieldToExclude1,fieldToExclude2',\n\t\t\tdescription:\n\t\t\t\t'Comma-separated list of the field names you want to exclude from the output. You can drag the selected fields from the input panel.',\n\t\t\trequiresDataPath: 'multiple',\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: {\n\t\t\t\t\tinclude: ['except'],\n\t\t\t\t\t'@version': [3, 3.1, 3.2],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Fields to Include',\n\t\t\tname: 'includeFields',\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t\tplaceholder: 'e.g. fieldToInclude1,fieldToInclude2',\n\t\t\tdescription:\n\t\t\t\t'Comma-separated list of the field names you want to include in the output. You can drag the selected fields from the input panel.',\n\t\t\trequiresDataPath: 'multiple',\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: {\n\t\t\t\t\tinclude: ['selected'],\n\t\t\t\t\t'/includeOtherFields': [true],\n\t\t\t\t},\n\t\t\t\thide: {\n\t\t\t\t\t'@version': [3, 3.1, 3.2],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Fields to Exclude',\n\t\t\tname: 'excludeFields',\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t\tplaceholder: 'e.g. fieldToExclude1,fieldToExclude2',\n\t\t\tdescription:\n\t\t\t\t'Comma-separated list of the field names you want to exclude from the output. You can drag the selected fields from the input panel.',\n\t\t\trequiresDataPath: 'multiple',\n\t\t\tdisplayOptions: {\n\t\t\t\tshow: {\n\t\t\t\t\tinclude: ['except'],\n\t\t\t\t\t'/includeOtherFields': [true],\n\t\t\t\t},\n\t\t\t\thide: {\n\t\t\t\t\t'@version': [3, 3.1, 3.2],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Options',\n\t\t\tname: 'options',\n\t\t\ttype: 'collection',\n\t\t\tplaceholder: 'Add option',\n\t\t\tdefault: {},\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\tdisplayName: 'Include Binary File',\n\t\t\t\t\tname: 'includeBinary',\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\thide: {\n\t\t\t\t\t\t\t'@version': [{ _cnd: { gte: 3.4 } }],\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tdescription: 'Whether binary data should be included if present in the input item',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdisplayName: 'Strip Binary Data',\n\t\t\t\t\tname: 'stripBinary',\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\tdescription:\n\t\t\t\t\t\t'Whether binary data should be stripped from the input item. Only applies when \"Include Other Input Fields\" is enabled.',\n\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\t'@version': [{ _cnd: { gte: 3.4 } }],\n\t\t\t\t\t\t\t'/includeOtherFields': [true],\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdisplayName: 'Ignore Type Conversion Errors',\n\t\t\t\t\tname: 'ignoreConversionErrors',\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: false,\n\t\t\t\t\tdescription:\n\t\t\t\t\t\t'Whether to ignore field type errors and apply a less strict type conversion',\n\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\t'/mode': ['manual'],\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdisplayName: 'Support Dot Notation',\n\t\t\t\t\tname: 'dotNotation',\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-description-boolean-without-whether\n\t\t\t\t\tdescription:\n\t\t\t\t\t\t'By default, dot-notation is used in property names. This means that \"a.b\" will set the property \"b\" underneath \"a\" so { \"a\": { \"b\": value} }. If that is not intended this can be deactivated, it will then set { \"a.b\": value } instead.',\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t],\n};\n\nexport class SetV2 implements INodeType {\n\tdescription: INodeTypeDescription;\n\n\tconstructor(baseDescription: INodeTypeBaseDescription) {\n\t\tthis.description = {\n\t\t\t...baseDescription,\n\t\t\t...versionDescription,\n\t\t};\n\t}\n\n\tasync execute(this: IExecuteFunctions) {\n\t\tconst items = this.getInputData();\n\t\tconst mode = this.getNodeParameter('mode', 0) as Mode;\n\t\tconst duplicateItem = this.getNodeParameter('duplicateItem', 0, false) as boolean;\n\n\t\tconst setNode = { raw, manual };\n\n\t\tconst returnData: INodeExecutionData[] = [];\n\n\t\tconst rawData: IDataObject = {};\n\n\t\tif (mode === 'raw') {\n\t\t\tconst jsonOutput = this.getNodeParameter('jsonOutput', 0, '', {\n\t\t\t\trawExpressions: true,\n\t\t\t}) as string | undefined;\n\n\t\t\tif (jsonOutput?.startsWith('=')) {\n\t\t\t\trawData.jsonOutput = jsonOutput.replace(/^=+/, '');\n\t\t\t}\n\t\t} else {\n\t\t\tconst workflowFieldsJson = this.getNodeParameter('fields.values', 0, [], {\n\t\t\t\trawExpressions: true,\n\t\t\t}) as SetField[];\n\n\t\t\tfor (const entry of workflowFieldsJson) {\n\t\t\t\tif (entry.type === 'objectValue' && (entry.objectValue as string).startsWith('=')) {\n\t\t\t\t\trawData[entry.name] = (entry.objectValue as string).replace(/^=+/, '');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\tconst includeOtherFields = this.getNodeParameter('includeOtherFields', i, false) as boolean;\n\t\t\tconst include = this.getNodeParameter('include', i, 'all') as IncludeMods;\n\t\t\tconst options = this.getNodeParameter('options', i, {});\n\t\t\tconst node = this.getNode();\n\n\t\t\tif (node.typeVersion >= 3.3) {\n\t\t\t\toptions.include = includeOtherFields ? include : 'none';\n\t\t\t} else {\n\t\t\t\toptions.include = include;\n\t\t\t}\n\n\t\t\tconst newItem = await setNode[mode].execute.call(\n\t\t\t\tthis,\n\t\t\t\titems[i],\n\t\t\t\ti,\n\t\t\t\toptions as SetNodeOptions,\n\t\t\t\trawData,\n\t\t\t\tnode,\n\t\t\t);\n\n\t\t\tif (duplicateItem && this.getMode() === 'manual') {\n\t\t\t\tconst duplicateCount = this.getNodeParameter('duplicateCount', 0, 0) as number;\n\t\t\t\tfor (let j = 0; j <= duplicateCount; j++) {\n\t\t\t\t\treturnData.push(newItem);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturnData.push(newItem);\n\t\t\t}\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":[]}