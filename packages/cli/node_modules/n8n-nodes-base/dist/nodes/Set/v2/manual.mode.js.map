{"version":3,"sources":["../../../../nodes/Set/v2/manual.mode.ts"],"sourcesContent":["import type {\n\tAssignmentCollectionValue,\n\tFieldType,\n\tIDataObject,\n\tIExecuteFunctions,\n\tINode,\n\tINodeExecutionData,\n\tINodeProperties,\n\tISupplyDataFunctions,\n} from 'n8n-workflow';\nimport { NodeOperationError } from 'n8n-workflow';\n\nimport type { SetField, SetNodeOptions } from './helpers/interfaces';\nimport {\n\tparseJsonParameter,\n\tvalidateEntry,\n\tcomposeReturnItem,\n\tresolveRawData,\n} from './helpers/utils';\nimport { updateDisplayOptions } from '../../../utils/utilities';\n\nconst properties: INodeProperties[] = [\n\t{\n\t\tdisplayName: 'Fields to Set',\n\t\tname: 'fields',\n\t\tplaceholder: 'Add Field',\n\t\ttype: 'fixedCollection',\n\t\tdescription: 'Edit existing fields or add new ones to modify the output data',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\t'@version': [3, 3.1, 3.2],\n\t\t\t},\n\t\t},\n\t\ttypeOptions: {\n\t\t\tmultipleValues: true,\n\t\t\tsortable: true,\n\t\t},\n\t\tdefault: {},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tname: 'values',\n\t\t\t\tdisplayName: 'Values',\n\t\t\t\tvalues: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Name',\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tplaceholder: 'e.g. fieldName',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Name of the field to set the value of. Supports dot-notation. Example: data.person[0].name.',\n\t\t\t\t\t\trequiresDataPath: 'single',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Type',\n\t\t\t\t\t\tname: 'type',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\tdescription: 'The field value type',\n\t\t\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-options-type-unsorted-items\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'String',\n\t\t\t\t\t\t\t\tvalue: 'stringValue',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Number',\n\t\t\t\t\t\t\t\tvalue: 'numberValue',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Boolean',\n\t\t\t\t\t\t\t\tvalue: 'booleanValue',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Array',\n\t\t\t\t\t\t\t\tvalue: 'arrayValue',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Object',\n\t\t\t\t\t\t\t\tvalue: 'objectValue',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: 'stringValue',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Value',\n\t\t\t\t\t\tname: 'stringValue',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\t\ttype: ['stringValue'],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tvalidateType: 'string',\n\t\t\t\t\t\tignoreValidationDuringExecution: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Value',\n\t\t\t\t\t\tname: 'numberValue',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\t\ttype: ['numberValue'],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tvalidateType: 'number',\n\t\t\t\t\t\tignoreValidationDuringExecution: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Value',\n\t\t\t\t\t\tname: 'booleanValue',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\tdefault: 'true',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'True',\n\t\t\t\t\t\t\t\tvalue: 'true',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'False',\n\t\t\t\t\t\t\t\tvalue: 'false',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\t\ttype: ['booleanValue'],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tvalidateType: 'boolean',\n\t\t\t\t\t\tignoreValidationDuringExecution: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Value',\n\t\t\t\t\t\tname: 'arrayValue',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tplaceholder: 'e.g. [ arrayItem1, arrayItem2, arrayItem3 ]',\n\t\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\t\ttype: ['arrayValue'],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tvalidateType: 'array',\n\t\t\t\t\t\tignoreValidationDuringExecution: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Value',\n\t\t\t\t\t\tname: 'objectValue',\n\t\t\t\t\t\ttype: 'json',\n\t\t\t\t\t\tdefault: '={}',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\trows: 2,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\t\ttype: ['objectValue'],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tvalidateType: 'object',\n\t\t\t\t\t\tignoreValidationDuringExecution: true,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tdisplayName: 'Fields to Set',\n\t\tname: 'assignments',\n\t\ttype: 'assignmentCollection',\n\t\tdisplayOptions: {\n\t\t\thide: {\n\t\t\t\t'@version': [3, 3.1, 3.2],\n\t\t\t},\n\t\t},\n\t\tdefault: {},\n\t},\n];\n\nconst displayOptions = {\n\tshow: {\n\t\tmode: ['manual'],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n\nexport async function execute(\n\tthis: IExecuteFunctions | ISupplyDataFunctions,\n\titem: INodeExecutionData,\n\ti: number,\n\toptions: SetNodeOptions,\n\trawFieldsData: IDataObject,\n\tnode: INode,\n) {\n\ttry {\n\t\tif (node.typeVersion < 3.3) {\n\t\t\tconst fields = this.getNodeParameter('fields.values', i, []) as SetField[];\n\n\t\t\tconst newData: IDataObject = {};\n\n\t\t\tfor (const entry of fields) {\n\t\t\t\tif (\n\t\t\t\t\tentry.type === 'objectValue' &&\n\t\t\t\t\trawFieldsData[entry.name] !== undefined &&\n\t\t\t\t\tentry.objectValue !== undefined &&\n\t\t\t\t\tentry.objectValue !== null\n\t\t\t\t) {\n\t\t\t\t\tentry.objectValue = parseJsonParameter(\n\t\t\t\t\t\tresolveRawData.call(this, rawFieldsData[entry.name] as string, i),\n\t\t\t\t\t\tnode,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tentry.name,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst { name, value } = validateEntry(\n\t\t\t\t\tentry.name,\n\t\t\t\t\tentry.type.replace('Value', '') as FieldType,\n\t\t\t\t\tentry[entry.type],\n\t\t\t\t\tnode,\n\t\t\t\t\ti,\n\t\t\t\t\toptions.ignoreConversionErrors,\n\t\t\t\t\tnode.typeVersion,\n\t\t\t\t);\n\t\t\t\tnewData[name] = value;\n\t\t\t}\n\n\t\t\treturn composeReturnItem.call(this, i, item, newData, options, node.typeVersion);\n\t\t}\n\n\t\tconst assignmentCollection = this.getNodeParameter(\n\t\t\t'assignments',\n\t\t\ti,\n\t\t) as AssignmentCollectionValue;\n\t\tconst newData = Object.fromEntries(\n\t\t\t(assignmentCollection?.assignments ?? []).map((assignment) => {\n\t\t\t\tconst { name, value } = validateEntry(\n\t\t\t\t\tassignment.name,\n\t\t\t\t\tassignment.type as FieldType,\n\t\t\t\t\tassignment.value,\n\t\t\t\t\tnode,\n\t\t\t\t\ti,\n\t\t\t\t\toptions.ignoreConversionErrors,\n\t\t\t\t\tnode.typeVersion,\n\t\t\t\t);\n\n\t\t\t\treturn [name, value];\n\t\t\t}),\n\t\t);\n\t\treturn composeReturnItem.call(this, i, item, newData, options, node.typeVersion);\n\t} catch (error) {\n\t\tif (this.continueOnFail()) {\n\t\t\treturn { json: { error: (error as Error).message, pairedItem: { item: i } } };\n\t\t}\n\t\tthrow new NodeOperationError(this.getNode(), error as Error, {\n\t\t\titemIndex: i,\n\t\t\tdescription: error.description,\n\t\t});\n\t}\n}\n"],"mappings":"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","names":["newData"]}