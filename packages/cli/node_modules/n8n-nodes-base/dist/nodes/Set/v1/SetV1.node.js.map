{"version":3,"sources":["../../../../nodes/Set/v1/SetV1.node.ts"],"sourcesContent":["import set from 'lodash/set';\nimport type {\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tINodeParameters,\n\tINodeType,\n\tINodeTypeBaseDescription,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, deepCopy } from 'n8n-workflow';\n\nconst versionDescription: INodeTypeDescription = {\n\tdisplayName: 'Set',\n\tname: 'set',\n\ticon: 'fa:pen',\n\tgroup: ['input'],\n\tversion: [1, 2],\n\tdescription: 'Sets values on items and optionally remove other values',\n\tdefaults: {\n\t\tname: 'Set',\n\t\tcolor: '#0000FF',\n\t},\n\tinputs: [NodeConnectionTypes.Main],\n\toutputs: [NodeConnectionTypes.Main],\n\tproperties: [\n\t\t{\n\t\t\tdisplayName: 'Keep Only Set',\n\t\t\tname: 'keepOnlySet',\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t\tdescription: 'Whether only the values set on this node should be kept and all others removed',\n\t\t},\n\t\t{\n\t\t\tdisplayName: 'Values to Set',\n\t\t\tname: 'values',\n\t\t\tplaceholder: 'Add Value',\n\t\t\ttype: 'fixedCollection',\n\t\t\ttypeOptions: {\n\t\t\t\tmultipleValues: true,\n\t\t\t\tsortable: true,\n\t\t\t},\n\t\t\tdescription: 'The value to set',\n\t\t\tdefault: {},\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\tname: 'boolean',\n\t\t\t\t\tdisplayName: 'Boolean',\n\t\t\t\t\tvalues: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdisplayName: 'Name',\n\t\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\trequiresDataPath: 'single',\n\t\t\t\t\t\t\tdefault: 'propertyName',\n\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t'Name of the property to write data to. Supports dot-notation. Example: \"data.person[0].name\"',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdisplayName: 'Value',\n\t\t\t\t\t\t\tname: 'value',\n\t\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-description-boolean-without-whether\n\t\t\t\t\t\t\tdescription: 'The boolean value to write in the property',\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'number',\n\t\t\t\t\tdisplayName: 'Number',\n\t\t\t\t\tvalues: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdisplayName: 'Name',\n\t\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\tdefault: 'propertyName',\n\t\t\t\t\t\t\trequiresDataPath: 'single',\n\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t'Name of the property to write data to. Supports dot-notation. Example: \"data.person[0].name\"',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdisplayName: 'Value',\n\t\t\t\t\t\t\tname: 'value',\n\t\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\t\tdefault: 0,\n\t\t\t\t\t\t\tdescription: 'The number value to write in the property',\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'string',\n\t\t\t\t\tdisplayName: 'String',\n\t\t\t\t\tvalues: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdisplayName: 'Name',\n\t\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\tdefault: 'propertyName',\n\t\t\t\t\t\t\trequiresDataPath: 'single',\n\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t'Name of the property to write data to. Supports dot-notation. Example: \"data.person[0].name\"',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdisplayName: 'Value',\n\t\t\t\t\t\t\tname: 'value',\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\tdescription: 'The string value to write in the property',\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\n\t\t{\n\t\t\tdisplayName: 'Options',\n\t\t\tname: 'options',\n\t\t\ttype: 'collection',\n\t\t\tplaceholder: 'Add option',\n\t\t\tdefault: {},\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\tdisplayName: 'Dot Notation',\n\t\t\t\t\tname: 'dotNotation',\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: true,\n\t\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-description-boolean-without-whether\n\t\t\t\t\tdescription:\n\t\t\t\t\t\t'<p>By default, dot-notation is used in property names. This means that \"a.b\" will set the property \"b\" underneath \"a\" so { \"a\": { \"b\": value} }.<p></p>If that is not intended this can be deactivated, it will then set { \"a.b\": value } instead.</p>.',\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t],\n};\n\nexport class SetV1 implements INodeType {\n\tdescription: INodeTypeDescription;\n\n\tconstructor(baseDescription: INodeTypeBaseDescription) {\n\t\tthis.description = {\n\t\t\t...baseDescription,\n\t\t\t...versionDescription,\n\t\t};\n\t}\n\n\tasync execute(this: IExecuteFunctions) {\n\t\tconst items = this.getInputData();\n\t\tconst nodeVersion = this.getNode().typeVersion;\n\n\t\tif (items.length === 0) {\n\t\t\titems.push({ json: {}, pairedItem: { item: 0 } });\n\t\t}\n\n\t\tconst returnData: INodeExecutionData[] = [];\n\n\t\tlet item: INodeExecutionData;\n\t\tlet keepOnlySet: boolean;\n\t\tfor (let itemIndex = 0; itemIndex < items.length; itemIndex++) {\n\t\t\tkeepOnlySet = this.getNodeParameter('keepOnlySet', itemIndex, false) as boolean;\n\t\t\titem = items[itemIndex];\n\t\t\tconst options = this.getNodeParameter('options', itemIndex, {});\n\n\t\t\tconst newItem: INodeExecutionData = {\n\t\t\t\tjson: {},\n\t\t\t\tpairedItem: { item: itemIndex },\n\t\t\t};\n\n\t\t\tif (!keepOnlySet) {\n\t\t\t\tif (item.binary !== undefined) {\n\t\t\t\t\t// Create a shallow copy of the binary data so that the old\n\t\t\t\t\t// data references which do not get changed still stay behind\n\t\t\t\t\t// but the incoming data does not get changed.\n\t\t\t\t\tnewItem.binary = {};\n\t\t\t\t\tObject.assign(newItem.binary, item.binary);\n\t\t\t\t}\n\n\t\t\t\tnewItem.json = deepCopy(item.json);\n\t\t\t}\n\n\t\t\t// Add boolean values\n\t\t\t(this.getNodeParameter('values.boolean', itemIndex, []) as INodeParameters[]).forEach(\n\t\t\t\t(setItem) => {\n\t\t\t\t\tif (options.dotNotation === false) {\n\t\t\t\t\t\tnewItem.json[setItem.name as string] = !!setItem.value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tset(newItem.json, setItem.name as string, !!setItem.value);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\n\t\t\t// Add number values\n\t\t\t(this.getNodeParameter('values.number', itemIndex, []) as INodeParameters[]).forEach(\n\t\t\t\t(setItem) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tnodeVersion >= 2 &&\n\t\t\t\t\t\ttypeof setItem.value === 'string' &&\n\t\t\t\t\t\t!Number.isNaN(Number(setItem.value))\n\t\t\t\t\t) {\n\t\t\t\t\t\tsetItem.value = Number(setItem.value);\n\t\t\t\t\t}\n\t\t\t\t\tif (options.dotNotation === false) {\n\t\t\t\t\t\tnewItem.json[setItem.name as string] = setItem.value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tset(newItem.json, setItem.name as string, setItem.value);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\n\t\t\t// Add string values\n\t\t\t(this.getNodeParameter('values.string', itemIndex, []) as INodeParameters[]).forEach(\n\t\t\t\t(setItem) => {\n\t\t\t\t\tif (options.dotNotation === false) {\n\t\t\t\t\t\tnewItem.json[setItem.name as string] = setItem.value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tset(newItem.json, setItem.name as string, setItem.value);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\n\t\t\treturnData.push(newItem);\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAgB;AAShB,0BAA8C;AAE9C,MAAM,qBAA2C;AAAA,EAChD,aAAa;AAAA,EACb,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO,CAAC,OAAO;AAAA,EACf,SAAS,CAAC,GAAG,CAAC;AAAA,EACd,aAAa;AAAA,EACb,UAAU;AAAA,IACT,MAAM;AAAA,IACN,OAAO;AAAA,EACR;AAAA,EACA,QAAQ,CAAC,wCAAoB,IAAI;AAAA,EACjC,SAAS,CAAC,wCAAoB,IAAI;AAAA,EAClC,YAAY;AAAA,IACX;AAAA,MACC,aAAa;AAAA,MACb,MAAM;AAAA,MACN,MAAM;AAAA,MACN,SAAS;AAAA,MACT,aAAa;AAAA,IACd;AAAA,IACA;AAAA,MACC,aAAa;AAAA,MACb,MAAM;AAAA,MACN,aAAa;AAAA,MACb,MAAM;AAAA,MACN,aAAa;AAAA,QACZ,gBAAgB;AAAA,QAChB,UAAU;AAAA,MACX;AAAA,MACA,aAAa;AAAA,MACb,SAAS,CAAC;AAAA,MACV,SAAS;AAAA,QACR;AAAA,UACC,MAAM;AAAA,UACN,aAAa;AAAA,UACb,QAAQ;AAAA,YACP;AAAA,cACC,aAAa;AAAA,cACb,MAAM;AAAA,cACN,MAAM;AAAA,cACN,kBAAkB;AAAA,cAClB,SAAS;AAAA,cACT,aACC;AAAA,YACF;AAAA,YACA;AAAA,cACC,aAAa;AAAA,cACb,MAAM;AAAA,cACN,MAAM;AAAA,cACN,SAAS;AAAA;AAAA,cAET,aAAa;AAAA,YACd;AAAA,UACD;AAAA,QACD;AAAA,QACA;AAAA,UACC,MAAM;AAAA,UACN,aAAa;AAAA,UACb,QAAQ;AAAA,YACP;AAAA,cACC,aAAa;AAAA,cACb,MAAM;AAAA,cACN,MAAM;AAAA,cACN,SAAS;AAAA,cACT,kBAAkB;AAAA,cAClB,aACC;AAAA,YACF;AAAA,YACA;AAAA,cACC,aAAa;AAAA,cACb,MAAM;AAAA,cACN,MAAM;AAAA,cACN,SAAS;AAAA,cACT,aAAa;AAAA,YACd;AAAA,UACD;AAAA,QACD;AAAA,QACA;AAAA,UACC,MAAM;AAAA,UACN,aAAa;AAAA,UACb,QAAQ;AAAA,YACP;AAAA,cACC,aAAa;AAAA,cACb,MAAM;AAAA,cACN,MAAM;AAAA,cACN,SAAS;AAAA,cACT,kBAAkB;AAAA,cAClB,aACC;AAAA,YACF;AAAA,YACA;AAAA,cACC,aAAa;AAAA,cACb,MAAM;AAAA,cACN,MAAM;AAAA,cACN,SAAS;AAAA,cACT,aAAa;AAAA,YACd;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,IAEA;AAAA,MACC,aAAa;AAAA,MACb,MAAM;AAAA,MACN,MAAM;AAAA,MACN,aAAa;AAAA,MACb,SAAS,CAAC;AAAA,MACV,SAAS;AAAA,QACR;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,SAAS;AAAA;AAAA,UAET,aACC;AAAA,QACF;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;AAEO,MAAM,MAA2B;AAAA,EAGvC,YAAY,iBAA2C;AACtD,SAAK,cAAc;AAAA,MAClB,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,EACD;AAAA,EAEA,MAAM,UAAiC;AACtC,UAAM,QAAQ,KAAK,aAAa;AAChC,UAAM,cAAc,KAAK,QAAQ,EAAE;AAEnC,QAAI,MAAM,WAAW,GAAG;AACvB,YAAM,KAAK,EAAE,MAAM,CAAC,GAAG,YAAY,EAAE,MAAM,EAAE,EAAE,CAAC;AAAA,IACjD;AAEA,UAAM,aAAmC,CAAC;AAE1C,QAAI;AACJ,QAAI;AACJ,aAAS,YAAY,GAAG,YAAY,MAAM,QAAQ,aAAa;AAC9D,oBAAc,KAAK,iBAAiB,eAAe,WAAW,KAAK;AACnE,aAAO,MAAM,SAAS;AACtB,YAAM,UAAU,KAAK,iBAAiB,WAAW,WAAW,CAAC,CAAC;AAE9D,YAAM,UAA8B;AAAA,QACnC,MAAM,CAAC;AAAA,QACP,YAAY,EAAE,MAAM,UAAU;AAAA,MAC/B;AAEA,UAAI,CAAC,aAAa;AACjB,YAAI,KAAK,WAAW,QAAW;AAI9B,kBAAQ,SAAS,CAAC;AAClB,iBAAO,OAAO,QAAQ,QAAQ,KAAK,MAAM;AAAA,QAC1C;AAEA,gBAAQ,WAAO,8BAAS,KAAK,IAAI;AAAA,MAClC;AAGA,MAAC,KAAK,iBAAiB,kBAAkB,WAAW,CAAC,CAAC,EAAwB;AAAA,QAC7E,CAAC,YAAY;AACZ,cAAI,QAAQ,gBAAgB,OAAO;AAClC,oBAAQ,KAAK,QAAQ,IAAc,IAAI,CAAC,CAAC,QAAQ;AAAA,UAClD,OAAO;AACN,2BAAAA,SAAI,QAAQ,MAAM,QAAQ,MAAgB,CAAC,CAAC,QAAQ,KAAK;AAAA,UAC1D;AAAA,QACD;AAAA,MACD;AAGA,MAAC,KAAK,iBAAiB,iBAAiB,WAAW,CAAC,CAAC,EAAwB;AAAA,QAC5E,CAAC,YAAY;AACZ,cACC,eAAe,KACf,OAAO,QAAQ,UAAU,YACzB,CAAC,OAAO,MAAM,OAAO,QAAQ,KAAK,CAAC,GAClC;AACD,oBAAQ,QAAQ,OAAO,QAAQ,KAAK;AAAA,UACrC;AACA,cAAI,QAAQ,gBAAgB,OAAO;AAClC,oBAAQ,KAAK,QAAQ,IAAc,IAAI,QAAQ;AAAA,UAChD,OAAO;AACN,2BAAAA,SAAI,QAAQ,MAAM,QAAQ,MAAgB,QAAQ,KAAK;AAAA,UACxD;AAAA,QACD;AAAA,MACD;AAGA,MAAC,KAAK,iBAAiB,iBAAiB,WAAW,CAAC,CAAC,EAAwB;AAAA,QAC5E,CAAC,YAAY;AACZ,cAAI,QAAQ,gBAAgB,OAAO;AAClC,oBAAQ,KAAK,QAAQ,IAAc,IAAI,QAAQ;AAAA,UAChD,OAAO;AACN,2BAAAA,SAAI,QAAQ,MAAM,QAAQ,MAAgB,QAAQ,KAAK;AAAA,UACxD;AAAA,QACD;AAAA,MACD;AAEA,iBAAW,KAAK,OAAO;AAAA,IACxB;AAEA,WAAO,CAAC,UAAU;AAAA,EACnB;AACD;","names":["set"]}