{"version":3,"sources":["../../../nodes/Affinity/AffinityTrigger.node.ts"],"sourcesContent":["import type {\n\tIHookFunctions,\n\tIWebhookFunctions,\n\tIDataObject,\n\tINodeType,\n\tINodeTypeDescription,\n\tIWebhookResponseData,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport { affinityApiRequest, eventsExist, mapResource } from './GenericFunctions';\n\nexport class AffinityTrigger implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Affinity Trigger',\n\t\tname: 'affinityTrigger',\n\t\ticon: { light: 'file:affinity.svg', dark: 'file:affinity.dark.svg' },\n\t\tgroup: ['trigger'],\n\t\tversion: 1,\n\t\tdescription: 'Handle Affinity events via webhooks',\n\t\tdefaults: {\n\t\t\tname: 'Affinity Trigger',\n\t\t},\n\t\tinputs: [],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'affinityApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\twebhooks: [\n\t\t\t{\n\t\t\t\tname: 'default',\n\t\t\t\thttpMethod: 'POST',\n\t\t\t\tresponseMode: 'onReceived',\n\t\t\t\tpath: 'webhook',\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Events',\n\t\t\t\tname: 'events',\n\t\t\t\ttype: 'multiOptions',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'field_value.created',\n\t\t\t\t\t\tvalue: 'field_value.created',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'field_value.deleted',\n\t\t\t\t\t\tvalue: 'field_value.deleted',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'field_value.updated',\n\t\t\t\t\t\tvalue: 'field_value.updated',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'field.created',\n\t\t\t\t\t\tvalue: 'field.created',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'field.deleted',\n\t\t\t\t\t\tvalue: 'field.deleted',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'field.updated',\n\t\t\t\t\t\tvalue: 'field.updated',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'file.created',\n\t\t\t\t\t\tvalue: 'file.created',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'file.deleted',\n\t\t\t\t\t\tvalue: 'file.deleted',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'list_entry.created',\n\t\t\t\t\t\tvalue: 'list_entry.created',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'list_entry.deleted',\n\t\t\t\t\t\tvalue: 'list_entry.deleted',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'list.created',\n\t\t\t\t\t\tvalue: 'list.created',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'list.deleted',\n\t\t\t\t\t\tvalue: 'list.deleted',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'list.updated',\n\t\t\t\t\t\tvalue: 'list.updated',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'note.created',\n\t\t\t\t\t\tvalue: 'note.created',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'note.deleted',\n\t\t\t\t\t\tvalue: 'note.deleted',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'note.updated',\n\t\t\t\t\t\tvalue: 'note.updated',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'opportunity.created',\n\t\t\t\t\t\tvalue: 'opportunity.created',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'opportunity.deleted',\n\t\t\t\t\t\tvalue: 'opportunity.deleted',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'opportunity.updated',\n\t\t\t\t\t\tvalue: 'opportunity.updated',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'organization.created',\n\t\t\t\t\t\tvalue: 'organization.created',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'organization.deleted',\n\t\t\t\t\t\tvalue: 'organization.deleted',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'organization.updated',\n\t\t\t\t\t\tvalue: 'organization.updated',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'person.created',\n\t\t\t\t\t\tvalue: 'person.created',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'person.deleted',\n\t\t\t\t\t\tvalue: 'person.deleted',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'person.updated',\n\t\t\t\t\t\tvalue: 'person.updated',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: [],\n\t\t\t\trequired: true,\n\t\t\t\tdescription: 'Webhook events that will be enabled for that endpoint',\n\t\t\t},\n\t\t],\n\t};\n\n\twebhookMethods = {\n\t\tdefault: {\n\t\t\tasync checkExists(this: IHookFunctions): Promise<boolean> {\n\t\t\t\t// Check all the webhooks which exist already if it is identical to the\n\t\t\t\t// one that is supposed to get created.\n\t\t\t\tconst endpoint = '/webhook';\n\n\t\t\t\tconst responseData = await affinityApiRequest.call(this, 'GET', endpoint, {});\n\n\t\t\t\tconst webhookUrl = this.getNodeWebhookUrl('default');\n\n\t\t\t\tconst events = this.getNodeParameter('events') as string[];\n\n\t\t\t\tfor (const webhook of responseData) {\n\t\t\t\t\tif (\n\t\t\t\t\t\teventsExist(webhook.subscriptions as string[], events) &&\n\t\t\t\t\t\twebhook.webhook_url === webhookUrl\n\t\t\t\t\t) {\n\t\t\t\t\t\t// Set webhook-id to be sure that it can be deleted\n\t\t\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\t\t\twebhookData.webhookId = webhook.id as string;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tasync create(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookUrl = this.getNodeWebhookUrl('default') as string;\n\n\t\t\t\tif (webhookUrl.includes('%20')) {\n\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t'The name of the Affinity Trigger Node is not allowed to contain any spaces!',\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst events = this.getNodeParameter('events') as string[];\n\n\t\t\t\tconst endpoint = '/webhook/subscribe';\n\n\t\t\t\tconst body = {\n\t\t\t\t\twebhook_url: webhookUrl,\n\t\t\t\t\tsubscriptions: events,\n\t\t\t\t};\n\n\t\t\t\tconst responseData = await affinityApiRequest.call(this, 'POST', endpoint, body);\n\n\t\t\t\tif (responseData.id === undefined) {\n\t\t\t\t\t// Required data is missing so was not successful\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\twebhookData.webhookId = responseData.id as string;\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tasync delete(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tif (webhookData.webhookId !== undefined) {\n\t\t\t\t\tconst endpoint = `/webhook/${webhookData.webhookId}`;\n\n\t\t\t\t\tconst responseData = await affinityApiRequest.call(this, 'DELETE', endpoint);\n\n\t\t\t\t\tif (!responseData.success) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t// Remove from the static workflow data so that it is clear\n\t\t\t\t\t// that no webhooks are registered anymore\n\t\t\t\t\tdelete webhookData.webhookId;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync webhook(this: IWebhookFunctions): Promise<IWebhookResponseData> {\n\t\tconst bodyData = this.getBodyData();\n\n\t\tif (bodyData.type === 'sample.webhook') {\n\t\t\treturn {};\n\t\t}\n\n\t\tlet responseData: IDataObject = {};\n\n\t\tif (bodyData.type && bodyData.body) {\n\t\t\tconst resource = (bodyData.type as string).split('.')[0];\n\t\t\t//@ts-ignore\n\t\t\tconst id = bodyData.body.id;\n\t\t\tresponseData = await affinityApiRequest.call(this, 'GET', `/${mapResource(resource)}/${id}`);\n\t\t\tresponseData.type = bodyData.type;\n\t\t}\n\n\t\treturn {\n\t\t\tworkflowData: [this.helpers.returnJsonArray(responseData)],\n\t\t};\n\t}\n}\n"],"mappings":"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","names":[]}