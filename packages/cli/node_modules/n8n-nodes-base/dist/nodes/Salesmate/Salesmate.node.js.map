{"version":3,"sources":["../../../nodes/Salesmate/Salesmate.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport { activityFields, activityOperations } from './ActivityDescription';\nimport type { IActivity } from './ActivityInterface';\nimport { companyFields, companyOperations } from './CompanyDescription';\nimport type { ICompany } from './CompanyInterface';\nimport { dealFields, dealOperations } from './DealDescription';\nimport type { IDeal } from './DealInterface';\nimport {\n\tsalesmateApiRequest,\n\tsalesmateApiRequestAllItems,\n\tsimplifySalesmateData,\n\tvalidateJSON,\n} from './GenericFunctions';\n\nexport class Salesmate implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Salesmate',\n\t\tname: 'salesmate',\n\t\t// eslint-disable-next-line n8n-nodes-base/node-class-description-icon-not-svg\n\t\ticon: 'file:salesmate.png',\n\t\tgroup: ['output'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \":\" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume Salesmate API',\n\t\tdefaults: {\n\t\t\tname: 'Salesmate',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'salesmateApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Activity',\n\t\t\t\t\t\tvalue: 'activity',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Company',\n\t\t\t\t\t\tvalue: 'company',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Deal',\n\t\t\t\t\t\tvalue: 'deal',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'activity',\n\t\t\t},\n\t\t\t...companyOperations,\n\t\t\t...activityOperations,\n\t\t\t...dealOperations,\n\t\t\t...companyFields,\n\t\t\t...activityFields,\n\t\t\t...dealFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get all the available users to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getUsers(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst users = await salesmateApiRequest.call(this, 'GET', '/v1/users/active');\n\t\t\t\tfor (const user of users.Data) {\n\t\t\t\t\tconst userName = user.nickname;\n\t\t\t\t\tconst userId = user.id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: userName,\n\t\t\t\t\t\tvalue: userId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the available contacs to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getContacts(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst qs: IDataObject = {\n\t\t\t\t\tfields: ['name', 'id'],\n\t\t\t\t\tquery: {},\n\t\t\t\t};\n\t\t\t\tconst contacts = await salesmateApiRequest.call(this, 'POST', '/v2/contacts/search', qs);\n\t\t\t\tfor (const contact of contacts.Data.data) {\n\t\t\t\t\tconst contactName = contact.name;\n\t\t\t\t\tconst contactId = contact.id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: contactName,\n\t\t\t\t\t\tvalue: contactId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the available companies to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getCompanies(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst qs: IDataObject = {\n\t\t\t\t\tfields: ['name', 'id'],\n\t\t\t\t\tquery: {},\n\t\t\t\t};\n\t\t\t\tconst companies = await salesmateApiRequest.call(this, 'POST', '/v2/companies/search', qs);\n\t\t\t\tfor (const company of companies.Data.data) {\n\t\t\t\t\tconst companyName = company.name;\n\t\t\t\t\tconst companyId = company.id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: companyName,\n\t\t\t\t\t\tvalue: companyId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst length = items.length;\n\t\tconst qs: IDataObject = {};\n\t\tlet responseData;\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tif (resource === 'company') {\n\t\t\t\tif (operation === 'create') {\n\t\t\t\t\tconst owner = this.getNodeParameter('owner', i) as number;\n\t\t\t\t\tconst name = this.getNodeParameter('name', i) as string;\n\t\t\t\t\tconst rawData = this.getNodeParameter('rawData', i);\n\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\tconst body: ICompany = {\n\t\t\t\t\t\tname,\n\t\t\t\t\t\towner,\n\t\t\t\t\t};\n\t\t\t\t\tif (additionalFields.website) {\n\t\t\t\t\t\tbody.website = additionalFields.website as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (additionalFields.phone) {\n\t\t\t\t\t\tbody.phone = additionalFields.phone as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (additionalFields.otherPhone) {\n\t\t\t\t\t\tbody.otherPhone = additionalFields.otherPhone as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (additionalFields.facebookHandle) {\n\t\t\t\t\t\tbody.facebookHandle = additionalFields.facebookHandle as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (additionalFields.googlePlusHandle) {\n\t\t\t\t\t\tbody.googlePlusHandle = additionalFields.googlePlusHandle as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (additionalFields.linkedInHandle) {\n\t\t\t\t\t\tbody.linkedInHandle = additionalFields.linkedInHandle as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (additionalFields.skypeId) {\n\t\t\t\t\t\tbody.skypeId = additionalFields.skypeId as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (additionalFields.twitterHandle) {\n\t\t\t\t\t\tbody.twitterHandle = additionalFields.twitterHandle as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (additionalFields.currency) {\n\t\t\t\t\t\tbody.currency = additionalFields.currency as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (additionalFields.billingAddressLine1) {\n\t\t\t\t\t\tbody.billingAddressLine1 = additionalFields.billingAddressLine1 as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (additionalFields.billingAddressLine2) {\n\t\t\t\t\t\tbody.billingAddressLine2 = additionalFields.billingAddressLine2 as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (additionalFields.billingCity) {\n\t\t\t\t\t\tbody.billingCity = additionalFields.billingCity as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (additionalFields.billingZipCode) {\n\t\t\t\t\t\tbody.billingZipCode = additionalFields.billingZipCode as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (additionalFields.billingState) {\n\t\t\t\t\t\tbody.billingState = additionalFields.billingState as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (additionalFields.description) {\n\t\t\t\t\t\tbody.description = additionalFields.description as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (additionalFields.tags) {\n\t\t\t\t\t\tbody.tags = additionalFields.tags as string;\n\t\t\t\t\t}\n\t\t\t\t\tresponseData = await salesmateApiRequest.call(this, 'POST', '/v1/companies', body);\n\t\t\t\t\tresponseData = responseData.Data;\n\t\t\t\t\tif (!rawData) {\n\t\t\t\t\t\tdelete responseData.detail;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (operation === 'update') {\n\t\t\t\t\tconst companyId = this.getNodeParameter('id', i) as string;\n\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\tconst rawData = this.getNodeParameter('rawData', i);\n\t\t\t\t\tconst body: ICompany = {};\n\t\t\t\t\tif (updateFields.owner) {\n\t\t\t\t\t\tbody.owner = updateFields.owner as number;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.name) {\n\t\t\t\t\t\tbody.name = updateFields.name as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.website) {\n\t\t\t\t\t\tbody.website = updateFields.website as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.phone) {\n\t\t\t\t\t\tbody.phone = updateFields.phone as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.otherPhone) {\n\t\t\t\t\t\tbody.otherPhone = updateFields.otherPhone as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.facebookHandle) {\n\t\t\t\t\t\tbody.facebookHandle = updateFields.facebookHandle as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.googlePlusHandle) {\n\t\t\t\t\t\tbody.googlePlusHandle = updateFields.googlePlusHandle as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.linkedInHandle) {\n\t\t\t\t\t\tbody.linkedInHandle = updateFields.linkedInHandle as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.skypeId) {\n\t\t\t\t\t\tbody.skypeId = updateFields.skypeId as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.twitterHandle) {\n\t\t\t\t\t\tbody.twitterHandle = updateFields.twitterHandle as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.currency) {\n\t\t\t\t\t\tbody.currency = updateFields.currency as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.billingAddressLine1) {\n\t\t\t\t\t\tbody.billingAddressLine1 = updateFields.billingAddressLine1 as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.billingAddressLine2) {\n\t\t\t\t\t\tbody.billingAddressLine2 = updateFields.billingAddressLine2 as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.billingCity) {\n\t\t\t\t\t\tbody.billingCity = updateFields.billingCity as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.billingZipCode) {\n\t\t\t\t\t\tbody.billingZipCode = updateFields.billingZipCode as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.billingState) {\n\t\t\t\t\t\tbody.billingState = updateFields.billingState as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.description) {\n\t\t\t\t\t\tbody.description = updateFields.description as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.tags) {\n\t\t\t\t\t\tbody.tags = updateFields.tags as string;\n\t\t\t\t\t}\n\t\t\t\t\tresponseData = await salesmateApiRequest.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t`/v1/companies/${companyId}`,\n\t\t\t\t\t\tbody,\n\t\t\t\t\t);\n\t\t\t\t\tresponseData = responseData.Data;\n\t\t\t\t\tif (!rawData) {\n\t\t\t\t\t\tdelete responseData.detail;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (operation === 'get') {\n\t\t\t\t\tconst companyId = this.getNodeParameter('id', i) as string;\n\t\t\t\t\tconst rawData = this.getNodeParameter('rawData', i);\n\t\t\t\t\tresponseData = await salesmateApiRequest.call(this, 'GET', `/v1/companies/${companyId}`);\n\t\t\t\t\tresponseData = responseData.Data;\n\n\t\t\t\t\tif (!rawData) {\n\t\t\t\t\t\tresponseData = simplifySalesmateData(responseData as IDataObject[]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\tconst jsonActive = this.getNodeParameter('jsonParameters', i);\n\t\t\t\t\tlet body: IDataObject = {\n\t\t\t\t\t\tquery: {\n\t\t\t\t\t\t\tgroup: {},\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t\tif (options.sortBy) {\n\t\t\t\t\t\tqs.sortBy = options.sortBy as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (options.sortOrder) {\n\t\t\t\t\t\tqs.sortOrder = options.sortOrder as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (options.fields) {\n\t\t\t\t\t\tif ((options.fields as string).trim() === '') {\n\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'You have to add at least one field', {\n\t\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbody.fields = (options.fields as string).split(',');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody.fields = [\n\t\t\t\t\t\t\t'name',\n\t\t\t\t\t\t\t'description',\n\t\t\t\t\t\t\t'billingAddressLine1',\n\t\t\t\t\t\t\t'billingAddressLine2',\n\t\t\t\t\t\t\t'billingCity',\n\t\t\t\t\t\t\t'billingZipCode',\n\t\t\t\t\t\t\t'billingState',\n\t\t\t\t\t\t\t'billingCountry',\n\t\t\t\t\t\t\t'website',\n\t\t\t\t\t\t\t'owner',\n\t\t\t\t\t\t\t'tags',\n\t\t\t\t\t\t\t'photo',\n\t\t\t\t\t\t\t'createdAt',\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\t\t\t\t\tif (!jsonActive) {\n\t\t\t\t\t\tconst filters: IDataObject[] = [];\n\t\t\t\t\t\tconst filtersUi = this.getNodeParameter('filters', i).filtersUi as IDataObject;\n\t\t\t\t\t\tif (filtersUi?.conditions) {\n\t\t\t\t\t\t\tconst conditions = filtersUi.conditions as IDataObject;\n\t\t\t\t\t\t\tif (conditions.conditionsUi) {\n\t\t\t\t\t\t\t\tfor (const condition of conditions.conditionsUi as IDataObject[]) {\n\t\t\t\t\t\t\t\t\tconst filter: IDataObject = {};\n\t\t\t\t\t\t\t\t\tfilter.moduleName = 'Company';\n\t\t\t\t\t\t\t\t\tfilter.field = {\n\t\t\t\t\t\t\t\t\t\tfieldName: condition.field,\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tfilter.condition = condition.condition;\n\t\t\t\t\t\t\t\t\tfilter.data = condition.value;\n\t\t\t\t\t\t\t\t\tfilters.push(filter);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (filtersUi?.operator) {\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tbody.query.group = {\n\t\t\t\t\t\t\t\toperator: filtersUi.operator,\n\t\t\t\t\t\t\t\trules: filters,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst json = validateJSON(this.getNodeParameter('filtersJson', i) as string);\n\t\t\t\t\t\tbody = json;\n\t\t\t\t\t}\n\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\tresponseData = await salesmateApiRequestAllItems.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'Data',\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/v2/companies/search',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\tqs.rows = limit;\n\t\t\t\t\t\tresponseData = await salesmateApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/v2/companies/search',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.Data.data;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\tconst companyId = parseInt(this.getNodeParameter('id', i) as string, 10);\n\t\t\t\t\tresponseData = await salesmateApiRequest.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t`/v1/companies/${companyId}`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (resource === 'activity') {\n\t\t\t\tif (operation === 'create') {\n\t\t\t\t\tconst owner = this.getNodeParameter('owner', i) as number;\n\t\t\t\t\tconst title = this.getNodeParameter('title', i) as string;\n\t\t\t\t\tconst type = this.getNodeParameter('type', i) as string;\n\t\t\t\t\tconst rawData = this.getNodeParameter('rawData', i);\n\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\tconst body: IActivity = {\n\t\t\t\t\t\ttitle,\n\t\t\t\t\t\towner,\n\t\t\t\t\t\ttype,\n\t\t\t\t\t};\n\t\t\t\t\tif (additionalFields.dueDate) {\n\t\t\t\t\t\tbody.dueDate = new Date(additionalFields.dueDate as string).getTime();\n\t\t\t\t\t}\n\t\t\t\t\tif (additionalFields.duration) {\n\t\t\t\t\t\tbody.duration = additionalFields.duration as number;\n\t\t\t\t\t}\n\t\t\t\t\tif (additionalFields.isCalendarInvite) {\n\t\t\t\t\t\tbody.isCalendarInvite = additionalFields.isCalendarInvite as boolean;\n\t\t\t\t\t}\n\t\t\t\t\tif (additionalFields.isCompleted) {\n\t\t\t\t\t\tbody.isCompleted = additionalFields.isCompleted as boolean;\n\t\t\t\t\t}\n\t\t\t\t\tif (additionalFields.description) {\n\t\t\t\t\t\tbody.description = additionalFields.description as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (additionalFields.tags) {\n\t\t\t\t\t\tbody.tags = additionalFields.tags as string;\n\t\t\t\t\t}\n\t\t\t\t\tresponseData = await salesmateApiRequest.call(this, 'POST', '/v1/activities', body);\n\t\t\t\t\tresponseData = responseData.Data;\n\t\t\t\t\tif (!rawData) {\n\t\t\t\t\t\tdelete responseData.detail;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (operation === 'update') {\n\t\t\t\t\tconst activityId = this.getNodeParameter('id', i) as string;\n\t\t\t\t\tconst rawData = this.getNodeParameter('rawData', i);\n\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\tconst body: IActivity = {};\n\t\t\t\t\tif (updateFields.title) {\n\t\t\t\t\t\tbody.title = updateFields.title as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.type) {\n\t\t\t\t\t\tbody.type = updateFields.type as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.owner) {\n\t\t\t\t\t\tbody.owner = updateFields.owner as number;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.dueDate) {\n\t\t\t\t\t\tbody.dueDate = new Date(updateFields.dueDate as string).getTime();\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.duration) {\n\t\t\t\t\t\tbody.duration = updateFields.duration as number;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.isCalendarInvite) {\n\t\t\t\t\t\tbody.isCalendarInvite = updateFields.isCalendarInvite as boolean;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.isCompleted) {\n\t\t\t\t\t\tbody.isCompleted = updateFields.isCompleted as boolean;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.description) {\n\t\t\t\t\t\tbody.description = updateFields.description as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.tags) {\n\t\t\t\t\t\tbody.tags = updateFields.tags as string;\n\t\t\t\t\t}\n\t\t\t\t\tresponseData = await salesmateApiRequest.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t`/v1/activities/${activityId}`,\n\t\t\t\t\t\tbody,\n\t\t\t\t\t);\n\t\t\t\t\tresponseData = responseData.Data;\n\t\t\t\t\tif (!rawData) {\n\t\t\t\t\t\tdelete responseData.detail;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (operation === 'get') {\n\t\t\t\t\tconst activityId = this.getNodeParameter('id', i) as string;\n\t\t\t\t\tconst rawData = this.getNodeParameter('rawData', i);\n\t\t\t\t\tresponseData = await salesmateApiRequest.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t`/v1/activities/${activityId}`,\n\t\t\t\t\t);\n\t\t\t\t\tresponseData = responseData.Data;\n\n\t\t\t\t\tif (!rawData) {\n\t\t\t\t\t\tresponseData = simplifySalesmateData(responseData as IDataObject[]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\tconst jsonActive = this.getNodeParameter('jsonParameters', i);\n\t\t\t\t\tlet body: IDataObject = {\n\t\t\t\t\t\tquery: {\n\t\t\t\t\t\t\tgroup: {},\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t\tif (options.sortBy) {\n\t\t\t\t\t\tqs.sortBy = options.sortBy as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (options.sortOrder) {\n\t\t\t\t\t\tqs.sortOrder = options.sortOrder as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (options.fields) {\n\t\t\t\t\t\tif ((options.fields as string).trim() === '') {\n\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'You have to add at least one field', {\n\t\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbody.fields = (options.fields as string).split(',');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody.fields = [\n\t\t\t\t\t\t\t'title',\n\t\t\t\t\t\t\t'dueDate',\n\t\t\t\t\t\t\t'description',\n\t\t\t\t\t\t\t'duration',\n\t\t\t\t\t\t\t'owner',\n\t\t\t\t\t\t\t'Deal.title',\n\t\t\t\t\t\t\t'PrimaryContact.name',\n\t\t\t\t\t\t\t'PrimaryContact.email',\n\t\t\t\t\t\t\t'PrimaryCompany.name',\n\t\t\t\t\t\t\t'PrimaryCompany.email',\n\t\t\t\t\t\t\t'tags',\n\t\t\t\t\t\t\t'type',\n\t\t\t\t\t\t\t'createdAt',\n\t\t\t\t\t\t\t'isCompleted',\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\t\t\t\t\tif (!jsonActive) {\n\t\t\t\t\t\tconst filters: IDataObject[] = [];\n\t\t\t\t\t\tconst filtersUi = this.getNodeParameter('filters', i).filtersUi as IDataObject;\n\t\t\t\t\t\tif (filtersUi?.conditions) {\n\t\t\t\t\t\t\tconst conditions = filtersUi.conditions as IDataObject;\n\t\t\t\t\t\t\tif (conditions.conditionsUi) {\n\t\t\t\t\t\t\t\tfor (const condition of conditions.conditionsUi as IDataObject[]) {\n\t\t\t\t\t\t\t\t\tconst filter: IDataObject = {};\n\t\t\t\t\t\t\t\t\tfilter.moduleName = 'Task';\n\t\t\t\t\t\t\t\t\tfilter.field = {\n\t\t\t\t\t\t\t\t\t\tfieldName: condition.field,\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tfilter.condition = condition.condition;\n\t\t\t\t\t\t\t\t\tfilter.data = condition.value;\n\t\t\t\t\t\t\t\t\tfilters.push(filter);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (filtersUi?.operator) {\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tbody.query.group = {\n\t\t\t\t\t\t\t\toperator: filtersUi.operator,\n\t\t\t\t\t\t\t\trules: filters,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst json = validateJSON(this.getNodeParameter('filtersJson', i) as string);\n\t\t\t\t\t\tbody = json;\n\t\t\t\t\t}\n\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\tresponseData = await salesmateApiRequestAllItems.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'Data',\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/v2/activities/search',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\tqs.rows = limit;\n\t\t\t\t\t\tresponseData = await salesmateApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/v2/activities/search',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.Data.data;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\tconst activityId = this.getNodeParameter('id', i) as string;\n\t\t\t\t\tresponseData = await salesmateApiRequest.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t`/v1/activities/${activityId}`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (resource === 'deal') {\n\t\t\t\tif (operation === 'create') {\n\t\t\t\t\tconst title = this.getNodeParameter('title', i) as string;\n\t\t\t\t\tconst owner = this.getNodeParameter('owner', i) as number;\n\t\t\t\t\tconst primaryContact = this.getNodeParameter('primaryContact', i) as number;\n\t\t\t\t\tconst pipeline = this.getNodeParameter('pipeline', i) as string;\n\t\t\t\t\tconst status = this.getNodeParameter('status', i) as string;\n\t\t\t\t\tconst stage = this.getNodeParameter('stage', i) as string;\n\t\t\t\t\tconst currency = this.getNodeParameter('currency', i) as string;\n\t\t\t\t\tconst rawData = this.getNodeParameter('rawData', i);\n\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\tconst body: IDeal = {\n\t\t\t\t\t\ttitle,\n\t\t\t\t\t\towner,\n\t\t\t\t\t\tprimaryContact,\n\t\t\t\t\t\tpipeline,\n\t\t\t\t\t\tstatus,\n\t\t\t\t\t\tstage,\n\t\t\t\t\t\tcurrency,\n\t\t\t\t\t};\n\t\t\t\t\tif (additionalFields.description) {\n\t\t\t\t\t\tbody.description = additionalFields.description as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (additionalFields.tags) {\n\t\t\t\t\t\tbody.tags = additionalFields.tags as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (additionalFields.primaryCompany) {\n\t\t\t\t\t\tbody.primaryCompany = additionalFields.primaryCompany as number;\n\t\t\t\t\t}\n\t\t\t\t\tif (additionalFields.source) {\n\t\t\t\t\t\tbody.source = additionalFields.source as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (additionalFields.estimatedCloseDate) {\n\t\t\t\t\t\tbody.estimatedCloseDate = additionalFields.estimatedCloseDate as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (additionalFields.dealValue) {\n\t\t\t\t\t\tbody.dealValue = additionalFields.dealValue as number;\n\t\t\t\t\t}\n\t\t\t\t\tif (additionalFields.priority) {\n\t\t\t\t\t\tbody.priority = additionalFields.priority as string;\n\t\t\t\t\t}\n\t\t\t\t\tresponseData = await salesmateApiRequest.call(this, 'POST', '/v1/deals', body);\n\t\t\t\t\tresponseData = responseData.Data;\n\t\t\t\t\tif (!rawData) {\n\t\t\t\t\t\tdelete responseData.detail;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (operation === 'update') {\n\t\t\t\t\tconst dealId = this.getNodeParameter('id', i) as string;\n\t\t\t\t\tconst rawData = this.getNodeParameter('rawData', i);\n\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\tconst body: IDeal = {};\n\t\t\t\t\tif (updateFields.title) {\n\t\t\t\t\t\tbody.title = updateFields.title as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.owner) {\n\t\t\t\t\t\tbody.owner = updateFields.owner as number;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.primaryContact) {\n\t\t\t\t\t\tbody.primaryContact = updateFields.primaryContact as number;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.status) {\n\t\t\t\t\t\tbody.status = updateFields.status as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.currency) {\n\t\t\t\t\t\tbody.currency = updateFields.currency as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.stage) {\n\t\t\t\t\t\tbody.stage = updateFields.stage as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.pipeline) {\n\t\t\t\t\t\tbody.pipeline = updateFields.pipeline as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.description) {\n\t\t\t\t\t\tbody.description = updateFields.description as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.tags) {\n\t\t\t\t\t\tbody.tags = updateFields.tags as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.primaryCompany) {\n\t\t\t\t\t\tbody.primaryCompany = updateFields.primaryCompany as number;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.source) {\n\t\t\t\t\t\tbody.source = updateFields.source as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.estimatedCloseDate) {\n\t\t\t\t\t\tbody.estimatedCloseDate = updateFields.estimatedCloseDate as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.dealValue) {\n\t\t\t\t\t\tbody.dealValue = updateFields.dealValue as number;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateFields.priority) {\n\t\t\t\t\t\tbody.priority = updateFields.priority as string;\n\t\t\t\t\t}\n\t\t\t\t\tresponseData = await salesmateApiRequest.call(this, 'PUT', `/v1/deals/${dealId}`, body);\n\t\t\t\t\tresponseData = responseData.Data;\n\t\t\t\t\tif (!rawData) {\n\t\t\t\t\t\tdelete responseData.detail;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (operation === 'get') {\n\t\t\t\t\tconst dealId = this.getNodeParameter('id', i) as string;\n\t\t\t\t\tconst rawData = this.getNodeParameter('rawData', i);\n\t\t\t\t\tresponseData = await salesmateApiRequest.call(this, 'GET', `/v1/deals/${dealId}`);\n\t\t\t\t\tresponseData = responseData.Data;\n\n\t\t\t\t\tif (!rawData) {\n\t\t\t\t\t\tresponseData = simplifySalesmateData(responseData as IDataObject[]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\tconst jsonActive = this.getNodeParameter('jsonParameters', i);\n\t\t\t\t\tlet body: IDataObject = {\n\t\t\t\t\t\tquery: {\n\t\t\t\t\t\t\tgroup: {},\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t\tif (options.sortBy) {\n\t\t\t\t\t\tqs.sortBy = options.sortBy as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (options.sortOrder) {\n\t\t\t\t\t\tqs.sortOrder = options.sortOrder as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (options.fields !== undefined) {\n\t\t\t\t\t\tif ((options.fields as string).trim() === '') {\n\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'You have to add at least one field', {\n\t\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbody.fields = (options.fields as string).split(',');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody.fields = [\n\t\t\t\t\t\t\t'title',\n\t\t\t\t\t\t\t'PrimaryContact.name',\n\t\t\t\t\t\t\t'PrimaryContact.email',\n\t\t\t\t\t\t\t'PrimaryCompany.name',\n\t\t\t\t\t\t\t'PrimaryCompany.email',\n\t\t\t\t\t\t\t'dealValue',\n\t\t\t\t\t\t\t'priority',\n\t\t\t\t\t\t\t'stage',\n\t\t\t\t\t\t\t'status',\n\t\t\t\t\t\t\t'owner',\n\t\t\t\t\t\t\t'tags',\n\t\t\t\t\t\t\t'createdAt',\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\t\t\t\t\tif (!jsonActive) {\n\t\t\t\t\t\tconst filters: IDataObject[] = [];\n\t\t\t\t\t\tconst filtersUi = this.getNodeParameter('filters', i).filtersUi as IDataObject;\n\t\t\t\t\t\tif (filtersUi?.conditions) {\n\t\t\t\t\t\t\tconst conditions = filtersUi.conditions as IDataObject;\n\t\t\t\t\t\t\tif (conditions.conditionsUi) {\n\t\t\t\t\t\t\t\tfor (const condition of conditions.conditionsUi as IDataObject[]) {\n\t\t\t\t\t\t\t\t\tconst filter: IDataObject = {};\n\t\t\t\t\t\t\t\t\tfilter.moduleName = 'Task';\n\t\t\t\t\t\t\t\t\tfilter.field = {\n\t\t\t\t\t\t\t\t\t\tfieldName: condition.field,\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tfilter.condition = condition.condition;\n\t\t\t\t\t\t\t\t\tfilter.data = condition.value;\n\t\t\t\t\t\t\t\t\tfilters.push(filter);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (filtersUi?.operator) {\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tbody.query.group = {\n\t\t\t\t\t\t\t\toperator: filtersUi.operator,\n\t\t\t\t\t\t\t\trules: filters,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst json = validateJSON(this.getNodeParameter('filtersJson', i) as string);\n\t\t\t\t\t\tbody = json;\n\t\t\t\t\t}\n\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\tresponseData = await salesmateApiRequestAllItems.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'Data',\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/v2/deals/search',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\tqs.rows = limit;\n\t\t\t\t\t\tresponseData = await salesmateApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/v2/deals/search',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.Data.data;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\tconst dealId = this.getNodeParameter('id', i) as string;\n\t\t\t\t\tresponseData = await salesmateApiRequest.call(this, 'DELETE', `/v1/deals/${dealId}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t{ itemData: { item: i } },\n\t\t\t);\n\n\t\t\treturnData.push(...executionData);\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,0BAAwD;AAExD,iCAAmD;AAEnD,gCAAiD;AAEjD,6BAA2C;AAE3C,8BAKO;AAEA,MAAM,UAA+B;AAAA,EAArC;AACN,uBAAoC;AAAA,MACnC,aAAa;AAAA,MACb,MAAM;AAAA;AAAA,MAEN,MAAM;AAAA,MACN,OAAO,CAAC,QAAQ;AAAA,MAChB,SAAS;AAAA,MACT,UAAU;AAAA,MACV,aAAa;AAAA,MACb,UAAU;AAAA,QACT,MAAM;AAAA,MACP;AAAA,MACA,cAAc;AAAA,MACd,QAAQ,CAAC,wCAAoB,IAAI;AAAA,MACjC,SAAS,CAAC,wCAAoB,IAAI;AAAA,MAClC,aAAa;AAAA,QACZ;AAAA,UACC,MAAM;AAAA,UACN,UAAU;AAAA,QACX;AAAA,MACD;AAAA,MACA,YAAY;AAAA,QACX;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,kBAAkB;AAAA,UAClB,SAAS;AAAA,YACR;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,UACD;AAAA,UACA,SAAS;AAAA,QACV;AAAA,QACA,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,MACJ;AAAA,IACD;AAEA,mBAAU;AAAA,MACT,aAAa;AAAA;AAAA;AAAA,QAGZ,MAAM,WAAuE;AAC5E,gBAAM,aAAqC,CAAC;AAC5C,gBAAM,QAAQ,MAAM,4CAAoB,KAAK,MAAM,OAAO,kBAAkB;AAC5E,qBAAW,QAAQ,MAAM,MAAM;AAC9B,kBAAM,WAAW,KAAK;AACtB,kBAAM,SAAS,KAAK;AACpB,uBAAW,KAAK;AAAA,cACf,MAAM;AAAA,cACN,OAAO;AAAA,YACR,CAAC;AAAA,UACF;AACA,iBAAO;AAAA,QACR;AAAA;AAAA;AAAA,QAGA,MAAM,cAA0E;AAC/E,gBAAM,aAAqC,CAAC;AAC5C,gBAAM,KAAkB;AAAA,YACvB,QAAQ,CAAC,QAAQ,IAAI;AAAA,YACrB,OAAO,CAAC;AAAA,UACT;AACA,gBAAM,WAAW,MAAM,4CAAoB,KAAK,MAAM,QAAQ,uBAAuB,EAAE;AACvF,qBAAW,WAAW,SAAS,KAAK,MAAM;AACzC,kBAAM,cAAc,QAAQ;AAC5B,kBAAM,YAAY,QAAQ;AAC1B,uBAAW,KAAK;AAAA,cACf,MAAM;AAAA,cACN,OAAO;AAAA,YACR,CAAC;AAAA,UACF;AACA,iBAAO;AAAA,QACR;AAAA;AAAA;AAAA,QAGA,MAAM,eAA2E;AAChF,gBAAM,aAAqC,CAAC;AAC5C,gBAAM,KAAkB;AAAA,YACvB,QAAQ,CAAC,QAAQ,IAAI;AAAA,YACrB,OAAO,CAAC;AAAA,UACT;AACA,gBAAM,YAAY,MAAM,4CAAoB,KAAK,MAAM,QAAQ,wBAAwB,EAAE;AACzF,qBAAW,WAAW,UAAU,KAAK,MAAM;AAC1C,kBAAM,cAAc,QAAQ;AAC5B,kBAAM,YAAY,QAAQ;AAC1B,uBAAW,KAAK;AAAA,cACf,MAAM;AAAA,cACN,OAAO;AAAA,YACR,CAAC;AAAA,UACF;AACA,iBAAO;AAAA,QACR;AAAA,MACD;AAAA,IACD;AAAA;AAAA,EAEA,MAAM,UAAkE;AACvE,UAAM,QAAQ,KAAK,aAAa;AAChC,UAAM,aAAmC,CAAC;AAC1C,UAAM,SAAS,MAAM;AACrB,UAAM,KAAkB,CAAC;AACzB,QAAI;AACJ,UAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AACpD,UAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,aAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAChC,UAAI,aAAa,WAAW;AAC3B,YAAI,cAAc,UAAU;AAC3B,gBAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC9C,gBAAM,OAAO,KAAK,iBAAiB,QAAQ,CAAC;AAC5C,gBAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAClD,gBAAM,mBAAmB,KAAK,iBAAiB,oBAAoB,CAAC;AACpE,gBAAM,OAAiB;AAAA,YACtB;AAAA,YACA;AAAA,UACD;AACA,cAAI,iBAAiB,SAAS;AAC7B,iBAAK,UAAU,iBAAiB;AAAA,UACjC;AACA,cAAI,iBAAiB,OAAO;AAC3B,iBAAK,QAAQ,iBAAiB;AAAA,UAC/B;AACA,cAAI,iBAAiB,YAAY;AAChC,iBAAK,aAAa,iBAAiB;AAAA,UACpC;AACA,cAAI,iBAAiB,gBAAgB;AACpC,iBAAK,iBAAiB,iBAAiB;AAAA,UACxC;AACA,cAAI,iBAAiB,kBAAkB;AACtC,iBAAK,mBAAmB,iBAAiB;AAAA,UAC1C;AACA,cAAI,iBAAiB,gBAAgB;AACpC,iBAAK,iBAAiB,iBAAiB;AAAA,UACxC;AACA,cAAI,iBAAiB,SAAS;AAC7B,iBAAK,UAAU,iBAAiB;AAAA,UACjC;AACA,cAAI,iBAAiB,eAAe;AACnC,iBAAK,gBAAgB,iBAAiB;AAAA,UACvC;AACA,cAAI,iBAAiB,UAAU;AAC9B,iBAAK,WAAW,iBAAiB;AAAA,UAClC;AACA,cAAI,iBAAiB,qBAAqB;AACzC,iBAAK,sBAAsB,iBAAiB;AAAA,UAC7C;AACA,cAAI,iBAAiB,qBAAqB;AACzC,iBAAK,sBAAsB,iBAAiB;AAAA,UAC7C;AACA,cAAI,iBAAiB,aAAa;AACjC,iBAAK,cAAc,iBAAiB;AAAA,UACrC;AACA,cAAI,iBAAiB,gBAAgB;AACpC,iBAAK,iBAAiB,iBAAiB;AAAA,UACxC;AACA,cAAI,iBAAiB,cAAc;AAClC,iBAAK,eAAe,iBAAiB;AAAA,UACtC;AACA,cAAI,iBAAiB,aAAa;AACjC,iBAAK,cAAc,iBAAiB;AAAA,UACrC;AACA,cAAI,iBAAiB,MAAM;AAC1B,iBAAK,OAAO,iBAAiB;AAAA,UAC9B;AACA,yBAAe,MAAM,4CAAoB,KAAK,MAAM,QAAQ,iBAAiB,IAAI;AACjF,yBAAe,aAAa;AAC5B,cAAI,CAAC,SAAS;AACb,mBAAO,aAAa;AAAA,UACrB;AAAA,QACD;AACA,YAAI,cAAc,UAAU;AAC3B,gBAAM,YAAY,KAAK,iBAAiB,MAAM,CAAC;AAC/C,gBAAM,eAAe,KAAK,iBAAiB,gBAAgB,CAAC;AAC5D,gBAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAClD,gBAAM,OAAiB,CAAC;AACxB,cAAI,aAAa,OAAO;AACvB,iBAAK,QAAQ,aAAa;AAAA,UAC3B;AACA,cAAI,aAAa,MAAM;AACtB,iBAAK,OAAO,aAAa;AAAA,UAC1B;AACA,cAAI,aAAa,SAAS;AACzB,iBAAK,UAAU,aAAa;AAAA,UAC7B;AACA,cAAI,aAAa,OAAO;AACvB,iBAAK,QAAQ,aAAa;AAAA,UAC3B;AACA,cAAI,aAAa,YAAY;AAC5B,iBAAK,aAAa,aAAa;AAAA,UAChC;AACA,cAAI,aAAa,gBAAgB;AAChC,iBAAK,iBAAiB,aAAa;AAAA,UACpC;AACA,cAAI,aAAa,kBAAkB;AAClC,iBAAK,mBAAmB,aAAa;AAAA,UACtC;AACA,cAAI,aAAa,gBAAgB;AAChC,iBAAK,iBAAiB,aAAa;AAAA,UACpC;AACA,cAAI,aAAa,SAAS;AACzB,iBAAK,UAAU,aAAa;AAAA,UAC7B;AACA,cAAI,aAAa,eAAe;AAC/B,iBAAK,gBAAgB,aAAa;AAAA,UACnC;AACA,cAAI,aAAa,UAAU;AAC1B,iBAAK,WAAW,aAAa;AAAA,UAC9B;AACA,cAAI,aAAa,qBAAqB;AACrC,iBAAK,sBAAsB,aAAa;AAAA,UACzC;AACA,cAAI,aAAa,qBAAqB;AACrC,iBAAK,sBAAsB,aAAa;AAAA,UACzC;AACA,cAAI,aAAa,aAAa;AAC7B,iBAAK,cAAc,aAAa;AAAA,UACjC;AACA,cAAI,aAAa,gBAAgB;AAChC,iBAAK,iBAAiB,aAAa;AAAA,UACpC;AACA,cAAI,aAAa,cAAc;AAC9B,iBAAK,eAAe,aAAa;AAAA,UAClC;AACA,cAAI,aAAa,aAAa;AAC7B,iBAAK,cAAc,aAAa;AAAA,UACjC;AACA,cAAI,aAAa,MAAM;AACtB,iBAAK,OAAO,aAAa;AAAA,UAC1B;AACA,yBAAe,MAAM,4CAAoB;AAAA,YACxC;AAAA,YACA;AAAA,YACA,iBAAiB,SAAS;AAAA,YAC1B;AAAA,UACD;AACA,yBAAe,aAAa;AAC5B,cAAI,CAAC,SAAS;AACb,mBAAO,aAAa;AAAA,UACrB;AAAA,QACD;AACA,YAAI,cAAc,OAAO;AACxB,gBAAM,YAAY,KAAK,iBAAiB,MAAM,CAAC;AAC/C,gBAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAClD,yBAAe,MAAM,4CAAoB,KAAK,MAAM,OAAO,iBAAiB,SAAS,EAAE;AACvF,yBAAe,aAAa;AAE5B,cAAI,CAAC,SAAS;AACb,+BAAe,+CAAsB,YAA6B;AAAA,UACnE;AAAA,QACD;AACA,YAAI,cAAc,UAAU;AAC3B,gBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,gBAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAClD,gBAAM,aAAa,KAAK,iBAAiB,kBAAkB,CAAC;AAC5D,cAAI,OAAoB;AAAA,YACvB,OAAO;AAAA,cACN,OAAO,CAAC;AAAA,YACT;AAAA,UACD;AACA,cAAI,QAAQ,QAAQ;AACnB,eAAG,SAAS,QAAQ;AAAA,UACrB;AACA,cAAI,QAAQ,WAAW;AACtB,eAAG,YAAY,QAAQ;AAAA,UACxB;AACA,cAAI,QAAQ,QAAQ;AACnB,gBAAK,QAAQ,OAAkB,KAAK,MAAM,IAAI;AAC7C,oBAAM,IAAI,uCAAmB,KAAK,QAAQ,GAAG,sCAAsC;AAAA,gBAClF,WAAW;AAAA,cACZ,CAAC;AAAA,YACF;AACA,iBAAK,SAAU,QAAQ,OAAkB,MAAM,GAAG;AAAA,UACnD,OAAO;AACN,iBAAK,SAAS;AAAA,cACb;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YACD;AAAA,UACD;AACA,cAAI,CAAC,YAAY;AAChB,kBAAM,UAAyB,CAAC;AAChC,kBAAM,YAAY,KAAK,iBAAiB,WAAW,CAAC,EAAE;AACtD,gBAAI,WAAW,YAAY;AAC1B,oBAAM,aAAa,UAAU;AAC7B,kBAAI,WAAW,cAAc;AAC5B,2BAAW,aAAa,WAAW,cAA+B;AACjE,wBAAM,SAAsB,CAAC;AAC7B,yBAAO,aAAa;AACpB,yBAAO,QAAQ;AAAA,oBACd,WAAW,UAAU;AAAA,kBACtB;AACA,yBAAO,YAAY,UAAU;AAC7B,yBAAO,OAAO,UAAU;AACxB,0BAAQ,KAAK,MAAM;AAAA,gBACpB;AAAA,cACD;AAAA,YACD;AACA,gBAAI,WAAW,UAAU;AAExB,mBAAK,MAAM,QAAQ;AAAA,gBAClB,UAAU,UAAU;AAAA,gBACpB,OAAO;AAAA,cACR;AAAA,YACD;AAAA,UACD,OAAO;AACN,kBAAM,WAAO,sCAAa,KAAK,iBAAiB,eAAe,CAAC,CAAW;AAC3E,mBAAO;AAAA,UACR;AACA,cAAI,WAAW;AACd,2BAAe,MAAM,oDAA4B;AAAA,cAChD;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YACD;AAAA,UACD,OAAO;AACN,kBAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC9C,eAAG,OAAO;AACV,2BAAe,MAAM,4CAAoB;AAAA,cACxC;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YACD;AACA,2BAAe,aAAa,KAAK;AAAA,UAClC;AAAA,QACD;AACA,YAAI,cAAc,UAAU;AAC3B,gBAAM,YAAY,SAAS,KAAK,iBAAiB,MAAM,CAAC,GAAa,EAAE;AACvE,yBAAe,MAAM,4CAAoB;AAAA,YACxC;AAAA,YACA;AAAA,YACA,iBAAiB,SAAS;AAAA,UAC3B;AAAA,QACD;AAAA,MACD;AACA,UAAI,aAAa,YAAY;AAC5B,YAAI,cAAc,UAAU;AAC3B,gBAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC9C,gBAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC9C,gBAAM,OAAO,KAAK,iBAAiB,QAAQ,CAAC;AAC5C,gBAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAClD,gBAAM,mBAAmB,KAAK,iBAAiB,oBAAoB,CAAC;AACpE,gBAAM,OAAkB;AAAA,YACvB;AAAA,YACA;AAAA,YACA;AAAA,UACD;AACA,cAAI,iBAAiB,SAAS;AAC7B,iBAAK,UAAU,IAAI,KAAK,iBAAiB,OAAiB,EAAE,QAAQ;AAAA,UACrE;AACA,cAAI,iBAAiB,UAAU;AAC9B,iBAAK,WAAW,iBAAiB;AAAA,UAClC;AACA,cAAI,iBAAiB,kBAAkB;AACtC,iBAAK,mBAAmB,iBAAiB;AAAA,UAC1C;AACA,cAAI,iBAAiB,aAAa;AACjC,iBAAK,cAAc,iBAAiB;AAAA,UACrC;AACA,cAAI,iBAAiB,aAAa;AACjC,iBAAK,cAAc,iBAAiB;AAAA,UACrC;AACA,cAAI,iBAAiB,MAAM;AAC1B,iBAAK,OAAO,iBAAiB;AAAA,UAC9B;AACA,yBAAe,MAAM,4CAAoB,KAAK,MAAM,QAAQ,kBAAkB,IAAI;AAClF,yBAAe,aAAa;AAC5B,cAAI,CAAC,SAAS;AACb,mBAAO,aAAa;AAAA,UACrB;AAAA,QACD;AACA,YAAI,cAAc,UAAU;AAC3B,gBAAM,aAAa,KAAK,iBAAiB,MAAM,CAAC;AAChD,gBAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAClD,gBAAM,eAAe,KAAK,iBAAiB,gBAAgB,CAAC;AAC5D,gBAAM,OAAkB,CAAC;AACzB,cAAI,aAAa,OAAO;AACvB,iBAAK,QAAQ,aAAa;AAAA,UAC3B;AACA,cAAI,aAAa,MAAM;AACtB,iBAAK,OAAO,aAAa;AAAA,UAC1B;AACA,cAAI,aAAa,OAAO;AACvB,iBAAK,QAAQ,aAAa;AAAA,UAC3B;AACA,cAAI,aAAa,SAAS;AACzB,iBAAK,UAAU,IAAI,KAAK,aAAa,OAAiB,EAAE,QAAQ;AAAA,UACjE;AACA,cAAI,aAAa,UAAU;AAC1B,iBAAK,WAAW,aAAa;AAAA,UAC9B;AACA,cAAI,aAAa,kBAAkB;AAClC,iBAAK,mBAAmB,aAAa;AAAA,UACtC;AACA,cAAI,aAAa,aAAa;AAC7B,iBAAK,cAAc,aAAa;AAAA,UACjC;AACA,cAAI,aAAa,aAAa;AAC7B,iBAAK,cAAc,aAAa;AAAA,UACjC;AACA,cAAI,aAAa,MAAM;AACtB,iBAAK,OAAO,aAAa;AAAA,UAC1B;AACA,yBAAe,MAAM,4CAAoB;AAAA,YACxC;AAAA,YACA;AAAA,YACA,kBAAkB,UAAU;AAAA,YAC5B;AAAA,UACD;AACA,yBAAe,aAAa;AAC5B,cAAI,CAAC,SAAS;AACb,mBAAO,aAAa;AAAA,UACrB;AAAA,QACD;AACA,YAAI,cAAc,OAAO;AACxB,gBAAM,aAAa,KAAK,iBAAiB,MAAM,CAAC;AAChD,gBAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAClD,yBAAe,MAAM,4CAAoB;AAAA,YACxC;AAAA,YACA;AAAA,YACA,kBAAkB,UAAU;AAAA,UAC7B;AACA,yBAAe,aAAa;AAE5B,cAAI,CAAC,SAAS;AACb,+BAAe,+CAAsB,YAA6B;AAAA,UACnE;AAAA,QACD;AACA,YAAI,cAAc,UAAU;AAC3B,gBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,gBAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAClD,gBAAM,aAAa,KAAK,iBAAiB,kBAAkB,CAAC;AAC5D,cAAI,OAAoB;AAAA,YACvB,OAAO;AAAA,cACN,OAAO,CAAC;AAAA,YACT;AAAA,UACD;AACA,cAAI,QAAQ,QAAQ;AACnB,eAAG,SAAS,QAAQ;AAAA,UACrB;AACA,cAAI,QAAQ,WAAW;AACtB,eAAG,YAAY,QAAQ;AAAA,UACxB;AACA,cAAI,QAAQ,QAAQ;AACnB,gBAAK,QAAQ,OAAkB,KAAK,MAAM,IAAI;AAC7C,oBAAM,IAAI,uCAAmB,KAAK,QAAQ,GAAG,sCAAsC;AAAA,gBAClF,WAAW;AAAA,cACZ,CAAC;AAAA,YACF;AACA,iBAAK,SAAU,QAAQ,OAAkB,MAAM,GAAG;AAAA,UACnD,OAAO;AACN,iBAAK,SAAS;AAAA,cACb;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YACD;AAAA,UACD;AACA,cAAI,CAAC,YAAY;AAChB,kBAAM,UAAyB,CAAC;AAChC,kBAAM,YAAY,KAAK,iBAAiB,WAAW,CAAC,EAAE;AACtD,gBAAI,WAAW,YAAY;AAC1B,oBAAM,aAAa,UAAU;AAC7B,kBAAI,WAAW,cAAc;AAC5B,2BAAW,aAAa,WAAW,cAA+B;AACjE,wBAAM,SAAsB,CAAC;AAC7B,yBAAO,aAAa;AACpB,yBAAO,QAAQ;AAAA,oBACd,WAAW,UAAU;AAAA,kBACtB;AACA,yBAAO,YAAY,UAAU;AAC7B,yBAAO,OAAO,UAAU;AACxB,0BAAQ,KAAK,MAAM;AAAA,gBACpB;AAAA,cACD;AAAA,YACD;AACA,gBAAI,WAAW,UAAU;AAExB,mBAAK,MAAM,QAAQ;AAAA,gBAClB,UAAU,UAAU;AAAA,gBACpB,OAAO;AAAA,cACR;AAAA,YACD;AAAA,UACD,OAAO;AACN,kBAAM,WAAO,sCAAa,KAAK,iBAAiB,eAAe,CAAC,CAAW;AAC3E,mBAAO;AAAA,UACR;AACA,cAAI,WAAW;AACd,2BAAe,MAAM,oDAA4B;AAAA,cAChD;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YACD;AAAA,UACD,OAAO;AACN,kBAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC9C,eAAG,OAAO;AACV,2BAAe,MAAM,4CAAoB;AAAA,cACxC;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YACD;AACA,2BAAe,aAAa,KAAK;AAAA,UAClC;AAAA,QACD;AACA,YAAI,cAAc,UAAU;AAC3B,gBAAM,aAAa,KAAK,iBAAiB,MAAM,CAAC;AAChD,yBAAe,MAAM,4CAAoB;AAAA,YACxC;AAAA,YACA;AAAA,YACA,kBAAkB,UAAU;AAAA,UAC7B;AAAA,QACD;AAAA,MACD;AACA,UAAI,aAAa,QAAQ;AACxB,YAAI,cAAc,UAAU;AAC3B,gBAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC9C,gBAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC9C,gBAAM,iBAAiB,KAAK,iBAAiB,kBAAkB,CAAC;AAChE,gBAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AACpD,gBAAM,SAAS,KAAK,iBAAiB,UAAU,CAAC;AAChD,gBAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC9C,gBAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AACpD,gBAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAClD,gBAAM,mBAAmB,KAAK,iBAAiB,oBAAoB,CAAC;AACpE,gBAAM,OAAc;AAAA,YACnB;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACD;AACA,cAAI,iBAAiB,aAAa;AACjC,iBAAK,cAAc,iBAAiB;AAAA,UACrC;AACA,cAAI,iBAAiB,MAAM;AAC1B,iBAAK,OAAO,iBAAiB;AAAA,UAC9B;AACA,cAAI,iBAAiB,gBAAgB;AACpC,iBAAK,iBAAiB,iBAAiB;AAAA,UACxC;AACA,cAAI,iBAAiB,QAAQ;AAC5B,iBAAK,SAAS,iBAAiB;AAAA,UAChC;AACA,cAAI,iBAAiB,oBAAoB;AACxC,iBAAK,qBAAqB,iBAAiB;AAAA,UAC5C;AACA,cAAI,iBAAiB,WAAW;AAC/B,iBAAK,YAAY,iBAAiB;AAAA,UACnC;AACA,cAAI,iBAAiB,UAAU;AAC9B,iBAAK,WAAW,iBAAiB;AAAA,UAClC;AACA,yBAAe,MAAM,4CAAoB,KAAK,MAAM,QAAQ,aAAa,IAAI;AAC7E,yBAAe,aAAa;AAC5B,cAAI,CAAC,SAAS;AACb,mBAAO,aAAa;AAAA,UACrB;AAAA,QACD;AACA,YAAI,cAAc,UAAU;AAC3B,gBAAM,SAAS,KAAK,iBAAiB,MAAM,CAAC;AAC5C,gBAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAClD,gBAAM,eAAe,KAAK,iBAAiB,gBAAgB,CAAC;AAC5D,gBAAM,OAAc,CAAC;AACrB,cAAI,aAAa,OAAO;AACvB,iBAAK,QAAQ,aAAa;AAAA,UAC3B;AACA,cAAI,aAAa,OAAO;AACvB,iBAAK,QAAQ,aAAa;AAAA,UAC3B;AACA,cAAI,aAAa,gBAAgB;AAChC,iBAAK,iBAAiB,aAAa;AAAA,UACpC;AACA,cAAI,aAAa,QAAQ;AACxB,iBAAK,SAAS,aAAa;AAAA,UAC5B;AACA,cAAI,aAAa,UAAU;AAC1B,iBAAK,WAAW,aAAa;AAAA,UAC9B;AACA,cAAI,aAAa,OAAO;AACvB,iBAAK,QAAQ,aAAa;AAAA,UAC3B;AACA,cAAI,aAAa,UAAU;AAC1B,iBAAK,WAAW,aAAa;AAAA,UAC9B;AACA,cAAI,aAAa,aAAa;AAC7B,iBAAK,cAAc,aAAa;AAAA,UACjC;AACA,cAAI,aAAa,MAAM;AACtB,iBAAK,OAAO,aAAa;AAAA,UAC1B;AACA,cAAI,aAAa,gBAAgB;AAChC,iBAAK,iBAAiB,aAAa;AAAA,UACpC;AACA,cAAI,aAAa,QAAQ;AACxB,iBAAK,SAAS,aAAa;AAAA,UAC5B;AACA,cAAI,aAAa,oBAAoB;AACpC,iBAAK,qBAAqB,aAAa;AAAA,UACxC;AACA,cAAI,aAAa,WAAW;AAC3B,iBAAK,YAAY,aAAa;AAAA,UAC/B;AACA,cAAI,aAAa,UAAU;AAC1B,iBAAK,WAAW,aAAa;AAAA,UAC9B;AACA,yBAAe,MAAM,4CAAoB,KAAK,MAAM,OAAO,aAAa,MAAM,IAAI,IAAI;AACtF,yBAAe,aAAa;AAC5B,cAAI,CAAC,SAAS;AACb,mBAAO,aAAa;AAAA,UACrB;AAAA,QACD;AACA,YAAI,cAAc,OAAO;AACxB,gBAAM,SAAS,KAAK,iBAAiB,MAAM,CAAC;AAC5C,gBAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAClD,yBAAe,MAAM,4CAAoB,KAAK,MAAM,OAAO,aAAa,MAAM,EAAE;AAChF,yBAAe,aAAa;AAE5B,cAAI,CAAC,SAAS;AACb,+BAAe,+CAAsB,YAA6B;AAAA,UACnE;AAAA,QACD;AACA,YAAI,cAAc,UAAU;AAC3B,gBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,gBAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAClD,gBAAM,aAAa,KAAK,iBAAiB,kBAAkB,CAAC;AAC5D,cAAI,OAAoB;AAAA,YACvB,OAAO;AAAA,cACN,OAAO,CAAC;AAAA,YACT;AAAA,UACD;AACA,cAAI,QAAQ,QAAQ;AACnB,eAAG,SAAS,QAAQ;AAAA,UACrB;AACA,cAAI,QAAQ,WAAW;AACtB,eAAG,YAAY,QAAQ;AAAA,UACxB;AACA,cAAI,QAAQ,WAAW,QAAW;AACjC,gBAAK,QAAQ,OAAkB,KAAK,MAAM,IAAI;AAC7C,oBAAM,IAAI,uCAAmB,KAAK,QAAQ,GAAG,sCAAsC;AAAA,gBAClF,WAAW;AAAA,cACZ,CAAC;AAAA,YACF;AACA,iBAAK,SAAU,QAAQ,OAAkB,MAAM,GAAG;AAAA,UACnD,OAAO;AACN,iBAAK,SAAS;AAAA,cACb;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YACD;AAAA,UACD;AACA,cAAI,CAAC,YAAY;AAChB,kBAAM,UAAyB,CAAC;AAChC,kBAAM,YAAY,KAAK,iBAAiB,WAAW,CAAC,EAAE;AACtD,gBAAI,WAAW,YAAY;AAC1B,oBAAM,aAAa,UAAU;AAC7B,kBAAI,WAAW,cAAc;AAC5B,2BAAW,aAAa,WAAW,cAA+B;AACjE,wBAAM,SAAsB,CAAC;AAC7B,yBAAO,aAAa;AACpB,yBAAO,QAAQ;AAAA,oBACd,WAAW,UAAU;AAAA,kBACtB;AACA,yBAAO,YAAY,UAAU;AAC7B,yBAAO,OAAO,UAAU;AACxB,0BAAQ,KAAK,MAAM;AAAA,gBACpB;AAAA,cACD;AAAA,YACD;AACA,gBAAI,WAAW,UAAU;AAExB,mBAAK,MAAM,QAAQ;AAAA,gBAClB,UAAU,UAAU;AAAA,gBACpB,OAAO;AAAA,cACR;AAAA,YACD;AAAA,UACD,OAAO;AACN,kBAAM,WAAO,sCAAa,KAAK,iBAAiB,eAAe,CAAC,CAAW;AAC3E,mBAAO;AAAA,UACR;AACA,cAAI,WAAW;AACd,2BAAe,MAAM,oDAA4B;AAAA,cAChD;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YACD;AAAA,UACD,OAAO;AACN,kBAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC9C,eAAG,OAAO;AACV,2BAAe,MAAM,4CAAoB;AAAA,cACxC;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YACD;AACA,2BAAe,aAAa,KAAK;AAAA,UAClC;AAAA,QACD;AACA,YAAI,cAAc,UAAU;AAC3B,gBAAM,SAAS,KAAK,iBAAiB,MAAM,CAAC;AAC5C,yBAAe,MAAM,4CAAoB,KAAK,MAAM,UAAU,aAAa,MAAM,EAAE;AAAA,QACpF;AAAA,MACD;AAEA,YAAM,gBAAgB,KAAK,QAAQ;AAAA,QAClC,KAAK,QAAQ,gBAAgB,YAA6B;AAAA,QAC1D,EAAE,UAAU,EAAE,MAAM,EAAE,EAAE;AAAA,MACzB;AAEA,iBAAW,KAAK,GAAG,aAAa;AAAA,IACjC;AAEA,WAAO,CAAC,UAAU;AAAA,EACnB;AACD;","names":[]}