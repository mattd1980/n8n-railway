{"version":3,"sources":["../../../nodes/JotForm/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHookFunctions,\n\tIHttpRequestMethods,\n\tILoadOptionsFunctions,\n\tIRequestOptions,\n\tIWebhookFunctions,\n\tJsonObject,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\nexport async function jotformApiRequest(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions | IWebhookFunctions,\n\tmethod: IHttpRequestMethods,\n\tresource: string,\n\n\tbody: any = {},\n\tqs: IDataObject = {},\n\turi?: string,\n\toption: IDataObject = {},\n): Promise<any> {\n\tconst credentials = await this.getCredentials('jotFormApi');\n\tlet options: IRequestOptions = {\n\t\theaders: {\n\t\t\tAPIKEY: credentials.apiKey,\n\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t},\n\t\tmethod,\n\t\tqs,\n\t\tform: body,\n\t\turi: uri || `https://${credentials.apiDomain || 'api.jotform.com'}${resource}`,\n\t\tjson: true,\n\t};\n\tif (!Object.keys(body as IDataObject).length) {\n\t\tdelete options.form;\n\t}\n\toptions = Object.assign({}, options, option);\n\n\ttry {\n\t\treturn await this.helpers.request(options);\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA,0BAA6B;AAE7B,eAAsB,kBAErB,QACA,UAEA,OAAY,CAAC,GACb,KAAkB,CAAC,GACnB,KACA,SAAsB,CAAC,GACR;AACf,QAAM,cAAc,MAAM,KAAK,eAAe,YAAY;AAC1D,MAAI,UAA2B;AAAA,IAC9B,SAAS;AAAA,MACR,QAAQ,YAAY;AAAA,MACpB,gBAAgB;AAAA,IACjB;AAAA,IACA;AAAA,IACA;AAAA,IACA,MAAM;AAAA,IACN,KAAK,OAAO,WAAW,YAAY,aAAa,iBAAiB,GAAG,QAAQ;AAAA,IAC5E,MAAM;AAAA,EACP;AACA,MAAI,CAAC,OAAO,KAAK,IAAmB,EAAE,QAAQ;AAC7C,WAAO,QAAQ;AAAA,EAChB;AACA,YAAU,OAAO,OAAO,CAAC,GAAG,SAAS,MAAM;AAE3C,MAAI;AACH,WAAO,MAAM,KAAK,QAAQ,QAAQ,OAAO;AAAA,EAC1C,SAAS,OAAO;AACf,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,KAAmB;AAAA,EAC3D;AACD;","names":[]}