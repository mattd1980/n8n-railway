{"version":3,"sources":["../../../nodes/Beeminder/Beeminder.node.ts"],"sourcesContent":["import moment from 'moment-timezone';\nimport {\n\ttype IExecuteFunctions,\n\ttype IDataObject,\n\ttype ILoadOptionsFunctions,\n\ttype INodeExecutionData,\n\ttype INodeParameters,\n\ttype INodePropertyOptions,\n\ttype INodeType,\n\ttype INodeTypeDescription,\n\tNodeConnectionTypes,\n} from 'n8n-workflow';\n\nimport {\n\tcreateDatapoint,\n\tdeleteDatapoint,\n\tgetAllDatapoints,\n\tupdateDatapoint,\n} from './Beeminder.node.functions';\nimport { beeminderApiRequest } from './GenericFunctions';\n\nexport class Beeminder implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Beeminder',\n\t\tname: 'beeminder',\n\t\tgroup: ['output'],\n\t\tversion: 1,\n\t\tdescription: 'Consume Beeminder API',\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdefaults: {\n\t\t\tname: 'Beeminder',\n\t\t},\n\t\tusableAsTool: true,\n\t\t// eslint-disable-next-line n8n-nodes-base/node-class-description-icon-not-svg\n\t\ticon: 'file:beeminder.png',\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'beeminderApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\trequired: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Datapoint',\n\t\t\t\t\t\tvalue: 'datapoint',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'datapoint',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Create',\n\t\t\t\t\t\tvalue: 'create',\n\t\t\t\t\t\tdescription: 'Create datapoint for goal',\n\t\t\t\t\t\taction: 'Create datapoint for goal',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Delete',\n\t\t\t\t\t\tvalue: 'delete',\n\t\t\t\t\t\tdescription: 'Delete a datapoint',\n\t\t\t\t\t\taction: 'Delete a datapoint',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get Many',\n\t\t\t\t\t\tvalue: 'getAll',\n\t\t\t\t\t\tdescription: 'Get many datapoints for a goal',\n\t\t\t\t\t\taction: 'Get many datapoints for a goal',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Update',\n\t\t\t\t\t\tvalue: 'update',\n\t\t\t\t\t\tdescription: 'Update a datapoint',\n\t\t\t\t\t\taction: 'Update a datapoint',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'create',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Goal Name or ID',\n\t\t\t\tname: 'goalName',\n\t\t\t\ttype: 'options',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getGoals',\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['datapoint'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\tdescription:\n\t\t\t\t\t'The name of the goal. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Return All',\n\t\t\t\tname: 'returnAll',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t\tresource: ['datapoint'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: 'Whether to return all results or only up to a given limit',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Limit',\n\t\t\t\tname: 'limit',\n\t\t\t\ttype: 'number',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t\tresource: ['datapoint'],\n\t\t\t\t\t\treturnAll: [false],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tminValue: 1,\n\t\t\t\t\tmaxValue: 300,\n\t\t\t\t},\n\t\t\t\tdefault: 30,\n\t\t\t\tdescription: 'Max number of results to return',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Value',\n\t\t\t\tname: 'value',\n\t\t\t\ttype: 'number',\n\t\t\t\tdefault: 1,\n\t\t\t\tplaceholder: '',\n\t\t\t\tdescription: 'Datapoint value to send',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['datapoint'],\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Datapoint ID',\n\t\t\t\tname: 'datapointId',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['update', 'delete'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Additional Fields',\n\t\t\t\tname: 'additionalFields',\n\t\t\t\ttype: 'collection',\n\t\t\t\tplaceholder: 'Add Field',\n\t\t\t\tdefault: {},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['datapoint'],\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Comment',\n\t\t\t\t\t\tname: 'comment',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Timestamp',\n\t\t\t\t\t\tname: 'timestamp',\n\t\t\t\t\t\ttype: 'dateTime',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tplaceholder: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Defaults to \"now\" if none is passed in, or the existing timestamp if the datapoint is being updated rather than created',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Request ID',\n\t\t\t\t\t\tname: 'requestid',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tplaceholder: '',\n\t\t\t\t\t\tdescription: 'String to uniquely identify a datapoint',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Options',\n\t\t\t\tname: 'options',\n\t\t\t\ttype: 'collection',\n\t\t\t\tplaceholder: 'Add field',\n\t\t\t\tdefault: {},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['datapoint'],\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Sort',\n\t\t\t\t\t\tname: 'sort',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: 'id',\n\t\t\t\t\t\tplaceholder: '',\n\t\t\t\t\t\tdescription: 'Attribute to sort on',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Update Fields',\n\t\t\t\tname: 'updateFields',\n\t\t\t\ttype: 'collection',\n\t\t\t\tplaceholder: 'Add Field',\n\t\t\t\tdefault: {},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['datapoint'],\n\t\t\t\t\t\toperation: ['update'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Value',\n\t\t\t\t\t\tname: 'value',\n\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\tdefault: 1,\n\t\t\t\t\t\tplaceholder: '',\n\t\t\t\t\t\tdescription: 'Datapoint value to send',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Comment',\n\t\t\t\t\t\tname: 'comment',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Timestamp',\n\t\t\t\t\t\tname: 'timestamp',\n\t\t\t\t\t\ttype: 'dateTime',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tplaceholder: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Defaults to \"now\" if none is passed in, or the existing timestamp if the datapoint is being updated rather than created',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get all the available groups to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getGoals(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst credentials = await this.getCredentials('beeminderApi');\n\n\t\t\t\tconst endpoint = `/users/${credentials.user}/goals.json`;\n\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst goals = await beeminderApiRequest.call(this, 'GET', endpoint);\n\t\t\t\tfor (const goal of goals) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: goal.slug,\n\t\t\t\t\t\tvalue: goal.slug,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst length = items.length;\n\t\tconst timezone = this.getTimezone();\n\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\t\tlet results;\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'datapoint') {\n\t\t\t\t\tconst goalName = this.getNodeParameter('goalName', i) as string;\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst value = this.getNodeParameter('value', i) as number;\n\t\t\t\t\t\tconst options = this.getNodeParameter('additionalFields', i) as INodeParameters;\n\t\t\t\t\t\tconst data: IDataObject = {\n\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\tgoalName,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tObject.assign(data, options);\n\n\t\t\t\t\t\tif (data.timestamp) {\n\t\t\t\t\t\t\tdata.timestamp = moment.tz(data.timestamp, timezone).unix();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresults = await createDatapoint.call(this, data);\n\t\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\tthis.helpers.returnJsonArray(results as IDataObject[]),\n\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i) as INodeParameters;\n\t\t\t\t\t\tconst data: IDataObject = {\n\t\t\t\t\t\t\tgoalName,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tObject.assign(data, options);\n\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tdata.count = this.getNodeParameter('limit', 0);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresults = await getAllDatapoints.call(this, data);\n\t\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\tthis.helpers.returnJsonArray(results as IDataObject[]),\n\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t\t} else if (operation === 'update') {\n\t\t\t\t\t\tconst datapointId = this.getNodeParameter('datapointId', i) as string;\n\t\t\t\t\t\tconst options = this.getNodeParameter('updateFields', i) as INodeParameters;\n\t\t\t\t\t\tconst data: IDataObject = {\n\t\t\t\t\t\t\tgoalName,\n\t\t\t\t\t\t\tdatapointId,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tObject.assign(data, options);\n\t\t\t\t\t\tif (data.timestamp) {\n\t\t\t\t\t\t\tdata.timestamp = moment.tz(data.timestamp, timezone).unix();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresults = await updateDatapoint.call(this, data);\n\t\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\tthis.helpers.returnJsonArray(results as IDataObject[]),\n\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\t\tconst datapointId = this.getNodeParameter('datapointId', i) as string;\n\t\t\t\t\t\tconst data: IDataObject = {\n\t\t\t\t\t\t\tgoalName,\n\t\t\t\t\t\t\tdatapointId,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tresults = await deleteDatapoint.call(this, data);\n\t\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\tthis.helpers.returnJsonArray(results as IDataObject[]),\n\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\treturnData.push({ error: error.message, json: {}, itemIndex: i });\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":["moment"]}