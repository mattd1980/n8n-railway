{"version":3,"sources":["../../../nodes/FormIo/FormIoTrigger.node.ts"],"sourcesContent":["import {\n\ttype IDataObject,\n\ttype IHookFunctions,\n\ttype IWebhookFunctions,\n\ttype ILoadOptionsFunctions,\n\ttype INodePropertyOptions,\n\ttype INodeType,\n\ttype INodeTypeDescription,\n\ttype IWebhookResponseData,\n\tNodeConnectionTypes,\n} from 'n8n-workflow';\n\nimport { formIoApiRequest } from './GenericFunctions';\n\nexport class FormIoTrigger implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Form.io Trigger',\n\t\tname: 'formIoTrigger',\n\t\ticon: 'file:formio.svg',\n\t\tgroup: ['trigger'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"event\"]}}',\n\t\tdescription: 'Handle form.io events via webhooks',\n\t\tdefaults: {\n\t\t\tname: 'Form.io Trigger',\n\t\t},\n\t\tinputs: [],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'formIoApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\twebhooks: [\n\t\t\t{\n\t\t\t\tname: 'default',\n\t\t\t\thttpMethod: 'POST',\n\t\t\t\tresponseMode: 'onReceived',\n\t\t\t\tpath: 'webhook',\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Project Name or ID',\n\t\t\t\tname: 'projectId',\n\t\t\t\ttype: 'options',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getProjects',\n\t\t\t\t},\n\t\t\t\trequired: true,\n\t\t\t\tdefault: '',\n\t\t\t\tdescription:\n\t\t\t\t\t'Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Form Name or ID',\n\t\t\t\tname: 'formId',\n\t\t\t\ttype: 'options',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsDependsOn: ['projectId'],\n\t\t\t\t\tloadOptionsMethod: 'getForms',\n\t\t\t\t},\n\t\t\t\trequired: true,\n\t\t\t\tdefault: '',\n\t\t\t\tdescription:\n\t\t\t\t\t'Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Trigger Events',\n\t\t\t\tname: 'events',\n\t\t\t\ttype: 'multiOptions',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Submission Created',\n\t\t\t\t\t\tvalue: 'create',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Submission Updated',\n\t\t\t\t\t\tvalue: 'update',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\trequired: true,\n\t\t\t\tdefault: [],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Simplify',\n\t\t\t\tname: 'simple',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription:\n\t\t\t\t\t'Whether to return a simplified version of the response instead of the raw data',\n\t\t\t},\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\tasync getProjects(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst projects = await formIoApiRequest.call(this, 'GET', '/project', {});\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tfor (const project of projects) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: project.title,\n\t\t\t\t\t\tvalue: project._id,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\tasync getForms(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst projectId = this.getCurrentNodeParameter('projectId') as string;\n\t\t\t\tconst forms = await formIoApiRequest.call(this, 'GET', `/project/${projectId}/form`, {});\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tfor (const form of forms) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: form.title,\n\t\t\t\t\t\tvalue: form._id,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\twebhookMethods = {\n\t\tdefault: {\n\t\t\tasync checkExists(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tconst webhookUrl = this.getNodeWebhookUrl('default');\n\t\t\t\tconst formId = this.getNodeParameter('formId') as string;\n\t\t\t\tconst projectId = this.getNodeParameter('projectId') as string;\n\t\t\t\tconst method = this.getNodeParameter('events') as string[];\n\t\t\t\tconst actions = await formIoApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t`/project/${projectId}/form/${formId}/action`,\n\t\t\t\t);\n\t\t\t\tfor (const action of actions) {\n\t\t\t\t\tif (action.name === 'webhook') {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\taction.settings.url === webhookUrl &&\n\t\t\t\t\t\t\taction.method.length === method.length &&\n\t\t\t\t\t\t\taction.method.every((value: any) => method.includes(value as string))\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\twebhookData.webhookId = action._id;\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\n\t\t\tasync create(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tconst formId = this.getNodeParameter('formId') as string;\n\t\t\t\tconst projectId = this.getNodeParameter('projectId') as string;\n\t\t\t\tconst webhookUrl = this.getNodeWebhookUrl('default') as string;\n\t\t\t\tconst method = this.getNodeParameter('events') as string[];\n\t\t\t\tconst payload = {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname: 'webhook',\n\t\t\t\t\t\ttitle: `webhook-n8n:${webhookUrl}`,\n\t\t\t\t\t\tmethod,\n\t\t\t\t\t\thandler: ['after'],\n\t\t\t\t\t\tpriority: 0,\n\t\t\t\t\t\tsettings: {\n\t\t\t\t\t\t\tmethod: 'post',\n\t\t\t\t\t\t\tblock: false,\n\t\t\t\t\t\t\turl: webhookUrl,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcondition: {\n\t\t\t\t\t\t\tfield: 'submit',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t\tconst webhook = await formIoApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'POST',\n\t\t\t\t\t`/project/${projectId}/form/${formId}/action`,\n\t\t\t\t\tpayload,\n\t\t\t\t);\n\t\t\t\twebhookData.webhookId = webhook._id;\n\t\t\t\treturn true;\n\t\t\t},\n\n\t\t\tasync delete(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tconst formId = this.getNodeParameter('formId') as string;\n\t\t\t\tconst projectId = this.getNodeParameter('projectId') as string;\n\t\t\t\tawait formIoApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'DELETE',\n\t\t\t\t\t`/project/${projectId}/form/${formId}/action/${webhookData.webhookId}`,\n\t\t\t\t);\n\t\t\t\tdelete webhookData.webhookId;\n\t\t\t\treturn true;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync webhook(this: IWebhookFunctions): Promise<IWebhookResponseData> {\n\t\tconst req = this.getRequestObject();\n\t\tconst simple = this.getNodeParameter('simple') as boolean;\n\t\tlet response = req.body.request;\n\t\tif (simple) {\n\t\t\tresponse = response.data;\n\t\t}\n\t\treturn {\n\t\t\tworkflowData: [this.helpers.returnJsonArray(response as IDataObject[])],\n\t\t};\n\t}\n}\n"],"mappings":"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","names":[]}