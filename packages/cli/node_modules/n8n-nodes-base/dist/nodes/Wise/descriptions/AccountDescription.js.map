{"version":3,"sources":["../../../../nodes/Wise/descriptions/AccountDescription.ts"],"sourcesContent":["import type { INodeProperties } from 'n8n-workflow';\n\nexport const accountOperations: INodeProperties[] = [\n\t{\n\t\tdisplayName: 'Operation',\n\t\tname: 'operation',\n\t\ttype: 'options',\n\t\tnoDataExpression: true,\n\t\tdefault: 'getBalances',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tname: 'Get Balances',\n\t\t\t\tvalue: 'getBalances',\n\t\t\t\tdescription: 'Retrieve balances for all account currencies of this user',\n\t\t\t\taction: 'Get balances',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Get Currencies',\n\t\t\t\tvalue: 'getCurrencies',\n\t\t\t\tdescription: 'Retrieve currencies in the borderless account of this user',\n\t\t\t\taction: 'Get currencies',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Get Statement',\n\t\t\t\tvalue: 'getStatement',\n\t\t\t\tdescription: 'Retrieve the statement for the borderless account of this user',\n\t\t\t\taction: 'Get a statement',\n\t\t\t},\n\t\t],\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['account'],\n\t\t\t},\n\t\t},\n\t},\n];\n\nexport const accountFields: INodeProperties[] = [\n\t// ----------------------------------\n\t//      account: getBalances\n\t// ----------------------------------\n\t{\n\t\tdisplayName: 'Profile Name or ID',\n\t\tname: 'profileId',\n\t\ttype: 'options',\n\t\trequired: true,\n\t\tdefault: [],\n\t\ttypeOptions: {\n\t\t\tloadOptionsMethod: 'getProfiles',\n\t\t},\n\t\tdescription:\n\t\t\t'ID of the user profile to retrieve the balance of. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['account'],\n\t\t\t\toperation: ['getBalances'],\n\t\t\t},\n\t\t},\n\t},\n\n\t// ----------------------------------\n\t//      account: getStatement\n\t// ----------------------------------\n\t{\n\t\tdisplayName: 'Profile Name or ID',\n\t\tname: 'profileId',\n\t\ttype: 'options',\n\t\tdefault: [],\n\t\ttypeOptions: {\n\t\t\tloadOptionsMethod: 'getProfiles',\n\t\t},\n\t\tdescription:\n\t\t\t'ID of the user profile whose account to retrieve the statement of. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['account'],\n\t\t\t\toperation: ['getStatement'],\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tdisplayName: 'Borderless Account Name or ID',\n\t\tname: 'borderlessAccountId',\n\t\ttype: 'options',\n\t\tdefault: [],\n\t\trequired: true,\n\t\ttypeOptions: {\n\t\t\tloadOptionsMethod: 'getBorderlessAccounts',\n\t\t\tloadOptionsDependsOn: ['profileId'],\n\t\t},\n\t\tdescription:\n\t\t\t'ID of the borderless account to retrieve the statement of. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['account'],\n\t\t\t\toperation: ['getStatement'],\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tdisplayName: 'Currency',\n\t\tname: 'currency',\n\t\ttype: 'string',\n\t\tdefault: '',\n\t\t// TODO: preload\n\t\tdescription: 'Code of the currency of the borderless account to retrieve the statement of',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['account'],\n\t\t\t\toperation: ['getStatement'],\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tdisplayName: 'Format',\n\t\tname: 'format',\n\t\ttype: 'options',\n\t\tdefault: 'json',\n\t\tdescription: 'File format to retrieve the statement in',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['account'],\n\t\t\t\toperation: ['getStatement'],\n\t\t\t},\n\t\t},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tname: 'JSON',\n\t\t\t\tvalue: 'json',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'CSV',\n\t\t\t\tvalue: 'csv',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'PDF',\n\t\t\t\tvalue: 'pdf',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'XML (CAMT.053)',\n\t\t\t\tvalue: 'xml',\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tdisplayName: 'Put Output File in Field',\n\t\tname: 'binaryProperty',\n\t\ttype: 'string',\n\t\trequired: true,\n\t\tdefault: 'data',\n\t\thint: 'The name of the output binary field to put the file in',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['account'],\n\t\t\t\toperation: ['getStatement'],\n\t\t\t\tformat: ['csv', 'pdf', 'xml'],\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tdisplayName: 'File Name',\n\t\tname: 'fileName',\n\t\ttype: 'string',\n\t\trequired: true,\n\t\tdefault: '',\n\t\tplaceholder: 'data.pdf',\n\t\tdescription: 'Name of the file that will be downloaded',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['account'],\n\t\t\t\toperation: ['getStatement'],\n\t\t\t\tformat: ['csv', 'pdf', 'xml'],\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tdisplayName: 'Additional Fields',\n\t\tname: 'additionalFields',\n\t\ttype: 'collection',\n\t\tplaceholder: 'Add Field',\n\t\tdefault: {},\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['account'],\n\t\t\t\toperation: ['getStatement'],\n\t\t\t},\n\t\t},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Line Style',\n\t\t\t\tname: 'lineStyle',\n\t\t\t\ttype: 'options',\n\t\t\t\tdefault: 'COMPACT',\n\t\t\t\tdescription: 'Line style to retrieve the statement in',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Compact',\n\t\t\t\t\t\tvalue: 'COMPACT',\n\t\t\t\t\t\tdescription: 'Single line per transaction',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Flat',\n\t\t\t\t\t\tvalue: 'FLAT',\n\t\t\t\t\t\tdescription: 'Separate lines for transaction fees',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Range',\n\t\t\t\tname: 'range',\n\t\t\t\ttype: 'fixedCollection',\n\t\t\t\tplaceholder: 'Add Range',\n\t\t\t\tdefault: {},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Range Properties',\n\t\t\t\t\t\tname: 'rangeProperties',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Range Start',\n\t\t\t\t\t\t\t\tname: 'intervalStart',\n\t\t\t\t\t\t\t\ttype: 'dateTime',\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Range End',\n\t\t\t\t\t\t\t\tname: 'intervalEnd',\n\t\t\t\t\t\t\t\ttype: 'dateTime',\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t},\n];\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEO,MAAM,oBAAuC;AAAA,EACnD;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,kBAAkB;AAAA,IAClB,SAAS;AAAA,IACT,SAAS;AAAA,MACR;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,QACP,aAAa;AAAA,QACb,QAAQ;AAAA,MACT;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,QACP,aAAa;AAAA,QACb,QAAQ;AAAA,MACT;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,QACP,aAAa;AAAA,QACb,QAAQ;AAAA,MACT;AAAA,IACD;AAAA,IACA,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,UAAU,CAAC,SAAS;AAAA,MACrB;AAAA,IACD;AAAA,EACD;AACD;AAEO,MAAM,gBAAmC;AAAA;AAAA;AAAA;AAAA,EAI/C;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,SAAS,CAAC;AAAA,IACV,aAAa;AAAA,MACZ,mBAAmB;AAAA,IACpB;AAAA,IACA,aACC;AAAA,IACD,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,UAAU,CAAC,SAAS;AAAA,QACpB,WAAW,CAAC,aAAa;AAAA,MAC1B;AAAA,IACD;AAAA,EACD;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,IACV,aAAa;AAAA,MACZ,mBAAmB;AAAA,IACpB;AAAA,IACA,aACC;AAAA,IACD,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,UAAU,CAAC,SAAS;AAAA,QACpB,WAAW,CAAC,cAAc;AAAA,MAC3B;AAAA,IACD;AAAA,EACD;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,IACV,UAAU;AAAA,IACV,aAAa;AAAA,MACZ,mBAAmB;AAAA,MACnB,sBAAsB,CAAC,WAAW;AAAA,IACnC;AAAA,IACA,aACC;AAAA,IACD,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,UAAU,CAAC,SAAS;AAAA,QACpB,WAAW,CAAC,cAAc;AAAA,MAC3B;AAAA,IACD;AAAA,EACD;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS;AAAA;AAAA,IAET,aAAa;AAAA,IACb,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,UAAU,CAAC,SAAS;AAAA,QACpB,WAAW,CAAC,cAAc;AAAA,MAC3B;AAAA,IACD;AAAA,EACD;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,IACb,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,UAAU,CAAC,SAAS;AAAA,QACpB,WAAW,CAAC,cAAc;AAAA,MAC3B;AAAA,IACD;AAAA,IACA,SAAS;AAAA,MACR;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,IACD;AAAA,EACD;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,SAAS;AAAA,IACT,MAAM;AAAA,IACN,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,UAAU,CAAC,SAAS;AAAA,QACpB,WAAW,CAAC,cAAc;AAAA,QAC1B,QAAQ,CAAC,OAAO,OAAO,KAAK;AAAA,MAC7B;AAAA,IACD;AAAA,EACD;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,SAAS;AAAA,IACT,aAAa;AAAA,IACb,aAAa;AAAA,IACb,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,UAAU,CAAC,SAAS;AAAA,QACpB,WAAW,CAAC,cAAc;AAAA,QAC1B,QAAQ,CAAC,OAAO,OAAO,KAAK;AAAA,MAC7B;AAAA,IACD;AAAA,EACD;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,SAAS,CAAC;AAAA,IACV,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,UAAU,CAAC,SAAS;AAAA,QACpB,WAAW,CAAC,cAAc;AAAA,MAC3B;AAAA,IACD;AAAA,IACA,SAAS;AAAA,MACR;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aAAa;AAAA,QACb,SAAS;AAAA,UACR;AAAA,YACC,MAAM;AAAA,YACN,OAAO;AAAA,YACP,aAAa;AAAA,UACd;AAAA,UACA;AAAA,YACC,MAAM;AAAA,YACN,OAAO;AAAA,YACP,aAAa;AAAA,UACd;AAAA,QACD;AAAA,MACD;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,aAAa;AAAA,QACb,SAAS,CAAC;AAAA,QACV,SAAS;AAAA,UACR;AAAA,YACC,aAAa;AAAA,YACb,MAAM;AAAA,YACN,QAAQ;AAAA,cACP;AAAA,gBACC,aAAa;AAAA,gBACb,MAAM;AAAA,gBACN,MAAM;AAAA,gBACN,SAAS;AAAA,cACV;AAAA,cACA;AAAA,gBACC,aAAa;AAAA,gBACb,MAAM;AAAA,gBACN,MAAM;AAAA,gBACN,SAAS;AAAA,cACV;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;","names":[]}