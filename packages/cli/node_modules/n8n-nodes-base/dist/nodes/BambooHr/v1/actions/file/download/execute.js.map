{"version":3,"sources":["../../../../../../../nodes/BambooHr/v1/actions/file/download/execute.ts"],"sourcesContent":["import type { IExecuteFunctions, IDataObject, INodeExecutionData } from 'n8n-workflow';\n\nimport { apiRequest } from '../../../transport';\n\nexport async function download(this: IExecuteFunctions, index: number) {\n\tconst body: IDataObject = {};\n\tconst requestMethod = 'GET';\n\tconst items = this.getInputData();\n\n\t//meta data\n\tconst fileId: string = this.getNodeParameter('fileId', index) as string;\n\tconst output: string = this.getNodeParameter('output', index) as string;\n\n\t//endpoint\n\tconst endpoint = `files/${fileId}/`;\n\n\t//response\n\tconst response = await apiRequest.call(this, requestMethod, endpoint, body, {} as IDataObject, {\n\t\tencoding: null,\n\t\tjson: false,\n\t\tresolveWithFullResponse: true,\n\t});\n\n\tlet mimeType = response.headers['content-type'] as string | undefined;\n\tmimeType = mimeType ? mimeType.split(';').find((value) => value.includes('/')) : undefined;\n\tconst contentDisposition = response.headers['content-disposition'];\n\tconst fileNameRegex = /(?<=filename=\").*\\b/;\n\tconst match = fileNameRegex.exec(contentDisposition as string);\n\tlet fileName = '';\n\n\t// file name was found\n\tif (match !== null) {\n\t\tfileName = match[0];\n\t}\n\n\tconst newItem: INodeExecutionData = {\n\t\tjson: items[index].json,\n\t\tbinary: {},\n\t};\n\n\tif (items[index].binary !== undefined && newItem.binary) {\n\t\t// Create a shallow copy of the binary data so that the old\n\t\t// data references which do not get changed still stay behind\n\t\t// but the incoming data does not get changed.\n\t\tObject.assign(newItem.binary, items[index].binary);\n\t}\n\n\tnewItem.binary = {\n\t\t[output]: await this.helpers.prepareBinaryData(\n\t\t\tresponse.body as unknown as Buffer,\n\t\t\tfileName,\n\t\t\tmimeType,\n\t\t),\n\t};\n\n\treturn [newItem as unknown as INodeExecutionData[]];\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,uBAA2B;AAE3B,eAAsB,SAAkC,OAAe;AACtE,QAAM,OAAoB,CAAC;AAC3B,QAAM,gBAAgB;AACtB,QAAM,QAAQ,KAAK,aAAa;AAGhC,QAAM,SAAiB,KAAK,iBAAiB,UAAU,KAAK;AAC5D,QAAM,SAAiB,KAAK,iBAAiB,UAAU,KAAK;AAG5D,QAAM,WAAW,SAAS,MAAM;AAGhC,QAAM,WAAW,MAAM,4BAAW,KAAK,MAAM,eAAe,UAAU,MAAM,CAAC,GAAkB;AAAA,IAC9F,UAAU;AAAA,IACV,MAAM;AAAA,IACN,yBAAyB;AAAA,EAC1B,CAAC;AAED,MAAI,WAAW,SAAS,QAAQ,cAAc;AAC9C,aAAW,WAAW,SAAS,MAAM,GAAG,EAAE,KAAK,CAAC,UAAU,MAAM,SAAS,GAAG,CAAC,IAAI;AACjF,QAAM,qBAAqB,SAAS,QAAQ,qBAAqB;AACjE,QAAM,gBAAgB;AACtB,QAAM,QAAQ,cAAc,KAAK,kBAA4B;AAC7D,MAAI,WAAW;AAGf,MAAI,UAAU,MAAM;AACnB,eAAW,MAAM,CAAC;AAAA,EACnB;AAEA,QAAM,UAA8B;AAAA,IACnC,MAAM,MAAM,KAAK,EAAE;AAAA,IACnB,QAAQ,CAAC;AAAA,EACV;AAEA,MAAI,MAAM,KAAK,EAAE,WAAW,UAAa,QAAQ,QAAQ;AAIxD,WAAO,OAAO,QAAQ,QAAQ,MAAM,KAAK,EAAE,MAAM;AAAA,EAClD;AAEA,UAAQ,SAAS;AAAA,IAChB,CAAC,MAAM,GAAG,MAAM,KAAK,QAAQ;AAAA,MAC5B,SAAS;AAAA,MACT;AAAA,MACA;AAAA,IACD;AAAA,EACD;AAEA,SAAO,CAAC,OAA0C;AACnD;","names":[]}