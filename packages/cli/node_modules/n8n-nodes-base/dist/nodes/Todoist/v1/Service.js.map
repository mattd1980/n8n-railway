{"version":3,"sources":["../../../../nodes/Todoist/v1/Service.ts"],"sourcesContent":["import type { IDataObject } from 'n8n-workflow';\n\nimport {\n\tCloseHandler,\n\tCreateHandler,\n\tDeleteHandler,\n\tGetAllHandler,\n\tGetHandler,\n\tMoveHandler,\n\tReopenHandler,\n\tSyncHandler,\n\tUpdateHandler,\n} from './OperationHandler';\nimport type { Context } from '../GenericFunctions';\n\nexport class TodoistService implements Service {\n\tasync execute(\n\t\tctx: Context,\n\t\toperation: OperationType,\n\t\titemIndex: number,\n\t): Promise<TodoistResponse> {\n\t\treturn await this.handlers[operation].handleOperation(ctx, itemIndex);\n\t}\n\n\tprivate handlers = {\n\t\tcreate: new CreateHandler(),\n\t\tclose: new CloseHandler(),\n\t\tdelete: new DeleteHandler(),\n\t\tget: new GetHandler(),\n\t\tgetAll: new GetAllHandler(),\n\t\treopen: new ReopenHandler(),\n\t\tupdate: new UpdateHandler(),\n\t\tmove: new MoveHandler(),\n\t\tsync: new SyncHandler(),\n\t};\n}\n\nexport type OperationType =\n\t| 'create'\n\t| 'close'\n\t| 'delete'\n\t| 'get'\n\t| 'getAll'\n\t| 'reopen'\n\t| 'update'\n\t| 'move'\n\t| 'sync';\n\nexport interface Section {\n\tname: string;\n\tid: string;\n}\n\nexport interface Service {\n\texecute(ctx: Context, operation: OperationType, itemIndex: number): Promise<TodoistResponse>;\n}\n\nexport interface TodoistResponse {\n\tsuccess?: boolean;\n\tdata?: IDataObject;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,8BAUO;AAGA,MAAM,eAAkC;AAAA,EAAxC;AASN,SAAQ,WAAW;AAAA,MAClB,QAAQ,IAAI,sCAAc;AAAA,MAC1B,OAAO,IAAI,qCAAa;AAAA,MACxB,QAAQ,IAAI,sCAAc;AAAA,MAC1B,KAAK,IAAI,mCAAW;AAAA,MACpB,QAAQ,IAAI,sCAAc;AAAA,MAC1B,QAAQ,IAAI,sCAAc;AAAA,MAC1B,QAAQ,IAAI,sCAAc;AAAA,MAC1B,MAAM,IAAI,oCAAY;AAAA,MACtB,MAAM,IAAI,oCAAY;AAAA,IACvB;AAAA;AAAA,EAlBA,MAAM,QACL,KACA,WACA,WAC2B;AAC3B,WAAO,MAAM,KAAK,SAAS,SAAS,EAAE,gBAAgB,KAAK,SAAS;AAAA,EACrE;AAaD;","names":[]}