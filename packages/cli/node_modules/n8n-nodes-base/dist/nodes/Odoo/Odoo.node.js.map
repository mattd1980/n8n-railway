{"version":3,"sources":["../../../nodes/Odoo/Odoo.node.ts"],"sourcesContent":["import { capitalCase } from 'change-case';\nimport type {\n\tIExecuteFunctions,\n\tICredentialsDecrypted,\n\tICredentialTestFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodeCredentialTestResult,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n\tIRequestOptions,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, deepCopy, randomInt } from 'n8n-workflow';\n\nimport {\n\tcontactDescription,\n\tcontactOperations,\n\tcustomResourceDescription,\n\tcustomResourceOperations,\n\tnoteDescription,\n\tnoteOperations,\n\topportunityDescription,\n\topportunityOperations,\n} from './descriptions';\nimport type { IOdooFilterOperations } from './GenericFunctions';\nimport {\n\todooCreate,\n\todooDelete,\n\todooGet,\n\todooGetAll,\n\todooGetDBName,\n\todooGetModelFields,\n\todooGetUserID,\n\todooJSONRPCRequest,\n\todooUpdate,\n\tprocessNameValueFields,\n} from './GenericFunctions';\n\nexport class Odoo implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Odoo',\n\t\tname: 'odoo',\n\t\ticon: 'file:odoo.svg',\n\t\tgroup: ['transform'],\n\t\tversion: 1,\n\t\tdescription: 'Consume Odoo API',\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdefaults: {\n\t\t\tname: 'Odoo',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'odooApi',\n\t\t\t\trequired: true,\n\t\t\t\ttestedBy: 'odooApiTest',\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tdefault: 'contact',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Contact',\n\t\t\t\t\t\tvalue: 'contact',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Custom Resource',\n\t\t\t\t\t\tvalue: 'custom',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Note',\n\t\t\t\t\t\tvalue: 'note',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Opportunity',\n\t\t\t\t\t\tvalue: 'opportunity',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\n\t\t\t...customResourceOperations,\n\t\t\t...customResourceDescription,\n\t\t\t...opportunityOperations,\n\t\t\t...opportunityDescription,\n\t\t\t...contactOperations,\n\t\t\t...contactDescription,\n\t\t\t...noteOperations,\n\t\t\t...noteDescription,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\tasync getModelFields(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tlet resource;\n\t\t\t\tresource = this.getCurrentNodeParameter('resource') as string;\n\t\t\t\tif (resource === 'custom') {\n\t\t\t\t\tresource = this.getCurrentNodeParameter('customResource') as string;\n\t\t\t\t\tif (!resource) return [];\n\t\t\t\t}\n\n\t\t\t\tconst credentials = await this.getCredentials('odooApi');\n\t\t\t\tconst url = credentials.url as string;\n\t\t\t\tconst username = credentials.username as string;\n\t\t\t\tconst password = credentials.password as string;\n\t\t\t\tconst db = odooGetDBName(credentials.db as string, url);\n\t\t\t\tconst userID = await odooGetUserID.call(this, db, username, password, url);\n\n\t\t\t\tconst response = await odooGetModelFields.call(this, db, userID, password, resource, url);\n\t\t\t\tconst options = Object.entries(response).map(([key, field]) => {\n\t\t\t\t\tconst optionField = field as { [key: string]: string };\n\t\t\t\t\ttry {\n\t\t\t\t\t\toptionField.name = capitalCase(optionField.name);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\toptionField.name = optionField.string;\n\t\t\t\t\t}\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: optionField.name,\n\t\t\t\t\t\tvalue: key,\n\t\t\t\t\t\t// nodelinter-ignore-next-line\n\t\t\t\t\t\tdescription: `name: ${key}, type: ${optionField?.type} required: ${optionField?.required}`,\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\treturn options.sort((a, b) => a.name?.localeCompare(b.name) || 0);\n\t\t\t},\n\t\t\tasync getModels(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst credentials = await this.getCredentials('odooApi');\n\t\t\t\tconst url = credentials.url as string;\n\t\t\t\tconst username = credentials.username as string;\n\t\t\t\tconst password = credentials.password as string;\n\t\t\t\tconst db = odooGetDBName(credentials.db as string, url);\n\t\t\t\tconst userID = await odooGetUserID.call(this, db, username, password, url);\n\n\t\t\t\tconst body = {\n\t\t\t\t\tjsonrpc: '2.0',\n\t\t\t\t\tmethod: 'call',\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tservice: 'object',\n\t\t\t\t\t\tmethod: 'execute',\n\t\t\t\t\t\targs: [db, userID, password, 'ir.model', 'search_read', [], ['name', 'model']],\n\t\t\t\t\t},\n\t\t\t\t\tid: randomInt(100),\n\t\t\t\t};\n\n\t\t\t\tconst response = (await odooJSONRPCRequest.call(this, body, url)) as IDataObject[];\n\n\t\t\t\tconst options = response.map((model) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: model.name,\n\t\t\t\t\t\tvalue: model.model,\n\t\t\t\t\t\tdescription: `model: ${model.model}`,\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\treturn options as INodePropertyOptions[];\n\t\t\t},\n\t\t\tasync getStates(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst credentials = await this.getCredentials('odooApi');\n\t\t\t\tconst url = credentials.url as string;\n\t\t\t\tconst username = credentials.username as string;\n\t\t\t\tconst password = credentials.password as string;\n\t\t\t\tconst db = odooGetDBName(credentials.db as string, url);\n\t\t\t\tconst userID = await odooGetUserID.call(this, db, username, password, url);\n\n\t\t\t\tconst body = {\n\t\t\t\t\tjsonrpc: '2.0',\n\t\t\t\t\tmethod: 'call',\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tservice: 'object',\n\t\t\t\t\t\tmethod: 'execute',\n\t\t\t\t\t\targs: [db, userID, password, 'res.country.state', 'search_read', [], ['id', 'name']],\n\t\t\t\t\t},\n\t\t\t\t\tid: randomInt(100),\n\t\t\t\t};\n\n\t\t\t\tconst response = (await odooJSONRPCRequest.call(this, body, url)) as IDataObject[];\n\n\t\t\t\tconst options = response.map((state) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: state.name as string,\n\t\t\t\t\t\tvalue: state.id,\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\treturn options.sort((a, b) => a.name?.localeCompare(b.name) || 0) as INodePropertyOptions[];\n\t\t\t},\n\t\t\tasync getCountries(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst credentials = await this.getCredentials('odooApi');\n\t\t\t\tconst url = credentials.url as string;\n\t\t\t\tconst username = credentials.username as string;\n\t\t\t\tconst password = credentials.password as string;\n\t\t\t\tconst db = odooGetDBName(credentials.db as string, url);\n\t\t\t\tconst userID = await odooGetUserID.call(this, db, username, password, url);\n\n\t\t\t\tconst body = {\n\t\t\t\t\tjsonrpc: '2.0',\n\t\t\t\t\tmethod: 'call',\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tservice: 'object',\n\t\t\t\t\t\tmethod: 'execute',\n\t\t\t\t\t\targs: [db, userID, password, 'res.country', 'search_read', [], ['id', 'name']],\n\t\t\t\t\t},\n\t\t\t\t\tid: randomInt(100),\n\t\t\t\t};\n\n\t\t\t\tconst response = (await odooJSONRPCRequest.call(this, body, url)) as IDataObject[];\n\n\t\t\t\tconst options = response.map((country) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: country.name as string,\n\t\t\t\t\t\tvalue: country.id,\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\treturn options.sort((a, b) => a.name?.localeCompare(b.name) || 0) as INodePropertyOptions[];\n\t\t\t},\n\t\t},\n\t\tcredentialTest: {\n\t\t\tasync odooApiTest(\n\t\t\t\tthis: ICredentialTestFunctions,\n\t\t\t\tcredential: ICredentialsDecrypted,\n\t\t\t): Promise<INodeCredentialTestResult> {\n\t\t\t\tconst credentials = credential.data;\n\n\t\t\t\ttry {\n\t\t\t\t\tconst body = {\n\t\t\t\t\t\tjsonrpc: '2.0',\n\t\t\t\t\t\tmethod: 'call',\n\t\t\t\t\t\tparams: {\n\t\t\t\t\t\t\tservice: 'common',\n\t\t\t\t\t\t\tmethod: 'login',\n\t\t\t\t\t\t\targs: [\n\t\t\t\t\t\t\t\todooGetDBName(credentials?.db as string, credentials?.url as string),\n\t\t\t\t\t\t\t\tcredentials?.username,\n\t\t\t\t\t\t\t\tcredentials?.password,\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\tid: randomInt(100),\n\t\t\t\t\t};\n\n\t\t\t\t\tconst options: IRequestOptions = {\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t'User-Agent': 'n8n',\n\t\t\t\t\t\t\tConnection: 'keep-alive',\n\t\t\t\t\t\t\tAccept: '*/*',\n\t\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\tbody,\n\t\t\t\t\t\turi: `${(credentials?.url as string).replace(/\\/$/, '')}/jsonrpc`,\n\t\t\t\t\t\tjson: true,\n\t\t\t\t\t};\n\t\t\t\t\tconst result = await this.helpers.request(options);\n\t\t\t\t\tif (result.error || !result.result) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tstatus: 'Error',\n\t\t\t\t\t\t\tmessage: 'Credentials are not valid',\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if (result.error) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tstatus: 'Error',\n\t\t\t\t\t\t\tmessage: `Credentials are not valid: ${result.error.data.message}`,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tstatus: 'Error',\n\t\t\t\t\t\tmessage: `Settings are not valid: ${error}`,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tstatus: 'OK',\n\t\t\t\t\tmessage: 'Authentication successful!',\n\t\t\t\t};\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tlet items = this.getInputData();\n\t\titems = deepCopy(items);\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tlet responseData;\n\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\tconst credentials = await this.getCredentials('odooApi');\n\t\tconst url = (credentials.url as string).replace(/\\/$/, '');\n\t\tconst username = credentials.username as string;\n\t\tconst password = credentials.password as string;\n\t\tconst db = odooGetDBName(credentials.db as string, url);\n\t\tconst userID = await odooGetUserID.call(this, db, username, password, url);\n\n\t\t//----------------------------------------------------------------------\n\t\t//                            Main loop\n\t\t//----------------------------------------------------------------------\n\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'contact') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tlet additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tif (additionalFields.address) {\n\t\t\t\t\t\t\tconst addressFields = (additionalFields.address as IDataObject).value as IDataObject;\n\t\t\t\t\t\t\tif (addressFields) {\n\t\t\t\t\t\t\t\tadditionalFields = {\n\t\t\t\t\t\t\t\t\t...additionalFields,\n\t\t\t\t\t\t\t\t\t...addressFields,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete additionalFields.address;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst name = this.getNodeParameter('contactName', i) as string;\n\t\t\t\t\t\tconst fields: IDataObject = {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t...additionalFields,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tresponseData = await odooCreate.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tdb,\n\t\t\t\t\t\t\tuserID,\n\t\t\t\t\t\t\tpassword,\n\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\toperation,\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\tfields,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i) as string;\n\t\t\t\t\t\tresponseData = await odooDelete.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tdb,\n\t\t\t\t\t\t\tuserID,\n\t\t\t\t\t\t\tpassword,\n\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\toperation,\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\tcontactId,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i) as string;\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tconst fields = (options.fieldsList as IDataObject[]) || [];\n\t\t\t\t\t\tresponseData = await odooGet.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tdb,\n\t\t\t\t\t\t\tuserID,\n\t\t\t\t\t\t\tpassword,\n\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\toperation,\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\tcontactId,\n\t\t\t\t\t\t\tfields,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tconst fields = (options.fieldsList as IDataObject[]) || [];\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await odooGetAll.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\tdb,\n\t\t\t\t\t\t\t\tuserID,\n\t\t\t\t\t\t\t\tpassword,\n\t\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t\toperation,\n\t\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\tfields,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await odooGetAll.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\tdb,\n\t\t\t\t\t\t\t\tuserID,\n\t\t\t\t\t\t\t\tpassword,\n\t\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t\toperation,\n\t\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t\tundefined, // filters, only for custom resource\n\t\t\t\t\t\t\t\tfields,\n\t\t\t\t\t\t\t\tlimit,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i) as string;\n\t\t\t\t\t\tlet updateFields = this.getNodeParameter('updateFields', i);\n\n\t\t\t\t\t\tif (updateFields.address) {\n\t\t\t\t\t\t\tconst addressFields = (updateFields.address as IDataObject).value as IDataObject;\n\t\t\t\t\t\t\tif (addressFields) {\n\t\t\t\t\t\t\t\tupdateFields = {\n\t\t\t\t\t\t\t\t\t...updateFields,\n\t\t\t\t\t\t\t\t\t...addressFields,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete updateFields.address;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await odooUpdate.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tdb,\n\t\t\t\t\t\t\tuserID,\n\t\t\t\t\t\t\tpassword,\n\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\toperation,\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\tcontactId,\n\t\t\t\t\t\t\tupdateFields,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (resource === 'custom') {\n\t\t\t\t\tconst customResource = this.getNodeParameter('customResource', i) as string;\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst fields = this.getNodeParameter('fieldsToCreateOrUpdate', i) as IDataObject;\n\t\t\t\t\t\tresponseData = await odooCreate.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tdb,\n\t\t\t\t\t\t\tuserID,\n\t\t\t\t\t\t\tpassword,\n\t\t\t\t\t\t\tcustomResource,\n\t\t\t\t\t\t\toperation,\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\tprocessNameValueFields(fields),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst customResourceId = this.getNodeParameter('customResourceId', i) as string;\n\t\t\t\t\t\tresponseData = await odooDelete.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tdb,\n\t\t\t\t\t\t\tuserID,\n\t\t\t\t\t\t\tpassword,\n\t\t\t\t\t\t\tcustomResource,\n\t\t\t\t\t\t\toperation,\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\tcustomResourceId,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst customResourceId = this.getNodeParameter('customResourceId', i) as string;\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tconst fields = (options.fieldsList as IDataObject[]) || [];\n\t\t\t\t\t\tresponseData = await odooGet.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tdb,\n\t\t\t\t\t\t\tuserID,\n\t\t\t\t\t\t\tpassword,\n\t\t\t\t\t\t\tcustomResource,\n\t\t\t\t\t\t\toperation,\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\tcustomResourceId,\n\t\t\t\t\t\t\tfields,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tconst fields = (options.fieldsList as IDataObject[]) || [];\n\t\t\t\t\t\tconst filter = this.getNodeParameter('filterRequest', i) as IOdooFilterOperations;\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await odooGetAll.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\tdb,\n\t\t\t\t\t\t\t\tuserID,\n\t\t\t\t\t\t\t\tpassword,\n\t\t\t\t\t\t\t\tcustomResource,\n\t\t\t\t\t\t\t\toperation,\n\t\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t\tfilter,\n\t\t\t\t\t\t\t\tfields,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await odooGetAll.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\tdb,\n\t\t\t\t\t\t\t\tuserID,\n\t\t\t\t\t\t\t\tpassword,\n\t\t\t\t\t\t\t\tcustomResource,\n\t\t\t\t\t\t\t\toperation,\n\t\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t\tfilter,\n\t\t\t\t\t\t\t\tfields,\n\t\t\t\t\t\t\t\tlimit,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst customResourceId = this.getNodeParameter('customResourceId', i) as string;\n\t\t\t\t\t\tconst fields = this.getNodeParameter('fieldsToCreateOrUpdate', i) as IDataObject;\n\t\t\t\t\t\tresponseData = await odooUpdate.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tdb,\n\t\t\t\t\t\t\tuserID,\n\t\t\t\t\t\t\tpassword,\n\t\t\t\t\t\t\tcustomResource,\n\t\t\t\t\t\t\toperation,\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\tcustomResourceId,\n\t\t\t\t\t\t\tprocessNameValueFields(fields),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (resource === 'note') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// const additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst memo = this.getNodeParameter('memo', i) as string;\n\t\t\t\t\t\tconst fields: IDataObject = {\n\t\t\t\t\t\t\tmemo,\n\t\t\t\t\t\t\t// ...additionalFields,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tresponseData = await odooCreate.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tdb,\n\t\t\t\t\t\t\tuserID,\n\t\t\t\t\t\t\tpassword,\n\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\toperation,\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\tfields,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst noteId = this.getNodeParameter('noteId', i) as string;\n\t\t\t\t\t\tresponseData = await odooDelete.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tdb,\n\t\t\t\t\t\t\tuserID,\n\t\t\t\t\t\t\tpassword,\n\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\toperation,\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\tnoteId,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst noteId = this.getNodeParameter('noteId', i) as string;\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tconst fields = (options.fieldsList as IDataObject[]) || [];\n\t\t\t\t\t\tresponseData = await odooGet.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tdb,\n\t\t\t\t\t\t\tuserID,\n\t\t\t\t\t\t\tpassword,\n\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\toperation,\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\tnoteId,\n\t\t\t\t\t\t\tfields,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tconst fields = (options.fieldsList as IDataObject[]) || [];\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await odooGetAll.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\tdb,\n\t\t\t\t\t\t\t\tuserID,\n\t\t\t\t\t\t\t\tpassword,\n\t\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t\toperation,\n\t\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\tfields,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await odooGetAll.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\tdb,\n\t\t\t\t\t\t\t\tuserID,\n\t\t\t\t\t\t\t\tpassword,\n\t\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t\toperation,\n\t\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t\tundefined, // filters, only for custom resource\n\t\t\t\t\t\t\t\tfields,\n\t\t\t\t\t\t\t\tlimit,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst noteId = this.getNodeParameter('noteId', i) as string;\n\t\t\t\t\t\tconst memo = this.getNodeParameter('memo', i) as string;\n\t\t\t\t\t\tconst fields: IDataObject = {\n\t\t\t\t\t\t\tmemo,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tresponseData = await odooUpdate.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tdb,\n\t\t\t\t\t\t\tuserID,\n\t\t\t\t\t\t\tpassword,\n\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\toperation,\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\tnoteId,\n\t\t\t\t\t\t\tfields,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (resource === 'opportunity') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst name = this.getNodeParameter('opportunityName', i) as string;\n\t\t\t\t\t\tconst fields: IDataObject = {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t...additionalFields,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tresponseData = await odooCreate.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tdb,\n\t\t\t\t\t\t\tuserID,\n\t\t\t\t\t\t\tpassword,\n\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\toperation,\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\tfields,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst opportunityId = this.getNodeParameter('opportunityId', i) as string;\n\t\t\t\t\t\tresponseData = await odooDelete.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tdb,\n\t\t\t\t\t\t\tuserID,\n\t\t\t\t\t\t\tpassword,\n\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\toperation,\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\topportunityId,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst opportunityId = this.getNodeParameter('opportunityId', i) as string;\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tconst fields = (options.fieldsList as IDataObject[]) || [];\n\t\t\t\t\t\tresponseData = await odooGet.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tdb,\n\t\t\t\t\t\t\tuserID,\n\t\t\t\t\t\t\tpassword,\n\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\toperation,\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\topportunityId,\n\t\t\t\t\t\t\tfields,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tconst fields = (options.fieldsList as IDataObject[]) || [];\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await odooGetAll.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\tdb,\n\t\t\t\t\t\t\t\tuserID,\n\t\t\t\t\t\t\t\tpassword,\n\t\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t\toperation,\n\t\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\tfields,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await odooGetAll.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\tdb,\n\t\t\t\t\t\t\t\tuserID,\n\t\t\t\t\t\t\t\tpassword,\n\t\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t\toperation,\n\t\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t\tundefined, // filters, only for custom resource\n\t\t\t\t\t\t\t\tfields,\n\t\t\t\t\t\t\t\tlimit,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst opportunityId = this.getNodeParameter('opportunityId', i) as string;\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\tresponseData = await odooUpdate.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tdb,\n\t\t\t\t\t\t\tuserID,\n\t\t\t\t\t\t\tpassword,\n\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\toperation,\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\topportunityId,\n\t\t\t\t\t\t\tupdateFields,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (responseData !== undefined) {\n\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray(responseData),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionData);\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":[]}