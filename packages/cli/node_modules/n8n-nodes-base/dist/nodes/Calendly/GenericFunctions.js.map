{"version":3,"sources":["../../../nodes/Calendly/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tILoadOptionsFunctions,\n\tIHookFunctions,\n\tIWebhookFunctions,\n\tIHttpRequestMethods,\n\tIRequestOptions,\n} from 'n8n-workflow';\n\nfunction getAuthenticationTypeFromApiKey(data: string): 'accessToken' | 'apiKey' {\n\t// The access token is a JWT, so it will always include dots to separate\n\t// header, payoload and signature.\n\treturn data.includes('.') ? 'accessToken' : 'apiKey';\n}\n\nexport async function getAuthenticationType(\n\tthis: IExecuteFunctions | IWebhookFunctions | IHookFunctions | ILoadOptionsFunctions,\n): Promise<'accessToken' | 'apiKey'> {\n\tconst authentication = this.getNodeParameter('authentication', 0) as string;\n\tif (authentication === 'apiKey') {\n\t\tconst { apiKey } = await this.getCredentials<{ apiKey: string }>('calendlyApi');\n\t\treturn getAuthenticationTypeFromApiKey(apiKey);\n\t} else {\n\t\treturn 'accessToken';\n\t}\n}\n\nexport async function calendlyApiRequest(\n\tthis: IExecuteFunctions | IWebhookFunctions | IHookFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tresource: string,\n\n\tbody: any = {},\n\tquery: IDataObject = {},\n\turi?: string,\n\toption: IDataObject = {},\n): Promise<any> {\n\tconst authenticationType = await getAuthenticationType.call(this);\n\n\tconst headers: IDataObject = {\n\t\t'Content-Type': 'application/json',\n\t};\n\n\tlet endpoint = 'https://api.calendly.com';\n\n\t// remove once API key is deprecated\n\tif (authenticationType === 'apiKey') {\n\t\tendpoint = 'https://calendly.com/api/v1';\n\t}\n\n\tlet options: IRequestOptions = {\n\t\theaders,\n\t\tmethod,\n\t\tbody,\n\t\tqs: query,\n\t\turi: uri || `${endpoint}${resource}`,\n\t\tjson: true,\n\t};\n\n\tif (!Object.keys(body as IDataObject).length) {\n\t\tdelete options.form;\n\t}\n\tif (!Object.keys(query).length) {\n\t\tdelete options.qs;\n\t}\n\toptions = Object.assign({}, options, option);\n\n\tconst credentialsType =\n\t\t(this.getNodeParameter('authentication', 0) as string) === 'apiKey'\n\t\t\t? 'calendlyApi'\n\t\t\t: 'calendlyOAuth2Api';\n\treturn await this.helpers.requestWithAuthentication.call(this, credentialsType, options);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA,SAAS,gCAAgC,MAAwC;AAGhF,SAAO,KAAK,SAAS,GAAG,IAAI,gBAAgB;AAC7C;AAEA,eAAsB,wBAEe;AACpC,QAAM,iBAAiB,KAAK,iBAAiB,kBAAkB,CAAC;AAChE,MAAI,mBAAmB,UAAU;AAChC,UAAM,EAAE,OAAO,IAAI,MAAM,KAAK,eAAmC,aAAa;AAC9E,WAAO,gCAAgC,MAAM;AAAA,EAC9C,OAAO;AACN,WAAO;AAAA,EACR;AACD;AAEA,eAAsB,mBAErB,QACA,UAEA,OAAY,CAAC,GACb,QAAqB,CAAC,GACtB,KACA,SAAsB,CAAC,GACR;AACf,QAAM,qBAAqB,MAAM,sBAAsB,KAAK,IAAI;AAEhE,QAAM,UAAuB;AAAA,IAC5B,gBAAgB;AAAA,EACjB;AAEA,MAAI,WAAW;AAGf,MAAI,uBAAuB,UAAU;AACpC,eAAW;AAAA,EACZ;AAEA,MAAI,UAA2B;AAAA,IAC9B;AAAA,IACA;AAAA,IACA;AAAA,IACA,IAAI;AAAA,IACJ,KAAK,OAAO,GAAG,QAAQ,GAAG,QAAQ;AAAA,IAClC,MAAM;AAAA,EACP;AAEA,MAAI,CAAC,OAAO,KAAK,IAAmB,EAAE,QAAQ;AAC7C,WAAO,QAAQ;AAAA,EAChB;AACA,MAAI,CAAC,OAAO,KAAK,KAAK,EAAE,QAAQ;AAC/B,WAAO,QAAQ;AAAA,EAChB;AACA,YAAU,OAAO,OAAO,CAAC,GAAG,SAAS,MAAM;AAE3C,QAAM,kBACJ,KAAK,iBAAiB,kBAAkB,CAAC,MAAiB,WACxD,gBACA;AACJ,SAAO,MAAM,KAAK,QAAQ,0BAA0B,KAAK,MAAM,iBAAiB,OAAO;AACxF;","names":[]}