{"version":3,"sources":["../../../../../nodes/Postgres/v2/methods/listSearch.ts"],"sourcesContent":["import type { ILoadOptionsFunctions, INodeListSearchResult } from 'n8n-workflow';\n\nimport { configurePostgres } from '../../transport';\nimport type { PostgresNodeCredentials } from '../helpers/interfaces';\n\nexport async function schemaSearch(this: ILoadOptionsFunctions): Promise<INodeListSearchResult> {\n\tconst credentials = await this.getCredentials<PostgresNodeCredentials>('postgres');\n\tconst options = { nodeVersion: this.getNode().typeVersion };\n\n\tconst { db } = await configurePostgres.call(this, credentials, options);\n\n\tconst response = await db.any('SELECT schema_name FROM information_schema.schemata');\n\n\treturn {\n\t\tresults: response.map((schema) => ({\n\t\t\tname: schema.schema_name as string,\n\t\t\tvalue: schema.schema_name as string,\n\t\t})),\n\t};\n}\nexport async function tableSearch(this: ILoadOptionsFunctions): Promise<INodeListSearchResult> {\n\tconst credentials = await this.getCredentials<PostgresNodeCredentials>('postgres');\n\tconst options = { nodeVersion: this.getNode().typeVersion };\n\n\tconst { db } = await configurePostgres.call(this, credentials, options);\n\n\tconst schema = this.getNodeParameter('schema', 0, {\n\t\textractValue: true,\n\t}) as string;\n\n\tconst response = await db.any(\n\t\t'SELECT table_name FROM information_schema.tables WHERE table_schema=$1',\n\t\t[schema],\n\t);\n\n\treturn {\n\t\tresults: response.map((table) => ({\n\t\t\tname: table.table_name as string,\n\t\t\tvalue: table.table_name as string,\n\t\t})),\n\t};\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,uBAAkC;AAGlC,eAAsB,eAA0E;AAC/F,QAAM,cAAc,MAAM,KAAK,eAAwC,UAAU;AACjF,QAAM,UAAU,EAAE,aAAa,KAAK,QAAQ,EAAE,YAAY;AAE1D,QAAM,EAAE,GAAG,IAAI,MAAM,mCAAkB,KAAK,MAAM,aAAa,OAAO;AAEtE,QAAM,WAAW,MAAM,GAAG,IAAI,qDAAqD;AAEnF,SAAO;AAAA,IACN,SAAS,SAAS,IAAI,CAAC,YAAY;AAAA,MAClC,MAAM,OAAO;AAAA,MACb,OAAO,OAAO;AAAA,IACf,EAAE;AAAA,EACH;AACD;AACA,eAAsB,cAAyE;AAC9F,QAAM,cAAc,MAAM,KAAK,eAAwC,UAAU;AACjF,QAAM,UAAU,EAAE,aAAa,KAAK,QAAQ,EAAE,YAAY;AAE1D,QAAM,EAAE,GAAG,IAAI,MAAM,mCAAkB,KAAK,MAAM,aAAa,OAAO;AAEtE,QAAM,SAAS,KAAK,iBAAiB,UAAU,GAAG;AAAA,IACjD,cAAc;AAAA,EACf,CAAC;AAED,QAAM,WAAW,MAAM,GAAG;AAAA,IACzB;AAAA,IACA,CAAC,MAAM;AAAA,EACR;AAEA,SAAO;AAAA,IACN,SAAS,SAAS,IAAI,CAAC,WAAW;AAAA,MACjC,MAAM,MAAM;AAAA,MACZ,OAAO,MAAM;AAAA,IACd,EAAE;AAAA,EACH;AACD;","names":[]}