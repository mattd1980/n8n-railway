{"version":3,"sources":["../../../nodes/Jwt/Jwt.node.ts"],"sourcesContent":["import jwt from 'jsonwebtoken';\nimport type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport { formatPrivateKey } from '../../utils/utilities';\nimport { parseJsonParameter } from '../Set/v2/helpers/utils';\n\nconst prettifyOperation = (operation: string) => {\n\tif (operation === 'sign') {\n\t\treturn 'Sign a JWT';\n\t}\n\n\tif (operation === 'decode') {\n\t\treturn 'Decode a JWT';\n\t}\n\n\tif (operation === 'verify') {\n\t\treturn 'Verify a JWT';\n\t}\n\n\treturn operation;\n};\n\nconst getToken = (ctx: IExecuteFunctions, itemIndex = 0) => {\n\tconst token = ctx.getNodeParameter('token', itemIndex) as string;\n\n\tif (!token) {\n\t\tthrow new NodeOperationError(ctx.getNode(), 'The JWT token was not provided', {\n\t\t\titemIndex,\n\t\t\tdescription: \"Be sure to add a valid JWT token to the 'Token' parameter\",\n\t\t});\n\t}\n\n\treturn token;\n};\n\nexport class Jwt implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'JWT',\n\t\tname: 'jwt',\n\t\ticon: 'file:jwt.svg',\n\t\tgroup: ['transform'],\n\t\tversion: 1,\n\t\tdescription: 'JWT',\n\t\tsubtitle: `={{(${prettifyOperation})($parameter.operation)}}`,\n\t\tdefaults: {\n\t\t\tname: 'JWT',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-class-description-credentials-name-unsuffixed\n\t\t\t\tname: 'jwtAuth',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Decode',\n\t\t\t\t\t\tvalue: 'decode',\n\t\t\t\t\t\taction: 'Decode a JWT',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Sign',\n\t\t\t\t\t\tvalue: 'sign',\n\t\t\t\t\t\taction: 'Sign a JWT',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Verify',\n\t\t\t\t\t\tvalue: 'verify',\n\t\t\t\t\t\taction: 'Verify a JWT',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'sign',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Use JSON to Build Payload',\n\t\t\t\tname: 'useJson',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: 'Whether to use JSON to build the claims',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['sign'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Payload Claims',\n\t\t\t\tname: 'claims',\n\t\t\t\ttype: 'collection',\n\t\t\t\tplaceholder: 'Add Claim',\n\t\t\t\tdefault: {},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Audience',\n\t\t\t\t\t\tname: 'audience',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tplaceholder: 'e.g. https://example.com',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Identifies the recipients that the JWT is intended for',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Expires In',\n\t\t\t\t\t\tname: 'expiresIn',\n\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\tplaceholder: 'e.g. 3600',\n\t\t\t\t\t\tdefault: 3600,\n\t\t\t\t\t\tdescription: 'The lifetime of the token in seconds',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tminValue: 0,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Issuer',\n\t\t\t\t\t\tname: 'issuer',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tplaceholder: 'e.g. https://example.com',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Identifies the principal that issued the JWT',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'JWT ID',\n\t\t\t\t\t\tname: 'jwtid',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tplaceholder: 'e.g. 123456',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Unique identifier for the JWT',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Not Before',\n\t\t\t\t\t\tname: 'notBefore',\n\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\tdefault: 0,\n\t\t\t\t\t\tdescription: 'The time before which the JWT must not be accepted for processing',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tminValue: 0,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Subject',\n\t\t\t\t\t\tname: 'subject',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Identifies the principal that is the subject of the JWT',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['sign'],\n\t\t\t\t\t\tuseJson: [false],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Payload Claims (JSON)',\n\t\t\t\tname: 'claimsJson',\n\t\t\t\ttype: 'json',\n\t\t\t\tdescription: 'Claims to add to the token in JSON format',\n\t\t\t\tdefault: '{\\n  \"my_field_1\": \"value 1\",\\n  \"my_field_2\": \"value 2\"\\n}\\n',\n\t\t\t\tvalidateType: 'object',\n\t\t\t\tignoreValidationDuringExecution: true,\n\t\t\t\ttypeOptions: {\n\t\t\t\t\trows: 5,\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['sign'],\n\t\t\t\t\t\tuseJson: [true],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Token',\n\t\t\t\tname: 'token',\n\t\t\t\ttype: 'string',\n\t\t\t\ttypeOptions: { password: true },\n\t\t\t\trequired: true,\n\t\t\t\tvalidateType: 'jwt',\n\t\t\t\tdefault: '',\n\t\t\t\tdescription: 'The token to verify or decode',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['verify', 'decode'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\n\t\t\t{\n\t\t\t\tdisplayName: 'Options',\n\t\t\t\tname: 'options',\n\t\t\t\ttype: 'collection',\n\t\t\t\tplaceholder: 'Add option',\n\t\t\t\tdefault: {},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Return Additional Info',\n\t\t\t\t\t\tname: 'complete',\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Whether to return the complete decoded token with information about the header and signature or just the payload',\n\t\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\t\t'/operation': ['verify', 'decode'],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Ignore Expiration',\n\t\t\t\t\t\tname: 'ignoreExpiration',\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\tdescription: 'Whether to ignore the expiration of the token',\n\t\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\t\t'/operation': ['verify'],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Ignore Not Before Claim',\n\t\t\t\t\t\tname: 'ignoreNotBefore',\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\tdescription: 'Whether to ignore the not before claim of the token',\n\t\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\t\t'/operation': ['verify'],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Clock Tolerance',\n\t\t\t\t\t\tname: 'clockTolerance',\n\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\tdefault: 0,\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Number of seconds to tolerate when checking the nbf and exp claims, to deal with small clock differences among different servers',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tminValue: 0,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\t\t'/operation': ['verify'],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Key ID',\n\t\t\t\t\t\tname: 'kid',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tplaceholder: 'e.g. 123456',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'The kid (key ID) claim is an optional header claim, used to specify the key for validating the signature',\n\t\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\t\t'/operation': ['sign'],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Override Algorithm',\n\t\t\t\t\t\tname: 'algorithm',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'ES256',\n\t\t\t\t\t\t\t\tvalue: 'ES256',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'ES384',\n\t\t\t\t\t\t\t\tvalue: 'ES384',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'ES512',\n\t\t\t\t\t\t\t\tvalue: 'ES512',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'HS256',\n\t\t\t\t\t\t\t\tvalue: 'HS256',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'HS384',\n\t\t\t\t\t\t\t\tvalue: 'HS384',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'HS512',\n\t\t\t\t\t\t\t\tvalue: 'HS512',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'PS256',\n\t\t\t\t\t\t\t\tvalue: 'PS256',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'PS384',\n\t\t\t\t\t\t\t\tvalue: 'PS384',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'PS512',\n\t\t\t\t\t\t\t\tvalue: 'PS512',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'RS256',\n\t\t\t\t\t\t\t\tvalue: 'RS256',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'RS384',\n\t\t\t\t\t\t\t\tvalue: 'RS384',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'RS512',\n\t\t\t\t\t\t\t\tvalue: 'RS512',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: 'HS256',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'The algorithm to use for signing or verifying the token, overrides algorithm in credentials',\n\t\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\t\t'/operation': ['sign', 'verify'],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\tconst credentials = await this.getCredentials<{\n\t\t\tkeyType: 'passphrase' | 'pemKey';\n\t\t\tpublicKey: string;\n\t\t\tprivateKey: string;\n\t\t\tsecret: string;\n\t\t\talgorithm: jwt.Algorithm;\n\t\t}>('jwtAuth');\n\n\t\tfor (let itemIndex = 0; itemIndex < items.length; itemIndex++) {\n\t\t\tconst options = this.getNodeParameter('options', itemIndex, {}) as {\n\t\t\t\talgorithm?: jwt.Algorithm;\n\t\t\t\tcomplete?: boolean;\n\t\t\t\tignoreExpiration?: boolean;\n\t\t\t\tignoreNotBefore?: boolean;\n\t\t\t\tclockTolerance?: number;\n\t\t\t\tkid?: string;\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tif (operation === 'sign') {\n\t\t\t\t\tconst useJson = this.getNodeParameter('useJson', itemIndex) as boolean;\n\n\t\t\t\t\tlet payload: IDataObject = {};\n\n\t\t\t\t\tif (useJson) {\n\t\t\t\t\t\tpayload = parseJsonParameter(\n\t\t\t\t\t\t\tthis.getNodeParameter('claimsJson', itemIndex) as IDataObject,\n\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\titemIndex,\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpayload = this.getNodeParameter('claims', itemIndex) as IDataObject;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet secretOrPrivateKey;\n\n\t\t\t\t\tif (credentials.keyType === 'passphrase') {\n\t\t\t\t\t\tsecretOrPrivateKey = credentials.secret;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsecretOrPrivateKey = formatPrivateKey(credentials.privateKey);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst signingOptions: jwt.SignOptions = {\n\t\t\t\t\t\talgorithm: options.algorithm ?? credentials.algorithm,\n\t\t\t\t\t};\n\t\t\t\t\tif (options.kid) signingOptions.keyid = options.kid;\n\n\t\t\t\t\tconst token = jwt.sign(payload, secretOrPrivateKey, signingOptions);\n\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tjson: { token },\n\t\t\t\t\t\tpairedItem: itemIndex,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (operation === 'verify') {\n\t\t\t\t\tconst token = getToken(this, itemIndex);\n\n\t\t\t\t\tlet secretOrPublicKey;\n\n\t\t\t\t\tif (credentials.keyType === 'passphrase') {\n\t\t\t\t\t\tsecretOrPublicKey = credentials.secret;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsecretOrPublicKey = formatPrivateKey(credentials.publicKey, true);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst { ignoreExpiration, ignoreNotBefore, clockTolerance, complete } = options;\n\n\t\t\t\t\tconst data = jwt.verify(token, secretOrPublicKey, {\n\t\t\t\t\t\talgorithms: [options.algorithm ?? credentials.algorithm],\n\t\t\t\t\t\tignoreExpiration,\n\t\t\t\t\t\tignoreNotBefore,\n\t\t\t\t\t\tclockTolerance,\n\t\t\t\t\t\tcomplete,\n\t\t\t\t\t});\n\n\t\t\t\t\tconst json = options.complete && data ? (data as IDataObject) : { payload: data };\n\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tjson,\n\t\t\t\t\t\tpairedItem: itemIndex,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (operation === 'decode') {\n\t\t\t\t\tconst token = getToken(this, itemIndex);\n\n\t\t\t\t\tconst data = jwt.decode(token, { complete: options.complete });\n\n\t\t\t\t\tconst json = options.complete && data ? (data as IDataObject) : { payload: data };\n\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tjson,\n\t\t\t\t\t\tpairedItem: itemIndex,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (error.message === 'invalid signature') {\n\t\t\t\t\terror = new NodeOperationError(this.getNode(), \"The JWT token can't be verified\", {\n\t\t\t\t\t\titemIndex,\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Be sure that the provided JWT token is correctly encoded and matches the selected credentials',\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tjson: this.getInputData(itemIndex)[0].json,\n\t\t\t\t\t\terror,\n\t\t\t\t\t\tpairedItem: itemIndex,\n\t\t\t\t\t});\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (error.context) {\n\t\t\t\t\terror.context.itemIndex = itemIndex;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t\tthrow new NodeOperationError(this.getNode(), error, {\n\t\t\t\t\titemIndex,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":["jwt"]}