{"version":3,"sources":["../../../nodes/StopAndError/StopAndError.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n\tJsonObject,\n} from 'n8n-workflow';\nimport { jsonParse, NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nconst errorObjectPlaceholder = `{\n\t\"code\": \"404\",\n\t\"description\": \"The resource could not be fetched\"\n}`;\n\nexport class StopAndError implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Stop and Error',\n\t\tname: 'stopAndError',\n\t\ticon: 'fa:exclamation-triangle',\n\t\ticonColor: 'red',\n\t\tgroup: ['input'],\n\t\tversion: 1,\n\t\tdescription: 'Throw an error in the workflow',\n\t\tdefaults: {\n\t\t\tname: 'Stop and Error',\n\t\t\tcolor: '#ff0000',\n\t\t},\n\t\tinputs: [NodeConnectionTypes.Main],\n\n\t\toutputs: [],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Error Type',\n\t\t\t\tname: 'errorType',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Error Message',\n\t\t\t\t\t\tvalue: 'errorMessage',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Error Object',\n\t\t\t\t\t\tvalue: 'errorObject',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'errorMessage',\n\t\t\t\tdescription: 'Type of error to throw',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Error Message',\n\t\t\t\tname: 'errorMessage',\n\t\t\t\ttype: 'string',\n\t\t\t\tplaceholder: 'An error occurred!',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\terrorType: ['errorMessage'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Error Object',\n\t\t\t\tname: 'errorObject',\n\t\t\t\ttype: 'json',\n\t\t\t\tdescription: 'Object containing error properties',\n\t\t\t\tdefault: '',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\talwaysOpenEditWindow: true,\n\t\t\t\t},\n\t\t\t\tplaceholder: errorObjectPlaceholder,\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\terrorType: ['errorObject'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst errorType = this.getNodeParameter('errorType', 0) as 'errorMessage' | 'errorObject';\n\t\tconst { id: workflowId, name: workflowName } = this.getWorkflow();\n\n\t\tlet toThrow: string | JsonObject;\n\n\t\tif (errorType === 'errorMessage') {\n\t\t\ttoThrow = this.getNodeParameter('errorMessage', 0) as string;\n\t\t} else {\n\t\t\tconst json = this.getNodeParameter('errorObject', 0) as string;\n\n\t\t\tconst errorObject = jsonParse<JsonObject>(json);\n\n\t\t\ttoThrow = {\n\t\t\t\tname: 'User-thrown error',\n\t\t\t\tmessage: `Workflow ID ${workflowId} \"${workflowName}\" has failed`,\n\t\t\t\t...errorObject,\n\t\t\t};\n\t\t}\n\n\t\tthrow new NodeOperationError(this.getNode(), toThrow);\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,0BAAmE;AAEnE,MAAM,yBAAyB;AAAA;AAAA;AAAA;AAKxB,MAAM,aAAkC;AAAA,EAAxC;AACN,uBAAoC;AAAA,MACnC,aAAa;AAAA,MACb,MAAM;AAAA,MACN,MAAM;AAAA,MACN,WAAW;AAAA,MACX,OAAO,CAAC,OAAO;AAAA,MACf,SAAS;AAAA,MACT,aAAa;AAAA,MACb,UAAU;AAAA,QACT,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,MACA,QAAQ,CAAC,wCAAoB,IAAI;AAAA,MAEjC,SAAS,CAAC;AAAA,MACV,YAAY;AAAA,QACX;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,SAAS;AAAA,YACR;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,UACD;AAAA,UACA,SAAS;AAAA,UACT,aAAa;AAAA,QACd;AAAA,QACA;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,aAAa;AAAA,UACb,SAAS;AAAA,UACT,UAAU;AAAA,UACV,gBAAgB;AAAA,YACf,MAAM;AAAA,cACL,WAAW,CAAC,cAAc;AAAA,YAC3B;AAAA,UACD;AAAA,QACD;AAAA,QACA;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,aAAa;AAAA,UACb,SAAS;AAAA,UACT,aAAa;AAAA,YACZ,sBAAsB;AAAA,UACvB;AAAA,UACA,aAAa;AAAA,UACb,UAAU;AAAA,UACV,gBAAgB;AAAA,YACf,MAAM;AAAA,cACL,WAAW,CAAC,aAAa;AAAA,YAC1B;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA;AAAA,EAEA,MAAM,UAAkE;AACvE,UAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,UAAM,EAAE,IAAI,YAAY,MAAM,aAAa,IAAI,KAAK,YAAY;AAEhE,QAAI;AAEJ,QAAI,cAAc,gBAAgB;AACjC,gBAAU,KAAK,iBAAiB,gBAAgB,CAAC;AAAA,IAClD,OAAO;AACN,YAAM,OAAO,KAAK,iBAAiB,eAAe,CAAC;AAEnD,YAAM,kBAAc,+BAAsB,IAAI;AAE9C,gBAAU;AAAA,QACT,MAAM;AAAA,QACN,SAAS,eAAe,UAAU,KAAK,YAAY;AAAA,QACnD,GAAG;AAAA,MACJ;AAAA,IACD;AAEA,UAAM,IAAI,uCAAmB,KAAK,QAAQ,GAAG,OAAO;AAAA,EACrD;AACD;","names":[]}