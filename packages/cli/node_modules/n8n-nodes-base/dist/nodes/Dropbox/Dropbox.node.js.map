{"version":3,"sources":["../../../nodes/Dropbox/Dropbox.node.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHttpRequestMethods,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport {\n\tdropboxApiRequest,\n\tdropboxpiRequestAllItems,\n\tgetCredentials,\n\tgetRootDirectory,\n\tsimplify,\n} from './GenericFunctions';\n\nexport class Dropbox implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Dropbox',\n\t\tname: 'dropbox',\n\t\ticon: 'file:dropbox.svg',\n\t\tgroup: ['input'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Access data on Dropbox',\n\t\tdefaults: {\n\t\t\tname: 'Dropbox',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'dropboxApi',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['accessToken'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'dropboxOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['oAuth2'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Authentication',\n\t\t\t\tname: 'authentication',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Access Token',\n\t\t\t\t\t\tvalue: 'accessToken',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'OAuth2',\n\t\t\t\t\t\tvalue: 'oAuth2',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'accessToken',\n\t\t\t\tdescription: 'Means of authenticating with the service',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'File',\n\t\t\t\t\t\tvalue: 'file',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Folder',\n\t\t\t\t\t\tvalue: 'folder',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Search',\n\t\t\t\t\t\tvalue: 'search',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'file',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         operations\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['file'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Copy',\n\t\t\t\t\t\tvalue: 'copy',\n\t\t\t\t\t\tdescription: 'Copy a file',\n\t\t\t\t\t\taction: 'Copy a file',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Delete',\n\t\t\t\t\t\tvalue: 'delete',\n\t\t\t\t\t\tdescription: 'Delete a file',\n\t\t\t\t\t\taction: 'Delete a file',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Download',\n\t\t\t\t\t\tvalue: 'download',\n\t\t\t\t\t\tdescription: 'Download a file',\n\t\t\t\t\t\taction: 'Download a file',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Move',\n\t\t\t\t\t\tvalue: 'move',\n\t\t\t\t\t\tdescription: 'Move a file',\n\t\t\t\t\t\taction: 'Move a file',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Upload',\n\t\t\t\t\t\tvalue: 'upload',\n\t\t\t\t\t\tdescription: 'Upload a file',\n\t\t\t\t\t\taction: 'Upload a file',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'upload',\n\t\t\t},\n\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['folder'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Copy',\n\t\t\t\t\t\tvalue: 'copy',\n\t\t\t\t\t\tdescription: 'Copy a folder',\n\t\t\t\t\t\taction: 'Copy a folder',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Create',\n\t\t\t\t\t\tvalue: 'create',\n\t\t\t\t\t\tdescription: 'Create a folder',\n\t\t\t\t\t\taction: 'Create a folder',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Delete',\n\t\t\t\t\t\tvalue: 'delete',\n\t\t\t\t\t\tdescription: 'Delete a folder',\n\t\t\t\t\t\taction: 'Delete a folder',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'List',\n\t\t\t\t\t\tvalue: 'list',\n\t\t\t\t\t\tdescription: 'Return the files and folders in a given folder',\n\t\t\t\t\t\taction: 'List a folder',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Move',\n\t\t\t\t\t\tvalue: 'move',\n\t\t\t\t\t\tdescription: 'Move a folder',\n\t\t\t\t\t\taction: 'Move a folder',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'create',\n\t\t\t},\n\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['search'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Query',\n\t\t\t\t\t\tvalue: 'query',\n\t\t\t\t\t\taction: 'Query',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'query',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         file\n\t\t\t// ----------------------------------\n\n\t\t\t// ----------------------------------\n\t\t\t//         file/folder:copy\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'From Path',\n\t\t\t\tname: 'path',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['copy'],\n\t\t\t\t\t\tresource: ['file', 'folder'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplaceholder: '/invoices/original.txt',\n\t\t\t\tdescription: 'The path of file or folder to copy',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'To Path',\n\t\t\t\tname: 'toPath',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['copy'],\n\t\t\t\t\t\tresource: ['file', 'folder'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplaceholder: '/invoices/copy.txt',\n\t\t\t\tdescription: 'The destination path of file or folder',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         file/folder:delete\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Delete Path',\n\t\t\t\tname: 'path',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['delete'],\n\t\t\t\t\t\tresource: ['file', 'folder'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplaceholder: '/invoices/2019/invoice_1.pdf',\n\t\t\t\tdescription: 'The path to delete. Can be a single file or a whole folder.',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         file/folder:move\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'From Path',\n\t\t\t\tname: 'path',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['move'],\n\t\t\t\t\t\tresource: ['file', 'folder'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplaceholder: '/invoices/old_name.txt',\n\t\t\t\tdescription: 'The path of file or folder to move',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'To Path',\n\t\t\t\tname: 'toPath',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['move'],\n\t\t\t\t\t\tresource: ['file', 'folder'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplaceholder: '/invoices/new_name.txt',\n\t\t\t\tdescription: 'The new path of file or folder',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         file:download\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'File Path',\n\t\t\t\tname: 'path',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['download'],\n\t\t\t\t\t\tresource: ['file'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplaceholder: '/invoices/2019/invoice_1.pdf',\n\t\t\t\tdescription: 'The file path of the file to download. Has to contain the full path.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Put Output File in Field',\n\t\t\t\tname: 'binaryPropertyName',\n\t\t\t\ttype: 'string',\n\t\t\t\trequired: true,\n\t\t\t\tdefault: 'data',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['download'],\n\t\t\t\t\t\tresource: ['file'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\thint: 'The name of the output binary field to put the file in',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         file:upload\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'File Path',\n\t\t\t\tname: 'path',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['upload'],\n\t\t\t\t\t\tresource: ['file'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplaceholder: '/invoices/2019/invoice_1.pdf',\n\t\t\t\tdescription:\n\t\t\t\t\t'The file path of the file to upload. Has to contain the full path. The parent folder has to exist. Existing files get overwritten.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Binary File',\n\t\t\t\tname: 'binaryData',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['upload'],\n\t\t\t\t\t\tresource: ['file'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'Whether the data to upload should be taken from binary field',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'File Content',\n\t\t\t\tname: 'fileContent',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['upload'],\n\t\t\t\t\t\tresource: ['file'],\n\t\t\t\t\t\tbinaryData: [false],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplaceholder: '',\n\t\t\t\tdescription: 'The text content of the file to upload',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Input Binary Field',\n\t\t\t\tname: 'binaryPropertyName',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: 'data',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['upload'],\n\t\t\t\t\t\tresource: ['file'],\n\t\t\t\t\t\tbinaryData: [true],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplaceholder: '',\n\t\t\t\thint: 'The name of the input binary field containing the file to be uploaded',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         search:query\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Query',\n\t\t\t\tname: 'query',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['query'],\n\t\t\t\t\t\tresource: ['search'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription:\n\t\t\t\t\t'The string to search for. May match across multiple fields based on the request arguments.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'File Status',\n\t\t\t\tname: 'fileStatus',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Active',\n\t\t\t\t\t\tvalue: 'active',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Deleted',\n\t\t\t\t\t\tvalue: 'deleted',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'active',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['query'],\n\t\t\t\t\t\tresource: ['search'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription:\n\t\t\t\t\t'The string to search for. May match across multiple fields based on the request arguments.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Return All',\n\t\t\t\tname: 'returnAll',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['query'],\n\t\t\t\t\t\tresource: ['search'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: 'Whether to return all results or only up to a given limit',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Limit',\n\t\t\t\tname: 'limit',\n\t\t\t\ttype: 'number',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tminValue: 1,\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['search'],\n\t\t\t\t\t\toperation: ['query'],\n\t\t\t\t\t\treturnAll: [false],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: 100,\n\t\t\t\tdescription: 'Max number of results to return',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Simplify',\n\t\t\t\tname: 'simple',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['query'],\n\t\t\t\t\t\tresource: ['search'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: true,\n\t\t\t\tdescription:\n\t\t\t\t\t'Whether to return a simplified version of the response instead of the raw data',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Filters',\n\t\t\t\tname: 'filters',\n\t\t\t\ttype: 'collection',\n\t\t\t\tplaceholder: 'Add Filter',\n\t\t\t\tdefault: {},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['search'],\n\t\t\t\t\t\toperation: ['query'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'File Categories',\n\t\t\t\t\t\tname: 'file_categories',\n\t\t\t\t\t\ttype: 'multiOptions',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-display-name-miscased\n\t\t\t\t\t\t\t\tname: 'Audio (mp3, qav, mid, etc.)',\n\t\t\t\t\t\t\t\tvalue: 'audio',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-display-name-miscased\n\t\t\t\t\t\t\t\tname: 'Document (doc, docx, txt, etc.)',\n\t\t\t\t\t\t\t\tvalue: 'document',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Dropbox Paper',\n\t\t\t\t\t\t\t\tvalue: 'paper',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Folder',\n\t\t\t\t\t\t\t\tvalue: 'folder',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-display-name-miscased\n\t\t\t\t\t\t\t\tname: 'Image (jpg, png, gif, etc.)',\n\t\t\t\t\t\t\t\tvalue: 'image',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Other',\n\t\t\t\t\t\t\t\tvalue: 'other',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'PDF',\n\t\t\t\t\t\t\t\tvalue: 'pdf',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-display-name-miscased\n\t\t\t\t\t\t\t\tname: 'Presentation (ppt, pptx, key, etc.)',\n\t\t\t\t\t\t\t\tvalue: 'presentation',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-display-name-miscased\n\t\t\t\t\t\t\t\tname: 'Spreadsheet (xlsx, xls, csv, etc.)',\n\t\t\t\t\t\t\t\tvalue: 'spreadsheet',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-display-name-miscased\n\t\t\t\t\t\t\t\tname: 'Video (avi, wmv, mp4, etc.)',\n\t\t\t\t\t\t\t\tvalue: 'video',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: [],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'File Extensions',\n\t\t\t\t\t\tname: 'file_extensions',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Multiple file extensions can be set separated by comma. Example: jpg,pdf.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Folder',\n\t\t\t\t\t\tname: 'path',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'If this field is not specified, this module searches the entire Dropbox',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         folder\n\t\t\t// ----------------------------------\n\n\t\t\t// ----------------------------------\n\t\t\t//         folder:create\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Folder',\n\t\t\t\tname: 'path',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t\tresource: ['folder'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplaceholder: '/invoices/2019',\n\t\t\t\tdescription: 'The folder to create. The parent folder has to exist.',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         folder:list\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Folder Path',\n\t\t\t\tname: 'path',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['list'],\n\t\t\t\t\t\tresource: ['folder'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplaceholder: '/invoices/2019/',\n\t\t\t\tdescription: 'The path of which to list the content',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Return All',\n\t\t\t\tname: 'returnAll',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['list'],\n\t\t\t\t\t\tresource: ['folder'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: 'Whether to return all results or only up to a given limit',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Limit',\n\t\t\t\tname: 'limit',\n\t\t\t\ttype: 'number',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tminValue: 1,\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['folder'],\n\t\t\t\t\t\toperation: ['list'],\n\t\t\t\t\t\treturnAll: [false],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: 100,\n\t\t\t\tdescription: 'Max number of results to return',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Filters',\n\t\t\t\tname: 'filters',\n\t\t\t\ttype: 'collection',\n\t\t\t\tplaceholder: 'Add Filter',\n\t\t\t\tdefault: {},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['folder'],\n\t\t\t\t\t\toperation: ['list'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Include Deleted',\n\t\t\t\t\t\tname: 'include_deleted',\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Whether the results will include entries for files and folders that used to exist but were deleted. The default for this field is False.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Include Shared Members',\n\t\t\t\t\t\tname: 'include_has_explicit_shared_members',\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Whether the results will include a flag for each file indicating whether or not that file has any explicit members. The default for this field is False.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Include Mounted Folders',\n\t\t\t\t\t\tname: 'include_mounted_folders',\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdefault: true,\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Whether the results will include entries under mounted folders which includes app folder, shared folder and team folder. The default for this field is True.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Include Non Downloadable Files',\n\t\t\t\t\t\tname: 'include_non_downloadable_files',\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdefault: true,\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Whether to include files that are not downloadable, i.e. Google Docs. The default for this field is True.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Recursive',\n\t\t\t\t\t\tname: 'recursive',\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Whether the list folder operation will be applied recursively to all subfolders and the response will contain contents of all subfolders. The default for this field is False.',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\tlet endpoint = '';\n\t\tlet requestMethod: IHttpRequestMethods = 'GET';\n\t\tlet returnAll = false;\n\t\tlet property = '';\n\t\tlet body: IDataObject | Buffer;\n\t\tlet options;\n\t\tconst query: IDataObject = {};\n\n\t\tlet headers: IDataObject = {};\n\t\tlet simple = false;\n\n\t\tconst { accessType } = await getCredentials.call(this);\n\n\t\tif (accessType === 'full') {\n\t\t\t// get the root directory to set it as the default for all operations\n\t\t\tconst {\n\t\t\t\troot_info: { root_namespace_id },\n\t\t\t} = await getRootDirectory.call(this);\n\n\t\t\theaders = {\n\t\t\t\t'dropbox-api-path-root': JSON.stringify({\n\t\t\t\t\t'.tag': 'root',\n\t\t\t\t\troot: root_namespace_id,\n\t\t\t\t}),\n\t\t\t};\n\t\t}\n\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\ttry {\n\t\t\t\tbody = {};\n\n\t\t\t\tif (resource === 'file') {\n\t\t\t\t\tif (operation === 'download') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         download\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'POST';\n\n\t\t\t\t\t\tquery.arg = JSON.stringify({\n\t\t\t\t\t\t\tpath: this.getNodeParameter('path', i) as string,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tendpoint = 'https://content.dropboxapi.com/2/files/download';\n\t\t\t\t\t} else if (operation === 'upload') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         upload\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'POST';\n\t\t\t\t\t\theaders['Content-Type'] = 'application/octet-stream';\n\n\t\t\t\t\t\tquery.arg = JSON.stringify({\n\t\t\t\t\t\t\tmode: 'overwrite',\n\t\t\t\t\t\t\tpath: this.getNodeParameter('path', i) as string,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tendpoint = 'https://content.dropboxapi.com/2/files/upload';\n\n\t\t\t\t\t\toptions = { json: false };\n\n\t\t\t\t\t\tif (this.getNodeParameter('binaryData', i)) {\n\t\t\t\t\t\t\tconst binaryPropertyName = this.getNodeParameter('binaryPropertyName', i);\n\t\t\t\t\t\t\tthis.helpers.assertBinaryData(i, binaryPropertyName);\n\t\t\t\t\t\t\tbody = await this.helpers.getBinaryDataBuffer(i, binaryPropertyName);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Is text file\n\t\t\t\t\t\t\tbody = Buffer.from(this.getNodeParameter('fileContent', i) as string, 'utf8');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'folder') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         create\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'POST';\n\t\t\t\t\t\tbody = {\n\t\t\t\t\t\t\tpath: this.getNodeParameter('path', i) as string,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tendpoint = 'https://api.dropboxapi.com/2/files/create_folder_v2';\n\t\t\t\t\t} else if (operation === 'list') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         list\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\treturnAll = this.getNodeParameter('returnAll', 0);\n\n\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\n\t\t\t\t\t\tproperty = 'entries';\n\n\t\t\t\t\t\trequestMethod = 'POST';\n\t\t\t\t\t\tbody = {\n\t\t\t\t\t\t\tpath: this.getNodeParameter('path', i) as string,\n\t\t\t\t\t\t\tlimit: 1000,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', 0);\n\t\t\t\t\t\t\tbody.limit = limit;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tObject.assign(body, filters);\n\n\t\t\t\t\t\tendpoint = 'https://api.dropboxapi.com/2/files/list_folder';\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'search') {\n\t\t\t\t\tif (operation === 'query') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         query\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\treturnAll = this.getNodeParameter('returnAll', 0);\n\n\t\t\t\t\t\tsimple = this.getNodeParameter('simple', 0) as boolean;\n\n\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\n\t\t\t\t\t\tproperty = 'matches';\n\n\t\t\t\t\t\trequestMethod = 'POST';\n\t\t\t\t\t\tbody = {\n\t\t\t\t\t\t\tquery: this.getNodeParameter('query', i) as string,\n\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\tfilename_only: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (filters.file_extensions) {\n\t\t\t\t\t\t\tfilters.file_extensions = (filters.file_extensions as string).split(',');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tObject.assign(body.options!, filters);\n\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tObject.assign(body.options!, { max_results: limit });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tendpoint = 'https://api.dropboxapi.com/2/files/search_v2';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (['file', 'folder', 'search'].includes(resource)) {\n\t\t\t\t\tif (operation === 'copy') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         copy\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'POST';\n\t\t\t\t\t\tbody = {\n\t\t\t\t\t\t\tfrom_path: this.getNodeParameter('path', i) as string,\n\t\t\t\t\t\t\tto_path: this.getNodeParameter('toPath', i) as string,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tendpoint = 'https://api.dropboxapi.com/2/files/copy_v2';\n\t\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         delete\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'POST';\n\t\t\t\t\t\tbody = {\n\t\t\t\t\t\t\tpath: this.getNodeParameter('path', i) as string,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tendpoint = 'https://api.dropboxapi.com/2/files/delete_v2';\n\t\t\t\t\t} else if (operation === 'move') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         move\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'POST';\n\t\t\t\t\t\tbody = {\n\t\t\t\t\t\t\tfrom_path: this.getNodeParameter('path', i) as string,\n\t\t\t\t\t\t\tto_path: this.getNodeParameter('toPath', i) as string,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tendpoint = 'https://api.dropboxapi.com/2/files/move_v2';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new NodeOperationError(this.getNode(), `The resource \"${resource}\" is not known!`, {\n\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (resource === 'file' && operation === 'download') {\n\t\t\t\t\t// Return the data as a buffer\n\t\t\t\t\toptions = { encoding: null };\n\t\t\t\t}\n\n\t\t\t\tlet responseData;\n\n\t\t\t\tif (returnAll) {\n\t\t\t\t\tresponseData = await dropboxpiRequestAllItems.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\tproperty,\n\t\t\t\t\t\trequestMethod,\n\t\t\t\t\t\tendpoint,\n\t\t\t\t\t\tbody,\n\t\t\t\t\t\tquery,\n\t\t\t\t\t\theaders,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tresponseData = await dropboxApiRequest.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\trequestMethod,\n\t\t\t\t\t\tendpoint,\n\t\t\t\t\t\tbody,\n\t\t\t\t\t\tquery,\n\t\t\t\t\t\theaders,\n\t\t\t\t\t\toptions,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (resource === 'file' && operation === 'upload') {\n\t\t\t\t\tconst data = JSON.parse(responseData as string);\n\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray(data as IDataObject[]),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t} else if (resource === 'file' && operation === 'download') {\n\t\t\t\t\tconst newItem: INodeExecutionData = {\n\t\t\t\t\t\tjson: items[i].json,\n\t\t\t\t\t\tbinary: {},\n\t\t\t\t\t\tpairedItem: { item: i },\n\t\t\t\t\t};\n\n\t\t\t\t\tif (items[i].binary !== undefined) {\n\t\t\t\t\t\t// Create a shallow copy of the binary data so that the old\n\t\t\t\t\t\t// data references which do not get changed still stay behind\n\t\t\t\t\t\t// but the incoming data does not get changed.\n\t\t\t\t\t\tObject.assign(newItem.binary!, items[i].binary);\n\t\t\t\t\t}\n\n\t\t\t\t\titems[i] = newItem;\n\n\t\t\t\t\tconst dataPropertyNameDownload = this.getNodeParameter('binaryPropertyName', i);\n\n\t\t\t\t\tconst filePathDownload = this.getNodeParameter('path', i) as string;\n\t\t\t\t\titems[i].binary![dataPropertyNameDownload] = await this.helpers.prepareBinaryData(\n\t\t\t\t\t\tBuffer.from(responseData as string),\n\t\t\t\t\t\tfilePathDownload,\n\t\t\t\t\t);\n\t\t\t\t} else if (resource === 'folder' && operation === 'list') {\n\t\t\t\t\tconst propNames: { [key: string]: string } = {\n\t\t\t\t\t\tid: 'id',\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\tclient_modified: 'lastModifiedClient',\n\t\t\t\t\t\tserver_modified: 'lastModifiedServer',\n\t\t\t\t\t\trev: 'rev',\n\t\t\t\t\t\tsize: 'contentSize',\n\t\t\t\t\t\t'.tag': 'type',\n\t\t\t\t\t\tcontent_hash: 'contentHash',\n\t\t\t\t\t\tpath_lower: 'pathLower',\n\t\t\t\t\t\tpath_display: 'pathDisplay',\n\t\t\t\t\t\thas_explicit_shared_members: 'hasExplicitSharedMembers',\n\t\t\t\t\t\tis_downloadable: 'isDownloadable',\n\t\t\t\t\t};\n\n\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\tresponseData = responseData.entries;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const item of responseData) {\n\t\t\t\t\t\tconst newItem: IDataObject = {};\n\n\t\t\t\t\t\t// Get the props and save them under a proper name\n\t\t\t\t\t\tfor (const propName of Object.keys(propNames)) {\n\t\t\t\t\t\t\tif (item[propName] !== undefined) {\n\t\t\t\t\t\t\t\tnewItem[propNames[propName]] = item[propName];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\tthis.helpers.returnJsonArray(newItem),\n\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'search' && operation === 'query') {\n\t\t\t\t\tlet data = responseData;\n\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\tdata = simple ? simplify(responseData as IDataObject[]) : responseData;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdata = simple\n\t\t\t\t\t\t\t? simplify(responseData[property] as IDataObject[])\n\t\t\t\t\t\t\t: responseData[property];\n\t\t\t\t\t}\n\n\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray(data as IDataObject[]),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\n\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t} else {\n\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tif (resource === 'file' && operation === 'download') {\n\t\t\t\t\t\titems[i].json = { error: error.message };\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturnData.push({ json: { error: error.message } });\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\tif (resource === 'file' && operation === 'download') {\n\t\t\t// For file downloads the files get attached to the existing items\n\t\t\treturn [items];\n\t\t} else {\n\t\t\t// For all other ones does the output items get replaced\n\t\t\treturn [returnData];\n\t\t}\n\t}\n}\n"],"mappings":"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","names":[]}