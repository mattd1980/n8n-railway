{"version":3,"sources":["../../../../nodes/CrowdDev/descriptions/organizationFields.ts"],"sourcesContent":["import type { INodeProperties } from 'n8n-workflow';\n\nimport { getAdditionalOptions, getId, mapWith, showFor } from './utils';\nimport { organizationPresend } from '../GenericFunctions';\n\nconst displayOpts = showFor(['organization']);\n\nconst displayFor = {\n\tresource: displayOpts(),\n\tcreateOrUpdate: displayOpts(['create', 'update']),\n\tid: displayOpts(['delete', 'find', 'update']),\n};\n\nconst organizationOperations: INodeProperties = {\n\tdisplayName: 'Operation',\n\tname: 'operation',\n\ttype: 'options',\n\tdisplayOptions: displayFor.resource.displayOptions,\n\tnoDataExpression: true,\n\tdefault: 'find',\n\toptions: [\n\t\t{\n\t\t\tname: 'Create',\n\t\t\tvalue: 'create',\n\t\t\tdescription: 'Create an organization',\n\t\t\taction: 'Create an organization',\n\t\t\trouting: {\n\t\t\t\tsend: { preSend: [organizationPresend] },\n\t\t\t\trequest: {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\turl: '/organization',\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname: 'Delete',\n\t\t\tvalue: 'delete',\n\t\t\tdescription: 'Delete an organization',\n\t\t\taction: 'Delete an organization',\n\t\t\trouting: {\n\t\t\t\trequest: {\n\t\t\t\t\tmethod: 'DELETE',\n\t\t\t\t\turl: '=/organization',\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname: 'Find',\n\t\t\tvalue: 'find',\n\t\t\tdescription: 'Find an organization',\n\t\t\taction: 'Find an organization',\n\t\t\trouting: {\n\t\t\t\trequest: {\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\turl: '=/organization/{{$parameter[\"id\"]}}',\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname: 'Update',\n\t\t\tvalue: 'update',\n\t\t\tdescription: 'Update an organization',\n\t\t\taction: 'Update an organization',\n\t\t\trouting: {\n\t\t\t\tsend: { preSend: [organizationPresend] },\n\t\t\t\trequest: {\n\t\t\t\t\tmethod: 'PUT',\n\t\t\t\t\turl: '=/organization/{{$parameter[\"id\"]}}',\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n};\n\nconst commonFields: INodeProperties[] = [\n\t{\n\t\tdisplayName: 'Name',\n\t\tname: 'name',\n\t\tdescription: 'The name of the organization',\n\t\ttype: 'string',\n\t\trequired: true,\n\t\tdefault: '',\n\t},\n];\n\nconst additionalOptions: INodeProperties[] = [\n\t{\n\t\tdisplayName: 'Url',\n\t\tname: 'url',\n\t\tdescription: 'The URL of the organization',\n\t\ttype: 'string',\n\t\tdefault: '',\n\t},\n\t{\n\t\tdisplayName: 'Description',\n\t\tname: 'description',\n\t\tdescription: 'A short description of the organization',\n\t\ttype: 'string',\n\t\ttypeOptions: {\n\t\t\trows: 3,\n\t\t},\n\t\tdefault: '',\n\t},\n\t{\n\t\tdisplayName: 'Logo',\n\t\tname: 'logo',\n\t\tdescription: 'A URL for logo of the organization',\n\t\ttype: 'string',\n\t\tdefault: '',\n\t},\n\t{\n\t\tdisplayName: 'Employees',\n\t\tname: 'employees',\n\t\tdescription: 'The number of employees of the organization',\n\t\ttype: 'number',\n\t\tdefault: '',\n\t},\n\t{\n\t\tdisplayName: 'Members',\n\t\tname: 'members',\n\t\tdescription:\n\t\t\t'Members associated with the organization. Each element in the array is the ID of the member.',\n\t\ttype: 'fixedCollection',\n\t\ttypeOptions: {\n\t\t\tmultipleValues: true,\n\t\t},\n\t\tdefault: {},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Item Choice',\n\t\t\t\tname: 'itemChoice',\n\t\t\t\tvalues: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Member',\n\t\t\t\t\t\tname: 'member',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t},\n];\n\nconst organizationFields: INodeProperties[] = [\n\tObject.assign(getId(), { description: 'The ID of the organization' }, displayFor.id),\n\t...commonFields.map(mapWith(displayFor.createOrUpdate)),\n\tObject.assign({}, getAdditionalOptions(additionalOptions), displayFor.createOrUpdate),\n];\n\nexport { organizationOperations, organizationFields };\n"],"mappings":"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","names":[]}