{"version":3,"sources":["../../../../nodes/CrowdDev/descriptions/activityFields.ts"],"sourcesContent":["import type { INodeProperties } from 'n8n-workflow';\n\nimport { emailsField } from './shared';\nimport { getAdditionalOptions, mapWith, showFor } from './utils';\nimport { activityPresend } from '../GenericFunctions';\n\nconst displayOpts = showFor(['activity']);\n\nconst displayFor = {\n\tresource: displayOpts(),\n\tcreateWithMember: displayOpts(['createWithMember']),\n\tcreateForMember: displayOpts(['createForMember']),\n};\n\nconst activityOperations: INodeProperties = {\n\tdisplayName: 'Operation',\n\tname: 'operation',\n\ttype: 'options',\n\tdisplayOptions: displayFor.resource.displayOptions,\n\tnoDataExpression: true,\n\tdefault: 'createWithMember',\n\toptions: [\n\t\t{\n\t\t\tname: 'Create or Update with a Member',\n\t\t\tvalue: 'createWithMember',\n\t\t\tdescription: 'Create or update an activity with a member',\n\t\t\taction: 'Create or update an activity with a member',\n\t\t\trouting: {\n\t\t\t\tsend: { preSend: [activityPresend] },\n\t\t\t\trequest: {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\turl: '/activity/with-member',\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname: 'Create',\n\t\t\tvalue: 'createForMember',\n\t\t\tdescription: 'Create an activity for a member',\n\t\t\taction: 'Create an activity for a member',\n\t\t\trouting: {\n\t\t\t\tsend: { preSend: [activityPresend] },\n\t\t\t\trequest: {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\turl: '/activity',\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n};\n\nconst createWithMemberFields: INodeProperties[] = [\n\t{\n\t\tdisplayName: 'Username',\n\t\tname: 'username',\n\t\ttype: 'fixedCollection',\n\t\ttypeOptions: {\n\t\t\tmultipleValues: true,\n\t\t},\n\t\trequired: true,\n\t\tdefault: {},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Item Choice',\n\t\t\t\tname: 'itemChoice',\n\t\t\t\tvalues: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Platform',\n\t\t\t\t\t\tdescription: 'Platform name (e.g twitter, github, etc)',\n\t\t\t\t\t\tname: 'key',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Username',\n\t\t\t\t\t\tdescription: 'Username at the specified Platform',\n\t\t\t\t\t\tname: 'value',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tdisplayName: 'displayName',\n\t\tname: 'displayName',\n\t\tdescription: 'UI friendly name of the member',\n\t\ttype: 'string',\n\t\tdefault: '',\n\t},\n\temailsField,\n\t{\n\t\tdisplayName: 'Joined At',\n\t\tname: 'joinedAt',\n\t\tdescription: 'Date of joining the community',\n\t\ttype: 'dateTime',\n\t\tdefault: '',\n\t},\n];\n\nconst memberIdField: INodeProperties = {\n\tdisplayName: 'Member',\n\tname: 'member',\n\tdescription: 'The ID of the member that performed the activity',\n\ttype: 'string',\n\trequired: true,\n\tdefault: '',\n};\n\nconst createCommonFields: INodeProperties[] = [\n\t{\n\t\tdisplayName: 'Type',\n\t\tname: 'type',\n\t\tdescription: 'Type of activity',\n\t\ttype: 'string',\n\t\trequired: true,\n\t\tdefault: '',\n\t},\n\t{\n\t\tdisplayName: 'Timestamp',\n\t\tname: 'timestamp',\n\t\tdescription: 'Date and time when the activity took place',\n\t\ttype: 'dateTime',\n\t\trequired: true,\n\t\tdefault: '',\n\t},\n\t{\n\t\tdisplayName: 'Platform',\n\t\tname: 'platform',\n\t\tdescription: 'Platform on which the activity took place',\n\t\ttype: 'string',\n\t\trequired: true,\n\t\tdefault: '',\n\t},\n\t{\n\t\tdisplayName: 'Source ID',\n\t\tname: 'sourceId',\n\t\tdescription: 'The ID of the activity in the platform (e.g. the ID of the message in Discord)',\n\t\ttype: 'string',\n\t\trequired: true,\n\t\tdefault: '',\n\t},\n];\n\nconst additionalOptions: INodeProperties[] = [\n\t{\n\t\tdisplayName: 'Title',\n\t\tname: 'title',\n\t\tdescription: 'Title of the activity',\n\t\ttype: 'string',\n\t\tdefault: '',\n\t},\n\t{\n\t\tdisplayName: 'Body',\n\t\tname: 'body',\n\t\tdescription: 'Body of the activity',\n\t\ttype: 'string',\n\t\tdefault: '',\n\t},\n\t{\n\t\tdisplayName: 'Channel',\n\t\tname: 'channel',\n\t\tdescription: 'Channel of the activity',\n\t\ttype: 'string',\n\t\tdefault: '',\n\t},\n\t{\n\t\tdisplayName: 'Source Parent ID',\n\t\tname: 'sourceParentId',\n\t\tdescription:\n\t\t\t'The ID of the parent activity in the platform (e.g. the ID of the parent message in Discord)',\n\t\ttype: 'string',\n\t\tdefault: '',\n\t},\n];\n\nconst activityFields: INodeProperties[] = [\n\t...createWithMemberFields.map(mapWith(displayFor.createWithMember)),\n\tObject.assign({}, memberIdField, displayFor.createForMember),\n\t...createCommonFields.map(mapWith(displayFor.resource)),\n\tObject.assign({}, getAdditionalOptions(additionalOptions), displayFor.resource),\n];\n\nexport { activityOperations, activityFields };\n"],"mappings":"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","names":[]}