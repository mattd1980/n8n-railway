{"version":3,"sources":["../../../nodes/ConvertKit/ConvertKitTrigger.node.ts"],"sourcesContent":["import { snakeCase } from 'change-case';\nimport type {\n\tIHookFunctions,\n\tIWebhookFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n\tIWebhookResponseData,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes } from 'n8n-workflow';\n\nimport { convertKitApiRequest } from './GenericFunctions';\n\nexport class ConvertKitTrigger implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'ConvertKit Trigger',\n\t\tname: 'convertKitTrigger',\n\t\ticon: 'file:convertKit.svg',\n\t\tsubtitle: '={{$parameter[\"event\"]}}',\n\t\tgroup: ['trigger'],\n\t\tversion: 1,\n\t\tdescription: 'Handle ConvertKit events via webhooks',\n\t\tdefaults: {\n\t\t\tname: 'ConvertKit Trigger',\n\t\t},\n\t\tinputs: [],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'convertKitApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\twebhooks: [\n\t\t\t{\n\t\t\t\tname: 'default',\n\t\t\t\thttpMethod: 'POST',\n\t\t\t\tresponseMode: 'onReceived',\n\t\t\t\tpath: 'webhook',\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Event',\n\t\t\t\tname: 'event',\n\t\t\t\ttype: 'options',\n\t\t\t\trequired: true,\n\t\t\t\tdefault: '',\n\t\t\t\tdescription: 'The events that can trigger the webhook and whether they are enabled',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Form Subscribe',\n\t\t\t\t\t\tvalue: 'formSubscribe',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Link Click',\n\t\t\t\t\t\tvalue: 'linkClick',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Product Purchase',\n\t\t\t\t\t\tvalue: 'productPurchase',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Purchase Created',\n\t\t\t\t\t\tvalue: 'purchaseCreate',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Sequence Complete',\n\t\t\t\t\t\tvalue: 'courseComplete',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Sequence Subscribe',\n\t\t\t\t\t\tvalue: 'courseSubscribe',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Subscriber Activated',\n\t\t\t\t\t\tvalue: 'subscriberActivate',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Subscriber Unsubscribe',\n\t\t\t\t\t\tvalue: 'subscriberUnsubscribe',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Tag Add',\n\t\t\t\t\t\tvalue: 'tagAdd',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Tag Remove',\n\t\t\t\t\t\tvalue: 'tagRemove',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Form Name or ID',\n\t\t\t\tname: 'formId',\n\t\t\t\ttype: 'options',\n\t\t\t\tdescription:\n\t\t\t\t\t'Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getForms',\n\t\t\t\t},\n\t\t\t\trequired: true,\n\t\t\t\tdefault: '',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tevent: ['formSubscribe'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Sequence Name or ID',\n\t\t\t\tname: 'courseId',\n\t\t\t\ttype: 'options',\n\t\t\t\tdescription:\n\t\t\t\t\t'Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getSequences',\n\t\t\t\t},\n\t\t\t\trequired: true,\n\t\t\t\tdefault: '',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tevent: ['courseSubscribe', 'courseComplete'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Initiating Link',\n\t\t\t\tname: 'link',\n\t\t\t\ttype: 'string',\n\t\t\t\trequired: true,\n\t\t\t\tdefault: '',\n\t\t\t\tdescription: 'The URL of the initiating link',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tevent: ['linkClick'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Product ID',\n\t\t\t\tname: 'productId',\n\t\t\t\ttype: 'string',\n\t\t\t\trequired: true,\n\t\t\t\tdefault: '',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tevent: ['productPurchase'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Tag Name or ID',\n\t\t\t\tname: 'tagId',\n\t\t\t\ttype: 'options',\n\t\t\t\tdescription:\n\t\t\t\t\t'Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getTags',\n\t\t\t\t},\n\t\t\t\trequired: true,\n\t\t\t\tdefault: '',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tevent: ['tagAdd', 'tagRemove'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get all the tags to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getTags(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\n\t\t\t\tconst { tags } = await convertKitApiRequest.call(this, 'GET', '/tags');\n\n\t\t\t\tfor (const tag of tags) {\n\t\t\t\t\tconst tagName = tag.name;\n\n\t\t\t\t\tconst tagId = tag.id;\n\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: tagName,\n\t\t\t\t\t\tvalue: tagId,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the forms to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getForms(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\n\t\t\t\tconst { forms } = await convertKitApiRequest.call(this, 'GET', '/forms');\n\n\t\t\t\tfor (const form of forms) {\n\t\t\t\t\tconst formName = form.name;\n\n\t\t\t\t\tconst formId = form.id;\n\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: formName,\n\t\t\t\t\t\tvalue: formId,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn returnData;\n\t\t\t},\n\n\t\t\t// Get all the sequences to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getSequences(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\n\t\t\t\tconst { courses } = await convertKitApiRequest.call(this, 'GET', '/sequences');\n\n\t\t\t\tfor (const course of courses) {\n\t\t\t\t\tconst courseName = course.name;\n\n\t\t\t\t\tconst courseId = course.id;\n\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: courseName,\n\t\t\t\t\t\tvalue: courseId,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\twebhookMethods = {\n\t\tdefault: {\n\t\t\tasync checkExists(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\n\t\t\t\t// THe API does not have an endpoint to list all webhooks\n\n\t\t\t\tif (webhookData.webhookId) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t},\n\n\t\t\tasync create(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookUrl = this.getNodeWebhookUrl('default');\n\n\t\t\t\tlet event = this.getNodeParameter('event', 0) as string;\n\n\t\t\t\tconst endpoint = '/automations/hooks';\n\n\t\t\t\tif (event === 'purchaseCreate') {\n\t\t\t\t\tevent = `purchase.${snakeCase(event)}`;\n\t\t\t\t} else {\n\t\t\t\t\tevent = `subscriber.${snakeCase(event)}`;\n\t\t\t\t}\n\n\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\ttarget_url: webhookUrl as string,\n\t\t\t\t\tevent: {\n\t\t\t\t\t\tname: event,\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tif (event === 'subscriber.form_subscribe') {\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\tbody.event.form_id = this.getNodeParameter('formId', 0);\n\t\t\t\t}\n\n\t\t\t\tif (event === 'subscriber.course_subscribe' || event === 'subscriber.course_complete') {\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\tbody.event.sequence_id = this.getNodeParameter('courseId', 0);\n\t\t\t\t}\n\n\t\t\t\tif (event === 'subscriber.link_click') {\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\tbody.event.initiator_value = this.getNodeParameter('link', 0);\n\t\t\t\t}\n\n\t\t\t\tif (event === 'subscriber.product_purchase') {\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\tbody.event.product_id = this.getNodeParameter('productId', 0);\n\t\t\t\t}\n\n\t\t\t\tif (event === 'subscriber.tag_add' || event === 'subscriber.tag_remove') {\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\tbody.event.tag_id = this.getNodeParameter('tagId', 0);\n\t\t\t\t}\n\n\t\t\t\tconst webhook = await convertKitApiRequest.call(this, 'POST', endpoint, body);\n\n\t\t\t\tif (webhook.rule.id === undefined) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\n\t\t\t\twebhookData.webhookId = webhook.rule.id as string;\n\n\t\t\t\treturn true;\n\t\t\t},\n\n\t\t\tasync delete(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\n\t\t\t\tif (webhookData.webhookId !== undefined) {\n\t\t\t\t\tconst endpoint = `/automations/hooks/${webhookData.webhookId}`;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait convertKitApiRequest.call(this, 'DELETE', endpoint);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tdelete webhookData.webhookId;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync webhook(this: IWebhookFunctions): Promise<IWebhookResponseData> {\n\t\tconst returnData: IDataObject[] = [];\n\t\treturnData.push(this.getBodyData());\n\n\t\treturn {\n\t\t\tworkflowData: [this.helpers.returnJsonArray(returnData)],\n\t\t};\n\t}\n}\n"],"mappings":"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","names":[]}