{"version":3,"sources":["../../../nodes/AgileCrm/AgileCrm.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, jsonParse, NodeOperationError } from 'n8n-workflow';\n\nimport { companyFields, companyOperations } from './CompanyDescription';\nimport { contactFields, contactOperations } from './ContactDescription';\nimport type { IContact, IContactUpdate } from './ContactInterface';\nimport { dealFields, dealOperations } from './DealDescription';\nimport type { IDeal } from './DealInterface';\nimport type { IFilter, ISearchConditions } from './FilterInterface';\nimport {\n\tagileCrmApiRequest,\n\tagileCrmApiRequestAllItems,\n\tagileCrmApiRequestUpdate,\n\tgetFilterRules,\n\tsimplifyResponse,\n\tvalidateJSON,\n} from './GenericFunctions';\n\nexport class AgileCrm implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Agile CRM',\n\t\tname: 'agileCrm',\n\t\t// eslint-disable-next-line n8n-nodes-base/node-class-description-icon-not-svg\n\t\ticon: 'file:agilecrm.png',\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tgroup: ['transform'],\n\t\tversion: 1,\n\t\tdescription: 'Consume Agile CRM API',\n\t\tdefaults: {\n\t\t\tname: 'Agile CRM',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'agileCrmApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t// Node properties which the user gets displayed and\n\t\t\t// can change on the node.\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Company',\n\t\t\t\t\t\tvalue: 'company',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Contact',\n\t\t\t\t\t\tvalue: 'contact',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Deal',\n\t\t\t\t\t\tvalue: 'deal',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'contact',\n\t\t\t},\n\t\t\t// CONTACT\n\t\t\t...contactOperations,\n\t\t\t...contactFields,\n\n\t\t\t// COMPANY\n\t\t\t...companyOperations,\n\t\t\t...companyFields,\n\n\t\t\t// DEAL\n\t\t\t...dealOperations,\n\t\t\t...dealFields,\n\t\t],\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: IDataObject[] = [];\n\t\tlet responseData;\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\tif (resource === 'contact' || resource === 'company') {\n\t\t\t\tconst idGetter = resource === 'contact' ? 'contactId' : 'companyId';\n\n\t\t\t\tif (operation === 'get') {\n\t\t\t\t\tconst contactId = this.getNodeParameter(idGetter, i) as string;\n\n\t\t\t\t\tconst endpoint = `api/contacts/${contactId}`;\n\t\t\t\t\tresponseData = await agileCrmApiRequest.call(this, 'GET', endpoint, {});\n\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\tconst contactId = this.getNodeParameter(idGetter, i) as string;\n\n\t\t\t\t\tconst endpoint = `api/contacts/${contactId}`;\n\t\t\t\t\tresponseData = await agileCrmApiRequest.call(this, 'DELETE', endpoint, {});\n\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\tconst simple = this.getNodeParameter('simple', 0) as boolean;\n\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', 0);\n\t\t\t\t\tconst filterType = this.getNodeParameter('filterType', i) as string;\n\t\t\t\t\tconst sort = this.getNodeParameter('options.sort.sort', i, {}) as {\n\t\t\t\t\t\tdirection: string;\n\t\t\t\t\t\tfield: string;\n\t\t\t\t\t};\n\t\t\t\t\tconst body: IDataObject = {};\n\t\t\t\t\tconst filterJson: IFilter = {};\n\n\t\t\t\t\tlet contactType = '';\n\t\t\t\t\tif (resource === 'contact') {\n\t\t\t\t\t\tcontactType = 'PERSON';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontactType = 'COMPANY';\n\t\t\t\t\t}\n\t\t\t\t\tfilterJson.contact_type = contactType;\n\n\t\t\t\t\tif (filterType === 'manual') {\n\t\t\t\t\t\tconst conditions = this.getNodeParameter(\n\t\t\t\t\t\t\t'filters.conditions',\n\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t[],\n\t\t\t\t\t\t) as ISearchConditions[];\n\t\t\t\t\t\tconst matchType = this.getNodeParameter('matchType', i) as string;\n\t\t\t\t\t\tlet rules;\n\t\t\t\t\t\tif (conditions.length !== 0) {\n\t\t\t\t\t\t\trules = getFilterRules(conditions, matchType);\n\t\t\t\t\t\t\tObject.assign(filterJson, rules);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t'At least one condition must be added.',\n\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (filterType === 'json') {\n\t\t\t\t\t\tconst filterJsonRules = this.getNodeParameter('filterJson', i) as string;\n\t\t\t\t\t\tif (validateJSON(filterJsonRules) !== undefined) {\n\t\t\t\t\t\t\tObject.assign(filterJson, jsonParse(filterJsonRules));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'Filter (JSON) must be a valid json', {\n\t\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbody.filterJson = JSON.stringify(filterJson);\n\n\t\t\t\t\tif (sort) {\n\t\t\t\t\t\tif (sort.direction === 'ASC') {\n\t\t\t\t\t\t\tbody.global_sort_key = sort.field;\n\t\t\t\t\t\t} else if (sort.direction === 'DESC') {\n\t\t\t\t\t\t\tbody.global_sort_key = `-${sort.field}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\tbody.page_size = 100;\n\t\t\t\t\t\tresponseData = await agileCrmApiRequestAllItems.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'api/filters/filter/dynamic-filter',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody.page_size = this.getNodeParameter('limit', 0);\n\t\t\t\t\t\tresponseData = await agileCrmApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'api/filters/filter/dynamic-filter',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (simple) {\n\t\t\t\t\t\tresponseData = simplifyResponse(responseData);\n\t\t\t\t\t}\n\t\t\t\t} else if (operation === 'create') {\n\t\t\t\t\tconst jsonParameters = this.getNodeParameter('jsonParameters', i);\n\t\t\t\t\tconst body: IContact = {};\n\t\t\t\t\tconst properties: IDataObject[] = [];\n\n\t\t\t\t\tif (jsonParameters) {\n\t\t\t\t\t\tconst additionalFieldsJson = this.getNodeParameter('additionalFieldsJson', i) as string;\n\n\t\t\t\t\t\tif (additionalFieldsJson !== '') {\n\t\t\t\t\t\t\tif (validateJSON(additionalFieldsJson) !== undefined) {\n\t\t\t\t\t\t\t\tObject.assign(body, jsonParse(additionalFieldsJson));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t\t'Additional fields must be a valid JSON',\n\t\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\t// if company, add 'company' as type. default is person\n\t\t\t\t\t\tif (resource === 'company') {\n\t\t\t\t\t\t\tbody.type = 'COMPANY';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.starValue) {\n\t\t\t\t\t\t\tbody.star_value = additionalFields.starValue as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.tags) {\n\t\t\t\t\t\t\tbody.tags = additionalFields.tags as string[];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Contact specific properties\n\t\t\t\t\t\tif (resource === 'contact') {\n\t\t\t\t\t\t\tif (additionalFields.firstName) {\n\t\t\t\t\t\t\t\tproperties.push({\n\t\t\t\t\t\t\t\t\ttype: 'SYSTEM',\n\t\t\t\t\t\t\t\t\tname: 'first_name',\n\t\t\t\t\t\t\t\t\tvalue: additionalFields.firstName as string,\n\t\t\t\t\t\t\t\t} as IDataObject);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.lastName) {\n\t\t\t\t\t\t\t\tproperties.push({\n\t\t\t\t\t\t\t\t\ttype: 'SYSTEM',\n\t\t\t\t\t\t\t\t\tname: 'last_name',\n\t\t\t\t\t\t\t\t\tvalue: additionalFields.lastName as string,\n\t\t\t\t\t\t\t\t} as IDataObject);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.company) {\n\t\t\t\t\t\t\t\tproperties.push({\n\t\t\t\t\t\t\t\t\ttype: 'SYSTEM',\n\t\t\t\t\t\t\t\t\tname: 'company',\n\t\t\t\t\t\t\t\t\tvalue: additionalFields.company as string,\n\t\t\t\t\t\t\t\t} as IDataObject);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.title) {\n\t\t\t\t\t\t\t\tproperties.push({\n\t\t\t\t\t\t\t\t\ttype: 'SYSTEM',\n\t\t\t\t\t\t\t\t\tname: 'title',\n\t\t\t\t\t\t\t\t\tvalue: additionalFields.title as string,\n\t\t\t\t\t\t\t\t} as IDataObject);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.emailOptions) {\n\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\tadditionalFields.emailOptions.emailProperties.map((property) => {\n\t\t\t\t\t\t\t\t\tproperties.push({\n\t\t\t\t\t\t\t\t\t\ttype: 'SYSTEM',\n\t\t\t\t\t\t\t\t\t\tsubtype: property.subtype as string,\n\t\t\t\t\t\t\t\t\t\tname: 'email',\n\t\t\t\t\t\t\t\t\t\tvalue: property.email as string,\n\t\t\t\t\t\t\t\t\t} as IDataObject);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.addressOptions) {\n\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\tadditionalFields.addressOptions.addressProperties.map((property) => {\n\t\t\t\t\t\t\t\t\tproperties.push({\n\t\t\t\t\t\t\t\t\t\ttype: 'SYSTEM',\n\t\t\t\t\t\t\t\t\t\tsubtype: property.subtype as string,\n\t\t\t\t\t\t\t\t\t\tname: 'address',\n\t\t\t\t\t\t\t\t\t\tvalue: property.address as string,\n\t\t\t\t\t\t\t\t\t} as IDataObject);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (additionalFields.phoneOptions) {\n\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\tadditionalFields.phoneOptions.phoneProperties.map((property) => {\n\t\t\t\t\t\t\t\t\tproperties.push({\n\t\t\t\t\t\t\t\t\t\ttype: 'SYSTEM',\n\t\t\t\t\t\t\t\t\t\tsubtype: property.subtype as string,\n\t\t\t\t\t\t\t\t\t\tname: 'phone',\n\t\t\t\t\t\t\t\t\t\tvalue: property.number as string,\n\t\t\t\t\t\t\t\t\t} as IDataObject);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (resource === 'company') {\n\t\t\t\t\t\t\tif (additionalFields.email) {\n\t\t\t\t\t\t\t\tproperties.push({\n\t\t\t\t\t\t\t\t\ttype: 'SYSTEM',\n\t\t\t\t\t\t\t\t\tname: 'email',\n\t\t\t\t\t\t\t\t\tvalue: additionalFields.email as string,\n\t\t\t\t\t\t\t\t} as IDataObject);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (additionalFields.addressOptions) {\n\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\tadditionalFields.addressOptions.addressProperties.map((property) => {\n\t\t\t\t\t\t\t\t\tproperties.push({\n\t\t\t\t\t\t\t\t\t\ttype: 'SYSTEM',\n\t\t\t\t\t\t\t\t\t\tsubtype: property.subtype as string,\n\t\t\t\t\t\t\t\t\t\tname: 'address',\n\t\t\t\t\t\t\t\t\t\tvalue: property.address as string,\n\t\t\t\t\t\t\t\t\t} as IDataObject);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (additionalFields.phone) {\n\t\t\t\t\t\t\t\tproperties.push({\n\t\t\t\t\t\t\t\t\ttype: 'SYSTEM',\n\t\t\t\t\t\t\t\t\tname: 'phone',\n\t\t\t\t\t\t\t\t\tvalue: additionalFields.phone as string,\n\t\t\t\t\t\t\t\t} as IDataObject);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (additionalFields.name) {\n\t\t\t\t\t\t\t\tproperties.push({\n\t\t\t\t\t\t\t\t\ttype: 'SYSTEM',\n\t\t\t\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\t\t\t\tvalue: additionalFields.name as string,\n\t\t\t\t\t\t\t\t} as IDataObject);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.websiteOptions) {\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tadditionalFields.websiteOptions.websiteProperties.map((property) => {\n\t\t\t\t\t\t\t\tproperties.push({\n\t\t\t\t\t\t\t\t\ttype: 'SYSTEM',\n\t\t\t\t\t\t\t\t\tsubtype: property.subtype as string,\n\t\t\t\t\t\t\t\t\tname: 'website',\n\t\t\t\t\t\t\t\t\tvalue: property.url as string,\n\t\t\t\t\t\t\t\t} as IDataObject);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.customProperties) {\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tadditionalFields.customProperties.customProperty.map((property) => {\n\t\t\t\t\t\t\t\tproperties.push({\n\t\t\t\t\t\t\t\t\ttype: 'CUSTOM',\n\t\t\t\t\t\t\t\t\tsubtype: property.subtype as string,\n\t\t\t\t\t\t\t\t\tname: property.name,\n\t\t\t\t\t\t\t\t\tvalue: property.value as string,\n\t\t\t\t\t\t\t\t} as IDataObject);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbody.properties = properties;\n\t\t\t\t\t}\n\t\t\t\t\tconst endpoint = 'api/contacts';\n\t\t\t\t\tresponseData = await agileCrmApiRequest.call(this, 'POST', endpoint, body);\n\t\t\t\t} else if (operation === 'update') {\n\t\t\t\t\tconst contactId = this.getNodeParameter(idGetter, i) as string;\n\t\t\t\t\tconst contactUpdatePayload: IContactUpdate = { id: contactId };\n\t\t\t\t\tconst jsonParameters = this.getNodeParameter('jsonParameters', i);\n\t\t\t\t\tconst body: IContact = {};\n\t\t\t\t\tconst properties: IDataObject[] = [];\n\n\t\t\t\t\tif (jsonParameters) {\n\t\t\t\t\t\tconst additionalFieldsJson = this.getNodeParameter('additionalFieldsJson', i) as string;\n\n\t\t\t\t\t\tif (additionalFieldsJson !== '') {\n\t\t\t\t\t\t\tif (validateJSON(additionalFieldsJson) !== undefined) {\n\t\t\t\t\t\t\t\tObject.assign(body, jsonParse(additionalFieldsJson));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t\t'Additional fields must be a valid JSON',\n\t\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tif (additionalFields.starValue) {\n\t\t\t\t\t\t\tbody.star_value = additionalFields.starValue as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.tags) {\n\t\t\t\t\t\t\tbody.tags = additionalFields.tags as string[];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Contact specific properties\n\t\t\t\t\t\tif (resource === 'contact') {\n\t\t\t\t\t\t\tif (additionalFields.leadScore) {\n\t\t\t\t\t\t\t\tbody.lead_score = additionalFields.leadScore as string;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (additionalFields.firstName) {\n\t\t\t\t\t\t\t\tproperties.push({\n\t\t\t\t\t\t\t\t\ttype: 'SYSTEM',\n\t\t\t\t\t\t\t\t\tname: 'first_name',\n\t\t\t\t\t\t\t\t\tvalue: additionalFields.firstName as string,\n\t\t\t\t\t\t\t\t} as IDataObject);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.lastName) {\n\t\t\t\t\t\t\t\tproperties.push({\n\t\t\t\t\t\t\t\t\ttype: 'SYSTEM',\n\t\t\t\t\t\t\t\t\tname: 'last_name',\n\t\t\t\t\t\t\t\t\tvalue: additionalFields.lastName as string,\n\t\t\t\t\t\t\t\t} as IDataObject);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.company) {\n\t\t\t\t\t\t\t\tproperties.push({\n\t\t\t\t\t\t\t\t\ttype: 'SYSTEM',\n\t\t\t\t\t\t\t\t\tname: 'company',\n\t\t\t\t\t\t\t\t\tvalue: additionalFields.company as string,\n\t\t\t\t\t\t\t\t} as IDataObject);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.title) {\n\t\t\t\t\t\t\t\tproperties.push({\n\t\t\t\t\t\t\t\t\ttype: 'SYSTEM',\n\t\t\t\t\t\t\t\t\tname: 'title',\n\t\t\t\t\t\t\t\t\tvalue: additionalFields.title as string,\n\t\t\t\t\t\t\t\t} as IDataObject);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.emailOptions) {\n\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\tadditionalFields.emailOptions.emailProperties.map((property) => {\n\t\t\t\t\t\t\t\t\tproperties.push({\n\t\t\t\t\t\t\t\t\t\ttype: 'SYSTEM',\n\t\t\t\t\t\t\t\t\t\tsubtype: property.subtype as string,\n\t\t\t\t\t\t\t\t\t\tname: 'email',\n\t\t\t\t\t\t\t\t\t\tvalue: property.email as string,\n\t\t\t\t\t\t\t\t\t} as IDataObject);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.addressOptions) {\n\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\tadditionalFields.addressOptions.addressProperties.map((property) => {\n\t\t\t\t\t\t\t\t\tproperties.push({\n\t\t\t\t\t\t\t\t\t\ttype: 'SYSTEM',\n\t\t\t\t\t\t\t\t\t\tsubtype: property.subtype as string,\n\t\t\t\t\t\t\t\t\t\tname: 'address',\n\t\t\t\t\t\t\t\t\t\tvalue: property.address as string,\n\t\t\t\t\t\t\t\t\t} as IDataObject);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (additionalFields.phoneOptions) {\n\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\tadditionalFields.phoneOptions.phoneProperties.map((property) => {\n\t\t\t\t\t\t\t\t\tproperties.push({\n\t\t\t\t\t\t\t\t\t\ttype: 'SYSTEM',\n\t\t\t\t\t\t\t\t\t\tsubtype: property.subtype as string,\n\t\t\t\t\t\t\t\t\t\tname: 'phone',\n\t\t\t\t\t\t\t\t\t\tvalue: property.number as string,\n\t\t\t\t\t\t\t\t\t} as IDataObject);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (resource === 'company') {\n\t\t\t\t\t\t\tif (additionalFields.email) {\n\t\t\t\t\t\t\t\tproperties.push({\n\t\t\t\t\t\t\t\t\ttype: 'SYSTEM',\n\t\t\t\t\t\t\t\t\tname: 'email',\n\t\t\t\t\t\t\t\t\tvalue: additionalFields.email as string,\n\t\t\t\t\t\t\t\t} as IDataObject);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (additionalFields.addressOptions) {\n\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\tadditionalFields.addressOptions.addressProperties.map((property) => {\n\t\t\t\t\t\t\t\t\tproperties.push({\n\t\t\t\t\t\t\t\t\t\ttype: 'SYSTEM',\n\t\t\t\t\t\t\t\t\t\tsubtype: property.subtype as string,\n\t\t\t\t\t\t\t\t\t\tname: 'address',\n\t\t\t\t\t\t\t\t\t\tvalue: property.address as string,\n\t\t\t\t\t\t\t\t\t} as IDataObject);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (additionalFields.phone) {\n\t\t\t\t\t\t\t\tproperties.push({\n\t\t\t\t\t\t\t\t\ttype: 'SYSTEM',\n\t\t\t\t\t\t\t\t\tname: 'phone',\n\t\t\t\t\t\t\t\t\tvalue: additionalFields.phone as string,\n\t\t\t\t\t\t\t\t} as IDataObject);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.websiteOptions) {\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tadditionalFields.websiteOptions.websiteProperties.map((property) => {\n\t\t\t\t\t\t\t\tproperties.push({\n\t\t\t\t\t\t\t\t\ttype: 'SYSTEM',\n\t\t\t\t\t\t\t\t\tsubtype: property.subtype as string,\n\t\t\t\t\t\t\t\t\tname: 'website',\n\t\t\t\t\t\t\t\t\tvalue: property.url as string,\n\t\t\t\t\t\t\t\t} as IDataObject);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.name) {\n\t\t\t\t\t\t\tproperties.push({\n\t\t\t\t\t\t\t\ttype: 'SYSTEM',\n\t\t\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\t\t\tvalue: additionalFields.name as string,\n\t\t\t\t\t\t\t} as IDataObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.customProperties) {\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tadditionalFields.customProperties.customProperty.map((property) => {\n\t\t\t\t\t\t\t\tproperties.push({\n\t\t\t\t\t\t\t\t\ttype: 'CUSTOM',\n\t\t\t\t\t\t\t\t\tsubtype: property.subtype as string,\n\t\t\t\t\t\t\t\t\tname: property.name,\n\t\t\t\t\t\t\t\t\tvalue: property.value as string,\n\t\t\t\t\t\t\t\t} as IDataObject);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbody.properties = properties;\n\t\t\t\t\t}\n\n\t\t\t\t\tObject.assign(contactUpdatePayload, body);\n\n\t\t\t\t\tresponseData = await agileCrmApiRequestUpdate.call(this, 'PUT', '', contactUpdatePayload);\n\t\t\t\t}\n\t\t\t} else if (resource === 'deal') {\n\t\t\t\tif (operation === 'get') {\n\t\t\t\t\tconst dealId = this.getNodeParameter('dealId', i) as string;\n\n\t\t\t\t\tconst endpoint = `api/opportunity/${dealId}`;\n\t\t\t\t\tresponseData = await agileCrmApiRequest.call(this, 'GET', endpoint, {});\n\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\tconst contactId = this.getNodeParameter('dealId', i) as string;\n\n\t\t\t\t\tconst endpoint = `api/opportunity/${contactId}`;\n\t\t\t\t\tresponseData = await agileCrmApiRequest.call(this, 'DELETE', endpoint, {});\n\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', 0);\n\t\t\t\t\tconst endpoint = 'api/opportunity';\n\n\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\tconst limit = 100;\n\t\t\t\t\t\tresponseData = await agileCrmApiRequestAllItems.call(this, 'GET', endpoint, undefined, {\n\t\t\t\t\t\t\tpage_size: limit,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', 0);\n\t\t\t\t\t\tresponseData = await agileCrmApiRequest.call(this, 'GET', endpoint, undefined, {\n\t\t\t\t\t\t\tpage_size: limit,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else if (operation === 'create') {\n\t\t\t\t\tconst jsonParameters = this.getNodeParameter('jsonParameters', i);\n\n\t\t\t\t\tconst body: IDeal = {};\n\n\t\t\t\t\tif (jsonParameters) {\n\t\t\t\t\t\tconst additionalFieldsJson = this.getNodeParameter('additionalFieldsJson', i) as string;\n\n\t\t\t\t\t\tif (additionalFieldsJson !== '') {\n\t\t\t\t\t\t\tif (validateJSON(additionalFieldsJson) !== undefined) {\n\t\t\t\t\t\t\t\tObject.assign(body, jsonParse(additionalFieldsJson));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t\t'Additional fields must be a valid JSON',\n\t\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tbody.close_date = new Date(this.getNodeParameter('closeDate', i) as string).getTime();\n\t\t\t\t\t\tbody.expected_value = this.getNodeParameter('expectedValue', i) as number;\n\t\t\t\t\t\tbody.milestone = this.getNodeParameter('milestone', i) as string;\n\t\t\t\t\t\tbody.probability = this.getNodeParameter('probability', i) as number;\n\t\t\t\t\t\tbody.name = this.getNodeParameter('name', i) as string;\n\n\t\t\t\t\t\tif (additionalFields.contactIds) {\n\t\t\t\t\t\t\tbody.contactIds = additionalFields.contactIds as string[];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.customData) {\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tbody.customData = additionalFields.customData.customProperty as IDealCustomProperty[];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst endpoint = 'api/opportunity';\n\t\t\t\t\tresponseData = await agileCrmApiRequest.call(this, 'POST', endpoint, body);\n\t\t\t\t} else if (operation === 'update') {\n\t\t\t\t\tconst jsonParameters = this.getNodeParameter('jsonParameters', i);\n\n\t\t\t\t\tconst body: IDeal = {};\n\n\t\t\t\t\tif (jsonParameters) {\n\t\t\t\t\t\tconst additionalFieldsJson = this.getNodeParameter('additionalFieldsJson', i) as string;\n\n\t\t\t\t\t\tif (additionalFieldsJson !== '') {\n\t\t\t\t\t\t\tif (validateJSON(additionalFieldsJson) !== undefined) {\n\t\t\t\t\t\t\t\tObject.assign(body, jsonParse(additionalFieldsJson));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t\t'Additional fields must be valid JSON',\n\t\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tbody.id = this.getNodeParameter('dealId', i) as number;\n\n\t\t\t\t\t\tif (additionalFields.expectedValue) {\n\t\t\t\t\t\t\tbody.expected_value = additionalFields.expectedValue as number;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.name) {\n\t\t\t\t\t\t\tbody.name = additionalFields.name as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.probability) {\n\t\t\t\t\t\t\tbody.probability = additionalFields.probability as number;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.contactIds) {\n\t\t\t\t\t\t\tbody.contactIds = additionalFields.contactIds as string[];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.customData) {\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tbody.customData = additionalFields.customData.customProperty as IDealCustomProperty[];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst endpoint = 'api/opportunity/partial-update';\n\t\t\t\t\tresponseData = await agileCrmApiRequest.call(this, 'PUT', endpoint, body);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (Array.isArray(responseData)) {\n\t\t\t\treturnData.push.apply(returnData, responseData as IDataObject[]);\n\t\t\t} else {\n\t\t\t\treturnData.push(responseData as IDataObject);\n\t\t\t}\n\t\t}\n\n\t\treturn [this.helpers.returnJsonArray(returnData)];\n\t}\n}\n"],"mappings":"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","names":[]}