{"version":3,"sources":["../../../../nodes/Microsoft/Storage/GenericFunctions.ts"],"sourcesContent":["import { camelCase } from 'change-case';\nimport type {\n\tJsonObject,\n\tIDataObject,\n\tIExecuteFunctions,\n\tIExecuteSingleFunctions,\n\tIHttpRequestMethods,\n\tIHttpRequestOptions,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tIN8nHttpFullResponse,\n\tINodeListSearchResult,\n\tINodeListSearchItems,\n\tINodeParameterResourceLocator,\n\tICredentialDataDecryptedObject,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\nimport { Parser } from 'xml2js';\nimport { firstCharLowerCase, parseBooleans, parseNumbers } from 'xml2js/lib/processors';\n\nimport { compareHeader } from './compare-header';\n\nexport const XMsVersion = '2021-12-02';\n\nexport const HeaderConstants = {\n\tAUTHORIZATION: 'authorization',\n\tCONTENT_ENCODING: 'content-encoding',\n\tCONTENT_LANGUAGE: 'content-language',\n\tCONTENT_LENGTH: 'content-length',\n\tCONTENT_MD5: 'content-md5',\n\tCONTENT_TYPE: 'content-Type',\n\tDATE: 'date',\n\tETAG: 'etag',\n\tIF_MATCH: 'if-match',\n\tIF_MODIFIED_SINCE: 'if-Modified-since',\n\tIF_NONE_MATCH: 'if-none-match',\n\tIF_UNMODIFIED_SINCE: 'if-unmodified-since',\n\tORIGIN: 'origin',\n\tRANGE: 'range',\n\tX_MS_COPY_SOURCE: 'x-ms-copy-source',\n\tX_MS_DATE: 'x-ms-date',\n\tX_MS_VERSION: 'x-ms-version',\n\tX_MS_BLOB_TYPE: 'x-ms-blob-type',\n\tX_MS_BLOB_CONTENT_DISPOSITION: 'x-ms-blob-content-disposition',\n\tX_MS_BLOB_PUBLIC_ACCESS: 'x-ms-blob-public-access',\n\tX_MS_HAS_IMMUTABILITY_POLICY: 'x-ms-has-immutability-policy',\n\tX_MS_HAS_LEGAL_HOLD: 'x-ms-has-legal-hold',\n\tX_MS_CONTENT_CRC64: 'x-ms-content-crc64',\n\tX_MS_REQUEST_SERVER_ENCRYPTED: 'x-ms-request-server-encrypted',\n\tX_MS_ENCRYPTION_SCOPE: 'x-ms-encryption-scope',\n\tX_MS_VERSION_ID: 'x-ms-version-id',\n\tX_MS_TAG_COUNT: 'x-ms-tag-count',\n\tX_MS_COPY_PROGRESS: 'x-ms-copy-progress',\n\tX_MS_INCREMENTAL_COPY: 'x-ms-incremental-copy',\n\tX_MS_BLOB_SEQUENCE_NUMBER: 'x-ms-blob-sequence-number',\n\tX_MS_BLOB_COMMITTED_BLOCK_COUNT: 'x-ms-blob-committed-block-count',\n\tX_MS_SERVER_ENCRYPTED: 'x-ms-server-encrypted',\n\tX_MS_ENCRYPTION_CONTEXT: 'x-ms-encryption-context',\n\tX_MS_BLOB_CONTENT_MD5: 'x-ms-blob-content-md5',\n\tX_MS_BLOB_SEALED: 'x-ms-blob-sealed',\n\tX_MS_IMMUTABILITY_POLICY_UNTIL_DATE: 'x-ms-immutability-policy-until-date',\n\tX_MS_IMMUTABILITY_POLICY_MODE: 'x-ms-immutability-policy-mode',\n\tX_MS_LEGAL_HOLD: 'x-ms-legal-hold',\n\tX_MS_DELETE_TYPE_PERMANENT: 'x-ms-delete-type-permanent',\n\tX_MS_ACCESS_TIER: 'x-ms-access-tier',\n\tX_MS_BLOB_CACHE_CONTROL: 'x-ms-blob-cache-control',\n\tX_MS_LEASE_ID: 'x-ms-lease-id',\n\tX_MS_BLOB_CONTENT_ENCODING: 'x-ms-blob-content-encoding',\n\tX_MS_BLOB_CONTENT_LANGUAGE: 'x-ms-blob-content-language',\n\tX_MS_BLOB_CONTENT_TYPE: 'x-ms-blob-content-type',\n\tX_MS_EXPIRY_OPTION: 'x-ms-expiry-option',\n\tX_MS_EXPIRY_TIME: 'x-ms-expiry-time',\n\tX_MS_TAGS: 'x-ms-tags',\n\tX_MS_UPN: 'x-ms-upn',\n\tPREFIX_X_MS: 'x-ms-',\n\tPREFIX_X_MS_META: 'x-ms-meta-',\n};\n\nexport async function azureStorageApiRequest(\n\tthis: IExecuteFunctions | IExecuteSingleFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\tbody: IDataObject = {},\n\tqs?: IDataObject,\n\theaders?: IDataObject,\n\turl?: string,\n): Promise<string> {\n\tconst authentication = this.getNodeParameter('authentication', 0) as 'oAuth2' | 'sharedKey';\n\tconst credentialsType =\n\t\tauthentication === 'oAuth2' ? 'azureStorageOAuth2Api' : 'azureStorageSharedKeyApi';\n\tconst credentials = await this.getCredentials<{\n\t\tbaseUrl: string;\n\t}>(credentialsType);\n\n\tconst options: IHttpRequestOptions = {\n\t\tmethod,\n\t\turl: url ?? `${credentials.baseUrl}${endpoint}`,\n\t\theaders,\n\t\tbody,\n\t\tqs,\n\t};\n\n\toptions.headers ??= {};\n\toptions.headers[HeaderConstants.X_MS_DATE] = new Date().toUTCString();\n\toptions.headers[HeaderConstants.X_MS_VERSION] = XMsVersion;\n\n\t// XML response\n\tconst response = (await this.helpers.requestWithAuthentication.call(\n\t\tthis,\n\t\tcredentialsType,\n\t\toptions,\n\t)) as string;\n\n\treturn response;\n}\n\nexport async function handleErrorPostReceive(\n\tthis: IExecuteSingleFunctions,\n\tdata: INodeExecutionData[],\n\tresponse: IN8nHttpFullResponse,\n): Promise<INodeExecutionData[]> {\n\tif (String(response.statusCode).startsWith('4') || String(response.statusCode).startsWith('5')) {\n\t\tconst resource = this.getNodeParameter('resource') as string;\n\t\tconst operation = this.getNodeParameter('operation') as string;\n\n\t\tconst parser = new Parser({\n\t\t\texplicitArray: false,\n\t\t\ttagNameProcessors: [firstCharLowerCase],\n\t\t});\n\t\tconst { error } =\n\t\t\t((await parser.parseStringPromise(data[0].json as unknown as string)) as {\n\t\t\t\terror: {\n\t\t\t\t\tcode: string;\n\t\t\t\t\tmessage: string;\n\t\t\t\t\theaderName?: string;\n\t\t\t\t\theaderValue?: string;\n\t\t\t\t};\n\t\t\t}) ?? {};\n\n\t\tif (\n\t\t\terror?.code === 'InvalidAuthenticationInfo' &&\n\t\t\t((error as IDataObject)?.authenticationErrorDetail as string) ===\n\t\t\t\t'Lifetime validation failed. The token is expired.'\n\t\t) {\n\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject, {\n\t\t\t\tmessage: 'Lifetime validation failed. The token is expired.',\n\t\t\t\tdescription: 'Please check your credentials and try again',\n\t\t\t});\n\t\t}\n\n\t\tif (resource === 'blob') {\n\t\t\tif (error?.code === 'ContainerNotFound') {\n\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject, {\n\t\t\t\t\tmessage: \"The required container doesn't match any existing one\",\n\t\t\t\t\tdescription: \"Double-check the value in the parameter 'Container Name' and try again\",\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (operation === 'create') {\n\t\t\t\tif (\n\t\t\t\t\tthis.getNodeParameter('from') === 'url' &&\n\t\t\t\t\t((error?.code === 'InvalidHeaderValue' &&\n\t\t\t\t\t\terror?.headerName === HeaderConstants.X_MS_COPY_SOURCE) ||\n\t\t\t\t\t\terror?.code === 'CannotVerifyCopySource')\n\t\t\t\t) {\n\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject, {\n\t\t\t\t\t\tmessage: 'The provided URL is invalid',\n\t\t\t\t\t\tdescription: \"Double-check the value in the parameter 'URL' and try again\",\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if (operation === 'delete') {\n\t\t\t\tif (error?.code === 'BlobNotFound') {\n\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject, {\n\t\t\t\t\t\tmessage: \"The required blob doesn't match any existing one\",\n\t\t\t\t\t\tdescription: \"Double-check the value in the parameter 'Blob to Delete' and try again\",\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if (operation === 'get') {\n\t\t\t\tif (error?.code === 'BlobNotFound') {\n\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject, {\n\t\t\t\t\t\tmessage: \"The required blob doesn't match any existing one\",\n\t\t\t\t\t\tdescription: \"Double-check the value in the parameter 'Blob to Get' and try again\",\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if (operation === 'getAll') {\n\t\t\t\tif (\n\t\t\t\t\terror?.code === 'InvalidQueryParameterValue' &&\n\t\t\t\t\t(this.getNodeParameter('fields', []) as string[]).includes('permissions')\n\t\t\t\t) {\n\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject, {\n\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t'Permissions field is only supported for accounts with a hierarchical namespace enabled',\n\t\t\t\t\t\tdescription: \"Exclude 'Permissions' from 'Fields' and try again\",\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\terror?.code === 'UnsupportedQueryParameter' &&\n\t\t\t\t\t(this.getNodeParameter('fields', []) as string[]).includes('deleted') &&\n\t\t\t\t\t(this.getNodeParameter('filter', []) as string[]).includes('deleted')\n\t\t\t\t) {\n\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject, {\n\t\t\t\t\t\tmessage: \"Including 'Deleted' field and filter is not supported\",\n\t\t\t\t\t\tdescription: \"Exclude 'Deleted' from 'Fields' or 'Filter' and try again\",\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (resource === 'container') {\n\t\t\tif (operation === 'create') {\n\t\t\t\tif (error?.code === 'ContainerAlreadyExists') {\n\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject, {\n\t\t\t\t\t\tmessage: 'The specified container already exists',\n\t\t\t\t\t\tdescription: \"Use a unique value for 'Container Name' and try again\",\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (error?.code === 'PublicAccessNotPermitted') {\n\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject, {\n\t\t\t\t\t\tmessage: 'Public access is not permitted on this storage account',\n\t\t\t\t\t\tdescription: \"Check the 'Access Level' and try again\",\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if (operation === 'delete') {\n\t\t\t\tif (error?.code === 'ContainerNotFound') {\n\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject, {\n\t\t\t\t\t\tmessage: \"The required container doesn't match any existing one\",\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\"Double-check the value in the parameter 'Container to Delete' and try again\",\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if (operation === 'get') {\n\t\t\t\tif (error?.code === 'ContainerNotFound') {\n\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject, {\n\t\t\t\t\t\tmessage: \"The required container doesn't match any existing one\",\n\t\t\t\t\t\tdescription: \"Double-check the value in the parameter 'Container to Get' and try again\",\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if (operation === 'getAll') {\n\t\t\t}\n\t\t}\n\n\t\tif (error) {\n\t\t\tthrow new NodeApiError(this.getNode(), response as unknown as JsonObject, {\n\t\t\t\tmessage: error.code,\n\t\t\t\tdescription: error.message,\n\t\t\t});\n\t\t} else {\n\t\t\tthrow new NodeApiError(this.getNode(), response as unknown as JsonObject, {\n\t\t\t\tparseXml: true,\n\t\t\t});\n\t\t}\n\t}\n\n\treturn data;\n}\n\nexport function getCanonicalizedHeadersString(requestOptions: IHttpRequestOptions): string {\n\tlet headersArray: Array<{ name: string; value: string }> = [];\n\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\tfor (const [name, value] of Object.entries(requestOptions.headers!) as unknown as [\n\t\tstring,\n\t\tstring,\n\t]) {\n\t\tif (name.toLowerCase().startsWith(HeaderConstants.PREFIX_X_MS)) {\n\t\t\theadersArray.push({ name, value });\n\t\t}\n\t}\n\n\theadersArray.sort((a, b): number => {\n\t\treturn compareHeader(a.name.toLowerCase(), b.name.toLowerCase());\n\t});\n\n\t// Remove duplicate headers\n\theadersArray = headersArray.filter((value, index, array) => {\n\t\tif (index > 0 && value.name.toLowerCase() === array[index - 1].name.toLowerCase()) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t});\n\n\tlet canonicalizedHeadersStringToSign: string = '';\n\theadersArray.forEach((header) => {\n\t\tcanonicalizedHeadersStringToSign += `${header.name\n\t\t\t.toLowerCase()\n\t\t\t.trimEnd()}:${header.value.trimStart()}\\n`;\n\t});\n\n\treturn canonicalizedHeadersStringToSign;\n}\n\nexport function getCanonicalizedResourceString(\n\trequestOptions: IHttpRequestOptions,\n\tcredentials: ICredentialDataDecryptedObject,\n): string {\n\tconst path: string = new URL(requestOptions.baseURL + requestOptions.url).pathname || '/';\n\tlet canonicalizedResourceString = `/${credentials.account as string}${path}`;\n\tif (requestOptions.qs && Object.keys(requestOptions.qs).length > 0) {\n\t\tcanonicalizedResourceString +=\n\t\t\t'\\n' +\n\t\t\tObject.keys(requestOptions.qs)\n\t\t\t\t.sort()\n\t\t\t\t.map(\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\t(key) => `${key.toLowerCase()}:${decodeURIComponent(requestOptions.qs![key] as string)}`,\n\t\t\t\t)\n\t\t\t\t.join('\\n');\n\t}\n\n\treturn canonicalizedResourceString;\n}\n\nexport function parseHeaders(headers: IDataObject) {\n\tconst parseBooleanHeaders = [\n\t\tHeaderConstants.X_MS_DELETE_TYPE_PERMANENT,\n\t\tHeaderConstants.X_MS_INCREMENTAL_COPY,\n\t\tHeaderConstants.X_MS_SERVER_ENCRYPTED,\n\t\tHeaderConstants.X_MS_BLOB_SEALED,\n\t\tHeaderConstants.X_MS_REQUEST_SERVER_ENCRYPTED,\n\t\tHeaderConstants.X_MS_HAS_IMMUTABILITY_POLICY,\n\t\tHeaderConstants.X_MS_HAS_LEGAL_HOLD,\n\t];\n\tconst parseNumberHeaders = [\n\t\tHeaderConstants.X_MS_TAG_COUNT,\n\t\tHeaderConstants.CONTENT_LENGTH,\n\t\tHeaderConstants.X_MS_BLOB_SEQUENCE_NUMBER,\n\t\tHeaderConstants.X_MS_COPY_PROGRESS,\n\t\tHeaderConstants.X_MS_BLOB_COMMITTED_BLOCK_COUNT,\n\t];\n\n\tconst result: IDataObject = {};\n\n\tconst metadataKeys = Object.keys(headers).filter((x) =>\n\t\tx.startsWith(HeaderConstants.PREFIX_X_MS_META),\n\t);\n\n\tfor (const key in headers) {\n\t\tif (metadataKeys.includes(key)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet newKey = key.startsWith(HeaderConstants.PREFIX_X_MS)\n\t\t\t? camelCase(key.replace(HeaderConstants.PREFIX_X_MS, ''))\n\t\t\t: camelCase(key);\n\t\tnewKey = newKey.replace('-', '');\n\n\t\tconst newValue = parseBooleanHeaders.includes(key)\n\t\t\t? parseBooleans(headers[key] as string)\n\t\t\t: parseNumberHeaders.includes(key)\n\t\t\t\t? parseNumbers(headers[key] as string)\n\t\t\t\t: headers[key];\n\n\t\tresult[newKey] = newValue;\n\t}\n\n\tif (metadataKeys.length > 0) {\n\t\tresult.metadata = {};\n\t\tfor (const key of metadataKeys) {\n\t\t\t(result.metadata as IDataObject)[key.replace(HeaderConstants.PREFIX_X_MS_META, '')] =\n\t\t\t\theaders[key];\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport async function parseBlobList(\n\txml: string,\n): Promise<{ blobs: IDataObject[]; maxResults?: number; nextMarker?: string }> {\n\tconst parser = new Parser({\n\t\texplicitArray: false,\n\t\ttagNameProcessors: [firstCharLowerCase, (name) => name.replace('-', '')],\n\t\tvalueProcessors: [\n\t\t\tfunction (value, name) {\n\t\t\t\tif (\n\t\t\t\t\t[\n\t\t\t\t\t\t'deleted',\n\t\t\t\t\t\t'isCurrentVersion',\n\t\t\t\t\t\t'serverEncrypted',\n\t\t\t\t\t\t'incrementalCopy',\n\t\t\t\t\t\t'accessTierInferred',\n\t\t\t\t\t\t'isSealed',\n\t\t\t\t\t\t'legalHold',\n\t\t\t\t\t].includes(name)\n\t\t\t\t) {\n\t\t\t\t\treturn parseBooleans(value);\n\t\t\t\t} else if (\n\t\t\t\t\t[\n\t\t\t\t\t\t'maxResults',\n\t\t\t\t\t\t'contentLength',\n\t\t\t\t\t\t'blobSequenceNumber',\n\t\t\t\t\t\t'remainingRetentionDays',\n\t\t\t\t\t\t'tagCount',\n\t\t\t\t\t\t'content-Length',\n\t\t\t\t\t].includes(name)\n\t\t\t\t) {\n\t\t\t\t\treturn parseNumbers(value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t},\n\t\t],\n\t});\n\tconst data = (await parser.parseStringPromise(xml)) as {\n\t\tenumerationResults: {\n\t\t\tblobs: { blob: IDataObject | IDataObject[] };\n\t\t\tmaxResults: number;\n\t\t\tnextMarker: string;\n\t\t\tprefix: string;\n\t\t};\n\t};\n\n\tif (typeof data.enumerationResults.blobs !== 'object') {\n\t\t// No items\n\t\treturn { blobs: [] };\n\t}\n\n\tif (!Array.isArray(data.enumerationResults.blobs.blob)) {\n\t\t// Single item\n\t\tdata.enumerationResults.blobs.blob = [data.enumerationResults.blobs.blob];\n\t}\n\n\tfor (const blob of data.enumerationResults.blobs.blob) {\n\t\tif (blob.tags) {\n\t\t\tif (!Array.isArray(((blob.tags as IDataObject).tagSet as IDataObject).tag)) {\n\t\t\t\t((blob.tags as IDataObject).tagSet as IDataObject).tag = [\n\t\t\t\t\t((blob.tags as IDataObject).tagSet as IDataObject).tag,\n\t\t\t\t];\n\t\t\t}\n\t\t\tblob.tags = ((blob.tags as IDataObject).tagSet as IDataObject).tag;\n\t\t}\n\t}\n\n\tfor (const container of data.enumerationResults.blobs.blob) {\n\t\tif (container.metadata === '') {\n\t\t\tdelete container.metadata;\n\t\t}\n\t\tif (container.orMetadata === '') {\n\t\t\tdelete container.orMetadata;\n\t\t}\n\t}\n\n\treturn {\n\t\tblobs: data.enumerationResults.blobs.blob,\n\t\tmaxResults: data.enumerationResults.maxResults,\n\t\tnextMarker: data.enumerationResults.nextMarker,\n\t};\n}\n\nexport async function parseContainerList(\n\txml: string,\n): Promise<{ containers: IDataObject[]; maxResults?: number; nextMarker?: string }> {\n\tconst parser = new Parser({\n\t\texplicitArray: false,\n\t\ttagNameProcessors: [firstCharLowerCase, (name) => name.replace('-', '')],\n\t\tvalueProcessors: [\n\t\t\tfunction (value, name) {\n\t\t\t\tif (\n\t\t\t\t\t[\n\t\t\t\t\t\t'deleted',\n\t\t\t\t\t\t'hasImmutabilityPolicy',\n\t\t\t\t\t\t'hasLegalHold',\n\t\t\t\t\t\t'preventEncryptionScopeOverride',\n\t\t\t\t\t\t'isImmutableStorageWithVersioningEnabled',\n\t\t\t\t\t].includes(name)\n\t\t\t\t) {\n\t\t\t\t\treturn parseBooleans(value);\n\t\t\t\t} else if (['maxResults', 'remainingRetentionDays'].includes(name)) {\n\t\t\t\t\treturn parseNumbers(value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t},\n\t\t],\n\t});\n\tconst data = (await parser.parseStringPromise(xml)) as {\n\t\tenumerationResults: {\n\t\t\tcontainers: { container: IDataObject | IDataObject[] };\n\t\t\tmaxResults: number;\n\t\t\tnextMarker: string;\n\t\t\tprefix: string;\n\t\t};\n\t};\n\n\tif (typeof data.enumerationResults.containers !== 'object') {\n\t\t// No items\n\t\treturn { containers: [] };\n\t}\n\n\tif (!Array.isArray(data.enumerationResults.containers.container)) {\n\t\t// Single item\n\t\tdata.enumerationResults.containers.container = [data.enumerationResults.containers.container];\n\t}\n\n\tfor (const container of data.enumerationResults.containers.container) {\n\t\tif (container.metadata === '') {\n\t\t\tdelete container.metadata;\n\t\t}\n\t}\n\n\treturn {\n\t\tcontainers: data.enumerationResults.containers.container,\n\t\tmaxResults: data.enumerationResults.maxResults,\n\t\tnextMarker: data.enumerationResults.nextMarker,\n\t};\n}\n\nexport async function getBlobs(\n\tthis: ILoadOptionsFunctions,\n\tfilter?: string,\n\tpaginationToken?: string,\n): Promise<INodeListSearchResult> {\n\tconst container = this.getNodeParameter('container') as INodeParameterResourceLocator;\n\n\tlet response: string;\n\n\tconst qs: IDataObject = {\n\t\trestype: 'container',\n\t\tcomp: 'list',\n\t};\n\n\tif (paginationToken) {\n\t\tqs.marker = paginationToken;\n\t\tresponse = await azureStorageApiRequest.call(this, 'GET', `/${container.value}`, {}, qs);\n\t} else {\n\t\tqs.maxresults = 5000;\n\t\tif (filter) {\n\t\t\tqs.prefix = filter;\n\t\t}\n\t\tresponse = await azureStorageApiRequest.call(this, 'GET', `/${container.value}`, {}, qs);\n\t}\n\n\tconst data = await parseBlobList(response);\n\n\tconst results: INodeListSearchItems[] = data.blobs\n\t\t.map((c) => ({\n\t\t\tname: c.name as string,\n\t\t\tvalue: c.name as string,\n\t\t}))\n\t\t.sort((a, b) =>\n\t\t\ta.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' }),\n\t\t);\n\n\treturn {\n\t\tresults,\n\t\tpaginationToken: data.nextMarker,\n\t};\n}\n\nexport async function getContainers(\n\tthis: ILoadOptionsFunctions,\n\tfilter?: string,\n\tpaginationToken?: string,\n): Promise<INodeListSearchResult> {\n\tlet response: string;\n\n\tconst qs: IDataObject = {\n\t\tcomp: 'list',\n\t};\n\n\tif (paginationToken) {\n\t\tqs.marker = paginationToken;\n\t\tresponse = await azureStorageApiRequest.call(this, 'GET', '/', {}, qs);\n\t} else {\n\t\tqs.maxresults = 5000;\n\t\tif (filter) {\n\t\t\tqs.prefix = filter;\n\t\t}\n\t\tresponse = await azureStorageApiRequest.call(this, 'GET', '/', {}, qs);\n\t}\n\n\tconst data = await parseContainerList(response);\n\n\tconst results: INodeListSearchItems[] = data.containers\n\t\t.map((c) => ({\n\t\t\tname: c.name as string,\n\t\t\tvalue: c.name as string,\n\t\t}))\n\t\t.sort((a, b) =>\n\t\t\ta.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' }),\n\t\t);\n\n\treturn {\n\t\tresults,\n\t\tpaginationToken: data.nextMarker,\n\t};\n}\n"],"mappings":"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","names":[]}