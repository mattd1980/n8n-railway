{"version":3,"sources":["../../../../../../../nodes/Microsoft/Outlook/v2/actions/draft/get.operation.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tINodeProperties,\n} from 'n8n-workflow';\n\nimport { updateDisplayOptions } from '@utils/utilities';\n\nimport { draftRLC } from '../../descriptions';\nimport { messageFields, simplifyOutputMessages } from '../../helpers/utils';\nimport { downloadAttachments, microsoftApiRequest } from '../../transport';\n\nexport const properties: INodeProperties[] = [\n\tdraftRLC,\n\t{\n\t\tdisplayName: 'Output',\n\t\tname: 'output',\n\t\ttype: 'options',\n\t\tdefault: 'simple',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tname: 'Simplified',\n\t\t\t\tvalue: 'simple',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Raw',\n\t\t\t\tvalue: 'raw',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Select Included Fields',\n\t\t\t\tvalue: 'fields',\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tdisplayName: 'Fields',\n\t\tname: 'fields',\n\t\ttype: 'multiOptions',\n\t\tdescription: 'The fields to add to the output',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\toutput: ['fields'],\n\t\t\t},\n\t\t},\n\t\toptions: messageFields,\n\t\tdefault: [],\n\t},\n\t{\n\t\tdisplayName: 'Options',\n\t\tname: 'options',\n\t\ttype: 'collection',\n\t\tplaceholder: 'Add option',\n\t\tdefault: {},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Attachments Prefix',\n\t\t\t\tname: 'attachmentsPrefix',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: 'attachment_',\n\t\t\t\tdescription:\n\t\t\t\t\t'Prefix for name of the output fields to put the binary files data in. An index starting from 0 will be added. So if name is \"attachment_\" the first attachment is saved to \"attachment_0\".',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Download Attachments',\n\t\t\t\tname: 'downloadAttachments',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\tdescription:\n\t\t\t\t\t\"Whether the message's attachments will be downloaded and included in the output\",\n\t\t\t},\n\t\t],\n\t},\n];\n\nconst displayOptions = {\n\tshow: {\n\t\tresource: ['draft'],\n\t\toperation: ['get'],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n\nexport async function execute(this: IExecuteFunctions, index: number) {\n\tlet responseData;\n\tconst qs: IDataObject = {};\n\n\tconst draftId = this.getNodeParameter('draftId', index, undefined, {\n\t\textractValue: true,\n\t}) as string;\n\tconst options = this.getNodeParameter('options', index, {});\n\tconst output = this.getNodeParameter('output', index) as string;\n\n\tif (output === 'fields') {\n\t\tconst fields = this.getNodeParameter('fields', index) as string[];\n\n\t\tif (options.downloadAttachments) {\n\t\t\tfields.push('hasAttachments');\n\t\t}\n\n\t\tqs.$select = fields.join(',');\n\t}\n\n\tif (output === 'simple') {\n\t\tqs.$select =\n\t\t\t'id,conversationId,subject,bodyPreview,from,toRecipients,categories,hasAttachments';\n\t}\n\n\tresponseData = await microsoftApiRequest.call(this, 'GET', `/messages/${draftId}`, undefined, qs);\n\n\tif (output === 'simple') {\n\t\tresponseData = simplifyOutputMessages([responseData as IDataObject]);\n\t}\n\n\tlet executionData: INodeExecutionData[] = [];\n\n\tif (options.downloadAttachments) {\n\t\tconst prefix = (options.attachmentsPrefix as string) || 'attachment_';\n\t\texecutionData = await downloadAttachments.call(this, responseData as IDataObject, prefix);\n\t} else {\n\t\texecutionData = this.helpers.constructExecutionMetaData(\n\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject),\n\t\t\t{ itemData: { item: index } },\n\t\t);\n\t}\n\n\treturn executionData;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,uBAAqC;AAErC,0BAAyB;AACzB,mBAAsD;AACtD,uBAAyD;AAElD,MAAM,aAAgC;AAAA,EAC5C;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS;AAAA,IACT,SAAS;AAAA,MACR;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,IACD;AAAA,EACD;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,QAAQ,CAAC,QAAQ;AAAA,MAClB;AAAA,IACD;AAAA,IACA,SAAS;AAAA,IACT,SAAS,CAAC;AAAA,EACX;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,SAAS,CAAC;AAAA,IACV,SAAS;AAAA,MACR;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aACC;AAAA,MACF;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aACC;AAAA,MACF;AAAA,IACD;AAAA,EACD;AACD;AAEA,MAAM,iBAAiB;AAAA,EACtB,MAAM;AAAA,IACL,UAAU,CAAC,OAAO;AAAA,IAClB,WAAW,CAAC,KAAK;AAAA,EAClB;AACD;AAEO,MAAM,kBAAc,uCAAqB,gBAAgB,UAAU;AAE1E,eAAsB,QAAiC,OAAe;AACrE,MAAI;AACJ,QAAM,KAAkB,CAAC;AAEzB,QAAM,UAAU,KAAK,iBAAiB,WAAW,OAAO,QAAW;AAAA,IAClE,cAAc;AAAA,EACf,CAAC;AACD,QAAM,UAAU,KAAK,iBAAiB,WAAW,OAAO,CAAC,CAAC;AAC1D,QAAM,SAAS,KAAK,iBAAiB,UAAU,KAAK;AAEpD,MAAI,WAAW,UAAU;AACxB,UAAM,SAAS,KAAK,iBAAiB,UAAU,KAAK;AAEpD,QAAI,QAAQ,qBAAqB;AAChC,aAAO,KAAK,gBAAgB;AAAA,IAC7B;AAEA,OAAG,UAAU,OAAO,KAAK,GAAG;AAAA,EAC7B;AAEA,MAAI,WAAW,UAAU;AACxB,OAAG,UACF;AAAA,EACF;AAEA,iBAAe,MAAM,qCAAoB,KAAK,MAAM,OAAO,aAAa,OAAO,IAAI,QAAW,EAAE;AAEhG,MAAI,WAAW,UAAU;AACxB,uBAAe,qCAAuB,CAAC,YAA2B,CAAC;AAAA,EACpE;AAEA,MAAI,gBAAsC,CAAC;AAE3C,MAAI,QAAQ,qBAAqB;AAChC,UAAM,SAAU,QAAQ,qBAAgC;AACxD,oBAAgB,MAAM,qCAAoB,KAAK,MAAM,cAA6B,MAAM;AAAA,EACzF,OAAO;AACN,oBAAgB,KAAK,QAAQ;AAAA,MAC5B,KAAK,QAAQ,gBAAgB,YAA2B;AAAA,MACxD,EAAE,UAAU,EAAE,MAAM,MAAM,EAAE;AAAA,IAC7B;AAAA,EACD;AAEA,SAAO;AACR;","names":[]}