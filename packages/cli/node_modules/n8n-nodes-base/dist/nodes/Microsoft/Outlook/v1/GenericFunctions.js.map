{"version":3,"sources":["../../../../../nodes/Microsoft/Outlook/v1/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHttpRequestMethods,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tIRequestOptions,\n\tJsonObject,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\nexport async function microsoftApiRequest(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tresource: string,\n\n\tbody: any = {},\n\tqs: IDataObject = {},\n\turi?: string,\n\theaders: IDataObject = {},\n\toption: IDataObject = { json: true },\n): Promise<any> {\n\tconst credentials = await this.getCredentials('microsoftOutlookOAuth2Api');\n\n\tlet apiUrl = `https://graph.microsoft.com/v1.0/me${resource}`;\n\t// If accessing shared mailbox\n\tif (credentials.useShared && credentials.userPrincipalName) {\n\t\tapiUrl = `https://graph.microsoft.com/v1.0/users/${credentials.userPrincipalName}${resource}`;\n\t}\n\n\tconst options: IRequestOptions = {\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tmethod,\n\t\tbody,\n\t\tqs,\n\t\turi: uri || apiUrl,\n\t};\n\ttry {\n\t\tObject.assign(options, option);\n\n\t\tif (Object.keys(headers).length !== 0) {\n\t\t\toptions.headers = Object.assign({}, options.headers, headers);\n\t\t}\n\n\t\tif (Object.keys(body as IDataObject).length === 0) {\n\t\t\tdelete options.body;\n\t\t}\n\n\t\treturn await this.helpers.requestOAuth2.call(this, 'microsoftOutlookOAuth2Api', options);\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\nexport async function microsoftApiRequestAllItems(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions,\n\tpropertyName: string,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\n\tbody: any = {},\n\tquery: IDataObject = {},\n\theaders: IDataObject = {},\n): Promise<any> {\n\tconst returnData: IDataObject[] = [];\n\n\tlet responseData;\n\tlet uri: string | undefined;\n\tquery.$top = 100;\n\n\tdo {\n\t\tresponseData = await microsoftApiRequest.call(\n\t\t\tthis,\n\t\t\tmethod,\n\t\t\tendpoint,\n\t\t\tbody,\n\t\t\tquery,\n\t\t\turi,\n\t\t\theaders,\n\t\t);\n\t\turi = responseData['@odata.nextLink'];\n\t\treturnData.push.apply(returnData, responseData[propertyName] as IDataObject[]);\n\t} while (responseData['@odata.nextLink'] !== undefined);\n\n\treturn returnData;\n}\n\nexport async function microsoftApiRequestAllItemsSkip(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions,\n\tpropertyName: string,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\n\tbody: any = {},\n\tquery: IDataObject = {},\n\theaders: IDataObject = {},\n): Promise<any> {\n\tconst returnData: IDataObject[] = [];\n\n\tlet responseData;\n\tquery.$top = 100;\n\tquery.$skip = 0;\n\n\tdo {\n\t\tresponseData = await microsoftApiRequest.call(\n\t\t\tthis,\n\t\t\tmethod,\n\t\t\tendpoint,\n\t\t\tbody,\n\t\t\tquery,\n\t\t\tundefined,\n\t\t\theaders,\n\t\t);\n\t\tquery.$skip += query.$top;\n\t\treturnData.push.apply(returnData, responseData[propertyName] as IDataObject[]);\n\t} while (responseData.value.length !== 0);\n\n\treturn returnData;\n}\n\nexport function makeRecipient(email: string) {\n\treturn {\n\t\temailAddress: {\n\t\t\taddress: email,\n\t\t},\n\t};\n}\n\nexport function createMessage(fields: IDataObject) {\n\tconst message: IDataObject = {};\n\n\t// Create body object\n\tif (fields.bodyContent || fields.bodyContentType) {\n\t\tconst bodyObject = {\n\t\t\tcontent: fields.bodyContent,\n\t\t\tcontentType: fields.bodyContentType,\n\t\t};\n\n\t\tmessage.body = bodyObject;\n\t\tdelete fields.bodyContent;\n\t\tdelete fields.bodyContentType;\n\t}\n\n\t// Handle custom headers\n\tif (\n\t\t'internetMessageHeaders' in fields &&\n\t\t'headers' in (fields.internetMessageHeaders as IDataObject)\n\t) {\n\t\tfields.internetMessageHeaders = (fields.internetMessageHeaders as IDataObject).headers;\n\t}\n\n\t// Handle recipient fields\n\t['bccRecipients', 'ccRecipients', 'replyTo', 'sender', 'toRecipients'].forEach((key) => {\n\t\tif (Array.isArray(fields[key])) {\n\t\t\tfields[key] = (fields[key] as string[]).map((email) => makeRecipient(email));\n\t\t} else if (fields[key] !== undefined) {\n\t\t\tfields[key] = (fields[key] as string)\n\t\t\t\t.split(',')\n\t\t\t\t.map((recipient: string) => makeRecipient(recipient));\n\t\t}\n\t});\n\n\t['from', 'sender'].forEach((key) => {\n\t\tif (fields[key] !== undefined) {\n\t\t\tfields[key] = makeRecipient(fields[key] as string);\n\t\t}\n\t});\n\n\tObject.assign(message, fields);\n\n\treturn message;\n}\n\nexport async function downloadAttachments(\n\tthis: IExecuteFunctions,\n\tmessages: IDataObject[] | IDataObject,\n\tprefix: string,\n) {\n\tconst elements: INodeExecutionData[] = [];\n\tif (!Array.isArray(messages)) {\n\t\tmessages = [messages];\n\t}\n\tfor (const message of messages) {\n\t\tconst element: INodeExecutionData = {\n\t\t\tjson: message,\n\t\t\tbinary: {},\n\t\t};\n\t\tif (message.hasAttachments === true) {\n\t\t\tconst attachments = await microsoftApiRequestAllItems.call(\n\t\t\t\tthis,\n\t\t\t\t'value',\n\t\t\t\t'GET',\n\t\t\t\t`/messages/${message.id}/attachments`,\n\t\t\t\t{},\n\t\t\t);\n\t\t\tfor (const [index, attachment] of attachments.entries()) {\n\t\t\t\tconst response = await microsoftApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t`/messages/${message.id}/attachments/${attachment.id}/$value`,\n\t\t\t\t\tundefined,\n\t\t\t\t\t{},\n\t\t\t\t\tundefined,\n\t\t\t\t\t{},\n\t\t\t\t\t{ encoding: null, resolveWithFullResponse: true },\n\t\t\t\t);\n\n\t\t\t\tconst data = Buffer.from(response.body as string, 'utf8');\n\t\t\t\telement.binary![`${prefix}${index}`] = await this.helpers.prepareBinaryData(\n\t\t\t\t\tdata as unknown as Buffer,\n\t\t\t\t\tattachment.name as string,\n\t\t\t\t\tattachment.contentType as string,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tif (Object.keys(element.binary!).length === 0) {\n\t\t\tdelete element.binary;\n\t\t}\n\t\telements.push(element);\n\t}\n\treturn elements;\n}\n"],"mappings":"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","names":[]}