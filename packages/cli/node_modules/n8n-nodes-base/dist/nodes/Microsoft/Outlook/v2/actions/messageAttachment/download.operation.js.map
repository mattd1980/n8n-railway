{"version":3,"sources":["../../../../../../../nodes/Microsoft/Outlook/v2/actions/messageAttachment/download.operation.ts"],"sourcesContent":["import type { IExecuteFunctions, INodeExecutionData, INodeProperties } from 'n8n-workflow';\n\nimport { updateDisplayOptions } from '@utils/utilities';\n\nimport { attachmentRLC, messageRLC } from '../../descriptions';\nimport { microsoftApiRequest } from '../../transport';\n\nexport const properties: INodeProperties[] = [\n\tmessageRLC,\n\tattachmentRLC,\n\t{\n\t\tdisplayName: 'Put Output in Field',\n\t\tname: 'binaryPropertyName',\n\t\thint: 'The name of the output field to put the binary file data in',\n\t\ttype: 'string',\n\t\trequired: true,\n\t\tdefault: 'data',\n\t},\n];\n\nconst displayOptions = {\n\tshow: {\n\t\tresource: ['messageAttachment'],\n\t\toperation: ['download'],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n\nexport async function execute(this: IExecuteFunctions, index: number, items: INodeExecutionData[]) {\n\tconst messageId = this.getNodeParameter('messageId', index, undefined, {\n\t\textractValue: true,\n\t}) as string;\n\n\tconst attachmentId = this.getNodeParameter('attachmentId', index, undefined, {\n\t\textractValue: true,\n\t}) as string;\n\n\tconst dataPropertyNameDownload = this.getNodeParameter('binaryPropertyName', index);\n\n\t// Get attachment details first\n\tconst attachmentDetails = await microsoftApiRequest.call(\n\t\tthis,\n\t\t'GET',\n\t\t`/messages/${messageId}/attachments/${attachmentId}`,\n\t\tundefined,\n\t\t{ $select: 'id,name,contentType' },\n\t);\n\n\tlet mimeType: string | undefined;\n\tif (attachmentDetails.contentType) {\n\t\tmimeType = attachmentDetails.contentType;\n\t}\n\tconst fileName = attachmentDetails.name as string;\n\n\tconst response = await microsoftApiRequest.call(\n\t\tthis,\n\t\t'GET',\n\t\t`/messages/${messageId}/attachments/${attachmentId}/$value`,\n\t\tundefined,\n\t\t{},\n\t\tundefined,\n\t\t{},\n\t\t{ encoding: null, resolveWithFullResponse: true },\n\t);\n\n\tconst newItem: INodeExecutionData = {\n\t\tjson: items[index].json,\n\t\tbinary: {},\n\t};\n\n\tif (items[index].binary !== undefined) {\n\t\t// Create a shallow copy of the binary data so that the old\n\t\t// data references which do not get changed still stay behind\n\t\t// but the incoming data does not get changed.\n\t\tObject.assign(newItem.binary!, items[index].binary);\n\t}\n\n\tconst data = Buffer.from(response.body as string, 'utf8');\n\tnewItem.binary![dataPropertyNameDownload] = await this.helpers.prepareBinaryData(\n\t\tdata,\n\t\tfileName,\n\t\tmimeType,\n\t);\n\n\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\tthis.helpers.returnJsonArray(newItem),\n\t\t{ itemData: { item: index } },\n\t);\n\n\treturn executionData;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,uBAAqC;AAErC,0BAA0C;AAC1C,uBAAoC;AAE7B,MAAM,aAAgC;AAAA,EAC5C;AAAA,EACA;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,SAAS;AAAA,EACV;AACD;AAEA,MAAM,iBAAiB;AAAA,EACtB,MAAM;AAAA,IACL,UAAU,CAAC,mBAAmB;AAAA,IAC9B,WAAW,CAAC,UAAU;AAAA,EACvB;AACD;AAEO,MAAM,kBAAc,uCAAqB,gBAAgB,UAAU;AAE1E,eAAsB,QAAiC,OAAe,OAA6B;AAClG,QAAM,YAAY,KAAK,iBAAiB,aAAa,OAAO,QAAW;AAAA,IACtE,cAAc;AAAA,EACf,CAAC;AAED,QAAM,eAAe,KAAK,iBAAiB,gBAAgB,OAAO,QAAW;AAAA,IAC5E,cAAc;AAAA,EACf,CAAC;AAED,QAAM,2BAA2B,KAAK,iBAAiB,sBAAsB,KAAK;AAGlF,QAAM,oBAAoB,MAAM,qCAAoB;AAAA,IACnD;AAAA,IACA;AAAA,IACA,aAAa,SAAS,gBAAgB,YAAY;AAAA,IAClD;AAAA,IACA,EAAE,SAAS,sBAAsB;AAAA,EAClC;AAEA,MAAI;AACJ,MAAI,kBAAkB,aAAa;AAClC,eAAW,kBAAkB;AAAA,EAC9B;AACA,QAAM,WAAW,kBAAkB;AAEnC,QAAM,WAAW,MAAM,qCAAoB;AAAA,IAC1C;AAAA,IACA;AAAA,IACA,aAAa,SAAS,gBAAgB,YAAY;AAAA,IAClD;AAAA,IACA,CAAC;AAAA,IACD;AAAA,IACA,CAAC;AAAA,IACD,EAAE,UAAU,MAAM,yBAAyB,KAAK;AAAA,EACjD;AAEA,QAAM,UAA8B;AAAA,IACnC,MAAM,MAAM,KAAK,EAAE;AAAA,IACnB,QAAQ,CAAC;AAAA,EACV;AAEA,MAAI,MAAM,KAAK,EAAE,WAAW,QAAW;AAItC,WAAO,OAAO,QAAQ,QAAS,MAAM,KAAK,EAAE,MAAM;AAAA,EACnD;AAEA,QAAM,OAAO,OAAO,KAAK,SAAS,MAAgB,MAAM;AACxD,UAAQ,OAAQ,wBAAwB,IAAI,MAAM,KAAK,QAAQ;AAAA,IAC9D;AAAA,IACA;AAAA,IACA;AAAA,EACD;AAEA,QAAM,gBAAgB,KAAK,QAAQ;AAAA,IAClC,KAAK,QAAQ,gBAAgB,OAAO;AAAA,IACpC,EAAE,UAAU,EAAE,MAAM,MAAM,EAAE;AAAA,EAC7B;AAEA,SAAO;AACR;","names":[]}