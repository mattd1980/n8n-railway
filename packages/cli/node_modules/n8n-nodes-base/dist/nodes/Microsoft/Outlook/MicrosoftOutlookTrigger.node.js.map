{"version":3,"sources":["../../../../nodes/Microsoft/Outlook/MicrosoftOutlookTrigger.node.ts"],"sourcesContent":["import { DateTime } from 'luxon';\nimport {\n\ttype IPollFunctions,\n\ttype INodeExecutionData,\n\ttype INodeType,\n\ttype INodeTypeDescription,\n\tNodeConnectionTypes,\n} from 'n8n-workflow';\n\nimport { getPollResponse } from './trigger/GenericFunctions';\nimport { properties as messageProperties } from './trigger/MessageDescription';\nimport { loadOptions } from './v2/methods';\n\nexport class MicrosoftOutlookTrigger implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Microsoft Outlook Trigger',\n\t\tname: 'microsoftOutlookTrigger',\n\t\ticon: 'file:outlook.svg',\n\t\tgroup: ['trigger'],\n\t\tversion: 1,\n\t\tdescription:\n\t\t\t'Fetches emails from Microsoft Outlook and starts the workflow on specified polling intervals.',\n\t\tsubtitle: '={{\"Microsoft Outlook Trigger\"}}',\n\t\tdefaults: {\n\t\t\tname: 'Microsoft Outlook Trigger',\n\t\t},\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'microsoftOutlookOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tpolling: true,\n\t\tinputs: [],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Trigger On',\n\t\t\t\tname: 'event',\n\t\t\t\ttype: 'options',\n\t\t\t\tdefault: 'messageReceived',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Message Received',\n\t\t\t\t\t\tvalue: 'messageReceived',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t...messageProperties,\n\t\t],\n\t};\n\n\tmethods = { loadOptions };\n\n\tasync poll(this: IPollFunctions): Promise<INodeExecutionData[][] | null> {\n\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\tlet responseData;\n\n\t\tconst now = DateTime.now().toISO();\n\t\tconst startDate = (webhookData.lastTimeChecked as string) || now;\n\t\tconst endDate = now;\n\t\ttry {\n\t\t\tconst pollStartDate = startDate;\n\t\t\tconst pollEndDate = endDate;\n\n\t\t\tresponseData = await getPollResponse.call(this, pollStartDate, pollEndDate);\n\n\t\t\tif (!responseData?.length) {\n\t\t\t\twebhookData.lastTimeChecked = endDate;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (this.getMode() === 'manual' || !webhookData.lastTimeChecked) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\tconst workflow = this.getWorkflow();\n\t\t\tconst node = this.getNode();\n\t\t\tthis.logger.error(\n\t\t\t\t`There was a problem in '${node.name}' node in workflow '${workflow.id}': '${error.description}'`,\n\t\t\t\t{\n\t\t\t\t\tnode: node.name,\n\t\t\t\t\tworkflowId: workflow.id,\n\t\t\t\t\terror,\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\n\t\twebhookData.lastTimeChecked = endDate;\n\n\t\tif (Array.isArray(responseData) && responseData.length) {\n\t\t\treturn [responseData];\n\t\t}\n\n\t\treturn null;\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAyB;AACzB,0BAMO;AAEP,8BAAgC;AAChC,gCAAgD;AAChD,qBAA4B;AAErB,MAAM,wBAA6C;AAAA,EAAnD;AACN,uBAAoC;AAAA,MACnC,aAAa;AAAA,MACb,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO,CAAC,SAAS;AAAA,MACjB,SAAS;AAAA,MACT,aACC;AAAA,MACD,UAAU;AAAA,MACV,UAAU;AAAA,QACT,MAAM;AAAA,MACP;AAAA,MACA,aAAa;AAAA,QACZ;AAAA,UACC,MAAM;AAAA,UACN,UAAU;AAAA,QACX;AAAA,MACD;AAAA,MACA,SAAS;AAAA,MACT,QAAQ,CAAC;AAAA,MACT,SAAS,CAAC,wCAAoB,IAAI;AAAA,MAClC,YAAY;AAAA,QACX;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,SAAS;AAAA,UACT,SAAS;AAAA,YACR;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,UACD;AAAA,QACD;AAAA,QACA,GAAG,0BAAAA;AAAA,MACJ;AAAA,IACD;AAEA,mBAAU,EAAE,wCAAY;AAAA;AAAA,EAExB,MAAM,OAAmE;AACxE,UAAM,cAAc,KAAK,sBAAsB,MAAM;AACrD,QAAI;AAEJ,UAAM,MAAM,sBAAS,IAAI,EAAE,MAAM;AACjC,UAAM,YAAa,YAAY,mBAA8B;AAC7D,UAAM,UAAU;AAChB,QAAI;AACH,YAAM,gBAAgB;AACtB,YAAM,cAAc;AAEpB,qBAAe,MAAM,wCAAgB,KAAK,MAAM,eAAe,WAAW;AAE1E,UAAI,CAAC,cAAc,QAAQ;AAC1B,oBAAY,kBAAkB;AAC9B,eAAO;AAAA,MACR;AAAA,IACD,SAAS,OAAO;AACf,UAAI,KAAK,QAAQ,MAAM,YAAY,CAAC,YAAY,iBAAiB;AAChE,cAAM;AAAA,MACP;AACA,YAAM,WAAW,KAAK,YAAY;AAClC,YAAM,OAAO,KAAK,QAAQ;AAC1B,WAAK,OAAO;AAAA,QACX,2BAA2B,KAAK,IAAI,uBAAuB,SAAS,EAAE,OAAO,MAAM,WAAW;AAAA,QAC9F;AAAA,UACC,MAAM,KAAK;AAAA,UACX,YAAY,SAAS;AAAA,UACrB;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAEA,gBAAY,kBAAkB;AAE9B,QAAI,MAAM,QAAQ,YAAY,KAAK,aAAa,QAAQ;AACvD,aAAO,CAAC,YAAY;AAAA,IACrB;AAEA,WAAO;AAAA,EACR;AACD;","names":["messageProperties"]}