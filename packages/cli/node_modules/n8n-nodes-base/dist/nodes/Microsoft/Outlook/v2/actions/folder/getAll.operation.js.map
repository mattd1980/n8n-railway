{"version":3,"sources":["../../../../../../../nodes/Microsoft/Outlook/v2/actions/folder/getAll.operation.ts"],"sourcesContent":["import type { IDataObject, IExecuteFunctions, INodeProperties } from 'n8n-workflow';\n\nimport { updateDisplayOptions } from '@utils/utilities';\n\nimport { folderFields, folderRLC, returnAllOrLimit } from '../../descriptions';\nimport { getSubfolders, microsoftApiRequest, microsoftApiRequestAllItems } from '../../transport';\n\nexport const properties: INodeProperties[] = [\n\t...returnAllOrLimit,\n\t{\n\t\tdisplayName: 'Filters',\n\t\tname: 'filters',\n\t\ttype: 'collection',\n\t\tplaceholder: 'Add Filter',\n\t\tdefault: {},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Filter Query',\n\t\t\t\tname: 'filter',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tplaceholder: \"e.g. displayName eq 'My Folder'\",\n\t\t\t\thint: 'Search query to filter folders. <a href=\"https://docs.microsoft.com/en-us/graph/query-parameters#filter-parameter\">More info</a>.',\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tdisplayName: 'Options',\n\t\tname: 'options',\n\t\ttype: 'collection',\n\t\tplaceholder: 'Add Field',\n\t\tdefault: {},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Fields',\n\t\t\t\tname: 'fields',\n\t\t\t\ttype: 'multiOptions',\n\t\t\t\tdescription: 'The fields to add to the output',\n\t\t\t\toptions: folderFields,\n\t\t\t\tdefault: [],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Include Child Folders',\n\t\t\t\tname: 'includeChildFolders',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: 'Whether to include child folders in the response',\n\t\t\t},\n\t\t\t{\n\t\t\t\t...folderRLC,\n\t\t\t\tdisplayName: 'Parent Folder',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'The folder you want to search in',\n\t\t\t},\n\t\t],\n\t},\n];\n\nconst displayOptions = {\n\tshow: {\n\t\tresource: ['folder'],\n\t\toperation: ['getAll'],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n\nexport async function execute(this: IExecuteFunctions, index: number) {\n\tlet responseData;\n\tconst qs: IDataObject = {};\n\n\tconst returnAll = this.getNodeParameter('returnAll', index);\n\tconst options = this.getNodeParameter('options', index);\n\tconst filter = this.getNodeParameter('filters.filter', index, '') as string;\n\n\tconst parentFolderId = this.getNodeParameter('options.folderId', index, '', {\n\t\textractValue: true,\n\t}) as string;\n\n\tif (options.fields) {\n\t\tqs.$select = (options.fields as string[]).join(',');\n\t}\n\n\tif (filter) {\n\t\tqs.$filter = filter;\n\t}\n\n\tlet endpoint;\n\tif (parentFolderId) {\n\t\tendpoint = `/mailFolders/${parentFolderId}/childFolders`;\n\t} else {\n\t\tendpoint = '/mailFolders';\n\t}\n\n\tif (returnAll) {\n\t\tresponseData = await microsoftApiRequestAllItems.call(this, 'value', 'GET', endpoint, {}, qs);\n\t} else {\n\t\tqs.$top = this.getNodeParameter('limit', index);\n\t\tresponseData = await microsoftApiRequest.call(this, 'GET', endpoint, {}, qs);\n\t\tresponseData = responseData.value;\n\t}\n\n\tif (options.includeChildFolders) {\n\t\tresponseData = await getSubfolders.call(this, responseData as IDataObject[]);\n\t}\n\n\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t{ itemData: { item: index } },\n\t);\n\n\treturn executionData;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,uBAAqC;AAErC,0BAA0D;AAC1D,uBAAgF;AAEzE,MAAM,aAAgC;AAAA,EAC5C,GAAG;AAAA,EACH;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,SAAS,CAAC;AAAA,IACV,SAAS;AAAA,MACR;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aAAa;AAAA,QACb,MAAM;AAAA,MACP;AAAA,IACD;AAAA,EACD;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,SAAS,CAAC;AAAA,IACV,SAAS;AAAA,MACR;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,aAAa;AAAA,QACb,SAAS;AAAA,QACT,SAAS,CAAC;AAAA,MACX;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aAAa;AAAA,MACd;AAAA,MACA;AAAA,QACC,GAAG;AAAA,QACH,aAAa;AAAA,QACb,UAAU;AAAA,QACV,aAAa;AAAA,MACd;AAAA,IACD;AAAA,EACD;AACD;AAEA,MAAM,iBAAiB;AAAA,EACtB,MAAM;AAAA,IACL,UAAU,CAAC,QAAQ;AAAA,IACnB,WAAW,CAAC,QAAQ;AAAA,EACrB;AACD;AAEO,MAAM,kBAAc,uCAAqB,gBAAgB,UAAU;AAE1E,eAAsB,QAAiC,OAAe;AACrE,MAAI;AACJ,QAAM,KAAkB,CAAC;AAEzB,QAAM,YAAY,KAAK,iBAAiB,aAAa,KAAK;AAC1D,QAAM,UAAU,KAAK,iBAAiB,WAAW,KAAK;AACtD,QAAM,SAAS,KAAK,iBAAiB,kBAAkB,OAAO,EAAE;AAEhE,QAAM,iBAAiB,KAAK,iBAAiB,oBAAoB,OAAO,IAAI;AAAA,IAC3E,cAAc;AAAA,EACf,CAAC;AAED,MAAI,QAAQ,QAAQ;AACnB,OAAG,UAAW,QAAQ,OAAoB,KAAK,GAAG;AAAA,EACnD;AAEA,MAAI,QAAQ;AACX,OAAG,UAAU;AAAA,EACd;AAEA,MAAI;AACJ,MAAI,gBAAgB;AACnB,eAAW,gBAAgB,cAAc;AAAA,EAC1C,OAAO;AACN,eAAW;AAAA,EACZ;AAEA,MAAI,WAAW;AACd,mBAAe,MAAM,6CAA4B,KAAK,MAAM,SAAS,OAAO,UAAU,CAAC,GAAG,EAAE;AAAA,EAC7F,OAAO;AACN,OAAG,OAAO,KAAK,iBAAiB,SAAS,KAAK;AAC9C,mBAAe,MAAM,qCAAoB,KAAK,MAAM,OAAO,UAAU,CAAC,GAAG,EAAE;AAC3E,mBAAe,aAAa;AAAA,EAC7B;AAEA,MAAI,QAAQ,qBAAqB;AAChC,mBAAe,MAAM,+BAAc,KAAK,MAAM,YAA6B;AAAA,EAC5E;AAEA,QAAM,gBAAgB,KAAK,QAAQ;AAAA,IAClC,KAAK,QAAQ,gBAAgB,YAA6B;AAAA,IAC1D,EAAE,UAAU,EAAE,MAAM,MAAM,EAAE;AAAA,EAC7B;AAEA,SAAO;AACR;","names":[]}