{"version":3,"sources":["../../../../../../../nodes/Microsoft/Outlook/v2/actions/folder/get.operation.ts"],"sourcesContent":["import type { IDataObject, IExecuteFunctions, INodeProperties } from 'n8n-workflow';\n\nimport { updateDisplayOptions } from '@utils/utilities';\n\nimport { folderFields, folderRLC } from '../../descriptions';\nimport { decodeOutlookId } from '../../helpers/utils';\nimport { microsoftApiRequest } from '../../transport';\n\nexport const properties: INodeProperties[] = [\n\tfolderRLC,\n\t{\n\t\tdisplayName: 'Options',\n\t\tname: 'options',\n\t\ttype: 'collection',\n\t\tplaceholder: 'Add option',\n\t\tdefault: {},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Fields',\n\t\t\t\tname: 'fields',\n\t\t\t\ttype: 'multiOptions',\n\t\t\t\tdescription: 'The fields to add to the output',\n\t\t\t\toptions: folderFields,\n\t\t\t\tdefault: [],\n\t\t\t},\n\t\t],\n\t},\n];\n\nconst displayOptions = {\n\tshow: {\n\t\tresource: ['folder'],\n\t\toperation: ['get'],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n\nexport async function execute(this: IExecuteFunctions, index: number) {\n\tconst qs: IDataObject = {};\n\n\tconst folderId = decodeOutlookId(\n\t\tthis.getNodeParameter('folderId', index, undefined, {\n\t\t\textractValue: true,\n\t\t}) as string,\n\t);\n\n\tconst options = this.getNodeParameter('options', index);\n\n\tif (options.fields) {\n\t\tqs.$select = (options.fields as string[]).join(',');\n\t}\n\n\tif (options.filter) {\n\t\tqs.$filter = options.filter;\n\t}\n\tconst responseData = await microsoftApiRequest.call(\n\t\tthis,\n\t\t'GET',\n\t\t`/mailFolders/${folderId}`,\n\t\t{},\n\t\tqs,\n\t);\n\n\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\tthis.helpers.returnJsonArray(responseData as IDataObject),\n\t\t{ itemData: { item: index } },\n\t);\n\n\treturn executionData;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,uBAAqC;AAErC,0BAAwC;AACxC,mBAAgC;AAChC,uBAAoC;AAE7B,MAAM,aAAgC;AAAA,EAC5C;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,SAAS,CAAC;AAAA,IACV,SAAS;AAAA,MACR;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,aAAa;AAAA,QACb,SAAS;AAAA,QACT,SAAS,CAAC;AAAA,MACX;AAAA,IACD;AAAA,EACD;AACD;AAEA,MAAM,iBAAiB;AAAA,EACtB,MAAM;AAAA,IACL,UAAU,CAAC,QAAQ;AAAA,IACnB,WAAW,CAAC,KAAK;AAAA,EAClB;AACD;AAEO,MAAM,kBAAc,uCAAqB,gBAAgB,UAAU;AAE1E,eAAsB,QAAiC,OAAe;AACrE,QAAM,KAAkB,CAAC;AAEzB,QAAM,eAAW;AAAA,IAChB,KAAK,iBAAiB,YAAY,OAAO,QAAW;AAAA,MACnD,cAAc;AAAA,IACf,CAAC;AAAA,EACF;AAEA,QAAM,UAAU,KAAK,iBAAiB,WAAW,KAAK;AAEtD,MAAI,QAAQ,QAAQ;AACnB,OAAG,UAAW,QAAQ,OAAoB,KAAK,GAAG;AAAA,EACnD;AAEA,MAAI,QAAQ,QAAQ;AACnB,OAAG,UAAU,QAAQ;AAAA,EACtB;AACA,QAAM,eAAe,MAAM,qCAAoB;AAAA,IAC9C;AAAA,IACA;AAAA,IACA,gBAAgB,QAAQ;AAAA,IACxB,CAAC;AAAA,IACD;AAAA,EACD;AAEA,QAAM,gBAAgB,KAAK,QAAQ;AAAA,IAClC,KAAK,QAAQ,gBAAgB,YAA2B;AAAA,IACxD,EAAE,UAAU,EAAE,MAAM,MAAM,EAAE;AAAA,EAC7B;AAEA,SAAO;AACR;","names":[]}