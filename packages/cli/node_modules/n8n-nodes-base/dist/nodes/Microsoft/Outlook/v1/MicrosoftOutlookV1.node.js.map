{"version":3,"sources":["../../../../../nodes/Microsoft/Outlook/v1/MicrosoftOutlookV1.node.ts"],"sourcesContent":["import type {\n\tIBinaryKeyData,\n\tIDataObject,\n\tIExecuteFunctions,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeBaseDescription,\n\tINodeTypeDescription,\n\tJsonObject,\n} from 'n8n-workflow';\nimport { NodeApiError, NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport { oldVersionNotice } from '@utils/descriptions';\n\nimport { draftFields, draftOperations } from './DraftDescription';\nimport { draftMessageSharedFields } from './DraftMessageSharedDescription';\nimport { folderFields, folderOperations } from './FolderDescription';\nimport { folderMessageFields, folderMessageOperations } from './FolderMessageDecription';\nimport {\n\tcreateMessage,\n\tdownloadAttachments,\n\tmakeRecipient,\n\tmicrosoftApiRequest,\n\tmicrosoftApiRequestAllItems,\n} from './GenericFunctions';\nimport {\n\tmessageAttachmentFields,\n\tmessageAttachmentOperations,\n} from './MessageAttachmentDescription';\nimport { messageFields, messageOperations } from './MessageDescription';\n\nconst versionDescription: INodeTypeDescription = {\n\tdisplayName: 'Microsoft Outlook',\n\tname: 'microsoftOutlook',\n\tgroup: ['transform'],\n\ticon: 'file:outlook.svg',\n\tversion: 1,\n\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\tdescription: 'Consume Microsoft Outlook API',\n\tdefaults: {\n\t\tname: 'Microsoft Outlook',\n\t},\n\tinputs: [NodeConnectionTypes.Main],\n\toutputs: [NodeConnectionTypes.Main],\n\tcredentials: [\n\t\t{\n\t\t\tname: 'microsoftOutlookOAuth2Api',\n\t\t\trequired: true,\n\t\t},\n\t],\n\tproperties: [\n\t\toldVersionNotice,\n\t\t{\n\t\t\tdisplayName: 'Resource',\n\t\t\tname: 'resource',\n\t\t\ttype: 'options',\n\t\t\tnoDataExpression: true,\n\t\t\tdefault: 'message',\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\tname: 'Draft',\n\t\t\t\t\tvalue: 'draft',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Folder',\n\t\t\t\t\tvalue: 'folder',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Folder Message',\n\t\t\t\t\tvalue: 'folderMessage',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Message',\n\t\t\t\t\tvalue: 'message',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Message Attachment',\n\t\t\t\t\tvalue: 'messageAttachment',\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\t// Draft\n\t\t...draftOperations,\n\t\t...draftFields,\n\t\t// Message\n\t\t...messageOperations,\n\t\t...messageFields,\n\t\t// Message Attachment\n\t\t...messageAttachmentOperations,\n\t\t...messageAttachmentFields,\n\t\t// Folder\n\t\t...folderOperations,\n\t\t...folderFields,\n\t\t// Folder Message\n\t\t...folderMessageOperations,\n\t\t...folderMessageFields,\n\n\t\t// Draft & Message\n\t\t...draftMessageSharedFields,\n\t],\n};\n\nexport class MicrosoftOutlookV1 implements INodeType {\n\tdescription: INodeTypeDescription;\n\n\tconstructor(baseDescription: INodeTypeBaseDescription) {\n\t\tthis.description = {\n\t\t\t...baseDescription,\n\t\t\t...versionDescription,\n\t\t};\n\t}\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get all the categories to display them to user so that he can\n\t\t\t// select them easily\n\t\t\tasync getCategories(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst categories = await microsoftApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'value',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/outlook/masterCategories',\n\t\t\t\t);\n\t\t\t\tfor (const category of categories) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: category.displayName as string,\n\t\t\t\t\t\tvalue: category.id as string,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions) {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: IDataObject[] = [];\n\t\tconst length = items.length;\n\t\tconst qs: IDataObject = {};\n\t\tlet responseData;\n\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\tif (['draft', 'message'].includes(resource)) {\n\t\t\tif (operation === 'delete') {\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst messageId = this.getNodeParameter('messageId', i) as string;\n\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(this, 'DELETE', `/messages/${messageId}`);\n\n\t\t\t\t\t\treturnData.push({ success: true });\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\t\t\treturnData.push({ error: error.message });\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (operation === 'get') {\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst messageId = this.getNodeParameter('messageId', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tif (additionalFields.fields) {\n\t\t\t\t\t\t\tqs.$select = additionalFields.fields;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.filter) {\n\t\t\t\t\t\t\tqs.$filter = additionalFields.filter;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/messages/${messageId}`,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (additionalFields.dataPropertyAttachmentsPrefixName) {\n\t\t\t\t\t\t\tconst prefix = additionalFields.dataPropertyAttachmentsPrefixName as string;\n\t\t\t\t\t\t\tconst data = await downloadAttachments.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\tresponseData as IDataObject[],\n\t\t\t\t\t\t\t\tprefix,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturnData.push.apply(returnData, data as unknown as IDataObject[]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturnData.push(responseData as IDataObject);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.dataPropertyAttachmentsPrefixName) {\n\t\t\t\t\t\t\treturn [returnData as INodeExecutionData[]];\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\t\t\treturnData.push({ error: error.message });\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (operation === 'update') {\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst messageId = this.getNodeParameter('messageId', i) as string;\n\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\n\t\t\t\t\t\t// Create message from optional fields\n\t\t\t\t\t\tconst body: IDataObject = createMessage(updateFields);\n\n\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PATCH',\n\t\t\t\t\t\t\t`/messages/${messageId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturnData.push(responseData as IDataObject);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\t\t\treturnData.push({ error: error.message });\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (resource === 'draft') {\n\t\t\tif (operation === 'create') {\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tconst subject = this.getNodeParameter('subject', i) as string;\n\n\t\t\t\t\t\tconst bodyContent = this.getNodeParameter('bodyContent', i, '') as string;\n\n\t\t\t\t\t\tadditionalFields.subject = subject;\n\n\t\t\t\t\t\tadditionalFields.bodyContent = bodyContent || ' ';\n\n\t\t\t\t\t\t// Create message object from optional fields\n\t\t\t\t\t\tconst body: IDataObject = createMessage(additionalFields);\n\n\t\t\t\t\t\tif (additionalFields.attachments) {\n\t\t\t\t\t\t\tconst attachments = (additionalFields.attachments as IDataObject)\n\t\t\t\t\t\t\t\t.attachments as IDataObject[];\n\n\t\t\t\t\t\t\t// // Handle attachments\n\t\t\t\t\t\t\tbody.attachments = attachments.map((attachment) => {\n\t\t\t\t\t\t\t\tconst binaryPropertyName = attachment.binaryPropertyName as string;\n\n\t\t\t\t\t\t\t\tif (items[i].binary === undefined) {\n\t\t\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'No binary data exists on item!', {\n\t\t\t\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ((items[i].binary as IDataObject)[binaryPropertyName] === undefined) {\n\t\t\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t\t\t`No binary data property \"${binaryPropertyName}\" does not exists on item!`,\n\t\t\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tconst binaryData = (items[i].binary as IBinaryKeyData)[binaryPropertyName];\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t'@odata.type': '#microsoft.graph.fileAttachment',\n\t\t\t\t\t\t\t\t\tname: binaryData.fileName,\n\t\t\t\t\t\t\t\t\tcontentBytes: binaryData.data,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(this, 'POST', '/messages', body, {});\n\n\t\t\t\t\t\treturnData.push(responseData as IDataObject);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\t\t\treturnData.push({ error: error.message });\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (operation === 'send') {\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst messageId = this.getNodeParameter('messageId', i);\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i, {});\n\n\t\t\t\t\t\tif (additionalFields?.recipients) {\n\t\t\t\t\t\t\tconst recipients = (additionalFields.recipients as string)\n\t\t\t\t\t\t\t\t.split(',')\n\t\t\t\t\t\t\t\t.filter((email) => !!email);\n\t\t\t\t\t\t\tif (recipients.length !== 0) {\n\t\t\t\t\t\t\t\tawait microsoftApiRequest.call(this, 'PATCH', `/messages/${messageId}`, {\n\t\t\t\t\t\t\t\t\ttoRecipients: recipients.map((recipient: string) => makeRecipient(recipient)),\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/messages/${messageId}/send`,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturnData.push({ success: true });\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\t\t\treturnData.push({ error: error.message });\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (resource === 'message') {\n\t\t\tif (operation === 'reply') {\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst messageId = this.getNodeParameter('messageId', i) as string;\n\t\t\t\t\t\tconst replyType = this.getNodeParameter('replyType', i) as string;\n\t\t\t\t\t\tconst comment = this.getNodeParameter('comment', i) as string;\n\t\t\t\t\t\tconst send = this.getNodeParameter('send', i, false) as boolean;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i, {});\n\n\t\t\t\t\t\tconst body: IDataObject = {};\n\n\t\t\t\t\t\tlet action = 'createReply';\n\t\t\t\t\t\tif (replyType === 'replyAll') {\n\t\t\t\t\t\t\tbody.comment = comment;\n\t\t\t\t\t\t\taction = 'createReplyAll';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbody.comment = comment;\n\t\t\t\t\t\t\tbody.message = {};\n\t\t\t\t\t\t\tObject.assign(body.message, createMessage(additionalFields));\n\t\t\t\t\t\t\tdelete (body.message as IDataObject).attachments;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/messages/${messageId}/${action}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (additionalFields.attachments) {\n\t\t\t\t\t\t\tconst attachments = (additionalFields.attachments as IDataObject)\n\t\t\t\t\t\t\t\t.attachments as IDataObject[];\n\t\t\t\t\t\t\t// // Handle attachments\n\t\t\t\t\t\t\tconst data = attachments.map((attachment) => {\n\t\t\t\t\t\t\t\tconst binaryPropertyName = attachment.binaryPropertyName as string;\n\n\t\t\t\t\t\t\t\tif (items[i].binary === undefined) {\n\t\t\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'No binary data exists on item!', {\n\t\t\t\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ((items[i].binary as IDataObject)[binaryPropertyName] === undefined) {\n\t\t\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t\t\t`No binary data property \"${binaryPropertyName}\" does not exists on item!`,\n\t\t\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tconst binaryData = (items[i].binary as IBinaryKeyData)[binaryPropertyName];\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t'@odata.type': '#microsoft.graph.fileAttachment',\n\t\t\t\t\t\t\t\t\tname: binaryData.fileName,\n\t\t\t\t\t\t\t\t\tcontentBytes: binaryData.data,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tfor (const attachment of data) {\n\t\t\t\t\t\t\t\tawait microsoftApiRequest.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t\t\t`/messages/${responseData.id}/attachments`,\n\t\t\t\t\t\t\t\t\tattachment,\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (send) {\n\t\t\t\t\t\t\tawait microsoftApiRequest.call(this, 'POST', `/messages/${responseData.id}/send`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturnData.push(responseData as IDataObject);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\t\t\treturnData.push({ error: error.message });\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (operation === 'getMime') {\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst messageId = this.getNodeParameter('messageId', i) as string;\n\t\t\t\t\t\tconst dataPropertyNameDownload = this.getNodeParameter('binaryPropertyName', i);\n\t\t\t\t\t\tconst response = await microsoftApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/messages/${messageId}/$value`,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t{ encoding: null, resolveWithFullResponse: true },\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tlet mimeType: string | undefined;\n\t\t\t\t\t\tif (response.headers['content-type']) {\n\t\t\t\t\t\t\tmimeType = response.headers['content-type'];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst newItem: INodeExecutionData = {\n\t\t\t\t\t\t\tjson: items[i].json,\n\t\t\t\t\t\t\tbinary: {},\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (items[i].binary !== undefined) {\n\t\t\t\t\t\t\t// Create a shallow copy of the binary data so that the old\n\t\t\t\t\t\t\t// data references which do not get changed still stay behind\n\t\t\t\t\t\t\t// but the incoming data does not get changed.\n\t\t\t\t\t\t\tObject.assign(newItem.binary!, items[i].binary);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\titems[i] = newItem;\n\n\t\t\t\t\t\tconst fileName = `${messageId}.eml`;\n\t\t\t\t\t\tconst data = Buffer.from(response.body as string, 'utf8');\n\t\t\t\t\t\titems[i].binary![dataPropertyNameDownload] = await this.helpers.prepareBinaryData(\n\t\t\t\t\t\t\tdata as unknown as Buffer,\n\t\t\t\t\t\t\tfileName,\n\t\t\t\t\t\t\tmimeType,\n\t\t\t\t\t\t);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\t\t\titems[i].json = { error: error.message };\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (operation === 'getAll') {\n\t\t\t\tlet additionalFields: IDataObject = {};\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tadditionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tif (additionalFields.fields) {\n\t\t\t\t\t\t\tqs.$select = additionalFields.fields;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.filter) {\n\t\t\t\t\t\t\tqs.$filter = additionalFields.filter;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst endpoint = '/messages';\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await microsoftApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'value',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\tendpoint,\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.$top = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(this, 'GET', endpoint, undefined, qs);\n\t\t\t\t\t\t\tresponseData = responseData.value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.dataPropertyAttachmentsPrefixName) {\n\t\t\t\t\t\t\tconst prefix = additionalFields.dataPropertyAttachmentsPrefixName as string;\n\t\t\t\t\t\t\tconst data = await downloadAttachments.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\tresponseData as IDataObject[],\n\t\t\t\t\t\t\t\tprefix,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturnData.push.apply(returnData, data as unknown as IDataObject[]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturnData.push.apply(returnData, responseData as IDataObject[]);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\t\t\treturnData.push({ error: error.message });\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (additionalFields.dataPropertyAttachmentsPrefixName) {\n\t\t\t\t\treturn [returnData as INodeExecutionData[]];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (operation === 'move') {\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst messageId = this.getNodeParameter('messageId', i) as string;\n\t\t\t\t\t\tconst destinationId = this.getNodeParameter('folderId', i) as string;\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tdestinationId,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/messages/${messageId}/move`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturnData.push({ success: true });\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\t\t\treturnData.push({ error: error.message });\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (operation === 'send') {\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tconst toRecipients = this.getNodeParameter('toRecipients', i) as string;\n\n\t\t\t\t\t\tconst subject = this.getNodeParameter('subject', i) as string;\n\n\t\t\t\t\t\tconst bodyContent = this.getNodeParameter('bodyContent', i, '') as string;\n\n\t\t\t\t\t\tadditionalFields.subject = subject;\n\n\t\t\t\t\t\tadditionalFields.bodyContent = bodyContent || ' ';\n\n\t\t\t\t\t\tadditionalFields.toRecipients = toRecipients;\n\n\t\t\t\t\t\tconst saveToSentItems =\n\t\t\t\t\t\t\tadditionalFields.saveToSentItems === undefined\n\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t: additionalFields.saveToSentItems;\n\t\t\t\t\t\tdelete additionalFields.saveToSentItems;\n\n\t\t\t\t\t\t// Create message object from optional fields\n\t\t\t\t\t\tconst message: IDataObject = createMessage(additionalFields);\n\n\t\t\t\t\t\tif (additionalFields.attachments) {\n\t\t\t\t\t\t\tconst attachments = (additionalFields.attachments as IDataObject)\n\t\t\t\t\t\t\t\t.attachments as IDataObject[];\n\n\t\t\t\t\t\t\t// // Handle attachments\n\t\t\t\t\t\t\tmessage.attachments = attachments.map((attachment) => {\n\t\t\t\t\t\t\t\tconst binaryPropertyName = attachment.binaryPropertyName as string;\n\n\t\t\t\t\t\t\t\tif (items[i].binary === undefined) {\n\t\t\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'No binary data exists on item!', {\n\t\t\t\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif ((items[i].binary as IDataObject)[binaryPropertyName] === undefined) {\n\t\t\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t\t\t`No binary data property \"${binaryPropertyName}\" does not exists on item!`,\n\t\t\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tconst binaryData = (items[i].binary as IBinaryKeyData)[binaryPropertyName];\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t'@odata.type': '#microsoft.graph.fileAttachment',\n\t\t\t\t\t\t\t\t\tname: binaryData.fileName,\n\t\t\t\t\t\t\t\t\tcontentBytes: binaryData.data,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\tsaveToSentItems,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(this, 'POST', '/sendMail', body, {});\n\t\t\t\t\t\treturnData.push({ success: true });\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\t\t\treturnData.push({ error: error.message });\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (resource === 'messageAttachment') {\n\t\t\tif (operation === 'add') {\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst messageId = this.getNodeParameter('messageId', i) as string;\n\t\t\t\t\t\tconst binaryPropertyName = this.getNodeParameter('binaryPropertyName', 0);\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tif (items[i].binary === undefined) {\n\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'No binary data exists on item!');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ((items[i].binary as IDataObject)[binaryPropertyName] === undefined) {\n\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t`No binary data property \"${binaryPropertyName}\" does not exists on item!`,\n\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst binaryData = (items[i].binary as IBinaryKeyData)[binaryPropertyName];\n\t\t\t\t\t\tconst dataBuffer = await this.helpers.getBinaryDataBuffer(i, binaryPropertyName);\n\n\t\t\t\t\t\tconst fileName =\n\t\t\t\t\t\t\tadditionalFields.fileName === undefined\n\t\t\t\t\t\t\t\t? binaryData.fileName\n\t\t\t\t\t\t\t\t: additionalFields.fileName;\n\n\t\t\t\t\t\tif (!fileName) {\n\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t'File name is not set. It has either to be set via \"Additional Fields\" or has to be set on the binary property!',\n\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Check if the file is over 3MB big\n\t\t\t\t\t\tif (dataBuffer.length > 3e6) {\n\t\t\t\t\t\t\t// Maximum chunk size is 4MB\n\t\t\t\t\t\t\tconst chunkSize = 4e6;\n\t\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\t\tAttachmentItem: {\n\t\t\t\t\t\t\t\t\tattachmentType: 'file',\n\t\t\t\t\t\t\t\t\tname: fileName,\n\t\t\t\t\t\t\t\t\tsize: dataBuffer.length,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t// Create upload session\n\t\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t\t`/messages/${messageId}/attachments/createUploadSession`,\n\t\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst uploadUrl = responseData.uploadUrl;\n\n\t\t\t\t\t\t\tif (uploadUrl === undefined) {\n\t\t\t\t\t\t\t\tthrow new NodeApiError(this.getNode(), responseData as JsonObject, {\n\t\t\t\t\t\t\t\t\tmessage: 'Failed to get upload session',\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\t\tlet bytesUploaded = 0;\n\t\t\t\t\t\t\t\tbytesUploaded < dataBuffer.length;\n\t\t\t\t\t\t\t\tbytesUploaded += chunkSize\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t// Upload the file chunk by chunk\n\t\t\t\t\t\t\t\tconst nextChunk = Math.min(bytesUploaded + chunkSize, dataBuffer.length);\n\t\t\t\t\t\t\t\tconst contentRange = `bytes ${bytesUploaded}-${nextChunk - 1}/${dataBuffer.length}`;\n\n\t\t\t\t\t\t\t\tconst data = dataBuffer.subarray(bytesUploaded, nextChunk);\n\n\t\t\t\t\t\t\t\tresponseData = await this.helpers.request(uploadUrl, {\n\t\t\t\t\t\t\t\t\tmethod: 'PUT',\n\t\t\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\t\t'Content-Type': 'application/octet-stream',\n\t\t\t\t\t\t\t\t\t\t'Content-Length': data.length,\n\t\t\t\t\t\t\t\t\t\t'Content-Range': contentRange,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tbody: data,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\t\t'@odata.type': '#microsoft.graph.fileAttachment',\n\t\t\t\t\t\t\t\tname: fileName,\n\t\t\t\t\t\t\t\tcontentBytes: binaryData.data,\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t\t`/messages/${messageId}/attachments`,\n\t\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturnData.push({ success: true });\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\t\t\treturnData.push({ error: error.message });\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (operation === 'download') {\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst messageId = this.getNodeParameter('messageId', i) as string;\n\t\t\t\t\t\tconst attachmentId = this.getNodeParameter('attachmentId', i) as string;\n\t\t\t\t\t\tconst dataPropertyNameDownload = this.getNodeParameter('binaryPropertyName', i);\n\n\t\t\t\t\t\t// Get attachment details first\n\t\t\t\t\t\tconst attachmentDetails = await microsoftApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/messages/${messageId}/attachments/${attachmentId}`,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t{ $select: 'id,name,contentType' },\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tlet mimeType: string | undefined;\n\t\t\t\t\t\tif (attachmentDetails.contentType) {\n\t\t\t\t\t\t\tmimeType = attachmentDetails.contentType;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst fileName = attachmentDetails.name;\n\n\t\t\t\t\t\tconst response = await microsoftApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/messages/${messageId}/attachments/${attachmentId}/$value`,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t{ encoding: null, resolveWithFullResponse: true },\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst newItem: INodeExecutionData = {\n\t\t\t\t\t\t\tjson: items[i].json,\n\t\t\t\t\t\t\tbinary: {},\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (items[i].binary !== undefined) {\n\t\t\t\t\t\t\t// Create a shallow copy of the binary data so that the old\n\t\t\t\t\t\t\t// data references which do not get changed still stay behind\n\t\t\t\t\t\t\t// but the incoming data does not get changed.\n\t\t\t\t\t\t\tObject.assign(newItem.binary!, items[i].binary);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\titems[i] = newItem;\n\t\t\t\t\t\tconst data = Buffer.from(response.body as string, 'utf8');\n\t\t\t\t\t\titems[i].binary![dataPropertyNameDownload] = await this.helpers.prepareBinaryData(\n\t\t\t\t\t\t\tdata as unknown as Buffer,\n\t\t\t\t\t\t\tfileName as string,\n\t\t\t\t\t\t\tmimeType,\n\t\t\t\t\t\t);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\t\t\titems[i].json = { error: error.message };\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (operation === 'get') {\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst messageId = this.getNodeParameter('messageId', i) as string;\n\t\t\t\t\t\tconst attachmentId = this.getNodeParameter('attachmentId', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\t// Have sane defaults so we don't fetch attachment data in this operation\n\t\t\t\t\t\tqs.$select = 'id,lastModifiedDateTime,name,contentType,size,isInline';\n\t\t\t\t\t\tif (additionalFields.fields) {\n\t\t\t\t\t\t\tqs.$select = additionalFields.fields;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/messages/${messageId}/attachments/${attachmentId}`,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturnData.push(responseData as IDataObject);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\t\t\treturnData.push({ error: error.message });\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (operation === 'getAll') {\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst messageId = this.getNodeParameter('messageId', i) as string;\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\t// Have sane defaults so we don't fetch attachment data in this operation\n\t\t\t\t\t\tqs.$select = 'id,lastModifiedDateTime,name,contentType,size,isInline';\n\t\t\t\t\t\tif (additionalFields.fields) {\n\t\t\t\t\t\t\tqs.$select = additionalFields.fields;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.filter) {\n\t\t\t\t\t\t\tqs.$filter = additionalFields.filter;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst endpoint = `/messages/${messageId}/attachments`;\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await microsoftApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'value',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\tendpoint,\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.$top = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(this, 'GET', endpoint, undefined, qs);\n\t\t\t\t\t\t\tresponseData = responseData.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturnData.push.apply(returnData, responseData as IDataObject[]);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\t\t\treturnData.push({ error: error.message });\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (resource === 'folder') {\n\t\t\tif (operation === 'create') {\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst displayName = this.getNodeParameter('displayName', i) as string;\n\t\t\t\t\t\tconst folderType = this.getNodeParameter('folderType', i) as string;\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tdisplayName,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tlet endpoint = '/mailFolders';\n\n\t\t\t\t\t\tif (folderType === 'searchFolder') {\n\t\t\t\t\t\t\tendpoint = '/mailFolders/searchfolders/childFolders';\n\t\t\t\t\t\t\tconst includeNestedFolders = this.getNodeParameter('includeNestedFolders', i);\n\t\t\t\t\t\t\tconst sourceFolderIds = this.getNodeParameter('sourceFolderIds', i);\n\t\t\t\t\t\t\tconst filterQuery = this.getNodeParameter('filterQuery', i);\n\t\t\t\t\t\t\tObject.assign(body, {\n\t\t\t\t\t\t\t\t'@odata.type': 'microsoft.graph.mailSearchFolder',\n\t\t\t\t\t\t\t\tincludeNestedFolders,\n\t\t\t\t\t\t\t\tsourceFolderIds,\n\t\t\t\t\t\t\t\tfilterQuery,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(this, 'POST', endpoint, body);\n\t\t\t\t\t\treturnData.push(responseData as IDataObject);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\t\t\treturnData.push({ error: error.message });\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (operation === 'delete') {\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst folderId = this.getNodeParameter('folderId', i) as string;\n\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/mailFolders/${folderId}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturnData.push({ success: true });\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\t\t\treturnData.push({ error: error.message });\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (operation === 'get') {\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst folderId = this.getNodeParameter('folderId', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tif (additionalFields.fields) {\n\t\t\t\t\t\t\tqs.$select = additionalFields.fields;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.filter) {\n\t\t\t\t\t\t\tqs.$filter = additionalFields.filter;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/mailFolders/${folderId}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturnData.push(responseData as IDataObject);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\t\t\treturnData.push({ error: error.message });\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (operation === 'getAll') {\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tif (additionalFields.fields) {\n\t\t\t\t\t\t\tqs.$select = additionalFields.fields;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.filter) {\n\t\t\t\t\t\t\tqs.$filter = additionalFields.filter;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await microsoftApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'value',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/mailFolders',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.$top = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(this, 'GET', '/mailFolders', {}, qs);\n\t\t\t\t\t\t\tresponseData = responseData.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturnData.push.apply(returnData, responseData as IDataObject[]);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\t\t\treturnData.push({ error: error.message });\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (operation === 'getChildren') {\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst folderId = this.getNodeParameter('folderId', i) as string;\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tif (additionalFields.fields) {\n\t\t\t\t\t\t\tqs.$select = additionalFields.fields;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.filter) {\n\t\t\t\t\t\t\tqs.$filter = additionalFields.filter;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await microsoftApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'value',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/mailFolders/${folderId}/childFolders`,\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.$top = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/mailFolders/${folderId}/childFolders`,\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturnData.push.apply(returnData, responseData as IDataObject[]);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\t\t\treturnData.push({ error: error.message });\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (operation === 'update') {\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst folderId = this.getNodeParameter('folderId', i) as string;\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\t...updateFields,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PATCH',\n\t\t\t\t\t\t\t`/mailFolders/${folderId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturnData.push(responseData as IDataObject);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\t\t\treturnData.push({ error: error.message });\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (resource === 'folderMessage') {\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\ttry {\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst folderId = this.getNodeParameter('folderId', i) as string;\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tif (additionalFields.fields) {\n\t\t\t\t\t\t\tqs.$select = additionalFields.fields;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.filter) {\n\t\t\t\t\t\t\tqs.$filter = additionalFields.filter;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst endpoint = `/mailFolders/${folderId}/messages`;\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await microsoftApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'value',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\tendpoint,\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.$top = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(this, 'GET', endpoint, undefined, qs);\n\t\t\t\t\t\t\tresponseData = responseData.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturnData.push.apply(returnData, responseData as IDataObject[]);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\t\treturnData.push({ error: error.message });\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\t(resource === 'message' && operation === 'getMime') ||\n\t\t\t(resource === 'messageAttachment' && operation === 'download')\n\t\t) {\n\t\t\treturn [items];\n\t\t} else {\n\t\t\treturn [this.helpers.returnJsonArray(returnData)];\n\t\t}\n\t}\n}\n"],"mappings":"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","names":[]}