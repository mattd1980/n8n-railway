{"version":3,"sources":["../../../../../../../nodes/Microsoft/Outlook/v2/actions/messageAttachment/add.operation.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tINodeProperties,\n\tJsonObject,\n} from 'n8n-workflow';\nimport { NodeApiError, NodeOperationError } from 'n8n-workflow';\n\nimport { updateDisplayOptions } from '@utils/utilities';\n\nimport { messageRLC } from '../../descriptions';\nimport { microsoftApiRequest } from '../../transport';\n\nexport const properties: INodeProperties[] = [\n\tmessageRLC,\n\t{\n\t\tdisplayName: 'Input Data Field Name',\n\t\tname: 'binaryPropertyName',\n\t\thint: 'The name of the input field containing the binary file data to be attached',\n\t\ttype: 'string',\n\t\trequired: true,\n\t\tdefault: 'data',\n\t\tplaceholder: 'e.g. data',\n\t},\n\t{\n\t\tdisplayName: 'Options',\n\t\tname: 'options',\n\t\ttype: 'collection',\n\t\tplaceholder: 'Add option',\n\t\tdefault: {},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdisplayName: 'File Name',\n\t\t\t\tname: 'fileName',\n\t\t\t\tdescription:\n\t\t\t\t\t'Filename of the attachment. If not set will the file-name of the binary property be used, if it exists.',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t},\n\t\t],\n\t},\n];\n\nconst displayOptions = {\n\tshow: {\n\t\tresource: ['messageAttachment'],\n\t\toperation: ['add'],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n\nexport async function execute(this: IExecuteFunctions, index: number, items: INodeExecutionData[]) {\n\tlet responseData;\n\n\tconst messageId = this.getNodeParameter('messageId', index, undefined, {\n\t\textractValue: true,\n\t}) as string;\n\n\tconst binaryPropertyName = this.getNodeParameter('binaryPropertyName', 0);\n\tconst options = this.getNodeParameter('options', index);\n\n\tif (items[index].binary === undefined) {\n\t\tthrow new NodeOperationError(this.getNode(), 'No binary data exists on item!');\n\t}\n\n\tif (\n\t\titems[index].binary &&\n\t\t(items[index].binary as IDataObject)[binaryPropertyName] === undefined\n\t) {\n\t\tthrow new NodeOperationError(\n\t\t\tthis.getNode(),\n\t\t\t`No binary data property \"${binaryPropertyName}\" does not exists on item!`,\n\t\t\t{ itemIndex: index },\n\t\t);\n\t}\n\n\tconst binaryData = items[index].binary[binaryPropertyName];\n\tconst dataBuffer = await this.helpers.getBinaryDataBuffer(index, binaryPropertyName);\n\n\tconst fileName = options.fileName === undefined ? binaryData.fileName : options.fileName;\n\n\tif (!fileName) {\n\t\tthrow new NodeOperationError(\n\t\t\tthis.getNode(),\n\t\t\t'File name is not set. It has either to be set via \"Additional Fields\" or has to be set on the binary property!',\n\t\t\t{ itemIndex: index },\n\t\t);\n\t}\n\n\t// Check if the file is over 3MB big\n\tif (dataBuffer.length > 3e6) {\n\t\t// Maximum chunk size is 4MB\n\t\tconst chunkSize = 4e6;\n\t\tconst body: IDataObject = {\n\t\t\tAttachmentItem: {\n\t\t\t\tattachmentType: 'file',\n\t\t\t\tname: fileName,\n\t\t\t\tsize: dataBuffer.length,\n\t\t\t},\n\t\t};\n\n\t\t// Create upload session\n\t\tresponseData = await microsoftApiRequest.call(\n\t\t\tthis,\n\t\t\t'POST',\n\t\t\t`/messages/${messageId}/attachments/createUploadSession`,\n\t\t\tbody,\n\t\t);\n\t\tconst uploadUrl = responseData.uploadUrl;\n\n\t\tif (uploadUrl === undefined) {\n\t\t\tthrow new NodeApiError(this.getNode(), responseData as JsonObject, {\n\t\t\t\tmessage: 'Failed to get upload session',\n\t\t\t});\n\t\t}\n\n\t\tfor (let bytesUploaded = 0; bytesUploaded < dataBuffer.length; bytesUploaded += chunkSize) {\n\t\t\t// Upload the file chunk by chunk\n\t\t\tconst nextChunk = Math.min(bytesUploaded + chunkSize, dataBuffer.length);\n\t\t\tconst contentRange = `bytes ${bytesUploaded}-${nextChunk - 1}/${dataBuffer.length}`;\n\n\t\t\tconst data = dataBuffer.subarray(bytesUploaded, nextChunk);\n\n\t\t\tresponseData = await this.helpers.request(uploadUrl, {\n\t\t\t\tmethod: 'PUT',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/octet-stream',\n\t\t\t\t\t'Content-Length': data.length,\n\t\t\t\t\t'Content-Range': contentRange,\n\t\t\t\t},\n\t\t\t\tbody: data,\n\t\t\t});\n\t\t}\n\t} else {\n\t\tconst body: IDataObject = {\n\t\t\t'@odata.type': '#microsoft.graph.fileAttachment',\n\t\t\tname: fileName,\n\t\t\tcontentBytes: binaryData.data,\n\t\t};\n\n\t\tresponseData = await microsoftApiRequest.call(\n\t\t\tthis,\n\t\t\t'POST',\n\t\t\t`/messages/${messageId}/attachments`,\n\t\t\tbody,\n\t\t\t{},\n\t\t);\n\t}\n\n\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\tthis.helpers.returnJsonArray({ success: true }),\n\t\t{ itemData: { item: index } },\n\t);\n\n\treturn executionData;\n}\n"],"mappings":"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","names":[]}