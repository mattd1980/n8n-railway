{"version":3,"sources":["../../../../nodes/Microsoft/OneDrive/MicrosoftOneDriveTrigger.node.ts"],"sourcesContent":["import { DateTime } from 'luxon';\nimport {\n\ttype IPollFunctions,\n\ttype IDataObject,\n\ttype INodeExecutionData,\n\ttype INodeType,\n\ttype INodeTypeDescription,\n\tNodeConnectionTypes,\n} from 'n8n-workflow';\n\nimport { getPath, microsoftApiRequest, microsoftApiRequestAllItemsDelta } from './GenericFunctions';\nimport { triggerDescription } from './TriggerDescription';\n\nexport class MicrosoftOneDriveTrigger implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Microsoft OneDrive Trigger',\n\t\tname: 'microsoftOneDriveTrigger',\n\t\ticon: 'file:oneDrive.svg',\n\t\tgroup: ['trigger'],\n\t\tversion: 1,\n\t\tdescription: 'Trigger for Microsoft OneDrive API.',\n\t\tsubtitle: '={{($parameter[\"event\"])}}',\n\t\tdefaults: {\n\t\t\tname: 'Microsoft OneDrive Trigger',\n\t\t},\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'microsoftOneDriveOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tpolling: true,\n\t\tinputs: [],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tproperties: [...triggerDescription],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {},\n\t};\n\n\tasync poll(this: IPollFunctions): Promise<INodeExecutionData[][] | null> {\n\t\tconst workflowData = this.getWorkflowStaticData('node');\n\t\tlet responseData: IDataObject[];\n\n\t\tconst lastLink: string =\n\t\t\t(workflowData.LastLink as string) ||\n\t\t\t'https://graph.microsoft.com/v1.0/me/drive/root/delta?token=latest';\n\n\t\tconst now = DateTime.now().toUTC();\n\t\tconst start = DateTime.fromISO(workflowData.lastTimeChecked as string) || now;\n\t\tconst end = now;\n\t\tconst event = this.getNodeParameter('event', 'fileCreated') as string;\n\t\tconst watch = this.getNodeParameter('watch', 'anyFile') as string;\n\t\tconst watchFolder = (this.getNodeParameter('watchFolder', false) as boolean) || false;\n\t\tconst folderChild = (this.getNodeParameter('options.folderChild', false) as boolean) || false;\n\n\t\tlet eventType = 'created';\n\t\tlet eventResource = 'file';\n\t\tif (event.includes('Updated')) {\n\t\t\teventType = 'updated';\n\t\t}\n\t\tif (event.includes('folder')) {\n\t\t\teventResource = 'folder';\n\t\t}\n\t\ttry {\n\t\t\tif (this.getMode() === 'manual') {\n\t\t\t\tresponseData = (\n\t\t\t\t\tawait microsoftApiRequest.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t'',\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t'https://graph.microsoft.com/v1.0/me/drive/root/delta',\n\t\t\t\t\t)\n\t\t\t\t).value as IDataObject[];\n\t\t\t} else {\n\t\t\t\tconst response: IDataObject = (await microsoftApiRequestAllItemsDelta.call(\n\t\t\t\t\tthis,\n\t\t\t\t\tlastLink,\n\t\t\t\t\tstart,\n\t\t\t\t\teventType,\n\t\t\t\t)) as IDataObject;\n\t\t\t\tresponseData = response.returnData as IDataObject[];\n\t\t\t\tworkflowData.LastLink = response.deltaLink;\n\t\t\t}\n\n\t\t\tworkflowData.lastTimeChecked = end.toISO();\n\t\t\tif (watch === 'selectedFile') {\n\t\t\t\tconst fileId = (\n\t\t\t\t\tthis.getNodeParameter('fileId', '', {\n\t\t\t\t\t\textractValue: true,\n\t\t\t\t\t}) as string\n\t\t\t\t).replace('%21', '!');\n\t\t\t\tif (fileId) {\n\t\t\t\t\tresponseData = responseData.filter((item: IDataObject) => item.id === fileId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t!folderChild &&\n\t\t\t\t(watch === 'oneSelectedFolder' || watch === 'selectedFolder' || watchFolder)\n\t\t\t) {\n\t\t\t\tconst folderId = (\n\t\t\t\t\tthis.getNodeParameter('folderId', '', {\n\t\t\t\t\t\textractValue: true,\n\t\t\t\t\t}) as string\n\t\t\t\t).replace('%21', '!');\n\t\t\t\tif (folderId) {\n\t\t\t\t\tif (watch === 'oneSelectedFolder') {\n\t\t\t\t\t\tresponseData = responseData.filter((item: IDataObject) => item.id === folderId);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresponseData = responseData.filter(\n\t\t\t\t\t\t\t(item: IDataObject) => (item.parentReference as IDataObject).id === folderId,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (folderChild && (watch === 'selectedFolder' || watchFolder)) {\n\t\t\t\tconst folderId = (\n\t\t\t\t\tthis.getNodeParameter('folderId', '', {\n\t\t\t\t\t\textractValue: true,\n\t\t\t\t\t}) as string\n\t\t\t\t).replace('%21', '!');\n\t\t\t\tconst folderPath = await getPath.call(this, folderId);\n\n\t\t\t\tresponseData = responseData.filter((item: IDataObject) => {\n\t\t\t\t\tconst path = (item.parentReference as IDataObject)?.path as string;\n\t\t\t\t\treturn typeof path === 'string' && path.startsWith(folderPath);\n\t\t\t\t});\n\t\t\t}\n\t\t\tresponseData = responseData.filter((item: IDataObject) => item[eventResource]);\n\t\t\tif (!responseData?.length) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst simplify = this.getNodeParameter('simple') as boolean;\n\t\t\tif (simplify) {\n\t\t\t\tresponseData = responseData.map((x) => ({\n\t\t\t\t\tid: x.id,\n\t\t\t\t\tcreatedDateTime: (x.fileSystemInfo as IDataObject)?.createdDateTime,\n\t\t\t\t\tlastModifiedDateTime: (x.fileSystemInfo as IDataObject)?.lastModifiedDateTime,\n\t\t\t\t\tname: x.name,\n\t\t\t\t\twebUrl: x.webUrl,\n\t\t\t\t\tsize: x.size,\n\t\t\t\t\tpath: (x.parentReference as IDataObject)?.path || '',\n\t\t\t\t\tmimeType: (x.file as IDataObject)?.mimeType || '',\n\t\t\t\t}));\n\t\t\t}\n\n\t\t\treturn [this.helpers.returnJsonArray(responseData)];\n\t\t} catch (error) {\n\t\t\tif (this.getMode() === 'manual' || !workflowData.lastTimeChecked) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\tconst workflow = this.getWorkflow();\n\t\t\tconst node = this.getNode();\n\t\t\tthis.logger.error(\n\t\t\t\t`There was a problem in '${node.name}' node in workflow '${workflow.id}': '${error.description}'`,\n\t\t\t\t{\n\t\t\t\t\tnode: node.name,\n\t\t\t\t\tworkflowId: workflow.id,\n\t\t\t\t\terror,\n\t\t\t\t},\n\t\t\t);\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn null;\n\t}\n}\n"],"mappings":"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","names":[]}