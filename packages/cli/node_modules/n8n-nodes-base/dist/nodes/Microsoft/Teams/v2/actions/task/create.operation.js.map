{"version":3,"sources":["../../../../../../../nodes/Microsoft/Teams/v2/actions/task/create.operation.ts"],"sourcesContent":["import { DateTime } from 'luxon';\nimport type { INodeProperties, IExecuteFunctions, IDataObject } from 'n8n-workflow';\n\nimport { updateDisplayOptions } from '@utils/utilities';\n\nimport { bucketRLC, groupRLC, memberRLC, planRLC } from '../../descriptions';\nimport { microsoftApiRequest } from '../../transport';\n\nconst properties: INodeProperties[] = [\n\tgroupRLC,\n\tplanRLC,\n\tbucketRLC,\n\t{\n\t\tdisplayName: 'Title',\n\t\tname: 'title',\n\t\trequired: true,\n\t\ttype: 'string',\n\t\tdefault: '',\n\t\tplaceholder: 'e.g. new task',\n\t\tdescription: 'Title of the task',\n\t},\n\t{\n\t\tdisplayName: 'Options',\n\t\tname: 'options',\n\t\ttype: 'collection',\n\t\tdefault: {},\n\t\tplaceholder: 'Add option',\n\t\toptions: [\n\t\t\t{\n\t\t\t\t...memberRLC,\n\t\t\t\tdisplayName: 'Assigned To',\n\t\t\t\tname: 'assignedTo',\n\t\t\t\tdescription: 'Who the task should be assigned to',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsDependsOn: ['groupId.balue'],\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Due Date Time',\n\t\t\t\tname: 'dueDateTime',\n\t\t\t\ttype: 'string',\n\t\t\t\tvalidateType: 'dateTime',\n\t\t\t\tdefault: '',\n\t\t\t\tdescription:\n\t\t\t\t\t'Date and time at which the task is due. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Percent Complete',\n\t\t\t\tname: 'percentComplete',\n\t\t\t\ttype: 'number',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tminValue: 0,\n\t\t\t\t\tmaxValue: 100,\n\t\t\t\t},\n\t\t\t\tdefault: 0,\n\t\t\t\tplaceholder: 'e.g. 75',\n\t\t\t\tdescription:\n\t\t\t\t\t'Percentage of task completion. When set to 100, the task is considered completed.',\n\t\t\t},\n\t\t],\n\t},\n];\n\nconst displayOptions = {\n\tshow: {\n\t\tresource: ['task'],\n\t\toperation: ['create'],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n\nexport async function execute(this: IExecuteFunctions, i: number) {\n\t//https://docs.microsoft.com/en-us/graph/api/planner-post-tasks?view=graph-rest-1.0&tabs=http\n\n\tconst planId = this.getNodeParameter('planId', i, '', { extractValue: true }) as string;\n\tconst bucketId = this.getNodeParameter('bucketId', i, '', { extractValue: true }) as string;\n\n\tconst title = this.getNodeParameter('title', i) as string;\n\tconst options = this.getNodeParameter('options', i);\n\n\tconst body: IDataObject = {\n\t\tplanId,\n\t\tbucketId,\n\t\ttitle,\n\t};\n\n\tif (options.assignedTo) {\n\t\toptions.assignedTo = this.getNodeParameter('options.assignedTo', i, '', {\n\t\t\textractValue: true,\n\t\t}) as string;\n\t}\n\n\tif (options.dueDateTime && options.dueDateTime instanceof DateTime) {\n\t\toptions.dueDateTime = options.dueDateTime.toISO();\n\t}\n\n\tObject.assign(body, options);\n\n\tif (body.assignedTo) {\n\t\tbody.assignments = {\n\t\t\t[body.assignedTo as string]: {\n\t\t\t\t'@odata.type': 'microsoft.graph.plannerAssignment',\n\t\t\t\torderHint: ' !',\n\t\t\t},\n\t\t};\n\t\tdelete body.assignedTo;\n\t}\n\n\treturn await microsoftApiRequest.call(this, 'POST', '/v1.0/planner/tasks', body);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAyB;AAGzB,uBAAqC;AAErC,0BAAwD;AACxD,uBAAoC;AAEpC,MAAM,aAAgC;AAAA,EACrC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,IACb,aAAa;AAAA,EACd;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,IACV,aAAa;AAAA,IACb,SAAS;AAAA,MACR;AAAA,QACC,GAAG;AAAA,QACH,aAAa;AAAA,QACb,MAAM;AAAA,QACN,aAAa;AAAA,QACb,aAAa;AAAA,UACZ,sBAAsB,CAAC,eAAe;AAAA,QACvC;AAAA,MACD;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,cAAc;AAAA,QACd,SAAS;AAAA,QACT,aACC;AAAA,MACF;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,aAAa;AAAA,UACZ,UAAU;AAAA,UACV,UAAU;AAAA,QACX;AAAA,QACA,SAAS;AAAA,QACT,aAAa;AAAA,QACb,aACC;AAAA,MACF;AAAA,IACD;AAAA,EACD;AACD;AAEA,MAAM,iBAAiB;AAAA,EACtB,MAAM;AAAA,IACL,UAAU,CAAC,MAAM;AAAA,IACjB,WAAW,CAAC,QAAQ;AAAA,EACrB;AACD;AAEO,MAAM,kBAAc,uCAAqB,gBAAgB,UAAU;AAE1E,eAAsB,QAAiC,GAAW;AAGjE,QAAM,SAAS,KAAK,iBAAiB,UAAU,GAAG,IAAI,EAAE,cAAc,KAAK,CAAC;AAC5E,QAAM,WAAW,KAAK,iBAAiB,YAAY,GAAG,IAAI,EAAE,cAAc,KAAK,CAAC;AAEhF,QAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC9C,QAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAElD,QAAM,OAAoB;AAAA,IACzB;AAAA,IACA;AAAA,IACA;AAAA,EACD;AAEA,MAAI,QAAQ,YAAY;AACvB,YAAQ,aAAa,KAAK,iBAAiB,sBAAsB,GAAG,IAAI;AAAA,MACvE,cAAc;AAAA,IACf,CAAC;AAAA,EACF;AAEA,MAAI,QAAQ,eAAe,QAAQ,uBAAuB,uBAAU;AACnE,YAAQ,cAAc,QAAQ,YAAY,MAAM;AAAA,EACjD;AAEA,SAAO,OAAO,MAAM,OAAO;AAE3B,MAAI,KAAK,YAAY;AACpB,SAAK,cAAc;AAAA,MAClB,CAAC,KAAK,UAAoB,GAAG;AAAA,QAC5B,eAAe;AAAA,QACf,WAAW;AAAA,MACZ;AAAA,IACD;AACA,WAAO,KAAK;AAAA,EACb;AAEA,SAAO,MAAM,qCAAoB,KAAK,MAAM,QAAQ,uBAAuB,IAAI;AAChF;","names":[]}