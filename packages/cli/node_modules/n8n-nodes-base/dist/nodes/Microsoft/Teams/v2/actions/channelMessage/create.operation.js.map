{"version":3,"sources":["../../../../../../../nodes/Microsoft/Teams/v2/actions/channelMessage/create.operation.ts"],"sourcesContent":["import type { INodeProperties, IExecuteFunctions, IDataObject } from 'n8n-workflow';\n\nimport { updateDisplayOptions } from '@utils/utilities';\n\nimport { channelRLC, teamRLC } from '../../descriptions';\nimport { prepareMessage } from '../../helpers/utils';\nimport { microsoftApiRequest } from '../../transport';\n\nconst properties: INodeProperties[] = [\n\tteamRLC,\n\tchannelRLC,\n\t{\n\t\tdisplayName: 'Content Type',\n\t\tname: 'contentType',\n\t\trequired: true,\n\t\ttype: 'options',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tname: 'Text',\n\t\t\t\tvalue: 'text',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'HTML',\n\t\t\t\tvalue: 'html',\n\t\t\t},\n\t\t],\n\t\tdefault: 'text',\n\t\tdescription: 'Whether the message is plain text or HTML',\n\t},\n\t{\n\t\tdisplayName: 'Message',\n\t\tname: 'message',\n\t\trequired: true,\n\t\ttype: 'string',\n\t\tdefault: '',\n\t\tdescription: 'The content of the message to be sent',\n\t\ttypeOptions: {\n\t\t\trows: 2,\n\t\t},\n\t},\n\t{\n\t\tdisplayName: 'Options',\n\t\tname: 'options',\n\t\ttype: 'collection',\n\t\tplaceholder: 'Add option',\n\t\tdefault: {},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Include Link to Workflow',\n\t\t\t\tname: 'includeLinkToWorkflow',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription:\n\t\t\t\t\t'Whether to append a link to this workflow at the end of the message. This is helpful if you have many workflows sending messages.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Reply to ID',\n\t\t\t\tname: 'makeReply',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tplaceholder: 'e.g. 1673348720590',\n\t\t\t\tdescription:\n\t\t\t\t\t'An optional ID of the message you want to reply to. The message ID is the number before \"?tenantId\" in the message URL.',\n\t\t\t},\n\t\t],\n\t},\n];\n\nconst displayOptions = {\n\tshow: {\n\t\tresource: ['channelMessage'],\n\t\toperation: ['create'],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n\nexport async function execute(\n\tthis: IExecuteFunctions,\n\ti: number,\n\tnodeVersion: number,\n\tinstanceId: string,\n) {\n\t//https://docs.microsoft.com/en-us/graph/api/channel-post-messages?view=graph-rest-beta&tabs=http\n\t//https://docs.microsoft.com/en-us/graph/api/channel-post-messagereply?view=graph-rest-beta&tabs=http\n\n\tconst teamId = this.getNodeParameter('teamId', i, '', { extractValue: true }) as string;\n\tconst channelId = this.getNodeParameter('channelId', i, '', { extractValue: true }) as string;\n\tconst contentType = this.getNodeParameter('contentType', i) as string;\n\tconst message = this.getNodeParameter('message', i) as string;\n\tconst options = this.getNodeParameter('options', i);\n\n\tlet includeLinkToWorkflow = options.includeLinkToWorkflow;\n\tif (includeLinkToWorkflow === undefined) {\n\t\tincludeLinkToWorkflow = nodeVersion >= 1.1;\n\t}\n\n\tconst body: IDataObject = prepareMessage.call(\n\t\tthis,\n\t\tmessage,\n\t\tcontentType,\n\t\tincludeLinkToWorkflow as boolean,\n\t\tinstanceId,\n\t);\n\n\tif (options.makeReply) {\n\t\tconst replyToId = options.makeReply as string;\n\t\treturn await microsoftApiRequest.call(\n\t\t\tthis,\n\t\t\t'POST',\n\t\t\t`/beta/teams/${teamId}/channels/${channelId}/messages/${replyToId}/replies`,\n\t\t\tbody,\n\t\t);\n\t} else {\n\t\treturn await microsoftApiRequest.call(\n\t\t\tthis,\n\t\t\t'POST',\n\t\t\t`/beta/teams/${teamId}/channels/${channelId}/messages`,\n\t\t\tbody,\n\t\t);\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,uBAAqC;AAErC,0BAAoC;AACpC,mBAA+B;AAC/B,uBAAoC;AAEpC,MAAM,aAAgC;AAAA,EACrC;AAAA,EACA;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,MACR;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,MACA;AAAA,QACC,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,IACD;AAAA,IACA,SAAS;AAAA,IACT,aAAa;AAAA,EACd;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,IACb,aAAa;AAAA,MACZ,MAAM;AAAA,IACP;AAAA,EACD;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,SAAS,CAAC;AAAA,IACV,SAAS;AAAA,MACR;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aACC;AAAA,MACF;AAAA,MACA;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aAAa;AAAA,QACb,aACC;AAAA,MACF;AAAA,IACD;AAAA,EACD;AACD;AAEA,MAAM,iBAAiB;AAAA,EACtB,MAAM;AAAA,IACL,UAAU,CAAC,gBAAgB;AAAA,IAC3B,WAAW,CAAC,QAAQ;AAAA,EACrB;AACD;AAEO,MAAM,kBAAc,uCAAqB,gBAAgB,UAAU;AAE1E,eAAsB,QAErB,GACA,aACA,YACC;AAID,QAAM,SAAS,KAAK,iBAAiB,UAAU,GAAG,IAAI,EAAE,cAAc,KAAK,CAAC;AAC5E,QAAM,YAAY,KAAK,iBAAiB,aAAa,GAAG,IAAI,EAAE,cAAc,KAAK,CAAC;AAClF,QAAM,cAAc,KAAK,iBAAiB,eAAe,CAAC;AAC1D,QAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAClD,QAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAElD,MAAI,wBAAwB,QAAQ;AACpC,MAAI,0BAA0B,QAAW;AACxC,4BAAwB,eAAe;AAAA,EACxC;AAEA,QAAM,OAAoB,4BAAe;AAAA,IACxC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD;AAEA,MAAI,QAAQ,WAAW;AACtB,UAAM,YAAY,QAAQ;AAC1B,WAAO,MAAM,qCAAoB;AAAA,MAChC;AAAA,MACA;AAAA,MACA,eAAe,MAAM,aAAa,SAAS,aAAa,SAAS;AAAA,MACjE;AAAA,IACD;AAAA,EACD,OAAO;AACN,WAAO,MAAM,qCAAoB;AAAA,MAChC;AAAA,MACA;AAAA,MACA,eAAe,MAAM,aAAa,SAAS;AAAA,MAC3C;AAAA,IACD;AAAA,EACD;AACD;","names":[]}