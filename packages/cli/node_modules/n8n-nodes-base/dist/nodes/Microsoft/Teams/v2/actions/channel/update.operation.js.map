{"version":3,"sources":["../../../../../../../nodes/Microsoft/Teams/v2/actions/channel/update.operation.ts"],"sourcesContent":["import type { INodeProperties, IExecuteFunctions, IDataObject } from 'n8n-workflow';\n\nimport { updateDisplayOptions } from '@utils/utilities';\n\nimport { channelRLC, teamRLC } from '../../descriptions';\nimport { microsoftApiRequest } from '../../transport';\n\nconst properties: INodeProperties[] = [\n\tteamRLC,\n\tchannelRLC,\n\t{\n\t\tdisplayName: 'Name',\n\t\tname: 'name',\n\t\ttype: 'string',\n\t\tdefault: '',\n\t\tplaceholder: 'e.g. My New Channel name',\n\t\tdescription: 'The name of the channel',\n\t},\n\t{\n\t\tdisplayName: 'Options',\n\t\tname: 'options',\n\t\ttype: 'collection',\n\t\tdefault: {},\n\t\tplaceholder: 'Add option',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Description',\n\t\t\t\tname: 'description',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tdescription: 'The description of the channel',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\trows: 2,\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n];\n\nconst displayOptions = {\n\tshow: {\n\t\tresource: ['channel'],\n\t\toperation: ['update'],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n\nexport async function execute(this: IExecuteFunctions, i: number) {\n\t//https://docs.microsoft.com/en-us/graph/api/channel-patch?view=graph-rest-beta&tabs=http\n\n\tconst teamId = this.getNodeParameter('teamId', i, '', { extractValue: true }) as string;\n\tconst channelId = this.getNodeParameter('channelId', i, '', { extractValue: true }) as string;\n\tconst newName = this.getNodeParameter('name', i) as string;\n\tconst newDescription = this.getNodeParameter('options.description', i, '') as string;\n\n\tconst body: IDataObject = {};\n\tif (newName) {\n\t\tbody.displayName = newName;\n\t}\n\tif (newDescription) {\n\t\tbody.description = newDescription;\n\t}\n\tawait microsoftApiRequest.call(\n\t\tthis,\n\t\t'PATCH',\n\t\t`/v1.0/teams/${teamId}/channels/${channelId}`,\n\t\tbody,\n\t);\n\treturn { success: true };\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,uBAAqC;AAErC,0BAAoC;AACpC,uBAAoC;AAEpC,MAAM,aAAgC;AAAA,EACrC;AAAA,EACA;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,IACb,aAAa;AAAA,EACd;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS,CAAC;AAAA,IACV,aAAa;AAAA,IACb,SAAS;AAAA,MACR;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aAAa;AAAA,QACb,aAAa;AAAA,UACZ,MAAM;AAAA,QACP;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;AAEA,MAAM,iBAAiB;AAAA,EACtB,MAAM;AAAA,IACL,UAAU,CAAC,SAAS;AAAA,IACpB,WAAW,CAAC,QAAQ;AAAA,EACrB;AACD;AAEO,MAAM,kBAAc,uCAAqB,gBAAgB,UAAU;AAE1E,eAAsB,QAAiC,GAAW;AAGjE,QAAM,SAAS,KAAK,iBAAiB,UAAU,GAAG,IAAI,EAAE,cAAc,KAAK,CAAC;AAC5E,QAAM,YAAY,KAAK,iBAAiB,aAAa,GAAG,IAAI,EAAE,cAAc,KAAK,CAAC;AAClF,QAAM,UAAU,KAAK,iBAAiB,QAAQ,CAAC;AAC/C,QAAM,iBAAiB,KAAK,iBAAiB,uBAAuB,GAAG,EAAE;AAEzE,QAAM,OAAoB,CAAC;AAC3B,MAAI,SAAS;AACZ,SAAK,cAAc;AAAA,EACpB;AACA,MAAI,gBAAgB;AACnB,SAAK,cAAc;AAAA,EACpB;AACA,QAAM,qCAAoB;AAAA,IACzB;AAAA,IACA;AAAA,IACA,eAAe,MAAM,aAAa,SAAS;AAAA,IAC3C;AAAA,EACD;AACA,SAAO,EAAE,SAAS,KAAK;AACxB;","names":[]}