{"version":3,"sources":["../../../../../../nodes/Microsoft/Excel/v2/actions/router.ts"],"sourcesContent":["import type { IExecuteFunctions, INodeExecutionData } from 'n8n-workflow';\nimport { NodeOperationError } from 'n8n-workflow';\n\nimport type { MicrosoftExcel } from './node.type';\nimport * as table from './table/Table.resource';\nimport * as workbook from './workbook/Workbook.resource';\nimport * as worksheet from './worksheet/Worksheet.resource';\n\nexport async function router(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\tconst items = this.getInputData();\n\tlet returnData: INodeExecutionData[] = [];\n\n\tconst resource = this.getNodeParameter<MicrosoftExcel>('resource', 0);\n\tconst operation = this.getNodeParameter('operation', 0);\n\n\tconst microsoftExcel = {\n\t\tresource,\n\t\toperation,\n\t} as MicrosoftExcel;\n\n\tswitch (microsoftExcel.resource) {\n\t\tcase 'table':\n\t\t\treturnData = await table[microsoftExcel.operation].execute.call(this, items);\n\t\t\tbreak;\n\t\tcase 'workbook':\n\t\t\treturnData = await workbook[microsoftExcel.operation].execute.call(this, items);\n\t\t\tbreak;\n\t\tcase 'worksheet':\n\t\t\treturnData = await worksheet[microsoftExcel.operation].execute.call(this, items);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new NodeOperationError(this.getNode(), `The resource \"${resource}\" is not known`);\n\t}\n\n\treturn [returnData];\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,0BAAmC;AAGnC,YAAuB;AACvB,eAA0B;AAC1B,gBAA2B;AAE3B,eAAsB,SAAiE;AACtF,QAAM,QAAQ,KAAK,aAAa;AAChC,MAAI,aAAmC,CAAC;AAExC,QAAM,WAAW,KAAK,iBAAiC,YAAY,CAAC;AACpE,QAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AAEtD,QAAM,iBAAiB;AAAA,IACtB;AAAA,IACA;AAAA,EACD;AAEA,UAAQ,eAAe,UAAU;AAAA,IAChC,KAAK;AACJ,mBAAa,MAAM,MAAM,eAAe,SAAS,EAAE,QAAQ,KAAK,MAAM,KAAK;AAC3E;AAAA,IACD,KAAK;AACJ,mBAAa,MAAM,SAAS,eAAe,SAAS,EAAE,QAAQ,KAAK,MAAM,KAAK;AAC9E;AAAA,IACD,KAAK;AACJ,mBAAa,MAAM,UAAU,eAAe,SAAS,EAAE,QAAQ,KAAK,MAAM,KAAK;AAC/E;AAAA,IACD;AACC,YAAM,IAAI,uCAAmB,KAAK,QAAQ,GAAG,iBAAiB,QAAQ,gBAAgB;AAAA,EACxF;AAEA,SAAO,CAAC,UAAU;AACnB;","names":[]}