{"version":3,"sources":["../../../../../../nodes/Microsoft/Excel/v2/methods/loadOptions.ts"],"sourcesContent":["import type { IDataObject, ILoadOptionsFunctions, INodePropertyOptions } from 'n8n-workflow';\n\nimport { microsoftApiRequest } from '../transport';\n\nexport async function getWorksheetColumnRow(\n\tthis: ILoadOptionsFunctions,\n): Promise<INodePropertyOptions[]> {\n\tconst workbookId = this.getNodeParameter('workbook', undefined, {\n\t\textractValue: true,\n\t}) as string;\n\n\tconst worksheetId = this.getNodeParameter('worksheet', undefined, {\n\t\textractValue: true,\n\t}) as string;\n\n\tlet range = this.getNodeParameter('range', '') as string;\n\tlet columns: string[] = [];\n\n\tif (range === '') {\n\t\tconst worksheetData = await microsoftApiRequest.call(\n\t\t\tthis,\n\t\t\t'GET',\n\t\t\t`/drive/items/${workbookId}/workbook/worksheets/${worksheetId}/usedRange`,\n\t\t\tundefined,\n\t\t\t{ select: 'values' },\n\t\t);\n\n\t\tcolumns = worksheetData.values[0] as string[];\n\t} else {\n\t\tconst [rangeFrom, rangeTo] = range.split(':');\n\t\tconst cellDataFrom = rangeFrom.match(/([a-zA-Z]{1,10})([0-9]{0,10})/) || [];\n\t\tconst cellDataTo = rangeTo.match(/([a-zA-Z]{1,10})([0-9]{0,10})/) || [];\n\n\t\trange = `${rangeFrom}:${cellDataTo[1]}${cellDataFrom[2]}`;\n\n\t\tconst worksheetData = await microsoftApiRequest.call(\n\t\t\tthis,\n\t\t\t'PATCH',\n\t\t\t`/drive/items/${workbookId}/workbook/worksheets/${worksheetId}/range(address='${range}')`,\n\t\t\t{ select: 'values' },\n\t\t);\n\n\t\tcolumns = worksheetData.values[0] as string[];\n\t}\n\n\tconst returnData: INodePropertyOptions[] = [];\n\tfor (const column of columns) {\n\t\treturnData.push({\n\t\t\tname: column,\n\t\t\tvalue: column,\n\t\t});\n\t}\n\treturn returnData;\n}\n\nexport async function getWorksheetColumnRowSkipColumnToMatchOn(\n\tthis: ILoadOptionsFunctions,\n): Promise<INodePropertyOptions[]> {\n\tconst returnData = await getWorksheetColumnRow.call(this);\n\tconst columnToMatchOn = this.getNodeParameter('columnToMatchOn', 0) as string;\n\treturn returnData.filter((column) => column.value !== columnToMatchOn);\n}\n\nexport async function getTableColumns(\n\tthis: ILoadOptionsFunctions,\n): Promise<INodePropertyOptions[]> {\n\tconst workbookId = this.getNodeParameter('workbook', undefined, {\n\t\textractValue: true,\n\t}) as string;\n\n\tconst worksheetId = this.getNodeParameter('worksheet', undefined, {\n\t\textractValue: true,\n\t}) as string;\n\n\tconst tableId = this.getNodeParameter('table', undefined, {\n\t\textractValue: true,\n\t}) as string;\n\n\tconst response = await microsoftApiRequest.call(\n\t\tthis,\n\t\t'GET',\n\t\t`/drive/items/${workbookId}/workbook/worksheets/${worksheetId}/tables/${tableId}/columns`,\n\t\t{},\n\t);\n\n\treturn (response.value as IDataObject[]).map((column) => ({\n\t\tname: column.name as string,\n\t\tvalue: column.name as string,\n\t}));\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,uBAAoC;AAEpC,eAAsB,wBAEa;AAClC,QAAM,aAAa,KAAK,iBAAiB,YAAY,QAAW;AAAA,IAC/D,cAAc;AAAA,EACf,CAAC;AAED,QAAM,cAAc,KAAK,iBAAiB,aAAa,QAAW;AAAA,IACjE,cAAc;AAAA,EACf,CAAC;AAED,MAAI,QAAQ,KAAK,iBAAiB,SAAS,EAAE;AAC7C,MAAI,UAAoB,CAAC;AAEzB,MAAI,UAAU,IAAI;AACjB,UAAM,gBAAgB,MAAM,qCAAoB;AAAA,MAC/C;AAAA,MACA;AAAA,MACA,gBAAgB,UAAU,wBAAwB,WAAW;AAAA,MAC7D;AAAA,MACA,EAAE,QAAQ,SAAS;AAAA,IACpB;AAEA,cAAU,cAAc,OAAO,CAAC;AAAA,EACjC,OAAO;AACN,UAAM,CAAC,WAAW,OAAO,IAAI,MAAM,MAAM,GAAG;AAC5C,UAAM,eAAe,UAAU,MAAM,+BAA+B,KAAK,CAAC;AAC1E,UAAM,aAAa,QAAQ,MAAM,+BAA+B,KAAK,CAAC;AAEtE,YAAQ,GAAG,SAAS,IAAI,WAAW,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC;AAEvD,UAAM,gBAAgB,MAAM,qCAAoB;AAAA,MAC/C;AAAA,MACA;AAAA,MACA,gBAAgB,UAAU,wBAAwB,WAAW,mBAAmB,KAAK;AAAA,MACrF,EAAE,QAAQ,SAAS;AAAA,IACpB;AAEA,cAAU,cAAc,OAAO,CAAC;AAAA,EACjC;AAEA,QAAM,aAAqC,CAAC;AAC5C,aAAW,UAAU,SAAS;AAC7B,eAAW,KAAK;AAAA,MACf,MAAM;AAAA,MACN,OAAO;AAAA,IACR,CAAC;AAAA,EACF;AACA,SAAO;AACR;AAEA,eAAsB,2CAEa;AAClC,QAAM,aAAa,MAAM,sBAAsB,KAAK,IAAI;AACxD,QAAM,kBAAkB,KAAK,iBAAiB,mBAAmB,CAAC;AAClE,SAAO,WAAW,OAAO,CAAC,WAAW,OAAO,UAAU,eAAe;AACtE;AAEA,eAAsB,kBAEa;AAClC,QAAM,aAAa,KAAK,iBAAiB,YAAY,QAAW;AAAA,IAC/D,cAAc;AAAA,EACf,CAAC;AAED,QAAM,cAAc,KAAK,iBAAiB,aAAa,QAAW;AAAA,IACjE,cAAc;AAAA,EACf,CAAC;AAED,QAAM,UAAU,KAAK,iBAAiB,SAAS,QAAW;AAAA,IACzD,cAAc;AAAA,EACf,CAAC;AAED,QAAM,WAAW,MAAM,qCAAoB;AAAA,IAC1C;AAAA,IACA;AAAA,IACA,gBAAgB,UAAU,wBAAwB,WAAW,WAAW,OAAO;AAAA,IAC/E,CAAC;AAAA,EACF;AAEA,SAAQ,SAAS,MAAwB,IAAI,CAAC,YAAY;AAAA,IACzD,MAAM,OAAO;AAAA,IACb,OAAO,OAAO;AAAA,EACf,EAAE;AACH;","names":[]}