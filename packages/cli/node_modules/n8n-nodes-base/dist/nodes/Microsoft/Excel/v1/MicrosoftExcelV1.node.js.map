{"version":3,"sources":["../../../../../nodes/Microsoft/Excel/v1/MicrosoftExcelV1.node.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeBaseDescription,\n\tINodeTypeDescription,\n\tJsonObject,\n} from 'n8n-workflow';\nimport { NodeApiError, NodeConnectionTypes } from 'n8n-workflow';\n\nimport { oldVersionNotice } from '@utils/descriptions';\n\nimport {\n\tmicrosoftApiRequest,\n\tmicrosoftApiRequestAllItems,\n\tmicrosoftApiRequestAllItemsSkip,\n} from './GenericFunctions';\nimport { tableFields, tableOperations } from './TableDescription';\nimport { workbookFields, workbookOperations } from './WorkbookDescription';\nimport { worksheetFields, worksheetOperations } from './WorksheetDescription';\nimport { generatePairedItemData } from '../../../../utils/utilities';\n\nconst versionDescription: INodeTypeDescription = {\n\tdisplayName: 'Microsoft Excel',\n\tname: 'microsoftExcel',\n\ticon: 'file:excel.svg',\n\tgroup: ['input'],\n\tversion: 1,\n\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\tdescription: 'Consume Microsoft Excel API',\n\tdefaults: {\n\t\tname: 'Microsoft Excel',\n\t},\n\tinputs: [NodeConnectionTypes.Main],\n\toutputs: [NodeConnectionTypes.Main],\n\tcredentials: [\n\t\t{\n\t\t\tname: 'microsoftExcelOAuth2Api',\n\t\t\trequired: true,\n\t\t},\n\t],\n\tproperties: [\n\t\toldVersionNotice,\n\t\t{\n\t\t\tdisplayName: 'Resource',\n\t\t\tname: 'resource',\n\t\t\ttype: 'options',\n\t\t\tnoDataExpression: true,\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\tname: 'Table',\n\t\t\t\t\tvalue: 'table',\n\t\t\t\t\tdescription: 'Represents an Excel table',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Workbook',\n\t\t\t\t\tvalue: 'workbook',\n\t\t\t\t\tdescription:\n\t\t\t\t\t\t'Workbook is the top level object which contains related workbook objects such as worksheets, tables, ranges, etc',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Worksheet',\n\t\t\t\t\tvalue: 'worksheet',\n\t\t\t\t\tdescription:\n\t\t\t\t\t\t'An Excel worksheet is a grid of cells. It can contain data, tables, charts, etc.',\n\t\t\t\t},\n\t\t\t],\n\t\t\tdefault: 'workbook',\n\t\t},\n\t\t...workbookOperations,\n\t\t...workbookFields,\n\t\t...worksheetOperations,\n\t\t...worksheetFields,\n\t\t...tableOperations,\n\t\t...tableFields,\n\t],\n};\nexport class MicrosoftExcelV1 implements INodeType {\n\tdescription: INodeTypeDescription;\n\n\tconstructor(baseDescription: INodeTypeBaseDescription) {\n\t\tthis.description = {\n\t\t\t...baseDescription,\n\t\t\t...versionDescription,\n\t\t};\n\t}\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get all the workbooks to display them to user so that he can\n\t\t\t// select them easily\n\t\t\tasync getWorkbooks(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst qs: IDataObject = {\n\t\t\t\t\tselect: 'id,name',\n\t\t\t\t};\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst workbooks = await microsoftApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'value',\n\t\t\t\t\t'GET',\n\t\t\t\t\t\"/drive/root/search(q='.xlsx')\",\n\t\t\t\t\t{},\n\t\t\t\t\tqs,\n\t\t\t\t);\n\t\t\t\tfor (const workbook of workbooks) {\n\t\t\t\t\tconst workbookName = workbook.name;\n\t\t\t\t\tconst workbookId = workbook.id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: workbookName,\n\t\t\t\t\t\tvalue: workbookId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the worksheets to display them to user so that he can\n\t\t\t// select them easily\n\t\t\tasync getworksheets(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst workbookId = this.getCurrentNodeParameter('workbook');\n\t\t\t\tconst qs: IDataObject = {\n\t\t\t\t\tselect: 'id,name',\n\t\t\t\t};\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst worksheets = await microsoftApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'value',\n\t\t\t\t\t'GET',\n\t\t\t\t\t`/drive/items/${workbookId}/workbook/worksheets`,\n\t\t\t\t\t{},\n\t\t\t\t\tqs,\n\t\t\t\t);\n\t\t\t\tfor (const worksheet of worksheets) {\n\t\t\t\t\tconst worksheetName = worksheet.name;\n\t\t\t\t\tconst worksheetId = worksheet.id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: worksheetName,\n\t\t\t\t\t\tvalue: worksheetId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the tables to display them to user so that he can\n\t\t\t// select them easily\n\t\t\tasync getTables(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst workbookId = this.getCurrentNodeParameter('workbook');\n\t\t\t\tconst worksheetId = this.getCurrentNodeParameter('worksheet');\n\t\t\t\tconst qs: IDataObject = {\n\t\t\t\t\tselect: 'id,name',\n\t\t\t\t};\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst tables = await microsoftApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'value',\n\t\t\t\t\t'GET',\n\t\t\t\t\t`/drive/items/${workbookId}/workbook/worksheets/${worksheetId}/tables`,\n\t\t\t\t\t{},\n\t\t\t\t\tqs,\n\t\t\t\t);\n\t\t\t\tfor (const table of tables) {\n\t\t\t\t\tconst tableName = table.name;\n\t\t\t\t\tconst tableId = table.id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: tableName,\n\t\t\t\t\t\tvalue: tableId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst itemData = generatePairedItemData(items.length);\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst length = items.length;\n\t\tlet qs: IDataObject = {};\n\t\tconst result: IDataObject[] = [];\n\t\tlet responseData;\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\tif (resource === 'table') {\n\t\t\t//https://docs.microsoft.com/en-us/graph/api/table-post-rows?view=graph-rest-1.0&tabs=http\n\t\t\tif (operation === 'addRow') {\n\t\t\t\ttry {\n\t\t\t\t\t// TODO: At some point it should be possible to use item dependent parameters.\n\t\t\t\t\t//       Is however important to then not make one separate request each.\n\t\t\t\t\tconst workbookId = this.getNodeParameter('workbook', 0) as string;\n\t\t\t\t\tconst worksheetId = this.getNodeParameter('worksheet', 0) as string;\n\t\t\t\t\tconst tableId = this.getNodeParameter('table', 0) as string;\n\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', 0);\n\t\t\t\t\tconst body: IDataObject = {};\n\n\t\t\t\t\tif (additionalFields.index) {\n\t\t\t\t\t\tbody.index = additionalFields.index as number;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get table columns to eliminate any columns not needed on the input\n\t\t\t\t\tresponseData = await microsoftApiRequest.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t`/drive/items/${workbookId}/workbook/worksheets/${worksheetId}/tables/${tableId}/columns`,\n\t\t\t\t\t\t{},\n\t\t\t\t\t\tqs,\n\t\t\t\t\t);\n\t\t\t\t\tconst columns = responseData.value.map((column: IDataObject) => column.name);\n\n\t\t\t\t\tconst rows: any[][] = [];\n\n\t\t\t\t\t// Bring the items into the correct format\n\t\t\t\t\tfor (const item of items) {\n\t\t\t\t\t\tconst row = [];\n\t\t\t\t\t\tfor (const column of columns) {\n\t\t\t\t\t\t\trow.push(item.json[column]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\trows.push(row);\n\t\t\t\t\t}\n\n\t\t\t\t\tbody.values = rows;\n\t\t\t\t\tconst { id } = await microsoftApiRequest.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t`/drive/items/${workbookId}/workbook/createSession`,\n\t\t\t\t\t\t{ persistChanges: true },\n\t\t\t\t\t);\n\t\t\t\t\tresponseData = await microsoftApiRequest.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t`/drive/items/${workbookId}/workbook/worksheets/${worksheetId}/tables/${tableId}/rows/add`,\n\t\t\t\t\t\tbody,\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t'',\n\t\t\t\t\t\t{ 'workbook-session-id': id },\n\t\t\t\t\t);\n\t\t\t\t\tawait microsoftApiRequest.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t`/drive/items/${workbookId}/workbook/closeSession`,\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t'',\n\t\t\t\t\t\t{ 'workbook-session-id': id },\n\t\t\t\t\t);\n\n\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t\t{ itemData },\n\t\t\t\t\t);\n\n\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t\t{ itemData },\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//https://docs.microsoft.com/en-us/graph/api/table-list-columns?view=graph-rest-1.0&tabs=http\n\t\t\tif (operation === 'getColumns') {\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tqs = {};\n\t\t\t\t\t\tconst workbookId = this.getNodeParameter('workbook', i) as string;\n\t\t\t\t\t\tconst worksheetId = this.getNodeParameter('worksheet', i) as string;\n\t\t\t\t\t\tconst tableId = this.getNodeParameter('table', i) as string;\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst rawData = this.getNodeParameter('rawData', i);\n\t\t\t\t\t\tif (rawData) {\n\t\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\t\t\t\t\t\t\tif (filters.fields) {\n\t\t\t\t\t\t\t\tqs.$select = filters.fields;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await microsoftApiRequestAllItemsSkip.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'value',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/drive/items/${workbookId}/workbook/worksheets/${worksheetId}/tables/${tableId}/columns`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.$top = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/drive/items/${workbookId}/workbook/worksheets/${worksheetId}/tables/${tableId}/columns`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!rawData) {\n\t\t\t\t\t\t\tresponseData = responseData.map((column: IDataObject) => ({ name: column.name }));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst dataProperty = this.getNodeParameter('dataProperty', i) as string;\n\t\t\t\t\t\t\tresponseData = { [dataProperty]: responseData };\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//https://docs.microsoft.com/en-us/graph/api/table-list-rows?view=graph-rest-1.0&tabs=http\n\t\t\tif (operation === 'getRows') {\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tqs = {};\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst workbookId = this.getNodeParameter('workbook', i) as string;\n\t\t\t\t\t\tconst worksheetId = this.getNodeParameter('worksheet', i) as string;\n\t\t\t\t\t\tconst tableId = this.getNodeParameter('table', i) as string;\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst rawData = this.getNodeParameter('rawData', i);\n\t\t\t\t\t\tif (rawData) {\n\t\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\t\t\t\t\t\t\tif (filters.fields) {\n\t\t\t\t\t\t\t\tqs.$select = filters.fields;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await microsoftApiRequestAllItemsSkip.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'value',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/drive/items/${workbookId}/workbook/worksheets/${worksheetId}/tables/${tableId}/rows`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst rowsQs = { ...qs };\n\t\t\t\t\t\t\trowsQs.$top = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/drive/items/${workbookId}/workbook/worksheets/${worksheetId}/tables/${tableId}/rows`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\trowsQs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!rawData) {\n\t\t\t\t\t\t\tconst columnsQs = { ...qs };\n\t\t\t\t\t\t\tcolumnsQs.$select = 'name';\n\t\t\t\t\t\t\t// TODO: That should probably be cached in the future\n\t\t\t\t\t\t\tlet columns = await microsoftApiRequestAllItemsSkip.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'value',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/drive/items/${workbookId}/workbook/worksheets/${worksheetId}/tables/${tableId}/columns`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tcolumnsQs,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tcolumns = (columns as IDataObject[]).map((column) => column.name);\n\t\t\t\t\t\t\tfor (let index = 0; index < responseData.length; index++) {\n\t\t\t\t\t\t\t\tconst object: IDataObject = {};\n\t\t\t\t\t\t\t\tfor (let y = 0; y < columns.length; y++) {\n\t\t\t\t\t\t\t\t\tobject[columns[y]] = responseData[index].values[0][y];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\t\t\tthis.helpers.returnJsonArray({ ...object }),\n\t\t\t\t\t\t\t\t\t{ itemData: { item: index } },\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst dataProperty = this.getNodeParameter('dataProperty', i) as string;\n\t\t\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\t\tthis.helpers.returnJsonArray({ [dataProperty]: responseData }),\n\t\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (operation === 'lookup') {\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tqs = {};\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst workbookId = this.getNodeParameter('workbook', i) as string;\n\t\t\t\t\t\tconst worksheetId = this.getNodeParameter('worksheet', i) as string;\n\t\t\t\t\t\tconst tableId = this.getNodeParameter('table', i) as string;\n\t\t\t\t\t\tconst lookupColumn = this.getNodeParameter('lookupColumn', i) as string;\n\t\t\t\t\t\tconst lookupValue = this.getNodeParameter('lookupValue', i) as string;\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\n\t\t\t\t\t\tresponseData = await microsoftApiRequestAllItemsSkip.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'value',\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/drive/items/${workbookId}/workbook/worksheets/${worksheetId}/tables/${tableId}/rows`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tqs.$select = 'name';\n\t\t\t\t\t\t// TODO: That should probably be cached in the future\n\t\t\t\t\t\tlet columns = await microsoftApiRequestAllItemsSkip.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'value',\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/drive/items/${workbookId}/workbook/worksheets/${worksheetId}/tables/${tableId}/columns`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tcolumns = columns.map((column: IDataObject) => column.name);\n\n\t\t\t\t\t\tif (!columns.includes(lookupColumn)) {\n\t\t\t\t\t\t\tthrow new NodeApiError(this.getNode(), responseData as JsonObject, {\n\t\t\t\t\t\t\t\tmessage: `Column ${lookupColumn} does not exist on the table selected`,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresult.length = 0;\n\t\t\t\t\t\tfor (let index = 0; index < responseData.length; index++) {\n\t\t\t\t\t\t\tconst object: IDataObject = {};\n\t\t\t\t\t\t\tfor (let y = 0; y < columns.length; y++) {\n\t\t\t\t\t\t\t\tobject[columns[y]] = responseData[index].values[0][y];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tresult.push({ ...object });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (options.returnAllMatches) {\n\t\t\t\t\t\t\tresponseData = result.filter((data: IDataObject) => {\n\t\t\t\t\t\t\t\treturn data[lookupColumn]?.toString() === lookupValue;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\t\tthis.helpers.returnJsonArray(responseData),\n\t\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresponseData = result.find((data: IDataObject) => {\n\t\t\t\t\t\t\t\treturn data[lookupColumn]?.toString() === lookupValue;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject),\n\t\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (resource === 'workbook') {\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tqs = {};\n\t\t\t\ttry {\n\t\t\t\t\t//https://docs.microsoft.com/en-us/graph/api/worksheetcollection-add?view=graph-rest-1.0&tabs=http\n\t\t\t\t\tif (operation === 'addWorksheet') {\n\t\t\t\t\t\tconst workbookId = this.getNodeParameter('workbook', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst body: IDataObject = {};\n\t\t\t\t\t\tif (additionalFields.name) {\n\t\t\t\t\t\t\tbody.name = additionalFields.name;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst { id } = await microsoftApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/drive/items/${workbookId}/workbook/createSession`,\n\t\t\t\t\t\t\t{ persistChanges: true },\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/drive/items/${workbookId}/workbook/worksheets/add`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t{ 'workbook-session-id': id },\n\t\t\t\t\t\t);\n\t\t\t\t\t\tawait microsoftApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/drive/items/${workbookId}/workbook/closeSession`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t{ 'workbook-session-id': id },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\t\t\t\t\t\tif (filters.fields) {\n\t\t\t\t\t\t\tqs.$select = filters.fields;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await microsoftApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'value',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\"/drive/root/search(q='.xlsx')\",\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.$top = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\"/drive/root/search(q='.xlsx')\",\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (Array.isArray(responseData)) {\n\t\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\tthis.helpers.returnJsonArray(responseData),\n\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t\t} else if (responseData !== undefined) {\n\t\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (resource === 'worksheet') {\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tqs = {};\n\t\t\t\ttry {\n\t\t\t\t\t//https://docs.microsoft.com/en-us/graph/api/workbook-list-worksheets?view=graph-rest-1.0&tabs=http\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst workbookId = this.getNodeParameter('workbook', i) as string;\n\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\t\t\t\t\t\tif (filters.fields) {\n\t\t\t\t\t\t\tqs.$select = filters.fields;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await microsoftApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'value',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/drive/items/${workbookId}/workbook/worksheets`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.$top = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/drive/items/${workbookId}/workbook/worksheets`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://docs.microsoft.com/en-us/graph/api/worksheet-range?view=graph-rest-1.0&tabs=http\n\t\t\t\t\tif (operation === 'getContent') {\n\t\t\t\t\t\tconst workbookId = this.getNodeParameter('workbook', i) as string;\n\t\t\t\t\t\tconst worksheetId = this.getNodeParameter('worksheet', i) as string;\n\t\t\t\t\t\tconst range = this.getNodeParameter('range', i) as string;\n\t\t\t\t\t\tconst rawData = this.getNodeParameter('rawData', i);\n\t\t\t\t\t\tif (rawData) {\n\t\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\t\t\t\t\t\t\tif (filters.fields) {\n\t\t\t\t\t\t\t\tqs.$select = filters.fields;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await microsoftApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/drive/items/${workbookId}/workbook/worksheets/${worksheetId}/range(address='${range}')`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (!rawData) {\n\t\t\t\t\t\t\tconst keyRow = this.getNodeParameter('keyRow', i) as number;\n\t\t\t\t\t\t\tconst dataStartRow = this.getNodeParameter('dataStartRow', i) as number;\n\t\t\t\t\t\t\tif (responseData.values === null) {\n\t\t\t\t\t\t\t\tthrow new NodeApiError(this.getNode(), responseData as JsonObject, {\n\t\t\t\t\t\t\t\t\tmessage: 'Range did not return data',\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst keyValues = responseData.values[keyRow];\n\t\t\t\t\t\t\tfor (let index = dataStartRow; index < responseData.values.length; index++) {\n\t\t\t\t\t\t\t\tconst object: IDataObject = {};\n\t\t\t\t\t\t\t\tfor (let y = 0; y < keyValues.length; y++) {\n\t\t\t\t\t\t\t\t\tobject[keyValues[y]] = responseData.values[index][y];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\t\t\tthis.helpers.returnJsonArray({ ...object }),\n\t\t\t\t\t\t\t\t\t{ itemData: { item: index } },\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst dataProperty = this.getNodeParameter('dataProperty', i) as string;\n\t\t\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\t\tthis.helpers.returnJsonArray({ [dataProperty]: responseData }),\n\t\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":[]}