{"version":3,"sources":["../../../../../nodes/Microsoft/SharePoint/methods/listSearch.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodeListSearchItems,\n\tINodeListSearchResult,\n} from 'n8n-workflow';\n\nimport type { IDriveItem, IList, IListItem, ISite } from '../helpers/interfaces';\nimport { microsoftSharePointApiRequest } from '../transport';\n\nexport async function getFiles(\n\tthis: ILoadOptionsFunctions,\n\tfilter?: string,\n\tpaginationToken?: string,\n): Promise<INodeListSearchResult> {\n\tconst site = this.getNodeParameter('site', undefined, { extractValue: true }) as string;\n\tconst folder = this.getNodeParameter('folder', undefined, { extractValue: true }) as string;\n\n\tlet response: any;\n\tif (paginationToken) {\n\t\tresponse = await microsoftSharePointApiRequest.call(\n\t\t\tthis,\n\t\t\t'GET',\n\t\t\t`/sites/${site}/drive/items/${folder}/children`,\n\t\t\t{},\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t\tpaginationToken,\n\t\t);\n\t} else {\n\t\t// File filter not supported\n\t\t// https://learn.microsoft.com/en-us/onedrive/developer/rest-api/concepts/filtering-results?view=odsp-graph-online#filterable-properties\n\t\tconst qs: IDataObject = {\n\t\t\t$select: 'id,name,file',\n\t\t};\n\t\tif (filter) {\n\t\t\tqs.$filter = `name eq '${filter}'`;\n\t\t}\n\t\tresponse = await microsoftSharePointApiRequest.call(\n\t\t\tthis,\n\t\t\t'GET',\n\t\t\t`/sites/${site}/drive/items/${folder}/children`,\n\t\t\t{},\n\t\t\tqs,\n\t\t);\n\t}\n\n\tconst items: IDriveItem[] = response.value;\n\n\tconst results: INodeListSearchItems[] = items\n\t\t.filter((x) => x.file)\n\t\t.map((g) => ({\n\t\t\tname: g.name,\n\t\t\tvalue: g.id,\n\t\t}))\n\t\t.sort((a, b) =>\n\t\t\ta.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' }),\n\t\t);\n\n\treturn { results, paginationToken: response['@odata.nextLink'] };\n}\n\nexport async function getFolders(\n\tthis: ILoadOptionsFunctions,\n\tfilter?: string,\n\tpaginationToken?: string,\n): Promise<INodeListSearchResult> {\n\tconst site = this.getNodeParameter('site', undefined, { extractValue: true }) as string;\n\n\tlet response: any;\n\tif (paginationToken) {\n\t\tresponse = await microsoftSharePointApiRequest.call(\n\t\t\tthis,\n\t\t\t'GET',\n\t\t\t`/sites/${site}/drive/items`,\n\t\t\t{},\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t\tpaginationToken,\n\t\t);\n\t} else {\n\t\tconst qs: IDataObject = {\n\t\t\t$select: 'id,name,folder',\n\t\t\t// Folder filter not supported, but filter is still required\n\t\t\t// https://learn.microsoft.com/en-us/onedrive/developer/rest-api/concepts/filtering-results?view=odsp-graph-online#filterable-properties\n\t\t\t$filter: 'folder ne null',\n\t\t};\n\t\tif (filter) {\n\t\t\tqs.$filter = `name eq '${filter}'`;\n\t\t}\n\t\tresponse = await microsoftSharePointApiRequest.call(\n\t\t\tthis,\n\t\t\t'GET',\n\t\t\t`/sites/${site}/drive/items`,\n\t\t\t{},\n\t\t\tqs,\n\t\t);\n\t}\n\n\tconst items: IDriveItem[] = response.value;\n\n\tconst results: INodeListSearchItems[] = items\n\t\t.filter((x) => x.folder)\n\t\t.map((g) => ({\n\t\t\tname: g.name,\n\t\t\tvalue: g.id,\n\t\t}))\n\t\t.sort((a, b) =>\n\t\t\ta.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' }),\n\t\t);\n\n\treturn { results, paginationToken: response['@odata.nextLink'] };\n}\n\nexport async function getItems(\n\tthis: ILoadOptionsFunctions,\n\tfilter?: string,\n\tpaginationToken?: string,\n): Promise<INodeListSearchResult> {\n\tconst site = this.getNodeParameter('site', undefined, { extractValue: true }) as string;\n\tconst list = this.getNodeParameter('list', undefined, { extractValue: true }) as string;\n\n\tlet response: any;\n\tif (paginationToken) {\n\t\tresponse = await microsoftSharePointApiRequest.call(\n\t\t\tthis,\n\t\t\t'GET',\n\t\t\t`/sites/${site}/lists/${list}/items`,\n\t\t\t{},\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t\tpaginationToken,\n\t\t);\n\t} else {\n\t\tconst qs: IDataObject = {\n\t\t\t$expand: 'fields(select=Title)',\n\t\t\t$select: 'id,fields',\n\t\t};\n\t\tif (filter) {\n\t\t\tqs.$filter = `fields/Title eq '${filter}'`;\n\t\t}\n\t\tresponse = await microsoftSharePointApiRequest.call(\n\t\t\tthis,\n\t\t\t'GET',\n\t\t\t`/sites/${site}/lists/${list}/items`,\n\t\t\t{},\n\t\t\tqs,\n\t\t);\n\t}\n\n\tconst items: IListItem[] = response.value;\n\n\tconst results: INodeListSearchItems[] = items\n\t\t.map((g) => ({\n\t\t\tname: g.fields.Title ?? g.id,\n\t\t\tvalue: g.id,\n\t\t}))\n\t\t.sort((a, b) =>\n\t\t\ta.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' }),\n\t\t);\n\n\treturn { results, paginationToken: response['@odata.nextLink'] };\n}\n\nexport async function getLists(\n\tthis: ILoadOptionsFunctions,\n\tfilter?: string,\n\tpaginationToken?: string,\n): Promise<INodeListSearchResult> {\n\tconst site = this.getNodeParameter('site', undefined, { extractValue: true }) as string;\n\n\tlet response: any;\n\tif (paginationToken) {\n\t\tresponse = await microsoftSharePointApiRequest.call(\n\t\t\tthis,\n\t\t\t'GET',\n\t\t\t`/sites/${site}/lists`,\n\t\t\t{},\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t\tpaginationToken,\n\t\t);\n\t} else {\n\t\tconst qs: IDataObject = {\n\t\t\t$select: 'id,displayName',\n\t\t};\n\t\tif (filter) {\n\t\t\tqs.$filter = `displayName eq '${filter}'`;\n\t\t}\n\t\tresponse = await microsoftSharePointApiRequest.call(\n\t\t\tthis,\n\t\t\t'GET',\n\t\t\t`/sites/${site}/lists`,\n\t\t\t{},\n\t\t\tqs,\n\t\t);\n\t}\n\n\tconst lists: IList[] = response.value;\n\n\tconst results: INodeListSearchItems[] = lists\n\t\t.map((g) => ({\n\t\t\tname: g.displayName,\n\t\t\tvalue: g.id,\n\t\t}))\n\t\t.sort((a, b) =>\n\t\t\ta.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' }),\n\t\t);\n\n\treturn { results, paginationToken: response['@odata.nextLink'] };\n}\n\nexport async function getSites(\n\tthis: ILoadOptionsFunctions,\n\tfilter?: string,\n\tpaginationToken?: string,\n): Promise<INodeListSearchResult> {\n\tlet response: any;\n\tif (paginationToken) {\n\t\tresponse = await microsoftSharePointApiRequest.call(\n\t\t\tthis,\n\t\t\t'GET',\n\t\t\t'/sites',\n\t\t\t{},\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t\tpaginationToken,\n\t\t);\n\t} else {\n\t\tconst qs: IDataObject = {\n\t\t\t$select: 'id,title',\n\t\t\t$search: '*',\n\t\t};\n\t\tif (filter) {\n\t\t\tqs.$search = filter;\n\t\t}\n\t\tresponse = await microsoftSharePointApiRequest.call(this, 'GET', '/sites', {}, qs);\n\t}\n\n\tconst sites: ISite[] = response.value;\n\n\tconst results: INodeListSearchItems[] = sites\n\t\t.map((g) => ({\n\t\t\tname: g.title,\n\t\t\tvalue: g.id,\n\t\t}))\n\t\t.sort((a, b) =>\n\t\t\ta.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' }),\n\t\t);\n\n\treturn { results, paginationToken: response['@odata.nextLink'] };\n}\n"],"mappings":"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","names":[]}