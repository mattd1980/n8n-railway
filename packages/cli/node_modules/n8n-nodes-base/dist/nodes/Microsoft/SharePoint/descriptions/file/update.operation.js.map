{"version":3,"sources":["../../../../../../nodes/Microsoft/SharePoint/descriptions/file/update.operation.ts"],"sourcesContent":["import {\n\tupdateDisplayOptions,\n\ttype IExecuteSingleFunctions,\n\ttype IN8nHttpFullResponse,\n\ttype INodeExecutionData,\n\ttype INodeProperties,\n} from 'n8n-workflow';\n\nimport { microsoftSharePointApiRequest } from '../../transport';\nimport {\n\tfileRLC,\n\tfolderRLC,\n\tsiteRLC,\n\tuntilFolderSelected,\n\tuntilSiteSelected,\n} from '../common.descriptions';\n\nconst properties: INodeProperties[] = [\n\t{\n\t\t...siteRLC,\n\t\tdescription: 'Select the site to retrieve folders from',\n\t},\n\t{\n\t\t...folderRLC,\n\t\tdescription: 'Select the folder to update the file in',\n\t\tdisplayOptions: {\n\t\t\thide: {\n\t\t\t\t...untilSiteSelected,\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\t...fileRLC,\n\t\tdescription: 'Select the file to update',\n\t\tdisplayOptions: {\n\t\t\thide: {\n\t\t\t\t...untilSiteSelected,\n\t\t\t\t...untilFolderSelected,\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tdisplayName: 'Updated File Name',\n\t\tname: 'fileName',\n\t\tdefault: '',\n\t\tdescription: 'If not specified, the original file name will be used',\n\t\tplaceholder: 'e.g. My New File',\n\t\trouting: {\n\t\t\tsend: {\n\t\t\t\tproperty: 'name',\n\t\t\t\ttype: 'body',\n\t\t\t\tvalue: '={{ $value }}',\n\t\t\t},\n\t\t},\n\t\ttype: 'string',\n\t},\n\t{\n\t\tdisplayName: 'Change File Content',\n\t\tname: 'changeFileContent',\n\t\tdefault: false,\n\t\tdescription: 'Whether to update the file contents',\n\t\tplaceholder: 'e.g. My New File',\n\t\trequired: true,\n\t\ttype: 'boolean',\n\t},\n\t{\n\t\tdisplayName: 'Updated File Contents',\n\t\tname: 'fileContents',\n\t\tdefault: '',\n\t\tdescription:\n\t\t\t'Find the name of input field containing the binary data to update the file in the Input panel on the left, in the Binary tab',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tchangeFileContent: [true],\n\t\t\t},\n\t\t},\n\t\thint: 'The name of the input field containing the binary file data to update the file',\n\t\tplaceholder: 'data',\n\t\trequired: true,\n\t\trouting: {\n\t\t\toutput: {\n\t\t\t\tpostReceive: [\n\t\t\t\t\tasync function (\n\t\t\t\t\t\tthis: IExecuteSingleFunctions,\n\t\t\t\t\t\titems: INodeExecutionData[],\n\t\t\t\t\t\t_response: IN8nHttpFullResponse,\n\t\t\t\t\t): Promise<INodeExecutionData[]> {\n\t\t\t\t\t\tfor (const item of items) {\n\t\t\t\t\t\t\tconst site = this.getNodeParameter('site', undefined, {\n\t\t\t\t\t\t\t\textractValue: true,\n\t\t\t\t\t\t\t}) as string;\n\t\t\t\t\t\t\tconst file = this.getNodeParameter('file', undefined, {\n\t\t\t\t\t\t\t\textractValue: true,\n\t\t\t\t\t\t\t}) as string;\n\t\t\t\t\t\t\tconst binaryProperty = this.getNodeParameter('fileContents') as string;\n\t\t\t\t\t\t\tthis.helpers.assertBinaryData(binaryProperty);\n\t\t\t\t\t\t\tconst binaryDataBuffer = await this.helpers.getBinaryDataBuffer(binaryProperty);\n\t\t\t\t\t\t\tconst response = await microsoftSharePointApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t\t\t`/sites/${site}/drive/items/${file}/content`,\n\t\t\t\t\t\t\t\tbinaryDataBuffer,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\titem.json = response;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn items;\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t},\n\t\ttype: 'string',\n\t},\n];\n\nconst displayOptions = {\n\tshow: {\n\t\tresource: ['file'],\n\t\toperation: ['update'],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAMO;AAEP,uBAA8C;AAC9C,oBAMO;AAEP,MAAM,aAAgC;AAAA,EACrC;AAAA,IACC,GAAG;AAAA,IACH,aAAa;AAAA,EACd;AAAA,EACA;AAAA,IACC,GAAG;AAAA,IACH,aAAa;AAAA,IACb,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,GAAG;AAAA,MACJ;AAAA,IACD;AAAA,EACD;AAAA,EACA;AAAA,IACC,GAAG;AAAA,IACH,aAAa;AAAA,IACb,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,GAAG;AAAA,QACH,GAAG;AAAA,MACJ;AAAA,IACD;AAAA,EACD;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,IACb,aAAa;AAAA,IACb,SAAS;AAAA,MACR,MAAM;AAAA,QACL,UAAU;AAAA,QACV,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,IACD;AAAA,IACA,MAAM;AAAA,EACP;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,IACb,aAAa;AAAA,IACb,UAAU;AAAA,IACV,MAAM;AAAA,EACP;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aACC;AAAA,IACD,gBAAgB;AAAA,MACf,MAAM;AAAA,QACL,mBAAmB,CAAC,IAAI;AAAA,MACzB;AAAA,IACD;AAAA,IACA,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,IACV,SAAS;AAAA,MACR,QAAQ;AAAA,QACP,aAAa;AAAA,UACZ,eAEC,OACA,WACgC;AAChC,uBAAW,QAAQ,OAAO;AACzB,oBAAM,OAAO,KAAK,iBAAiB,QAAQ,QAAW;AAAA,gBACrD,cAAc;AAAA,cACf,CAAC;AACD,oBAAM,OAAO,KAAK,iBAAiB,QAAQ,QAAW;AAAA,gBACrD,cAAc;AAAA,cACf,CAAC;AACD,oBAAM,iBAAiB,KAAK,iBAAiB,cAAc;AAC3D,mBAAK,QAAQ,iBAAiB,cAAc;AAC5C,oBAAM,mBAAmB,MAAM,KAAK,QAAQ,oBAAoB,cAAc;AAC9E,oBAAM,WAAW,MAAM,+CAA8B;AAAA,gBACpD;AAAA,gBACA;AAAA,gBACA,UAAU,IAAI,gBAAgB,IAAI;AAAA,gBAClC;AAAA,cACD;AACA,mBAAK,OAAO;AAAA,YACb;AACA,mBAAO;AAAA,UACR;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,IACA,MAAM;AAAA,EACP;AACD;AAEA,MAAM,iBAAiB;AAAA,EACtB,MAAM;AAAA,IACL,UAAU,CAAC,MAAM;AAAA,IACjB,WAAW,CAAC,QAAQ;AAAA,EACrB;AACD;AAEO,MAAM,kBAAc,0CAAqB,gBAAgB,UAAU;","names":[]}