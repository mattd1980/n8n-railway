{"version":3,"sources":["../../../../../nodes/MySql/v2/helpers/interfaces.ts"],"sourcesContent":["import type mysql2 from 'mysql2/promise';\nimport type { IDataObject, INodeExecutionData, SSHCredentials } from 'n8n-workflow';\n\nexport type Mysql2Connection = mysql2.Connection;\nexport type Mysql2Pool = mysql2.Pool;\nexport type Mysql2OkPacket = mysql2.OkPacket;\n\nexport type QueryValues = Array<string | number | IDataObject>;\nexport type QueryWithValues = { query: string; values: QueryValues };\n\nexport type QueryRunner = (queries: QueryWithValues[]) => Promise<INodeExecutionData[]>;\n\nexport type WhereClause = { column: string; condition: string; value: string | number };\nexport type SortRule = { column: string; direction: string };\n\nexport const AUTO_MAP = 'autoMapInputData';\nconst MANUAL = 'defineBelow';\nexport const DATA_MODE = {\n\tAUTO_MAP,\n\tMANUAL,\n};\n\nexport const SINGLE = 'single';\nconst TRANSACTION = 'transaction';\nconst INDEPENDENTLY = 'independently';\nexport const BATCH_MODE = { SINGLE, TRANSACTION, INDEPENDENTLY };\n\nexport type QueryMode = typeof SINGLE | typeof TRANSACTION | typeof INDEPENDENTLY;\n\ntype WithSSL =\n\t| { ssl: false }\n\t| { ssl: true; caCertificate: string; clientCertificate: string; clientPrivateKey: string };\n\ntype WithSSHTunnel =\n\t| { sshTunnel: false }\n\t| ({\n\t\t\tsshTunnel: true;\n\t  } & SSHCredentials);\n\nexport type MysqlNodeCredentials = {\n\thost: string;\n\tport: number;\n\tdatabase: string;\n\tuser: string;\n\tpassword: string;\n\tconnectTimeout: number;\n} & WithSSL &\n\tWithSSHTunnel;\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeO,MAAM,WAAW;AACxB,MAAM,SAAS;AACR,MAAM,YAAY;AAAA,EACxB;AAAA,EACA;AACD;AAEO,MAAM,SAAS;AACtB,MAAM,cAAc;AACpB,MAAM,gBAAgB;AACf,MAAM,aAAa,EAAE,QAAQ,aAAa,cAAc;","names":[]}