{"version":3,"sources":["../../../../../nodes/MySql/v2/methods/credentialTest.ts"],"sourcesContent":["import type {\n\tICredentialsDecrypted,\n\tICredentialTestFunctions,\n\tINodeCredentialTestResult,\n} from 'n8n-workflow';\n\nimport type { MysqlNodeCredentials } from '../helpers/interfaces';\nimport { createPool } from '../transport';\n\nexport async function mysqlConnectionTest(\n\tthis: ICredentialTestFunctions,\n\tcredential: ICredentialsDecrypted,\n): Promise<INodeCredentialTestResult> {\n\tconst credentials = credential.data as MysqlNodeCredentials;\n\n\tconst pool = await createPool.call(this, credentials);\n\n\ttry {\n\t\tconst connection = await pool.getConnection();\n\t\tconnection.release();\n\t} catch (error) {\n\t\treturn {\n\t\t\tstatus: 'Error',\n\t\t\tmessage: error.message,\n\t\t};\n\t} finally {\n\t\tawait pool.end();\n\t}\n\n\treturn {\n\t\tstatus: 'OK',\n\t\tmessage: 'Connection successful!',\n\t};\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,uBAA2B;AAE3B,eAAsB,oBAErB,YACqC;AACrC,QAAM,cAAc,WAAW;AAE/B,QAAM,OAAO,MAAM,4BAAW,KAAK,MAAM,WAAW;AAEpD,MAAI;AACH,UAAM,aAAa,MAAM,KAAK,cAAc;AAC5C,eAAW,QAAQ;AAAA,EACpB,SAAS,OAAO;AACf,WAAO;AAAA,MACN,QAAQ;AAAA,MACR,SAAS,MAAM;AAAA,IAChB;AAAA,EACD,UAAE;AACD,UAAM,KAAK,IAAI;AAAA,EAChB;AAEA,SAAO;AAAA,IACN,QAAQ;AAAA,IACR,SAAS;AAAA,EACV;AACD;","names":[]}