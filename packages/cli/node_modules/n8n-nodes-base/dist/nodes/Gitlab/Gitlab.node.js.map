{"version":3,"sources":["../../../nodes/Gitlab/Gitlab.node.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHttpRequestMethods,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport { gitlabApiRequest, gitlabApiRequestAllItems } from './GenericFunctions';\n\nexport class Gitlab implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'GitLab',\n\t\tname: 'gitlab',\n\t\ticon: 'file:gitlab.svg',\n\t\tgroup: ['input'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Retrieve data from GitLab API',\n\t\tdefaults: {\n\t\t\tname: 'GitLab',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'gitlabApi',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['accessToken'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'gitlabOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['oAuth2'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Authentication',\n\t\t\t\tname: 'authentication',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Access Token',\n\t\t\t\t\t\tvalue: 'accessToken',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'OAuth2',\n\t\t\t\t\t\tvalue: 'oAuth2',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'accessToken',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'File',\n\t\t\t\t\t\tvalue: 'file',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Issue',\n\t\t\t\t\t\tvalue: 'issue',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Release',\n\t\t\t\t\t\tvalue: 'release',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Repository',\n\t\t\t\t\t\tvalue: 'repository',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'User',\n\t\t\t\t\t\tvalue: 'user',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'issue',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         operations\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['issue'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Create',\n\t\t\t\t\t\tvalue: 'create',\n\t\t\t\t\t\tdescription: 'Create a new issue',\n\t\t\t\t\t\taction: 'Create an issue',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Create Comment',\n\t\t\t\t\t\tvalue: 'createComment',\n\t\t\t\t\t\tdescription: 'Create a new comment on an issue',\n\t\t\t\t\t\taction: 'Create a comment on an issue',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Edit',\n\t\t\t\t\t\tvalue: 'edit',\n\t\t\t\t\t\tdescription: 'Edit an issue',\n\t\t\t\t\t\taction: 'Edit an issue',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get',\n\t\t\t\t\t\tvalue: 'get',\n\t\t\t\t\t\tdescription: 'Get the data of a single issue',\n\t\t\t\t\t\taction: 'Get an issue',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Lock',\n\t\t\t\t\t\tvalue: 'lock',\n\t\t\t\t\t\tdescription: 'Lock an issue',\n\t\t\t\t\t\taction: 'Lock an issue',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'create',\n\t\t\t},\n\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['repository'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get',\n\t\t\t\t\t\tvalue: 'get',\n\t\t\t\t\t\tdescription: 'Get the data of a single repository',\n\t\t\t\t\t\taction: 'Get a repository',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get Issues',\n\t\t\t\t\t\tvalue: 'getIssues',\n\t\t\t\t\t\tdescription: 'Returns issues of a repository',\n\t\t\t\t\t\taction: 'Get issues of a repository',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'getIssues',\n\t\t\t},\n\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['user'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get Repositories',\n\t\t\t\t\t\tvalue: 'getRepositories',\n\t\t\t\t\t\tdescription: 'Returns the repositories of a user',\n\t\t\t\t\t\taction: \"Get a user's repositories\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'getRepositories',\n\t\t\t},\n\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['release'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Create',\n\t\t\t\t\t\tvalue: 'create',\n\t\t\t\t\t\tdescription: 'Create a new release',\n\t\t\t\t\t\taction: 'Create a release',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Delete',\n\t\t\t\t\t\tvalue: 'delete',\n\t\t\t\t\t\tdescription: 'Delete a release',\n\t\t\t\t\t\taction: 'Delete a release',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get',\n\t\t\t\t\t\tvalue: 'get',\n\t\t\t\t\t\tdescription: 'Get a release',\n\t\t\t\t\t\taction: 'Get a release',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get Many',\n\t\t\t\t\t\tvalue: 'getAll',\n\t\t\t\t\t\tdescription: 'Get many releases',\n\t\t\t\t\t\taction: 'Get many releases',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Update',\n\t\t\t\t\t\tvalue: 'update',\n\t\t\t\t\t\tdescription: 'Update a release',\n\t\t\t\t\t\taction: 'Update a release',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'create',\n\t\t\t},\n\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['file'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Create',\n\t\t\t\t\t\tvalue: 'create',\n\t\t\t\t\t\tdescription: 'Create a new file in repository',\n\t\t\t\t\t\taction: 'Create a file',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Delete',\n\t\t\t\t\t\tvalue: 'delete',\n\t\t\t\t\t\tdescription: 'Delete a file in repository',\n\t\t\t\t\t\taction: 'Delete a file',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Edit',\n\t\t\t\t\t\tvalue: 'edit',\n\t\t\t\t\t\tdescription: 'Edit a file in repository',\n\t\t\t\t\t\taction: 'Edit a file',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get',\n\t\t\t\t\t\tvalue: 'get',\n\t\t\t\t\t\tdescription: 'Get the data of a single file',\n\t\t\t\t\t\taction: 'Get a file',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'List',\n\t\t\t\t\t\tvalue: 'list',\n\t\t\t\t\t\tdescription: 'List contents of a folder',\n\t\t\t\t\t\taction: 'List files',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'create',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         shared\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Project Owner',\n\t\t\t\tname: 'owner',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tplaceholder: 'n8n-io',\n\t\t\t\tdescription: 'User, group or namespace of the project',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Project Name',\n\t\t\t\tname: 'repository',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\thide: {\n\t\t\t\t\t\tresource: ['user'],\n\t\t\t\t\t\toperation: ['getRepositories'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplaceholder: 'n8n',\n\t\t\t\tdescription: 'The name of the project',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         issue\n\t\t\t// ----------------------------------\n\n\t\t\t// ----------------------------------\n\t\t\t//         issue:create\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Title',\n\t\t\t\tname: 'title',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t\tresource: ['issue'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The title of the issue',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Body',\n\t\t\t\tname: 'body',\n\t\t\t\ttype: 'string',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\trows: 5,\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t\tresource: ['issue'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The body of the issue',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Due Date',\n\t\t\t\tname: 'due_date',\n\t\t\t\ttype: 'dateTime',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t\tresource: ['issue'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\tdescription: 'Due Date for issue',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Labels',\n\t\t\t\tname: 'labels',\n\t\t\t\ttype: 'collection',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tmultipleValues: true,\n\t\t\t\t\tmultipleValueButtonText: 'Add Label',\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t\tresource: ['issue'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: { label: '' },\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Label',\n\t\t\t\t\t\tname: 'label',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Label to add to issue',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Assignees',\n\t\t\t\tname: 'assignee_ids',\n\t\t\t\ttype: 'collection',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tmultipleValues: true,\n\t\t\t\t\tmultipleValueButtonText: 'Add Assignee',\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t\tresource: ['issue'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: { assignee: '' },\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Assignee',\n\t\t\t\t\t\tname: 'assignee',\n\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\tdefault: 0,\n\t\t\t\t\t\tdescription: 'User ID to assign issue to',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         issue:createComment\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Issue Number',\n\t\t\t\tname: 'issueNumber',\n\t\t\t\ttype: 'number',\n\t\t\t\tdefault: 0,\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['createComment'],\n\t\t\t\t\t\tresource: ['issue'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The number of the issue on which to create the comment on',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Body',\n\t\t\t\tname: 'body',\n\t\t\t\ttype: 'string',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\trows: 5,\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['createComment'],\n\t\t\t\t\t\tresource: ['issue'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\tdescription: 'The body of the comment',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         issue:edit\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Issue Number',\n\t\t\t\tname: 'issueNumber',\n\t\t\t\ttype: 'number',\n\t\t\t\tdefault: 0,\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['edit'],\n\t\t\t\t\t\tresource: ['issue'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The number of the issue edit',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Edit Fields',\n\t\t\t\tname: 'editFields',\n\t\t\t\ttype: 'collection',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tmultipleValueButtonText: 'Add Field',\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['edit'],\n\t\t\t\t\t\tresource: ['issue'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: {},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Title',\n\t\t\t\t\t\tname: 'title',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'The title of the issue',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Body',\n\t\t\t\t\t\tname: 'description',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\trows: 5,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'The body of the issue',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'State',\n\t\t\t\t\t\tname: 'state',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Closed',\n\t\t\t\t\t\t\t\tvalue: 'closed',\n\t\t\t\t\t\t\t\tdescription: 'Set the state to \"closed\"',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Open',\n\t\t\t\t\t\t\t\tvalue: 'open',\n\t\t\t\t\t\t\t\tdescription: 'Set the state to \"open\"',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: 'open',\n\t\t\t\t\t\tdescription: 'The state to set',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Labels',\n\t\t\t\t\t\tname: 'labels',\n\t\t\t\t\t\ttype: 'collection',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tmultipleValues: true,\n\t\t\t\t\t\t\tmultipleValueButtonText: 'Add Label',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefault: { label: '' },\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Label',\n\t\t\t\t\t\t\t\tname: 'label',\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\tdescription: 'Label to add to issue',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Assignees',\n\t\t\t\t\t\tname: 'assignee_ids',\n\t\t\t\t\t\ttype: 'collection',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tmultipleValues: true,\n\t\t\t\t\t\t\tmultipleValueButtonText: 'Add Assignee',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefault: { assignee: '' },\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Assignees',\n\t\t\t\t\t\t\t\tname: 'assignee',\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\tdescription: 'User to assign issue too',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Due Date',\n\t\t\t\t\t\tname: 'due_date',\n\t\t\t\t\t\ttype: 'dateTime',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Due Date for issue',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         issue:get\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Issue Number',\n\t\t\t\tname: 'issueNumber',\n\t\t\t\ttype: 'number',\n\t\t\t\tdefault: 0,\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['get'],\n\t\t\t\t\t\tresource: ['issue'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The number of the issue get data of',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         issue:lock\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Issue Number',\n\t\t\t\tname: 'issueNumber',\n\t\t\t\ttype: 'number',\n\t\t\t\tdefault: 0,\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['lock'],\n\t\t\t\t\t\tresource: ['issue'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The number of the issue to lock',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Lock Reason',\n\t\t\t\tname: 'lockReason',\n\t\t\t\ttype: 'options',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['lock'],\n\t\t\t\t\t\tresource: ['issue'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Off-Topic',\n\t\t\t\t\t\tvalue: 'off-topic',\n\t\t\t\t\t\tdescription: 'The issue is Off-Topic',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Too Heated',\n\t\t\t\t\t\tvalue: 'too heated',\n\t\t\t\t\t\tdescription: 'The discussion is too heated',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Resolved',\n\t\t\t\t\t\tvalue: 'resolved',\n\t\t\t\t\t\tdescription: 'The issue got resolved',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Spam',\n\t\t\t\t\t\tvalue: 'spam',\n\t\t\t\t\t\tdescription: 'The issue is spam',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'resolved',\n\t\t\t\tdescription: 'The reason to lock the issue',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         release\n\t\t\t// ----------------------------------\n\n\t\t\t// ----------------------------------\n\t\t\t//         release:create\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Tag',\n\t\t\t\tname: 'releaseTag',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t\tresource: ['release'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The tag of the release',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Additional Fields',\n\t\t\t\tname: 'additionalFields',\n\t\t\t\ttype: 'collection',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tmultipleValueButtonText: 'Add Field',\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t\tresource: ['release'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: {},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Name',\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'The name of the release',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Description',\n\t\t\t\t\t\tname: 'description',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\trows: 5,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'The description of the release',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Ref',\n\t\t\t\t\t\tname: 'ref',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'If Tag doesn’t exist, the release will be created from Ref. It can be a commit SHA, another tag name, or a branch name.',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         release:get/delete\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Project ID',\n\t\t\t\tname: 'projectId',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['delete', 'get'],\n\t\t\t\t\t\tresource: ['release'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The ID or URL-encoded path of the project',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Tag Name',\n\t\t\t\tname: 'tag_name',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['delete', 'get'],\n\t\t\t\t\t\tresource: ['release'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The Git tag the release is associated with',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         release:getAll\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Project ID',\n\t\t\t\tname: 'projectId',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t\tresource: ['release'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The ID or URL-encoded path of the project',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Return All',\n\t\t\t\tname: 'returnAll',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['release', 'file', 'repository'],\n\t\t\t\t\t\toperation: ['getAll', 'list', 'getIssues'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: 'Whether to return all results or only up to a given limit',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Limit',\n\t\t\t\tname: 'limit',\n\t\t\t\ttype: 'number',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['release', 'file', 'repository'],\n\t\t\t\t\t\toperation: ['getAll', 'list', 'getIssues'],\n\t\t\t\t\t\treturnAll: [false],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tminValue: 1,\n\t\t\t\t\tmaxValue: 100,\n\t\t\t\t},\n\t\t\t\tdefault: 20,\n\t\t\t\tdescription: 'Max number of results to return',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Additional Fields',\n\t\t\t\tname: 'additionalFields',\n\t\t\t\ttype: 'collection',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tmultipleValueButtonText: 'Add Field',\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t\tresource: ['release'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: {},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Order By',\n\t\t\t\t\t\tname: 'order_by',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Created At',\n\t\t\t\t\t\t\t\tvalue: 'created_at',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Released At',\n\t\t\t\t\t\t\t\tvalue: 'released_at',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: 'released_at',\n\t\t\t\t\t\tdescription: 'The field to use as order',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Sort',\n\t\t\t\t\t\tname: 'sort',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'ASC',\n\t\t\t\t\t\t\t\tvalue: 'asc',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'DESC',\n\t\t\t\t\t\t\t\tvalue: 'desc',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: 'desc',\n\t\t\t\t\t\tdescription: 'The direction of the order. .',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         release:update\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Project ID',\n\t\t\t\tname: 'projectId',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['update'],\n\t\t\t\t\t\tresource: ['release'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The ID or URL-encoded path of the project',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Tag Name',\n\t\t\t\tname: 'tag_name',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['update'],\n\t\t\t\t\t\tresource: ['release'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The Git tag the release is associated with',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Additional Fields',\n\t\t\t\tname: 'additionalFields',\n\t\t\t\ttype: 'collection',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tmultipleValueButtonText: 'Add Field',\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['update'],\n\t\t\t\t\t\tresource: ['release'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: {},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Name',\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'The release name',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Description',\n\t\t\t\t\t\tname: 'description',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'The description of the release. You can use Markdown.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Milestones',\n\t\t\t\t\t\tname: 'milestones',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'The title of each milestone to associate with the release (provide a titles list spearated with comma)',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Released At',\n\t\t\t\t\t\tname: 'released_at',\n\t\t\t\t\t\ttype: 'dateTime',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'The date when the release is/was ready',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t// ----------------------------------\n\t\t\t//         repository\n\t\t\t// ----------------------------------\n\n\t\t\t// ----------------------------------\n\t\t\t//         repository:getIssues\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Filters',\n\t\t\t\tname: 'getRepositoryIssuesFilters',\n\t\t\t\ttype: 'collection',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tmultipleValueButtonText: 'Add Filter',\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['getIssues'],\n\t\t\t\t\t\tresource: ['repository'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: {},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Assignee',\n\t\t\t\t\t\tname: 'assignee_username',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Return only issues which are assigned to a specific user',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Creator',\n\t\t\t\t\t\tname: 'author_username',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Return only issues which were created by a specific user',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Search',\n\t\t\t\t\t\tname: 'search',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Search issues against their title and description',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Labels',\n\t\t\t\t\t\tname: 'labels',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Return only issues with the given labels. Multiple lables can be separated by comma.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Updated After',\n\t\t\t\t\t\tname: 'updated_after',\n\t\t\t\t\t\ttype: 'dateTime',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Return only issues updated at or after this time',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'State',\n\t\t\t\t\t\tname: 'state',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'All',\n\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\tdescription: 'Returns issues with any state',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Closed',\n\t\t\t\t\t\t\t\tvalue: 'closed',\n\t\t\t\t\t\t\t\tdescription: 'Return issues with \"closed\" state',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Open',\n\t\t\t\t\t\t\t\tvalue: 'opened',\n\t\t\t\t\t\t\t\tdescription: 'Return issues with \"open\" state',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: 'opened',\n\t\t\t\t\t\tdescription: 'The state to filter by',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Sort',\n\t\t\t\t\t\tname: 'order_by',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Created At',\n\t\t\t\t\t\t\t\tvalue: 'created_at',\n\t\t\t\t\t\t\t\tdescription: 'Sort by created date',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Updated At',\n\t\t\t\t\t\t\t\tvalue: 'updated_at',\n\t\t\t\t\t\t\t\tdescription: 'Sort by updated date',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Priority',\n\t\t\t\t\t\t\t\tvalue: 'priority',\n\t\t\t\t\t\t\t\tdescription: 'Sort by priority',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: 'created_at',\n\t\t\t\t\t\tdescription: 'The order the issues should be returned in',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Direction',\n\t\t\t\t\t\tname: 'sort',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Ascending',\n\t\t\t\t\t\t\t\tvalue: 'asc',\n\t\t\t\t\t\t\t\tdescription: 'Sort in ascending order',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Descending',\n\t\t\t\t\t\t\t\tvalue: 'desc',\n\t\t\t\t\t\t\t\tdescription: 'Sort in descending order',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: 'desc',\n\t\t\t\t\t\tdescription: 'The sort order',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t// ----------------------------------\n\t\t\t//         file\n\t\t\t// ----------------------------------\n\n\t\t\t// ----------------------------------\n\t\t\t//         file:create/delete/edit/get\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'File Path',\n\t\t\t\tname: 'filePath',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['file'],\n\t\t\t\t\t},\n\t\t\t\t\thide: {\n\t\t\t\t\t\toperation: ['list'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplaceholder: 'docs/README.md',\n\t\t\t\tdescription:\n\t\t\t\t\t'The file path of the file. Has to contain the full path or leave it empty for root folder.',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         file:list\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Path',\n\t\t\t\tname: 'filePath',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['file'],\n\t\t\t\t\t\toperation: ['list'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplaceholder: 'docs/',\n\t\t\t\tdescription: 'The path of the folder to list',\n\t\t\t},\n\n\t\t\t{\n\t\t\t\tdisplayName: 'Page',\n\t\t\t\tname: 'page',\n\t\t\t\ttype: 'number',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['file'],\n\t\t\t\t\t\toperation: ['list'],\n\t\t\t\t\t\treturnAll: [false],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tminValue: 1,\n\t\t\t\t\tmaxValue: 1000,\n\t\t\t\t},\n\t\t\t\tdefault: 1,\n\t\t\t\tdescription: 'Page of results to display',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Additional Parameters',\n\t\t\t\tname: 'additionalParameters',\n\t\t\t\tplaceholder: 'Add Parameter',\n\t\t\t\tdescription: 'Additional fields to add',\n\t\t\t\ttype: 'collection',\n\t\t\t\tdefault: {},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['file'],\n\t\t\t\t\t\toperation: ['list'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Reference',\n\t\t\t\t\t\tname: 'ref',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tplaceholder: 'main',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'The name of the commit/branch/tag. Default: the repository’s default branch (usually main).',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Recursive',\n\t\t\t\t\t\tname: 'recursive',\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\tdescription: 'Whether or not to get a recursive file tree. Default is false.',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         file:get\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'As Binary Property',\n\t\t\t\tname: 'asBinaryProperty',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['get'],\n\t\t\t\t\t\tresource: ['file'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription:\n\t\t\t\t\t'Whether to set the data of the file as binary property instead of returning the raw API response',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Put Output File in Field',\n\t\t\t\tname: 'binaryPropertyName',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: 'data',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tasBinaryProperty: [true],\n\t\t\t\t\t\toperation: ['get'],\n\t\t\t\t\t\tresource: ['file'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplaceholder: '',\n\t\t\t\thint: 'The name of the output binary field to put the file in',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Additional Parameters',\n\t\t\t\tname: 'additionalParameters',\n\t\t\t\tplaceholder: 'Add Parameter',\n\t\t\t\tdescription: 'Additional fields to add',\n\t\t\t\ttype: 'collection',\n\t\t\t\tdefault: {},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['get'],\n\t\t\t\t\t\tresource: ['file'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Reference',\n\t\t\t\t\t\tname: 'reference',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tplaceholder: 'main',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'The name of the commit/branch/tag. Default: the repository’s default branch (usually main).',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         file:create/edit\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Binary File',\n\t\t\t\tname: 'binaryData',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['create', 'edit'],\n\t\t\t\t\t\tresource: ['file'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'Whether the data to upload should be taken from binary field',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'File Content',\n\t\t\t\tname: 'fileContent',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tbinaryData: [false],\n\t\t\t\t\t\toperation: ['create', 'edit'],\n\t\t\t\t\t\tresource: ['file'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplaceholder: '',\n\t\t\t\tdescription: 'The text content of the file',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Input Binary Field',\n\t\t\t\tname: 'binaryPropertyName',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: 'data',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tbinaryData: [true],\n\t\t\t\t\t\toperation: ['create', 'edit'],\n\t\t\t\t\t\tresource: ['file'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplaceholder: '',\n\t\t\t\thint: 'The name of the input binary field containing the file to be written',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Commit Message',\n\t\t\t\tname: 'commitMessage',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['create', 'delete', 'edit'],\n\t\t\t\t\t\tresource: ['file'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Branch',\n\t\t\t\tname: 'branch',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tdescription: 'Name of the new branch to create. The commit is added to this branch.',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['create', 'delete', 'edit'],\n\t\t\t\t\t\tresource: ['file'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Additional Parameters',\n\t\t\t\tname: 'additionalParameters',\n\t\t\t\tplaceholder: 'Add Parameter',\n\t\t\t\tdescription: 'Additional fields to add',\n\t\t\t\ttype: 'fixedCollection',\n\t\t\t\tdefault: {},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['create', 'delete', 'edit'],\n\t\t\t\t\t\tresource: ['file'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Start Branch',\n\t\t\t\t\t\tname: 'branchStart',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Start Branch',\n\t\t\t\t\t\t\t\tname: 'branchStart',\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\tdescription: 'Name of the base branch to create the new branch from',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'author',\n\t\t\t\t\t\tdisplayName: 'Author',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Name',\n\t\t\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\tdescription: 'The name of the author of the commit',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Email',\n\t\t\t\t\t\t\t\tname: 'email',\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tplaceholder: 'name@email.com',\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\tdescription: 'The email of the author of the commit',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'encoding',\n\t\t\t\t\t\tdisplayName: 'Encoding',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Encoding',\n\t\t\t\t\t\t\t\tname: 'encoding',\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdefault: 'text',\n\t\t\t\t\t\t\t\tdescription: 'Change encoding to base64. Default is text.',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\n\t\t// let _credentials;\n\n\t\t// const authenticationMethod = this.getNodeParameter('authentication', 0);\n\n\t\t// try {\n\t\t// \tif (authenticationMethod === 'accessToken') {\n\t\t// \t\t_credentials = await this.getCredentials('gitlabApi');\n\t\t// \t} else {\n\t\t// \t\t_credentials = await this.getCredentials('gitlabOAuth2Api');\n\t\t// \t}\n\t\t// } catch (error) {\n\t\t// \tif (this.continueOnFail()) {\n\t\t// \t\treturn [this.helpers.returnJsonArray([{ error: error.message }])];\n\t\t// \t}\n\t\t// \tthrow new NodeOperationError(this.getNode(), error as Error);\n\t\t// }\n\n\t\t// Operations which overwrite the returned data\n\t\tconst overwriteDataOperations = [\n\t\t\t'file:get',\n\t\t\t'file:create',\n\t\t\t'file:edit',\n\t\t\t'file:delete',\n\t\t\t'issue:create',\n\t\t\t'issue:createComment',\n\t\t\t'issue:edit',\n\t\t\t'issue:get',\n\t\t\t'release:create',\n\t\t\t'release:delete',\n\t\t\t'release:get',\n\t\t\t'release:update',\n\t\t\t'repository:get',\n\t\t];\n\t\t// Operations which overwrite the returned data and return arrays\n\t\t// and has so to be merged with the data of other items\n\t\tconst overwriteDataOperationsArray = [\n\t\t\t'file:list',\n\t\t\t'release:getAll',\n\t\t\t'repository:getIssues',\n\t\t\t'user:getRepositories',\n\t\t];\n\n\t\tlet responseData;\n\t\t// For Post\n\t\tlet body: IDataObject;\n\t\t// For Query string\n\t\tlet qs: IDataObject;\n\n\t\tlet requestMethod: IHttpRequestMethods;\n\t\tlet endpoint: string;\n\t\tlet returnAll = false;\n\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst fullOperation = `${resource}:${operation}`;\n\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\ttry {\n\t\t\t\t// Reset all values\n\t\t\t\trequestMethod = 'GET';\n\t\t\t\tendpoint = '';\n\t\t\t\tbody = {};\n\t\t\t\tqs = {};\n\n\t\t\t\t// Request the parameters which almost all operations need\n\t\t\t\tlet owner = this.getNodeParameter('owner', i) as string;\n\n\t\t\t\t// Replace all slashes to work with subgroups\n\t\t\t\towner = owner.replace(new RegExp(/\\//g), '%2F');\n\n\t\t\t\tlet repository = '';\n\t\t\t\tif (fullOperation !== 'user:getRepositories') {\n\t\t\t\t\trepository = this.getNodeParameter('repository', i) as string;\n\t\t\t\t}\n\n\t\t\t\tconst baseEndpoint = `/projects/${owner}%2F${repository}`;\n\n\t\t\t\tif (resource === 'issue') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         create\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'POST';\n\n\t\t\t\t\t\tbody.title = this.getNodeParameter('title', i) as string;\n\t\t\t\t\t\tbody.description = this.getNodeParameter('body', i) as string;\n\t\t\t\t\t\tbody.due_date = this.getNodeParameter('due_date', i) as string;\n\t\t\t\t\t\tconst labels = this.getNodeParameter('labels', i) as IDataObject[];\n\n\t\t\t\t\t\tconst assigneeIds = this.getNodeParameter('assignee_ids', i) as IDataObject[];\n\n\t\t\t\t\t\tbody.labels = labels.map((data) => data.label).join(',');\n\t\t\t\t\t\tbody.assignee_ids = assigneeIds.map((data) => data.assignee);\n\n\t\t\t\t\t\tendpoint = `${baseEndpoint}/issues`;\n\t\t\t\t\t} else if (operation === 'createComment') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         createComment\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\trequestMethod = 'POST';\n\n\t\t\t\t\t\tconst issueNumber = this.getNodeParameter('issueNumber', i) as string;\n\n\t\t\t\t\t\tbody.body = this.getNodeParameter('body', i) as string;\n\n\t\t\t\t\t\tendpoint = `${baseEndpoint}/issues/${issueNumber}/notes`;\n\t\t\t\t\t} else if (operation === 'edit') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         edit\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'PUT';\n\n\t\t\t\t\t\tconst issueNumber = this.getNodeParameter('issueNumber', i) as string;\n\n\t\t\t\t\t\tbody = this.getNodeParameter('editFields', i, {}) as IDataObject;\n\n\t\t\t\t\t\tif (body.labels !== undefined) {\n\t\t\t\t\t\t\tbody.labels = (body.labels as IDataObject[]).map((data) => data.label).join(',');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (body.assignee_ids !== undefined) {\n\t\t\t\t\t\t\tbody.assignee_ids = (body.assignee_ids as IDataObject[]).map((data) => data.assignee);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tendpoint = `${baseEndpoint}/issues/${issueNumber}`;\n\t\t\t\t\t} else if (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         get\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tconst issueNumber = this.getNodeParameter('issueNumber', i) as string;\n\n\t\t\t\t\t\tendpoint = `${baseEndpoint}/issues/${issueNumber}`;\n\t\t\t\t\t} else if (operation === 'lock') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         lock\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'PUT';\n\n\t\t\t\t\t\tconst issueNumber = this.getNodeParameter('issueNumber', i) as string;\n\n\t\t\t\t\t\tbody.discussion_locked = true;\n\n\t\t\t\t\t\tendpoint = `${baseEndpoint}/issues/${issueNumber}`;\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'release') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         create\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'POST';\n\n\t\t\t\t\t\tbody = this.getNodeParameter('additionalFields', i, {});\n\n\t\t\t\t\t\tbody.tag_name = this.getNodeParameter('releaseTag', i) as string;\n\n\t\t\t\t\t\tendpoint = `${baseEndpoint}/releases`;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         delete\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'DELETE';\n\n\t\t\t\t\t\tconst id = this.getNodeParameter('projectId', i) as string;\n\n\t\t\t\t\t\tconst tagName = this.getNodeParameter('tag_name', i) as string;\n\n\t\t\t\t\t\tendpoint = `/projects/${id}/releases/${tagName}`;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         get\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tconst id = this.getNodeParameter('projectId', i) as string;\n\n\t\t\t\t\t\tconst tagName = this.getNodeParameter('tag_name', i) as string;\n\n\t\t\t\t\t\tendpoint = `/projects/${id}/releases/${tagName}`;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         getAll\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tconst id = this.getNodeParameter('projectId', i) as string;\n\n\t\t\t\t\t\tqs = this.getNodeParameter('additionalFields', i, {});\n\n\t\t\t\t\t\treturnAll = this.getNodeParameter('returnAll', 0);\n\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tqs.per_page = this.getNodeParameter('limit', 0);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tendpoint = `/projects/${id}/releases`;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         update\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'PUT';\n\n\t\t\t\t\t\tconst id = this.getNodeParameter('projectId', i) as string;\n\n\t\t\t\t\t\tconst tagName = this.getNodeParameter('tag_name', i) as string;\n\n\t\t\t\t\t\tbody = this.getNodeParameter('additionalFields', i, {});\n\t\t\t\t\t\tif (body.milestones) {\n\t\t\t\t\t\t\tbody.milestones = (body.milestones as string).split(',');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tendpoint = `/projects/${id}/releases/${tagName}`;\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'repository') {\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         get\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tendpoint = `${baseEndpoint}`;\n\t\t\t\t\t} else if (operation === 'getIssues') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         getIssues\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tqs = this.getNodeParameter('getRepositoryIssuesFilters', i) as IDataObject;\n\n\t\t\t\t\t\treturnAll = this.getNodeParameter('returnAll', 0);\n\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tqs.per_page = this.getNodeParameter('limit', 0);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tendpoint = `${baseEndpoint}/issues`;\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'user') {\n\t\t\t\t\tif (operation === 'getRepositories') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         getRepositories\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tendpoint = `/users/${owner}/projects`;\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'file') {\n\t\t\t\t\tif (['create', 'edit'].includes(operation)) {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         create\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = operation === 'create' ? 'POST' : 'PUT';\n\n\t\t\t\t\t\tconst filePath = this.getNodeParameter('filePath', i);\n\t\t\t\t\t\tconst additionalParameters = this.getNodeParameter(\n\t\t\t\t\t\t\t'additionalParameters',\n\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t) as IDataObject;\n\n\t\t\t\t\t\tbody.branch = this.getNodeParameter('branch', i) as string;\n\t\t\t\t\t\tbody.commit_message = this.getNodeParameter('commitMessage', i) as string;\n\n\t\t\t\t\t\tif (additionalParameters.author) {\n\t\t\t\t\t\t\tconst author = additionalParameters.author as IDataObject;\n\t\t\t\t\t\t\tif (author.name) {\n\t\t\t\t\t\t\t\tbody.author_name = author.name;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (author.email) {\n\t\t\t\t\t\t\t\tbody.author_email = author.email;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tadditionalParameters.branchStart &&\n\t\t\t\t\t\t\t(additionalParameters.branchStart as IDataObject).branchStart\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tbody.start_branch = (additionalParameters.branchStart as IDataObject).branchStart;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this.getNodeParameter('binaryData', i)) {\n\t\t\t\t\t\t\t// Currently internally n8n uses base64 and also GitLab expects it base64 encoded.\n\t\t\t\t\t\t\t// If that ever changes the data has to get converted here.\n\t\t\t\t\t\t\tconst binaryPropertyName = this.getNodeParameter('binaryPropertyName', i);\n\t\t\t\t\t\t\tconst binaryData = this.helpers.assertBinaryData(i, binaryPropertyName);\n\t\t\t\t\t\t\t// TODO: Does this work with filesystem mode\n\t\t\t\t\t\t\tbody.content = binaryData.data;\n\t\t\t\t\t\t\tbody.encoding = 'base64';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Is text file\n\t\t\t\t\t\t\tif (additionalParameters.encoding === 'base64') {\n\t\t\t\t\t\t\t\tbody.content = Buffer.from(\n\t\t\t\t\t\t\t\t\tthis.getNodeParameter('fileContent', i) as string,\n\t\t\t\t\t\t\t\t).toString('base64');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbody.content = this.getNodeParameter('fileContent', i) as string;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tendpoint = `${baseEndpoint}/repository/files/${encodeURIComponent(filePath)}`;\n\t\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         delete\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'DELETE';\n\n\t\t\t\t\t\tconst additionalParameters = this.getNodeParameter(\n\t\t\t\t\t\t\t'additionalParameters',\n\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t) as IDataObject;\n\t\t\t\t\t\tif (additionalParameters.author) {\n\t\t\t\t\t\t\tconst author = additionalParameters.author as IDataObject;\n\t\t\t\t\t\t\tif (author.name) {\n\t\t\t\t\t\t\t\tbody.author_name = author.name;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (author.email) {\n\t\t\t\t\t\t\t\tbody.author_email = author.email;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbody.branch = this.getNodeParameter('branch', i) as string;\n\t\t\t\t\t\tbody.commit_message = this.getNodeParameter('commitMessage', i) as string;\n\n\t\t\t\t\t\tconst filePath = this.getNodeParameter('filePath', i);\n\n\t\t\t\t\t\tendpoint = `${baseEndpoint}/repository/files/${encodeURIComponent(filePath)}`;\n\t\t\t\t\t} else if (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         get\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tconst filePath = this.getNodeParameter('filePath', i);\n\t\t\t\t\t\tconst additionalParameters = this.getNodeParameter(\n\t\t\t\t\t\t\t'additionalParameters',\n\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t) as IDataObject;\n\n\t\t\t\t\t\tif (additionalParameters.reference) {\n\t\t\t\t\t\t\tqs.ref = additionalParameters.reference;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.ref = 'master';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tendpoint = `${baseEndpoint}/repository/files/${encodeURIComponent(filePath)}`;\n\t\t\t\t\t} else if (operation === 'list') {\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tconst filePath = this.getNodeParameter('filePath', i);\n\n\t\t\t\t\t\tqs = this.getNodeParameter('additionalParameters', i, {}) as IDataObject;\n\t\t\t\t\t\treturnAll = this.getNodeParameter('returnAll', i);\n\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tqs.per_page = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tqs.page = this.getNodeParameter('page', i);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (filePath) {\n\t\t\t\t\t\t\tqs.path = filePath;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tendpoint = `${baseEndpoint}/repository/tree`;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new NodeOperationError(this.getNode(), `The resource \"${resource}\" is not known!`, {\n\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tconst asBinaryProperty = this.getNodeParameter('asBinaryProperty', i, false) as boolean;\n\t\t\t\tif (returnAll) {\n\t\t\t\t\tresponseData = await gitlabApiRequestAllItems.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\trequestMethod,\n\t\t\t\t\t\tendpoint,\n\t\t\t\t\t\tbody,\n\t\t\t\t\t\tqs,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tresponseData = await gitlabApiRequest.call(this, requestMethod, endpoint, body, qs);\n\t\t\t\t}\n\n\t\t\t\tif (fullOperation === 'file:get' && asBinaryProperty) {\n\t\t\t\t\tif (Array.isArray(responseData) && responseData.length > 1) {\n\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'File Path is a folder, not a file.', {\n\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t// Add the returned data to the item as binary property\n\t\t\t\t\tconst binaryPropertyName = this.getNodeParameter('binaryPropertyName', i);\n\n\t\t\t\t\tconst newItem: INodeExecutionData = {\n\t\t\t\t\t\tjson: items[i].json,\n\t\t\t\t\t\tbinary: {},\n\t\t\t\t\t};\n\n\t\t\t\t\tif (items[i].binary !== undefined) {\n\t\t\t\t\t\t// Create a shallow copy of the binary data so that the old\n\t\t\t\t\t\t// data references which do not get changed still stay behind\n\t\t\t\t\t\t// but the incoming data does not get changed.\n\t\t\t\t\t\tObject.assign(newItem.binary as object, items[i].binary!);\n\t\t\t\t\t}\n\t\t\t\t\tconst { content, path } = responseData;\n\t\t\t\t\tnewItem.binary![binaryPropertyName] = await this.helpers.prepareBinaryData(\n\t\t\t\t\t\tBuffer.from(content as string, 'base64'),\n\t\t\t\t\t\tpath as string,\n\t\t\t\t\t);\n\n\t\t\t\t\titems[i] = newItem;\n\n\t\t\t\t\treturn [items];\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\toverwriteDataOperations.includes(fullOperation) ||\n\t\t\t\t\toverwriteDataOperationsArray.includes(fullOperation)\n\t\t\t\t) {\n\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tif (\n\t\t\t\t\t\toverwriteDataOperations.includes(fullOperation) ||\n\t\t\t\t\t\toverwriteDataOperationsArray.includes(fullOperation)\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\t} else {\n\t\t\t\t\t\titems[i].json = { error: error.message };\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\toverwriteDataOperations.includes(fullOperation) ||\n\t\t\toverwriteDataOperationsArray.includes(fullOperation)\n\t\t) {\n\t\t\t// Return data gets replaced\n\t\t\treturn [returnData];\n\t\t} else {\n\t\t\t// For all other ones simply return the unchanged items\n\t\t\treturn [items];\n\t\t}\n\t}\n}\n"],"mappings":"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","names":[]}