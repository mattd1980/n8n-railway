{"version":3,"sources":["../../../nodes/Dropcontact/Dropcontact.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeApiError } from 'n8n-workflow';\n\nimport { dropcontactApiRequest, mapPairedItemsFrom } from './GenericFunction';\n\nexport class Dropcontact implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Dropcontact',\n\t\tname: 'dropcontact',\n\t\ticon: 'file:dropcontact.svg',\n\t\tgroup: ['transform'],\n\t\tversion: 1,\n\t\tdescription: 'Find B2B emails and enrich contacts',\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdefaults: {\n\t\t\tname: 'Dropcontact',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'dropcontactApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Contact',\n\t\t\t\t\t\tvalue: 'contact',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'contact',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Enrich',\n\t\t\t\t\t\tvalue: 'enrich',\n\t\t\t\t\t\tdescription: 'Find B2B emails and enrich your contact from his name and his website',\n\t\t\t\t\t\taction: 'Find B2B emails',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Fetch Request',\n\t\t\t\t\t\tvalue: 'fetchRequest',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'enrich',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Request ID',\n\t\t\t\tname: 'requestId',\n\t\t\t\ttype: 'string',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['contact'],\n\t\t\t\t\t\toperation: ['fetchRequest'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Email',\n\t\t\t\tname: 'email',\n\t\t\t\ttype: 'string',\n\t\t\t\tplaceholder: 'name@email.com',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['contact'],\n\t\t\t\t\t\toperation: ['enrich'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Simplify Output (Faster)',\n\t\t\t\tname: 'simplify',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['contact'],\n\t\t\t\t\t\toperation: ['enrich'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: false,\n\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-description-boolean-without-whether\n\t\t\t\tdescription:\n\t\t\t\t\t'When off, waits for the contact data before completing. Waiting time can be adjusted with Extend Wait Time option. When on, returns a request_id that can be used later in the Fetch Request operation.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Additional Fields',\n\t\t\t\tname: 'additionalFields',\n\t\t\t\ttype: 'collection',\n\t\t\t\tplaceholder: 'Add Field',\n\t\t\t\tdefault: {},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['contact'],\n\t\t\t\t\t\toperation: ['enrich'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Company SIREN Number',\n\t\t\t\t\t\tname: 'num_siren',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Company SIRET Code',\n\t\t\t\t\t\tname: 'siret',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Company Name',\n\t\t\t\t\t\tname: 'company',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Country',\n\t\t\t\t\t\tname: 'country',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'First Name',\n\t\t\t\t\t\tname: 'first_name',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Full Name',\n\t\t\t\t\t\tname: 'full_name',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Last Name',\n\t\t\t\t\t\tname: 'last_name',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'LinkedIn Profile',\n\t\t\t\t\t\tname: 'linkedin',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Phone Number',\n\t\t\t\t\t\tname: 'phone',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Website',\n\t\t\t\t\t\tname: 'website',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Options',\n\t\t\t\tname: 'options',\n\t\t\t\ttype: 'collection',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['contact'],\n\t\t\t\t\t\toperation: ['enrich'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplaceholder: 'Add option',\n\t\t\t\tdefault: {},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Data Fetch Wait Time',\n\t\t\t\t\t\tname: 'waitTime',\n\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tminValue: 1,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\t\t'/simplify': [false],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefault: 45,\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'When not simplifying the response, data will be fetched in two steps. This parameter controls how long to wait (in seconds) before trying the second step.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'French Company Enrich',\n\t\t\t\t\t\tname: 'siren',\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Whether you want the <a href=\"https://en.wikipedia.org/wiki/SIREN_code\" target=\"_blank\">SIREN number</a>, NAF code, TVA number, company address and informations about the company leader. Only applies to french companies.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Language',\n\t\t\t\t\t\tname: 'language',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'English',\n\t\t\t\t\t\t\t\tvalue: 'en',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'French',\n\t\t\t\t\t\t\t\tvalue: 'fr',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: 'en',\n\t\t\t\t\t\tdescription: 'Whether the response is in English or French',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst entryData = this.getInputData();\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\tlet responseData: any;\n\t\tconst returnData: INodeExecutionData[] = [];\n\n\t\tif (resource === 'contact') {\n\t\t\tif (operation === 'enrich') {\n\t\t\t\tconst options = this.getNodeParameter('options', 0);\n\t\t\t\tconst data = [];\n\t\t\t\tconst simplify = this.getNodeParameter('simplify', 0) as boolean;\n\n\t\t\t\tconst siren = options.siren === true ? true : false;\n\t\t\t\tconst language = options.language ? options.language : 'en';\n\n\t\t\t\tfor (let i = 0; i < entryData.length; i++) {\n\t\t\t\t\tconst email = this.getNodeParameter('email', i) as string;\n\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\tconst body: IDataObject = {};\n\t\t\t\t\tif (email !== '') {\n\t\t\t\t\t\tbody.email = email;\n\t\t\t\t\t}\n\t\t\t\t\tObject.assign(body, additionalFields);\n\t\t\t\t\tdata.push(body);\n\t\t\t\t}\n\n\t\t\t\tresponseData = (await dropcontactApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'POST',\n\t\t\t\t\t'/batch',\n\t\t\t\t\t{ data, siren, language },\n\t\t\t\t\t{},\n\t\t\t\t)) as { request_id: string; error: string; success: boolean };\n\n\t\t\t\tif (!responseData.success) {\n\t\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: responseData.reason || 'invalid request' }),\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\titemData: mapPairedItemsFrom(entryData),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new NodeApiError(this.getNode(), {\n\t\t\t\t\t\t\terror: responseData.reason || 'invalid request',\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!simplify) {\n\t\t\t\t\tconst waitTime = this.getNodeParameter('options.waitTime', 0, 45) as number;\n\n\t\t\t\t\tconst delay = async (ms: any) => await new Promise((res) => setTimeout(res, ms * 1000));\n\t\t\t\t\tawait delay(waitTime);\n\t\t\t\t\tresponseData = await dropcontactApiRequest.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t`/batch/${responseData.request_id}`,\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{},\n\t\t\t\t\t);\n\t\t\t\t\tif (!responseData.success) {\n\t\t\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: responseData.reason }),\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\titemData: mapPairedItemsFrom(entryData),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new NodeApiError(this.getNode(), {\n\t\t\t\t\t\t\t\terror: responseData.reason,\n\t\t\t\t\t\t\t\tdescription: 'Hint: Increase the Wait Time to avoid this error',\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresponseData.data.forEach((d: IDataObject, index: number) => {\n\t\t\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\t\tthis.helpers.returnJsonArray(d),\n\t\t\t\t\t\t\t\t{ itemData: { item: index } },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\titemData: mapPairedItemsFrom(entryData),\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (operation === 'fetchRequest') {\n\t\t\t\tfor (let i = 0; i < entryData.length; i++) {\n\t\t\t\t\tconst requestId = this.getNodeParameter('requestId', i) as string;\n\t\t\t\t\tresponseData = (await dropcontactApiRequest.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t`/batch/${requestId}`,\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{},\n\t\t\t\t\t)) as { request_id: string; error: string; success: boolean };\n\t\t\t\t\tif (!responseData.success) {\n\t\t\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: responseData.reason || 'invalid request' }),\n\t\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new NodeApiError(this.getNode(), {\n\t\t\t\t\t\t\t\terror: responseData.reason || 'invalid request',\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray(responseData.data as IDataObject[]),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":["executionData"]}