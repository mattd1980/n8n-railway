{"version":3,"sources":["../../../nodes/Marketstack/Marketstack.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport {\n\tendOfDayDataFields,\n\tendOfDayDataOperations,\n\texchangeFields,\n\texchangeOperations,\n\ttickerFields,\n\ttickerOperations,\n} from './descriptions';\nimport {\n\tformat,\n\tmarketstackApiRequest,\n\tmarketstackApiRequestAllItems,\n\tvalidateTimeOptions,\n} from './GenericFunctions';\nimport type { EndOfDayDataFilters, Operation, Resource } from './types';\n\nexport class Marketstack implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Marketstack',\n\t\tname: 'marketstack',\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\ticon: { light: 'file:marketstack.svg', dark: 'file:marketstack.dark.svg' },\n\t\tgroup: ['transform'],\n\t\tversion: 1,\n\t\tdescription: 'Consume Marketstack API',\n\t\tdefaults: {\n\t\t\tname: 'Marketstack',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'marketstackApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'End-of-Day Data',\n\t\t\t\t\t\tvalue: 'endOfDayData',\n\t\t\t\t\t\tdescription: 'Stock market closing data',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Exchange',\n\t\t\t\t\t\tvalue: 'exchange',\n\t\t\t\t\t\tdescription: 'Stock market exchange',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Ticker',\n\t\t\t\t\t\tvalue: 'ticker',\n\t\t\t\t\t\tdescription: 'Stock market symbol',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'endOfDayData',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t\t...endOfDayDataOperations,\n\t\t\t...endOfDayDataFields,\n\t\t\t...exchangeOperations,\n\t\t\t...exchangeFields,\n\t\t\t...tickerOperations,\n\t\t\t...tickerFields,\n\t\t],\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\n\t\tconst resource = this.getNodeParameter('resource', 0) as Resource;\n\t\tconst operation = this.getNodeParameter('operation', 0) as Operation;\n\n\t\tlet responseData: any;\n\t\tconst returnData: INodeExecutionData[] = [];\n\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'endOfDayData') {\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//       endOfDayData: getAll\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst qs: IDataObject = {\n\t\t\t\t\t\t\tsymbols: this.getNodeParameter('symbols', i),\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tconst { latest, specificDate, dateFrom, dateTo, ...rest } = this.getNodeParameter(\n\t\t\t\t\t\t\t'filters',\n\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t) as EndOfDayDataFilters;\n\n\t\t\t\t\t\tvalidateTimeOptions.call(this, [\n\t\t\t\t\t\t\tlatest !== undefined && latest,\n\t\t\t\t\t\t\tspecificDate !== undefined,\n\t\t\t\t\t\t\tdateFrom !== undefined && dateTo !== undefined,\n\t\t\t\t\t\t]);\n\n\t\t\t\t\t\tif (Object.keys(rest).length) {\n\t\t\t\t\t\t\tObject.assign(qs, rest);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet endpoint: string;\n\n\t\t\t\t\t\tif (latest) {\n\t\t\t\t\t\t\tendpoint = '/eod/latest';\n\t\t\t\t\t\t} else if (specificDate) {\n\t\t\t\t\t\t\tendpoint = `/eod/${format(specificDate)}`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (!dateFrom || !dateTo) {\n\t\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t\t'Please enter a start and end date to filter by timeframe.',\n\t\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tendpoint = '/eod';\n\t\t\t\t\t\t\tqs.date_from = format(dateFrom);\n\t\t\t\t\t\t\tqs.date_to = format(dateTo);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await marketstackApiRequestAllItems.call(this, 'GET', endpoint, {}, qs);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'exchange') {\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//          exchange: get\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst exchange = this.getNodeParameter('exchange', i);\n\t\t\t\t\t\tconst endpoint = `/exchanges/${exchange}`;\n\n\t\t\t\t\t\tresponseData = await marketstackApiRequest.call(this, 'GET', endpoint);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'ticker') {\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//           ticker: get\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\tconst symbol = this.getNodeParameter('symbol', i);\n\t\t\t\t\t\tconst endpoint = `/tickers/${symbol}`;\n\n\t\t\t\t\t\tresponseData = await marketstackApiRequest.call(this, 'GET', endpoint);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t{ itemData: { item: i } },\n\t\t\t);\n\n\t\t\treturnData.push(...executionData);\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":[]}