{"version":3,"sources":["../../../nodes/Taiga/GenericFunctions.ts"],"sourcesContent":["import { createHash } from 'crypto';\nimport type {\n\tICredentialDataDecryptedObject,\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHookFunctions,\n\tILoadOptionsFunctions,\n\tIWebhookFunctions,\n\tJsonObject,\n\tIHttpRequestMethods,\n\tIRequestOptions,\n} from 'n8n-workflow';\nimport { NodeApiError, NodeOperationError } from 'n8n-workflow';\n\nexport async function getAuthorization(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions | IWebhookFunctions,\n\tcredentials?: ICredentialDataDecryptedObject,\n): Promise<string> {\n\tif (credentials === undefined) {\n\t\tthrow new NodeOperationError(this.getNode(), 'No credentials got returned!');\n\t}\n\n\tconst { password, username } = credentials;\n\tconst options: IRequestOptions = {\n\t\theaders: { 'Content-Type': 'application/json' },\n\t\tmethod: 'POST',\n\t\tbody: {\n\t\t\ttype: 'normal',\n\t\t\tpassword,\n\t\t\tusername,\n\t\t},\n\t\turi: credentials.url ? `${credentials.url}/api/v1/auth` : 'https://api.taiga.io/api/v1/auth',\n\t\tjson: true,\n\t};\n\n\ttry {\n\t\tconst response = await this.helpers.request(options);\n\n\t\treturn response.auth_token;\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\nexport async function taigaApiRequest(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions | IWebhookFunctions,\n\tmethod: IHttpRequestMethods,\n\tresource: string,\n\tbody = {},\n\tquery = {},\n\turi?: string | undefined,\n\toption = {},\n): Promise<any> {\n\tconst credentials = await this.getCredentials('taigaApi');\n\n\tconst authToken = await getAuthorization.call(this, credentials);\n\n\tconst options: IRequestOptions = {\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tauth: {\n\t\t\tbearer: authToken,\n\t\t},\n\t\tqs: query,\n\t\tmethod,\n\t\tbody,\n\t\turi:\n\t\t\turi || credentials.url\n\t\t\t\t? `${credentials.url}/api/v1${resource}`\n\t\t\t\t: `https://api.taiga.io/api/v1${resource}`,\n\t\tjson: true,\n\t};\n\n\tif (Object.keys(option).length !== 0) {\n\t\tObject.assign(options, option);\n\t}\n\n\ttry {\n\t\treturn await this.helpers.request(options);\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\nexport async function taigaApiRequestAllItems(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tresource: string,\n\n\tbody: IDataObject = {},\n\tquery: IDataObject = {},\n): Promise<any> {\n\tconst returnData: IDataObject[] = [];\n\n\tlet responseData;\n\n\tlet uri: string | undefined;\n\n\tdo {\n\t\tresponseData = await taigaApiRequest.call(this, method, resource, body, query, uri, {\n\t\t\tresolveWithFullResponse: true,\n\t\t});\n\t\treturnData.push.apply(returnData, responseData.body as IDataObject[]);\n\t\turi = responseData.headers['x-pagination-next'];\n\t\tconst limit = query.limit as number | undefined;\n\t\tif (limit && returnData.length >= limit) {\n\t\t\treturn returnData;\n\t\t}\n\t} while (\n\t\tresponseData.headers['x-pagination-next'] !== undefined &&\n\t\tresponseData.headers['x-pagination-next'] !== ''\n\t);\n\treturn returnData;\n}\n\nexport function getAutomaticSecret(credentials: ICredentialDataDecryptedObject) {\n\tconst data = `${credentials.username},${credentials.password}`;\n\treturn createHash('md5').update(data).digest('hex');\n}\n\nexport async function handleListing(\n\tthis: IExecuteFunctions,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\tbody: IDataObject,\n\tqs: IDataObject,\n\ti: number,\n) {\n\tlet responseData;\n\tqs.project = this.getNodeParameter('projectId', i) as number;\n\tconst returnAll = this.getNodeParameter('returnAll', i);\n\n\tif (returnAll) {\n\t\treturn await taigaApiRequestAllItems.call(this, method, endpoint, body, qs);\n\t} else {\n\t\tqs.limit = this.getNodeParameter('limit', i);\n\t\tresponseData = await taigaApiRequestAllItems.call(this, method, endpoint, body, qs);\n\t\treturn responseData.splice(0, qs.limit);\n\t}\n}\n\nexport const toOptions = (items: LoadedResource[]) =>\n\titems.map(({ name, id }) => ({ name, value: id }));\n\nexport function throwOnEmptyUpdate(this: IExecuteFunctions, resource: Resource) {\n\tthrow new NodeOperationError(\n\t\tthis.getNode(),\n\t\t`Please enter at least one field to update for the ${resource}.`,\n\t);\n}\n\nexport async function getVersionForUpdate(this: IExecuteFunctions, endpoint: string) {\n\treturn await taigaApiRequest.call(this, 'GET', endpoint).then((response) => response.version);\n}\n"],"mappings":"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","names":[]}