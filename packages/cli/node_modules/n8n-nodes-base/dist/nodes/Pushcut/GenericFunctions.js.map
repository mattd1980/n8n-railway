{"version":3,"sources":["../../../nodes/Pushcut/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHookFunctions,\n\tIHttpRequestMethods,\n\tILoadOptionsFunctions,\n\tIRequestOptions,\n\tJsonObject,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\nexport async function pushcutApiRequest(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions | IHookFunctions,\n\tmethod: IHttpRequestMethods,\n\tpath: string,\n\n\tbody: any = {},\n\tqs: IDataObject = {},\n\turi?: string | undefined,\n\toption = {},\n): Promise<any> {\n\tconst credentials = await this.getCredentials('pushcutApi');\n\n\tconst options: IRequestOptions = {\n\t\theaders: {\n\t\t\t'API-Key': credentials.apiKey,\n\t\t},\n\t\tmethod,\n\t\tbody,\n\t\tqs,\n\t\turi: uri || `https://api.pushcut.io/v1${path}`,\n\t\tjson: true,\n\t};\n\ttry {\n\t\tif (Object.keys(body as IDataObject).length === 0) {\n\t\t\tdelete options.body;\n\t\t}\n\t\tif (Object.keys(option).length !== 0) {\n\t\t\tObject.assign(options, option);\n\t\t}\n\t\treturn await this.helpers.request.call(this, options);\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,0BAA6B;AAE7B,eAAsB,kBAErB,QACA,MAEA,OAAY,CAAC,GACb,KAAkB,CAAC,GACnB,KACA,SAAS,CAAC,GACK;AACf,QAAM,cAAc,MAAM,KAAK,eAAe,YAAY;AAE1D,QAAM,UAA2B;AAAA,IAChC,SAAS;AAAA,MACR,WAAW,YAAY;AAAA,IACxB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,KAAK,OAAO,4BAA4B,IAAI;AAAA,IAC5C,MAAM;AAAA,EACP;AACA,MAAI;AACH,QAAI,OAAO,KAAK,IAAmB,EAAE,WAAW,GAAG;AAClD,aAAO,QAAQ;AAAA,IAChB;AACA,QAAI,OAAO,KAAK,MAAM,EAAE,WAAW,GAAG;AACrC,aAAO,OAAO,SAAS,MAAM;AAAA,IAC9B;AACA,WAAO,MAAM,KAAK,QAAQ,QAAQ,KAAK,MAAM,OAAO;AAAA,EACrD,SAAS,OAAO;AACf,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,KAAmB;AAAA,EAC3D;AACD;","names":[]}