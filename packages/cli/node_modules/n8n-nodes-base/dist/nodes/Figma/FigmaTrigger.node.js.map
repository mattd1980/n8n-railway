{"version":3,"sources":["../../../nodes/Figma/FigmaTrigger.node.ts"],"sourcesContent":["import { snakeCase } from 'change-case';\nimport { randomBytes } from 'crypto';\nimport type {\n\tIHookFunctions,\n\tIWebhookFunctions,\n\tIDataObject,\n\tINodeType,\n\tINodeTypeDescription,\n\tIWebhookResponseData,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes } from 'n8n-workflow';\n\nimport { figmaApiRequest } from './GenericFunctions';\n\nexport class FigmaTrigger implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Figma Trigger (Beta)',\n\t\tname: 'figmaTrigger',\n\t\ticon: 'file:figma.svg',\n\t\tgroup: ['trigger'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"triggerOn\"]}}',\n\t\tdescription: 'Starts the workflow when Figma events occur',\n\t\tdefaults: {\n\t\t\tname: 'Figma Trigger (Beta)',\n\t\t},\n\t\tinputs: [],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'figmaApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\twebhooks: [\n\t\t\t{\n\t\t\t\tname: 'default',\n\t\t\t\thttpMethod: 'POST',\n\t\t\t\tresponseMode: 'onReceived',\n\t\t\t\tpath: 'webhook',\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Team ID',\n\t\t\t\tname: 'teamId',\n\t\t\t\ttype: 'string',\n\t\t\t\trequired: true,\n\t\t\t\tdefault: '',\n\t\t\t\tdescription:\n\t\t\t\t\t'Trigger will monitor this Figma Team for changes. Team ID can be found in the URL of a Figma Team page when viewed in a web browser: figma.com/files/team/{TEAM-ID}/.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Trigger On',\n\t\t\t\tname: 'triggerOn',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'File Commented',\n\t\t\t\t\t\tvalue: 'fileComment',\n\t\t\t\t\t\tdescription: 'Triggers when someone comments on a file',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'File Deleted',\n\t\t\t\t\t\tvalue: 'fileDelete',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Triggers whenever a file has been deleted. Does not trigger on all files within a folder, if the folder is deleted.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'File Updated',\n\t\t\t\t\t\tvalue: 'fileUpdate',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Triggers whenever a file saves or is deleted. This occurs whenever a file is closed or within 30 seconds after changes have been made.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'File Version Updated',\n\t\t\t\t\t\tvalue: 'fileVersionUpdate',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Triggers whenever a named version is created in the version history of a file',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Library Publish',\n\t\t\t\t\t\tvalue: 'libraryPublish',\n\t\t\t\t\t\tdescription: 'Triggers whenever a library file is published',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t};\n\n\twebhookMethods = {\n\t\tdefault: {\n\t\t\tasync checkExists(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookUrl = this.getNodeWebhookUrl('default');\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tconst teamId = this.getNodeParameter('teamId') as string;\n\t\t\t\tconst triggerOn = this.getNodeParameter('triggerOn') as string;\n\t\t\t\t// Check all the webhooks which exist already if it is identical to the\n\t\t\t\t// one that is supposed to get created.\n\t\t\t\tconst { webhooks } = await figmaApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t`/v2/teams/${teamId}/webhooks`,\n\t\t\t\t);\n\t\t\t\tfor (const webhook of webhooks) {\n\t\t\t\t\tif (\n\t\t\t\t\t\twebhook.endpoint === webhookUrl &&\n\t\t\t\t\t\twebhook.team_id === teamId &&\n\t\t\t\t\t\twebhook.event_type === snakeCase(triggerOn).toUpperCase() &&\n\t\t\t\t\t\twebhook.status === 'ACTIVE'\n\t\t\t\t\t) {\n\t\t\t\t\t\twebhookData.webhookId = webhook.id as string;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tasync create(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tconst webhookUrl = this.getNodeWebhookUrl('default');\n\t\t\t\tconst triggerOn = this.getNodeParameter('triggerOn') as string;\n\t\t\t\tconst teamId = this.getNodeParameter('teamId') as string;\n\t\t\t\tconst endpoint = '/v2/webhooks';\n\n\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\tevent_type: snakeCase(triggerOn).toUpperCase(),\n\t\t\t\t\tteam_id: teamId,\n\t\t\t\t\tdescription: `n8n-webhook:${webhookUrl}`,\n\t\t\t\t\tendpoint: webhookUrl,\n\t\t\t\t\tpasscode: randomBytes(10).toString('hex'),\n\t\t\t\t};\n\n\t\t\t\tconst responseData = await figmaApiRequest.call(this, 'POST', endpoint, body);\n\n\t\t\t\tif (responseData.id === undefined) {\n\t\t\t\t\t// Required data is missing so was not successful\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\twebhookData.webhookId = responseData.id as string;\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tasync delete(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tif (webhookData.webhookId !== undefined) {\n\t\t\t\t\tconst endpoint = `/v2/webhooks/${webhookData.webhookId}`;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait figmaApiRequest.call(this, 'DELETE', endpoint);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t// Remove from the static workflow data so that it is clear\n\t\t\t\t\t// that no webhooks are registered anymore\n\t\t\t\t\tdelete webhookData.webhookId;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync webhook(this: IWebhookFunctions): Promise<IWebhookResponseData> {\n\t\tconst bodyData = this.getBodyData();\n\n\t\tif (bodyData.event_type === 'PING') {\n\t\t\tconst res = this.getResponseObject();\n\t\t\tres.status(200).end();\n\t\t\treturn {\n\t\t\t\tnoWebhookResponse: true,\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tworkflowData: [this.helpers.returnJsonArray(bodyData)],\n\t\t};\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAA0B;AAC1B,oBAA4B;AAS5B,0BAAoC;AAEpC,8BAAgC;AAEzB,MAAM,aAAkC;AAAA,EAAxC;AACN,uBAAoC;AAAA,MACnC,aAAa;AAAA,MACb,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO,CAAC,SAAS;AAAA,MACjB,SAAS;AAAA,MACT,UAAU;AAAA,MACV,aAAa;AAAA,MACb,UAAU;AAAA,QACT,MAAM;AAAA,MACP;AAAA,MACA,QAAQ,CAAC;AAAA,MACT,SAAS,CAAC,wCAAoB,IAAI;AAAA,MAClC,aAAa;AAAA,QACZ;AAAA,UACC,MAAM;AAAA,UACN,UAAU;AAAA,QACX;AAAA,MACD;AAAA,MACA,UAAU;AAAA,QACT;AAAA,UACC,MAAM;AAAA,UACN,YAAY;AAAA,UACZ,cAAc;AAAA,UACd,MAAM;AAAA,QACP;AAAA,MACD;AAAA,MACA,YAAY;AAAA,QACX;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,UAAU;AAAA,UACV,SAAS;AAAA,UACT,aACC;AAAA,QACF;AAAA,QACA;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,SAAS;AAAA,YACR;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aAAa;AAAA,YACd;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aACC;AAAA,YACF;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aACC;AAAA,YACF;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aACC;AAAA,YACF;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aAAa;AAAA,YACd;AAAA,UACD;AAAA,UACA,SAAS;AAAA,UACT,UAAU;AAAA,QACX;AAAA,MACD;AAAA,IACD;AAEA,0BAAiB;AAAA,MAChB,SAAS;AAAA,QACR,MAAM,cAAoD;AACzD,gBAAM,aAAa,KAAK,kBAAkB,SAAS;AACnD,gBAAM,cAAc,KAAK,sBAAsB,MAAM;AACrD,gBAAM,SAAS,KAAK,iBAAiB,QAAQ;AAC7C,gBAAM,YAAY,KAAK,iBAAiB,WAAW;AAGnD,gBAAM,EAAE,SAAS,IAAI,MAAM,wCAAgB;AAAA,YAC1C;AAAA,YACA;AAAA,YACA,aAAa,MAAM;AAAA,UACpB;AACA,qBAAW,WAAW,UAAU;AAC/B,gBACC,QAAQ,aAAa,cACrB,QAAQ,YAAY,UACpB,QAAQ,mBAAe,8BAAU,SAAS,EAAE,YAAY,KACxD,QAAQ,WAAW,UAClB;AACD,0BAAY,YAAY,QAAQ;AAChC,qBAAO;AAAA,YACR;AAAA,UACD;AACA,iBAAO;AAAA,QACR;AAAA,QACA,MAAM,SAA+C;AACpD,gBAAM,cAAc,KAAK,sBAAsB,MAAM;AACrD,gBAAM,aAAa,KAAK,kBAAkB,SAAS;AACnD,gBAAM,YAAY,KAAK,iBAAiB,WAAW;AACnD,gBAAM,SAAS,KAAK,iBAAiB,QAAQ;AAC7C,gBAAM,WAAW;AAEjB,gBAAM,OAAoB;AAAA,YACzB,gBAAY,8BAAU,SAAS,EAAE,YAAY;AAAA,YAC7C,SAAS;AAAA,YACT,aAAa,eAAe,UAAU;AAAA,YACtC,UAAU;AAAA,YACV,cAAU,2BAAY,EAAE,EAAE,SAAS,KAAK;AAAA,UACzC;AAEA,gBAAM,eAAe,MAAM,wCAAgB,KAAK,MAAM,QAAQ,UAAU,IAAI;AAE5E,cAAI,aAAa,OAAO,QAAW;AAElC,mBAAO;AAAA,UACR;AAEA,sBAAY,YAAY,aAAa;AACrC,iBAAO;AAAA,QACR;AAAA,QACA,MAAM,SAA+C;AACpD,gBAAM,cAAc,KAAK,sBAAsB,MAAM;AACrD,cAAI,YAAY,cAAc,QAAW;AACxC,kBAAM,WAAW,gBAAgB,YAAY,SAAS;AACtD,gBAAI;AACH,oBAAM,wCAAgB,KAAK,MAAM,UAAU,QAAQ;AAAA,YACpD,SAAS,OAAO;AACf,qBAAO;AAAA,YACR;AAGA,mBAAO,YAAY;AAAA,UACpB;AACA,iBAAO;AAAA,QACR;AAAA,MACD;AAAA,IACD;AAAA;AAAA,EAEA,MAAM,UAAgE;AACrE,UAAM,WAAW,KAAK,YAAY;AAElC,QAAI,SAAS,eAAe,QAAQ;AACnC,YAAM,MAAM,KAAK,kBAAkB;AACnC,UAAI,OAAO,GAAG,EAAE,IAAI;AACpB,aAAO;AAAA,QACN,mBAAmB;AAAA,MACpB;AAAA,IACD;AAEA,WAAO;AAAA,MACN,cAAc,CAAC,KAAK,QAAQ,gBAAgB,QAAQ,CAAC;AAAA,IACtD;AAAA,EACD;AACD;","names":[]}