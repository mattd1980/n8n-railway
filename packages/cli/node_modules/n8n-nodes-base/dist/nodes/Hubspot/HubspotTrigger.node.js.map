{"version":3,"sources":["../../../nodes/Hubspot/HubspotTrigger.node.ts"],"sourcesContent":["import { createHash } from 'crypto';\nimport type {\n\tIHookFunctions,\n\tIWebhookFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n\tIWebhookResponseData,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport { hubspotApiRequest, propertyEvents } from './V1/GenericFunctions';\n\nexport class HubspotTrigger implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'HubSpot Trigger',\n\t\tname: 'hubspotTrigger',\n\t\ticon: 'file:hubspot.svg',\n\t\tgroup: ['trigger'],\n\t\tversion: 1,\n\t\tdescription: 'Starts the workflow when HubSpot events occur',\n\t\tdefaults: {\n\t\t\tname: 'HubSpot Trigger',\n\t\t},\n\t\tinputs: [],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'hubspotDeveloperApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\twebhooks: [\n\t\t\t{\n\t\t\t\tname: 'default',\n\t\t\t\thttpMethod: 'POST',\n\t\t\t\tresponseMode: 'onReceived',\n\t\t\t\tpath: 'webhook',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'setup',\n\t\t\t\thttpMethod: 'GET',\n\t\t\t\tresponseMode: 'onReceived',\n\t\t\t\tpath: 'webhook',\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Events',\n\t\t\t\tname: 'eventsUi',\n\t\t\t\ttype: 'fixedCollection',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tmultipleValues: true,\n\t\t\t\t},\n\t\t\t\tplaceholder: 'Add Event',\n\t\t\t\tdefault: {},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Event',\n\t\t\t\t\t\tname: 'eventValues',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Name',\n\t\t\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'Company Created',\n\t\t\t\t\t\t\t\t\t\tvalue: 'company.creation',\n\t\t\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t\t\t\"To get notified if any company is created in a customer's account\",\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'Company Deleted',\n\t\t\t\t\t\t\t\t\t\tvalue: 'company.deletion',\n\t\t\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t\t\t\"To get notified if any company is deleted in a customer's account\",\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'Company Property Changed',\n\t\t\t\t\t\t\t\t\t\tvalue: 'company.propertyChange',\n\t\t\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t\t\t\"To get notified if a specified property is changed for any company in a customer's account\",\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'Contact Created',\n\t\t\t\t\t\t\t\t\t\tvalue: 'contact.creation',\n\t\t\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t\t\t\"To get notified if any contact is created in a customer's account\",\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'Contact Deleted',\n\t\t\t\t\t\t\t\t\t\tvalue: 'contact.deletion',\n\t\t\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t\t\t\"To get notified if any contact is deleted in a customer's account\",\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'Contact Privacy Deleted',\n\t\t\t\t\t\t\t\t\t\tvalue: 'contact.privacyDeletion',\n\t\t\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t\t\t'To get notified if a contact is deleted for privacy compliance reasons',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'Contact Property Changed',\n\t\t\t\t\t\t\t\t\t\tvalue: 'contact.propertyChange',\n\t\t\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t\t\t\"To get notified if a specified property is changed for any contact in a customer's account\",\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'Conversation Creation',\n\t\t\t\t\t\t\t\t\t\tvalue: 'conversation.creation',\n\t\t\t\t\t\t\t\t\t\tdescription: 'To get notified if a new thread is created in an account',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'Conversation Deletion',\n\t\t\t\t\t\t\t\t\t\tvalue: 'conversation.deletion',\n\t\t\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t\t\t'To get notified if a thread is archived or soft-deleted in an account',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'Conversation New Message',\n\t\t\t\t\t\t\t\t\t\tvalue: 'conversation.newMessage',\n\t\t\t\t\t\t\t\t\t\tdescription: 'To get notified if a new message on a thread has been received',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'Conversation Privacy Deletion',\n\t\t\t\t\t\t\t\t\t\tvalue: 'conversation.privacyDeletion',\n\t\t\t\t\t\t\t\t\t\tdescription: 'To get notified if a thread is permanently deleted in an account',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'Conversation Property Change',\n\t\t\t\t\t\t\t\t\t\tvalue: 'conversation.propertyChange',\n\t\t\t\t\t\t\t\t\t\tdescription: 'To get notified if a property on a thread has been changed',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'Deal Created',\n\t\t\t\t\t\t\t\t\t\tvalue: 'deal.creation',\n\t\t\t\t\t\t\t\t\t\tdescription: \"To get notified if any deal is created in a customer's account\",\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'Deal Deleted',\n\t\t\t\t\t\t\t\t\t\tvalue: 'deal.deletion',\n\t\t\t\t\t\t\t\t\t\tdescription: \"To get notified if any deal is deleted in a customer's account\",\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'Deal Property Changed',\n\t\t\t\t\t\t\t\t\t\tvalue: 'deal.propertyChange',\n\t\t\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t\t\t\"To get notified if a specified property is changed for any deal in a customer's account\",\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'Ticket Created',\n\t\t\t\t\t\t\t\t\t\tvalue: 'ticket.creation',\n\t\t\t\t\t\t\t\t\t\tdescription: \"To get notified if a ticket is created in a customer's account\",\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'Ticket Deleted',\n\t\t\t\t\t\t\t\t\t\tvalue: 'ticket.deletion',\n\t\t\t\t\t\t\t\t\t\tdescription: \"To get notified if any ticket is deleted in a customer's account\",\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'Ticket Property Changed',\n\t\t\t\t\t\t\t\t\t\tvalue: 'ticket.propertyChange',\n\t\t\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t\t\t\"To get notified if a specified property is changed for any ticket in a customer's account\",\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tdefault: 'contact.creation',\n\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Property Name or ID',\n\t\t\t\t\t\t\t\tname: 'property',\n\t\t\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t'Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>',\n\t\t\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\t\t\tloadOptionsDependsOn: ['contact.propertyChange'],\n\t\t\t\t\t\t\t\t\tloadOptionsMethod: 'getContactProperties',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\t\t\t\tname: ['contact.propertyChange'],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Property Name or ID',\n\t\t\t\t\t\t\t\tname: 'property',\n\t\t\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t'Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>',\n\t\t\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\t\t\tloadOptionsDependsOn: ['company.propertyChange'],\n\t\t\t\t\t\t\t\t\tloadOptionsMethod: 'getCompanyProperties',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\t\t\t\tname: ['company.propertyChange'],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Property Name or ID',\n\t\t\t\t\t\t\t\tname: 'property',\n\t\t\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t'Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>',\n\t\t\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\t\t\tloadOptionsDependsOn: ['deal.propertyChange'],\n\t\t\t\t\t\t\t\t\tloadOptionsMethod: 'getDealProperties',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\t\t\t\tname: ['deal.propertyChange'],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Additional Fields',\n\t\t\t\tname: 'additionalFields',\n\t\t\t\ttype: 'collection',\n\t\t\t\tplaceholder: 'Add Field',\n\t\t\t\tdefault: {},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Max Concurrent Requests',\n\t\t\t\t\t\tname: 'maxConcurrentRequests',\n\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tminValue: 5,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefault: 5,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get all the available contacts to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getContactProperties(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst endpoint = '/properties/v2/contacts/properties';\n\t\t\t\tconst properties = await hubspotApiRequest.call(this, 'GET', endpoint, {});\n\t\t\t\tfor (const property of properties) {\n\t\t\t\t\tconst propertyName = property.label;\n\t\t\t\t\tconst propertyId = property.name;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: propertyName,\n\t\t\t\t\t\tvalue: propertyId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the available companies to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getCompanyProperties(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst endpoint = '/properties/v2/companies/properties';\n\t\t\t\tconst properties = await hubspotApiRequest.call(this, 'GET', endpoint, {});\n\t\t\t\tfor (const property of properties) {\n\t\t\t\t\tconst propertyName = property.label;\n\t\t\t\t\tconst propertyId = property.name;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: propertyName,\n\t\t\t\t\t\tvalue: propertyId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the available deals to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getDealProperties(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst endpoint = '/properties/v2/deals/properties';\n\t\t\t\tconst properties = await hubspotApiRequest.call(this, 'GET', endpoint, {});\n\t\t\t\tfor (const property of properties) {\n\t\t\t\t\tconst propertyName = property.label;\n\t\t\t\t\tconst propertyId = property.name;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: propertyName,\n\t\t\t\t\t\tvalue: propertyId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\twebhookMethods = {\n\t\tdefault: {\n\t\t\tasync checkExists(this: IHookFunctions): Promise<boolean> {\n\t\t\t\t// Check all the webhooks which exist already if it is identical to the\n\t\t\t\t// one that is supposed to get created.\n\t\t\t\tconst currentWebhookUrl = this.getNodeWebhookUrl('default') as string;\n\t\t\t\tconst { appId } = await this.getCredentials('hubspotDeveloperApi');\n\n\t\t\t\ttry {\n\t\t\t\t\tconst { targetUrl } = await hubspotApiRequest.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t`/webhooks/v3/${appId}/settings`,\n\t\t\t\t\t\t{},\n\t\t\t\t\t);\n\t\t\t\t\tif (targetUrl !== currentWebhookUrl) {\n\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t`The APP ID ${appId} already has a target url ${targetUrl}. Delete it or use another APP ID before executing the trigger. Due to Hubspot API limitations, you can have just one trigger per APP.`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (error.statusCode === 404) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// if the app is using the current webhook url. Delete everything and create it again with the current events\n\n\t\t\t\tconst { results: subscriptions } = await hubspotApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t`/webhooks/v3/${appId}/subscriptions`,\n\t\t\t\t\t{},\n\t\t\t\t);\n\n\t\t\t\t// delete all subscriptions\n\t\t\t\tfor (const subscription of subscriptions) {\n\t\t\t\t\tawait hubspotApiRequest.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t`/webhooks/v3/${appId}/subscriptions/${subscription.id}`,\n\t\t\t\t\t\t{},\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tawait hubspotApiRequest.call(this, 'DELETE', `/webhooks/v3/${appId}/settings`, {});\n\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tasync create(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookUrl = this.getNodeWebhookUrl('default');\n\t\t\t\tconst { appId } = await this.getCredentials('hubspotDeveloperApi');\n\t\t\t\tconst events =\n\t\t\t\t\t((this.getNodeParameter('eventsUi') as IDataObject)?.eventValues as IDataObject[]) || [];\n\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields') as IDataObject;\n\t\t\t\tlet endpoint = `/webhooks/v3/${appId}/settings`;\n\t\t\t\tlet body: IDataObject = {\n\t\t\t\t\ttargetUrl: webhookUrl,\n\t\t\t\t\tmaxConcurrentRequests: additionalFields.maxConcurrentRequests || 5,\n\t\t\t\t};\n\n\t\t\t\tawait hubspotApiRequest.call(this, 'PUT', endpoint, body);\n\n\t\t\t\tendpoint = `/webhooks/v3/${appId}/subscriptions`;\n\n\t\t\t\tif (Array.isArray(events) && events.length === 0) {\n\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'You must define at least one event');\n\t\t\t\t}\n\n\t\t\t\tfor (const event of events) {\n\t\t\t\t\tbody = {\n\t\t\t\t\t\teventType: event.name,\n\t\t\t\t\t\tactive: true,\n\t\t\t\t\t};\n\t\t\t\t\tif (propertyEvents.includes(event.name as string)) {\n\t\t\t\t\t\tconst property = event.property;\n\t\t\t\t\t\tbody.propertyName = property;\n\t\t\t\t\t}\n\t\t\t\t\tawait hubspotApiRequest.call(this, 'POST', endpoint, body);\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tasync delete(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst { appId } = await this.getCredentials('hubspotDeveloperApi');\n\n\t\t\t\tconst { results: subscriptions } = await hubspotApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t`/webhooks/v3/${appId}/subscriptions`,\n\t\t\t\t\t{},\n\t\t\t\t);\n\n\t\t\t\tfor (const subscription of subscriptions) {\n\t\t\t\t\tawait hubspotApiRequest.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t`/webhooks/v3/${appId}/subscriptions/${subscription.id}`,\n\t\t\t\t\t\t{},\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tawait hubspotApiRequest.call(this, 'DELETE', `/webhooks/v3/${appId}/settings`, {});\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync webhook(this: IWebhookFunctions): Promise<IWebhookResponseData> {\n\t\tconst credentials = await this.getCredentials('hubspotDeveloperApi');\n\n\t\tif (credentials === undefined) {\n\t\t\tthrow new NodeOperationError(this.getNode(), 'No credentials found!');\n\t\t}\n\n\t\tconst req = this.getRequestObject();\n\t\tconst bodyData = req.body;\n\t\tconst headerData = this.getHeaderData();\n\t\tif (headerData['x-hubspot-signature'] === undefined) {\n\t\t\treturn {};\n\t\t}\n\n\t\tconst hash = `${credentials.clientSecret}${JSON.stringify(bodyData)}`;\n\t\tconst signature = createHash('sha256').update(hash).digest('hex');\n\t\tif (signature !== headerData['x-hubspot-signature']) {\n\t\t\treturn {};\n\t\t}\n\n\t\tfor (let i = 0; i < bodyData.length; i++) {\n\t\t\tconst subscriptionType = bodyData[i].subscriptionType as string;\n\t\t\tif (subscriptionType.includes('contact')) {\n\t\t\t\tbodyData[i].contactId = bodyData[i].objectId;\n\t\t\t}\n\t\t\tif (subscriptionType.includes('company')) {\n\t\t\t\tbodyData[i].companyId = bodyData[i].objectId;\n\t\t\t}\n\t\t\tif (subscriptionType.includes('deal')) {\n\t\t\t\tbodyData[i].dealId = bodyData[i].objectId;\n\t\t\t}\n\t\t\tif (subscriptionType.includes('ticket')) {\n\t\t\t\tbodyData[i].ticketId = bodyData[i].objectId;\n\t\t\t}\n\t\t\tdelete bodyData[i].objectId;\n\t\t}\n\t\treturn {\n\t\t\tworkflowData: [this.helpers.returnJsonArray(bodyData as IDataObject[])],\n\t\t};\n\t}\n}\n"],"mappings":"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","names":[]}