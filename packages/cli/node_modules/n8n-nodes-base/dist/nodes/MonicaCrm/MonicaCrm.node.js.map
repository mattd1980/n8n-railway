{"version":3,"sources":["../../../nodes/MonicaCrm/MonicaCrm.node.ts"],"sourcesContent":["import {\n\ttype IExecuteFunctions,\n\ttype IDataObject,\n\ttype ILoadOptionsFunctions,\n\ttype INodeExecutionData,\n\ttype INodeType,\n\ttype INodeTypeDescription,\n\tNodeConnectionTypes,\n} from 'n8n-workflow';\n\nimport {\n\tactivityFields,\n\tactivityOperations,\n\tcallFields,\n\tcallOperations,\n\tcontactFieldFields,\n\tcontactFieldOperations,\n\tcontactFields,\n\tcontactOperations,\n\tcontactTagFields,\n\tcontactTagOperations,\n\tconversationFields,\n\tconversationMessageFields,\n\tconversationMessageOperations,\n\tconversationOperations,\n\tjournalEntryFields,\n\tjournalEntryOperations,\n\tnoteFields,\n\tnoteOperations,\n\treminderFields,\n\treminderOperations,\n\ttagFields,\n\ttagOperations,\n\ttaskFields,\n\ttaskOperations,\n} from './descriptions';\nimport {\n\tgetDateParts,\n\tmonicaCrmApiRequest,\n\tmonicaCrmApiRequestAllItems,\n\ttoOptions,\n} from './GenericFunctions';\nimport type { LoaderGetResponse, Option } from './types';\n\nexport class MonicaCrm implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Monica CRM',\n\t\tname: 'monicaCrm',\n\t\t// eslint-disable-next-line n8n-nodes-base/node-class-description-icon-not-svg\n\t\ticon: 'file:monicaCrm.png',\n\t\tgroup: ['transform'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume the Monica CRM API',\n\t\tdefaults: {\n\t\t\tname: 'Monica CRM',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'monicaCrmApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Activity',\n\t\t\t\t\t\tvalue: 'activity',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Call',\n\t\t\t\t\t\tvalue: 'call',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Contact',\n\t\t\t\t\t\tvalue: 'contact',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Contact Field',\n\t\t\t\t\t\tvalue: 'contactField',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Contact Tag',\n\t\t\t\t\t\tvalue: 'contactTag',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Conversation',\n\t\t\t\t\t\tvalue: 'conversation',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Conversation Message',\n\t\t\t\t\t\tvalue: 'conversationMessage',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Journal Entry',\n\t\t\t\t\t\tvalue: 'journalEntry',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Note',\n\t\t\t\t\t\tvalue: 'note',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Reminder',\n\t\t\t\t\t\tvalue: 'reminder',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Tag',\n\t\t\t\t\t\tvalue: 'tag',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Task',\n\t\t\t\t\t\tvalue: 'task',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'contact',\n\t\t\t},\n\t\t\t...activityOperations,\n\t\t\t...activityFields,\n\t\t\t...callOperations,\n\t\t\t...callFields,\n\t\t\t...contactOperations,\n\t\t\t...contactFields,\n\t\t\t...contactFieldOperations,\n\t\t\t...contactFieldFields,\n\t\t\t...contactTagOperations,\n\t\t\t...contactTagFields,\n\t\t\t...conversationOperations,\n\t\t\t...conversationFields,\n\t\t\t...conversationMessageOperations,\n\t\t\t...conversationMessageFields,\n\t\t\t...journalEntryOperations,\n\t\t\t...journalEntryFields,\n\t\t\t...noteOperations,\n\t\t\t...noteFields,\n\t\t\t...reminderOperations,\n\t\t\t...reminderFields,\n\t\t\t...tagOperations,\n\t\t\t...tagFields,\n\t\t\t...taskOperations,\n\t\t\t...taskFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\tasync getActivityTypes(this: ILoadOptionsFunctions) {\n\t\t\t\tconst responseData = (await monicaCrmApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/activitytypes',\n\t\t\t\t)) as LoaderGetResponse;\n\t\t\t\treturn toOptions(responseData);\n\t\t\t},\n\n\t\t\tasync getTagsToAdd(this: ILoadOptionsFunctions) {\n\t\t\t\tconst responseData = await monicaCrmApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/tags',\n\t\t\t\t\t{},\n\t\t\t\t\t{},\n\t\t\t\t\t{ forLoader: true },\n\t\t\t\t);\n\n\t\t\t\t// intentional, name required when adding\n\t\t\t\treturn responseData.map(({ name }) => ({ value: name, name })) as Option[];\n\t\t\t},\n\n\t\t\tasync getTagsToRemove(this: ILoadOptionsFunctions) {\n\t\t\t\tconst responseData = await monicaCrmApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/tags',\n\t\t\t\t\t{},\n\t\t\t\t\t{},\n\t\t\t\t\t{ forLoader: true },\n\t\t\t\t);\n\t\t\t\treturn responseData.map(({ id, name }) => ({ value: id, name })) as Option[];\n\t\t\t},\n\n\t\t\tasync getContactFieldTypes(this: ILoadOptionsFunctions) {\n\t\t\t\tconst responseData = (await monicaCrmApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/contactfieldtypes',\n\t\t\t\t)) as LoaderGetResponse;\n\t\t\t\treturn toOptions(responseData);\n\t\t\t},\n\n\t\t\tasync getGenders(this: ILoadOptionsFunctions) {\n\t\t\t\tconst responseData = (await monicaCrmApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/genders',\n\t\t\t\t)) as LoaderGetResponse;\n\t\t\t\treturn toOptions(responseData);\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\tlet responseData;\n\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'activity') {\n\t\t\t\t\t// **********************************************************************\n\t\t\t\t\t//                                activity\n\t\t\t\t\t// **********************************************************************\n\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//             activity: create\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/activities#create-an-activity\n\n\t\t\t\t\t\tconst contacts = this.getNodeParameter('contacts', i) as string;\n\t\t\t\t\t\tconst happenedAt = this.getNodeParameter('happenedAt', i) as string;\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\tactivity_type_id: this.getNodeParameter('activityTypeId', i),\n\t\t\t\t\t\t\tcontacts: contacts.split(','),\n\t\t\t\t\t\t\thappened_at: happenedAt.split('T')[0],\n\t\t\t\t\t\t\tsummary: this.getNodeParameter('summary', i),\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tif (Object.keys(additionalFields).length) {\n\t\t\t\t\t\t\tObject.assign(body, additionalFields);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequest.call(this, 'POST', '/activities', body);\n\t\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//             activity: delete\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/activities#delete-an-activity\n\n\t\t\t\t\t\tconst activityId = this.getNodeParameter('activityId', i);\n\n\t\t\t\t\t\tconst endpoint = `/activities/${activityId}`;\n\t\t\t\t\t\tawait monicaCrmApiRequest.call(this, 'DELETE', endpoint);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t} else if (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//              activity: get\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/activities#get-a-specific-activity\n\n\t\t\t\t\t\tconst activityId = this.getNodeParameter('activityId', i);\n\n\t\t\t\t\t\tconst endpoint = `/activities/${activityId}`;\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequest.call(this, 'GET', endpoint);\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//             activity: getAll\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/activities#list-all-the-activities-in-your-account\n\n\t\t\t\t\t\tconst endpoint = '/activities';\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequestAllItems.call(this, 'GET', endpoint);\n\t\t\t\t\t} else if (operation === 'update') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//             activity: update\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/activities#update-an-activity\n\n\t\t\t\t\t\tconst activityId = this.getNodeParameter('activityId', i);\n\n\t\t\t\t\t\tconst { data } = await monicaCrmApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/activities/${activityId}`,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\tactivity_type_id: data.activity_type.id,\n\t\t\t\t\t\t\tcontacts: data.attendees.contacts.map((contact: IDataObject) => contact.id),\n\t\t\t\t\t\t\thappened_at: data.happened_at,\n\t\t\t\t\t\t\tsummary: data.summary,\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\n\t\t\t\t\t\tif (Object.keys(updateFields).length) {\n\t\t\t\t\t\t\tObject.assign(body, updateFields);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbody.happened_at = (body.happened_at as string).split('T')[0];\n\n\t\t\t\t\t\tif (typeof body.contacts === 'string') {\n\t\t\t\t\t\t\tbody.contacts = body.contacts.split(',');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst endpoint = `/activities/${activityId}`;\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequest.call(this, 'PUT', endpoint, body);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'call') {\n\t\t\t\t\t// **********************************************************************\n\t\t\t\t\t//                                  call\n\t\t\t\t\t// **********************************************************************\n\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//               call: create\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/calls#create-a-call\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\tcalled_at: this.getNodeParameter('calledAt', i),\n\t\t\t\t\t\t\tcontact_id: this.getNodeParameter('contactId', i),\n\t\t\t\t\t\t\tcontent: this.getNodeParameter('content', i),\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequest.call(this, 'POST', '/calls', body);\n\t\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//               call: delete\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/contactfields#delete-a-call\n\n\t\t\t\t\t\tconst callId = this.getNodeParameter('callId', i);\n\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequest.call(this, 'DELETE', `/calls/${callId}`);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t} else if (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//                call: get\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/calls#get-a-specific-call\n\n\t\t\t\t\t\tconst callId = this.getNodeParameter('callId', i);\n\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequest.call(this, 'GET', `/calls/${callId}`);\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//               call: getAll\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/calls#list-all-the-calls-in-your-account\n\n\t\t\t\t\t\tconst endpoint = '/calls';\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequestAllItems.call(this, 'GET', endpoint);\n\t\t\t\t\t} else if (operation === 'update') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//               call: update\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/calls#update-a-call\n\n\t\t\t\t\t\tconst callId = this.getNodeParameter('callId', i);\n\n\t\t\t\t\t\tconst { data } = await monicaCrmApiRequest.call(this, 'GET', `/calls/${callId}`);\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\tcalled_at: data.called_at,\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\n\t\t\t\t\t\tif (Object.keys(updateFields).length) {\n\t\t\t\t\t\t\tObject.assign(body, updateFields);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequest.call(this, 'PUT', `/calls/${callId}`, body);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'contact') {\n\t\t\t\t\t// **********************************************************************\n\t\t\t\t\t//                                contact\n\t\t\t\t\t// **********************************************************************\n\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//             contact: create\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/contacts#create-a-contact\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\tfirst_name: this.getNodeParameter('firstName', i),\n\t\t\t\t\t\t\tgender_id: this.getNodeParameter('genderId', i),\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\tisDeceased = false,\n\t\t\t\t\t\t\tdeceasedDate,\n\t\t\t\t\t\t\tbirthdate,\n\t\t\t\t\t\t\t...rest\n\t\t\t\t\t\t} = this.getNodeParameter('additionalFields', i) as {\n\t\t\t\t\t\t\tisDeceased?: boolean;\n\t\t\t\t\t\t\tdeceasedDate?: string;\n\t\t\t\t\t\t\tbirthdate?: string;\n\t\t\t\t\t\t} & IDataObject;\n\n\t\t\t\t\t\tbody.is_birthdate_known = false;\n\t\t\t\t\t\tbody.is_deceased = isDeceased;\n\t\t\t\t\t\tbody.is_deceased_date_known = false;\n\n\t\t\t\t\t\tif (birthdate) {\n\t\t\t\t\t\t\tbody.is_birthdate_known = true;\n\n\t\t\t\t\t\t\tconst [day, month, year] = getDateParts(birthdate);\n\t\t\t\t\t\t\tbody.birthdate_day = day;\n\t\t\t\t\t\t\tbody.birthdate_month = month;\n\t\t\t\t\t\t\tbody.birthdate_year = year;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (deceasedDate) {\n\t\t\t\t\t\t\tbody.is_deceased = true;\n\t\t\t\t\t\t\tbody.is_deceased_date_known = true;\n\n\t\t\t\t\t\t\tconst [day, month, year] = getDateParts(deceasedDate);\n\t\t\t\t\t\t\tbody.deceased_date_day = day;\n\t\t\t\t\t\t\tbody.deceased_date_month = month;\n\t\t\t\t\t\t\tbody.deceased_date_year = year;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (Object.keys(rest).length) {\n\t\t\t\t\t\t\tObject.assign(body, rest);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequest.call(this, 'POST', '/contacts', body);\n\t\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//             contact: delete\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/contacts#delete-a-contact\n\n\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i);\n\n\t\t\t\t\t\tconst endpoint = `/contacts/${contactId}`;\n\t\t\t\t\t\tawait monicaCrmApiRequest.call(this, 'DELETE', endpoint);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t} else if (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//               contact: get\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/contacts#get-a-specific-contact\n\n\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i);\n\n\t\t\t\t\t\tconst endpoint = `/contacts/${contactId}`;\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequest.call(this, 'GET', endpoint);\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//             contact: getAll\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/contacts#list-all-your-contacts\n\n\t\t\t\t\t\tconst qs = {} as IDataObject;\n\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\n\t\t\t\t\t\tif (Object.keys(filters).length) {\n\t\t\t\t\t\t\tObject.assign(qs, filters);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequestAllItems.call(this, 'GET', '/contacts', {}, qs);\n\t\t\t\t\t} else if (operation === 'update') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//             contact: update\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i);\n\n\t\t\t\t\t\tconst { data } = await monicaCrmApiRequest.call(this, 'GET', `/contacts/${contactId}`);\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\tfirst_name: data.first_name,\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\tis_deaceased = false,\n\t\t\t\t\t\t\tdeceased_date,\n\t\t\t\t\t\t\tbirthdate,\n\t\t\t\t\t\t\t...rest\n\t\t\t\t\t\t} = this.getNodeParameter('updateFields', i) as {\n\t\t\t\t\t\t\tis_deaceased?: boolean;\n\t\t\t\t\t\t\tdeceased_date?: string;\n\t\t\t\t\t\t\tbirthdate?: string;\n\t\t\t\t\t\t} & IDataObject;\n\n\t\t\t\t\t\tbody.is_birthdate_known = false;\n\t\t\t\t\t\tbody.is_deceased = is_deaceased;\n\t\t\t\t\t\tbody.is_deceased_date_known = false;\n\n\t\t\t\t\t\tif (birthdate) {\n\t\t\t\t\t\t\tbody.is_birthdate_known = true;\n\n\t\t\t\t\t\t\tconst [day, month, year] = getDateParts(birthdate);\n\t\t\t\t\t\t\tbody.birthdate_day = day;\n\t\t\t\t\t\t\tbody.birthdate_month = month;\n\t\t\t\t\t\t\tbody.birthdate_year = year;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (deceased_date) {\n\t\t\t\t\t\t\tbody.is_deceased = true;\n\t\t\t\t\t\t\tbody.is_deceased_date_known = true;\n\n\t\t\t\t\t\t\tconst [day, month, year] = getDateParts(deceased_date);\n\t\t\t\t\t\t\tbody.deceased_date_day = day;\n\t\t\t\t\t\t\tbody.deceased_date_month = month;\n\t\t\t\t\t\t\tbody.deceased_date_year = year;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (Object.keys(rest).length) {\n\t\t\t\t\t\t\tObject.assign(body, rest);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst endpoint = `/contacts/${contactId}`;\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequest.call(this, 'PUT', endpoint, body);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'contactField') {\n\t\t\t\t\t// **********************************************************************\n\t\t\t\t\t//                              contactField\n\t\t\t\t\t// **********************************************************************\n\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//           contactField: create\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/contactfields#create-a-contact-field\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\tcontact_field_type_id: this.getNodeParameter('contactFieldTypeId', i),\n\t\t\t\t\t\t\tcontact_id: this.getNodeParameter('contactId', i),\n\t\t\t\t\t\t\tdata: this.getNodeParameter('data', i),\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequest.call(this, 'POST', '/contactfields', body);\n\t\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//           contactField: delete\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/contactfields#delete-a-contact-field\n\n\t\t\t\t\t\tconst contactFieldId = this.getNodeParameter('contactFieldId', i);\n\n\t\t\t\t\t\tconst endpoint = `/contactfields/${contactFieldId}`;\n\t\t\t\t\t\tawait monicaCrmApiRequest.call(this, 'DELETE', endpoint);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t} else if (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//            contactField: get\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/contactfields#get-a-specific-contact-field\n\n\t\t\t\t\t\tconst contactFieldId = this.getNodeParameter('contactFieldId', i);\n\n\t\t\t\t\t\tconst endpoint = `/contactfields/${contactFieldId}`;\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequest.call(this, 'GET', endpoint);\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//           contactField: getAll\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/contactfields#list-all-the-contact-fields-of-a-specific-contact\n\n\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i);\n\n\t\t\t\t\t\tconst endpoint = `/contact/${contactId}/contactfields`;\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequestAllItems.call(this, 'GET', endpoint);\n\t\t\t\t\t} else if (operation === 'update') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//           contactField: update\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/contactfields#update-a-contact-field\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\tcontact_field_type_id: this.getNodeParameter('contactFieldTypeId', i),\n\t\t\t\t\t\t\tcontact_id: this.getNodeParameter('contactId', i),\n\t\t\t\t\t\t\tdata: this.getNodeParameter('data', i),\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tconst contactFieldId = this.getNodeParameter('contactFieldId', i);\n\n\t\t\t\t\t\tconst endpoint = `/contactfields/${contactFieldId}`;\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequest.call(this, 'PUT', endpoint, body);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'contactTag') {\n\t\t\t\t\t// **********************************************************************\n\t\t\t\t\t//                             contactTag\n\t\t\t\t\t// **********************************************************************\n\n\t\t\t\t\tif (operation === 'add') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//            contactTag: add\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/tags#associate-a-tag-to-a-contact\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\ttags: this.getNodeParameter('tagsToAdd', i),\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i);\n\n\t\t\t\t\t\tconst endpoint = `/contacts/${contactId}/setTags`;\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequest.call(this, 'POST', endpoint, body);\n\t\t\t\t\t} else if (operation === 'remove') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//              tag: remove\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/tags#remove-a-specific-tag-from-a-contact\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\ttags: this.getNodeParameter('tagsToRemove', i),\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i);\n\n\t\t\t\t\t\tconst endpoint = `/contacts/${contactId}/unsetTag`;\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequest.call(this, 'POST', endpoint, body);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'conversation') {\n\t\t\t\t\t// **********************************************************************\n\t\t\t\t\t//                              conversation\n\t\t\t\t\t// **********************************************************************\n\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//           conversation: create\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/conversations#create-a-conversation\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\tcontact_field_type_id: this.getNodeParameter('contactFieldTypeId', i),\n\t\t\t\t\t\t\tcontact_id: this.getNodeParameter('contactId', i),\n\t\t\t\t\t\t\thappened_at: this.getNodeParameter('happenedAt', i),\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequest.call(this, 'POST', '/conversations', body);\n\t\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//           conversation: delete\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/contactfields#delete-a-contact-field\n\n\t\t\t\t\t\tconst conversationId = this.getNodeParameter('conversationId', i);\n\n\t\t\t\t\t\tconst endpoint = `/conversations/${conversationId}`;\n\t\t\t\t\t\tawait monicaCrmApiRequest.call(this, 'DELETE', endpoint);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t} else if (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//            conversation: get\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/conversations#get-a-specific-conversation\n\n\t\t\t\t\t\tconst conversationId = this.getNodeParameter('conversationId', i);\n\n\t\t\t\t\t\tconst endpoint = `/conversations/${conversationId}`;\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequest.call(this, 'GET', endpoint);\n\t\t\t\t\t} else if (operation === 'update') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//           conversation: update\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/conversations#update-a-conversation\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\tcontact_field_type_id: this.getNodeParameter('contactFieldTypeId', i),\n\t\t\t\t\t\t\thappened_at: this.getNodeParameter('happenedAt', i),\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tconst conversationId = this.getNodeParameter('conversationId', i);\n\n\t\t\t\t\t\tconst endpoint = `/conversations/${conversationId}`;\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequest.call(this, 'PUT', endpoint, body);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'conversationMessage') {\n\t\t\t\t\tif (operation === 'add') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//         conversationMessage: add\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/conversations#add-a-message-to-a-conversation\n\n\t\t\t\t\t\tconst conversationId = this.getNodeParameter('conversationId', i);\n\n\t\t\t\t\t\tconst endpoint = `/conversations/${conversationId}/messages`;\n\n\t\t\t\t\t\tconst { data } = await monicaCrmApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/conversations/${conversationId}`,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\tcontact_id: data.contact.id,\n\t\t\t\t\t\t\tcontent: this.getNodeParameter('content', i),\n\t\t\t\t\t\t\twritten_at: this.getNodeParameter('writtenAt', i),\n\t\t\t\t\t\t\twritten_by_me: this.getNodeParameter('writtenByMe', i),\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequest.call(this, 'POST', endpoint, body);\n\t\t\t\t\t} else if (operation === 'update') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//       conversationMessage: update\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/conversations#update-a-message-in-a-conversation\n\t\t\t\t\t\tconst conversationId = this.getNodeParameter('conversationId', i);\n\t\t\t\t\t\tconst messageId = this.getNodeParameter('messageId', i) as string;\n\t\t\t\t\t\tconst endpoint = `/conversations/${conversationId}/messages/${messageId}`;\n\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i, {});\n\n\t\t\t\t\t\tconst { data } = await monicaCrmApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/conversations/${conversationId}`,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst message = data.messages.filter(\n\t\t\t\t\t\t\t(entry: IDataObject) => entry.id === parseInt(messageId, 10),\n\t\t\t\t\t\t)[0];\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\tcontact_id: data.contact.id,\n\t\t\t\t\t\t\tcontent: message.content,\n\t\t\t\t\t\t\twritten_at: message.written_at,\n\t\t\t\t\t\t\twritten_by_me: message.written_by_me,\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tif (Object.keys(updateFields).length) {\n\t\t\t\t\t\t\tObject.assign(body, updateFields);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequest.call(this, 'PUT', endpoint, body);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'journalEntry') {\n\t\t\t\t\t// **********************************************************************\n\t\t\t\t\t//                              journalEntry\n\t\t\t\t\t// **********************************************************************\n\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//           journalEntry: create\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/notes#create-a-journal-entry\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\ttitle: this.getNodeParameter('title', i),\n\t\t\t\t\t\t\tpost: this.getNodeParameter('post', i),\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequest.call(this, 'POST', '/journal', body);\n\t\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//           journalEntry: delete\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/journal#delete-a-journal-entry\n\n\t\t\t\t\t\tconst journalId = this.getNodeParameter('journalId', i);\n\n\t\t\t\t\t\tawait monicaCrmApiRequest.call(this, 'DELETE', `/journal/${journalId}`);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t} else if (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//            journalEntry: get\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/journal#get-a-specific-journal-entry\n\n\t\t\t\t\t\tconst journalId = this.getNodeParameter('journalId', i);\n\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequest.call(this, 'GET', `/journal/${journalId}`);\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//           journalEntry: getAll\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/journal#list-all-the-entries-in-your-journal\n\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequestAllItems.call(this, 'GET', '/journal');\n\t\t\t\t\t} else if (operation === 'update') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//           journalEntry: update\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/journal#update-a-journal-entry\n\n\t\t\t\t\t\tconst journalId = this.getNodeParameter('journalId', i);\n\n\t\t\t\t\t\tconst { data } = await monicaCrmApiRequest.call(this, 'GET', `/journal/${journalId}`);\n\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\tpost: data.post,\n\t\t\t\t\t\t\ttitle: data.title,\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tif (Object.keys(updateFields).length) {\n\t\t\t\t\t\t\tObject.assign(body, updateFields);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t\t`/journal/${journalId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'note') {\n\t\t\t\t\t// **********************************************************************\n\t\t\t\t\t//                                  note\n\t\t\t\t\t// **********************************************************************\n\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//               note: create\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/notes#create-a-note\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\tbody: this.getNodeParameter('body', i),\n\t\t\t\t\t\t\tcontact_id: this.getNodeParameter('contactId', i),\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tbody.is_favorited = this.getNodeParameter('additionalFields.isFavorited', i, false);\n\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequest.call(this, 'POST', '/notes', body);\n\t\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//               note: delete\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/notes#delete-a-note\n\n\t\t\t\t\t\tconst noteId = this.getNodeParameter('noteId', i);\n\n\t\t\t\t\t\tawait monicaCrmApiRequest.call(this, 'DELETE', `/notes/${noteId}`);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t} else if (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//                note: get\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/notes#get-a-specific-note\n\n\t\t\t\t\t\tconst noteId = this.getNodeParameter('noteId', i);\n\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequest.call(this, 'GET', `/notes/${noteId}`);\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//               note: getAll\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/notes#list-all-the-notes-in-your-account\n\n\t\t\t\t\t\tconst endpoint = '/notes';\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequestAllItems.call(this, 'GET', endpoint);\n\t\t\t\t\t} else if (operation === 'update') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//               note: update\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/notes#update-a-note\n\n\t\t\t\t\t\tconst noteId = this.getNodeParameter('noteId', i);\n\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\n\t\t\t\t\t\tconst { data } = await monicaCrmApiRequest.call(this, 'GET', `/notes/${noteId}`);\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\tbody: data.body,\n\t\t\t\t\t\t\tcontact_id: data.contact.id,\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tif (Object.keys(updateFields).length) {\n\t\t\t\t\t\t\tObject.assign(body, updateFields);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequest.call(this, 'PUT', `/notes/${noteId}`, body);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'reminder') {\n\t\t\t\t\t// **********************************************************************\n\t\t\t\t\t//                                reminder\n\t\t\t\t\t// **********************************************************************\n\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//             reminder: create\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/notes#create-a-reminder\n\n\t\t\t\t\t\tconst initialDate = this.getNodeParameter('initialDate', i) as string;\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\tcontact_id: this.getNodeParameter('contactId', i),\n\t\t\t\t\t\t\tfrequency_type: this.getNodeParameter('frequencyType', i),\n\t\t\t\t\t\t\tfrequency_number: this.getNodeParameter('frequencyNumber', i, 1),\n\t\t\t\t\t\t\tinitial_date: initialDate.split('T')[0],\n\t\t\t\t\t\t\ttitle: this.getNodeParameter('title', i),\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tif (Object.keys(additionalFields).length) {\n\t\t\t\t\t\t\tObject.assign(body, additionalFields);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequest.call(this, 'POST', '/reminders', body);\n\t\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//             reminder: delete\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/reminder#delete-a-reminder\n\n\t\t\t\t\t\tconst reminderId = this.getNodeParameter('reminderId', i);\n\n\t\t\t\t\t\tconst endpoint = `/reminders/${reminderId}`;\n\t\t\t\t\t\tawait monicaCrmApiRequest.call(this, 'DELETE', endpoint);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t} else if (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//              reminder: get\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/reminder#get-a-specific-reminder\n\n\t\t\t\t\t\tconst reminderId = this.getNodeParameter('reminderId', i);\n\n\t\t\t\t\t\tconst endpoint = `/reminders/${reminderId}`;\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequest.call(this, 'GET', endpoint);\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//             reminder: getAll\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/reminders#list-all-the-reminders-in-your-account\n\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequestAllItems.call(this, 'GET', '/reminders');\n\t\t\t\t\t} else if (operation === 'update') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//             reminder: update\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/reminders#update-a-reminder\n\n\t\t\t\t\t\tconst reminderId = this.getNodeParameter('reminderId', i);\n\n\t\t\t\t\t\tconst { data } = await monicaCrmApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/reminders/${reminderId}`,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\tcontact_id: data.contact.id,\n\t\t\t\t\t\t\tfrequency_type: data.frequency_type,\n\t\t\t\t\t\t\tfrequency_number: data.frequency_number,\n\t\t\t\t\t\t\tinitial_date: data.initial_date,\n\t\t\t\t\t\t\ttitle: data.title,\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\n\t\t\t\t\t\tif (Object.keys(updateFields).length) {\n\t\t\t\t\t\t\tObject.assign(body, updateFields);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbody.initial_date = (body.initial_date as string).split('T')[0];\n\n\t\t\t\t\t\tconst endpoint = `/reminders/${reminderId}`;\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequest.call(this, 'PUT', endpoint, body);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'tag') {\n\t\t\t\t\t// **********************************************************************\n\t\t\t\t\t//                                  tag\n\t\t\t\t\t// **********************************************************************\n\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//               tag: create\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/tags#create-a-tag\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\tname: this.getNodeParameter('name', i),\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequest.call(this, 'POST', '/tags', body);\n\t\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//               tag: delete\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/tag#delete-a-tag\n\n\t\t\t\t\t\tconst tagId = this.getNodeParameter('tagId', i);\n\n\t\t\t\t\t\tawait monicaCrmApiRequest.call(this, 'DELETE', `/tags/${tagId}`);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t} else if (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//                 tag: get\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/task#get-a-specific-tag\n\n\t\t\t\t\t\tconst tagId = this.getNodeParameter('tagId', i);\n\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequest.call(this, 'GET', `/tags/${tagId}`);\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//               tag: getAll\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/tags#list-all-your-tags\n\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequestAllItems.call(this, 'GET', '/tags');\n\t\t\t\t\t} else if (operation === 'update') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//               tag: update\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/tags#update-a-tag\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\tname: this.getNodeParameter('name', i),\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tconst tagId = this.getNodeParameter('tagId', i);\n\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequest.call(this, 'PUT', `/tags/${tagId}`, body);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'task') {\n\t\t\t\t\t// **********************************************************************\n\t\t\t\t\t//                                  task\n\t\t\t\t\t// **********************************************************************\n\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//               task: create\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/notes#create-a-task\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\tcontact_id: this.getNodeParameter('contactId', i),\n\t\t\t\t\t\t\ttitle: this.getNodeParameter('title', i),\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tif (Object.keys(additionalFields).length) {\n\t\t\t\t\t\t\tObject.assign(body, additionalFields);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequest.call(this, 'POST', '/tasks', body);\n\t\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//               task: delete\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/task#delete-a-task\n\n\t\t\t\t\t\tconst taskId = this.getNodeParameter('taskId', i);\n\n\t\t\t\t\t\tawait monicaCrmApiRequest.call(this, 'DELETE', `/tasks/${taskId}`);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t} else if (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//                task: get\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/task#get-a-specific-task\n\n\t\t\t\t\t\tconst taskId = this.getNodeParameter('taskId', i);\n\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequest.call(this, 'GET', `/tasks/${taskId}`);\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//               task: getAll\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/tasks#list-all-the-tasks-of-a-specific-contact\n\n\t\t\t\t\t\tconst endpoint = '/tasks';\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequestAllItems.call(this, 'GET', endpoint);\n\t\t\t\t\t} else if (operation === 'update') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//               task: update\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://www.monicahq.com/api/task#update-a-task\n\n\t\t\t\t\t\tconst taskId = this.getNodeParameter('taskId', i);\n\n\t\t\t\t\t\tconst { data } = await monicaCrmApiRequest.call(this, 'GET', `/tasks/${taskId}`);\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\tcontact_id: data.contact.id,\n\t\t\t\t\t\t\ttitle: data.title,\n\t\t\t\t\t\t\tcompleted: data.completed,\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\n\t\t\t\t\t\tif (Object.keys(updateFields).length) {\n\t\t\t\t\t\t\tObject.assign(body, updateFields);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await monicaCrmApiRequest.call(this, 'PUT', `/tasks/${taskId}`, body);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tif (['create', 'get', 'update', 'add'].includes(operation)) {\n\t\t\t\tresponseData = responseData.data;\n\t\t\t}\n\n\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t{ itemData: { item: i } },\n\t\t\t);\n\n\t\t\treturnData.push(...executionData);\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":[]}