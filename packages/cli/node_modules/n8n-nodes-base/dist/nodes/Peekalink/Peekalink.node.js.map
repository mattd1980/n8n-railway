{"version":3,"sources":["../../../nodes/Peekalink/Peekalink.node.ts"],"sourcesContent":["import {\n\tNode,\n\tNodeApiError,\n\ttype IExecuteFunctions,\n\ttype INodeExecutionData,\n\ttype INodeTypeDescription,\n\ttype JsonObject,\n\tNodeConnectionTypes,\n} from 'n8n-workflow';\n\nexport const apiUrl = 'https://api.peekalink.io';\n\ntype Operation = 'preview' | 'isAvailable';\n\nexport class Peekalink extends Node {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Peekalink',\n\t\tname: 'peekalink',\n\t\t// eslint-disable-next-line n8n-nodes-base/node-class-description-icon-not-svg\n\t\ticon: 'file:peekalink.png',\n\t\tgroup: ['output'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"]',\n\t\tdescription: 'Consume the Peekalink API',\n\t\tdefaults: {\n\t\t\tname: 'Peekalink',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'peekalinkApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Is Available',\n\t\t\t\t\t\tvalue: 'isAvailable',\n\t\t\t\t\t\tdescription: 'Check whether preview for a given link is available',\n\t\t\t\t\t\taction: 'Check whether the preview for a given link is available',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Preview',\n\t\t\t\t\t\tvalue: 'preview',\n\t\t\t\t\t\tdescription: 'Return the preview for a link',\n\t\t\t\t\t\taction: 'Return the preview for a link',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'preview',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'URL',\n\t\t\t\tname: 'url',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t};\n\n\tasync execute(context: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = context.getInputData();\n\t\tconst operation = context.getNodeParameter('operation', 0) as Operation;\n\t\tconst credentials = await context.getCredentials('peekalinkApi');\n\n\t\tconst returnData = await Promise.all(\n\t\t\titems.map(async (_, i) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst link = context.getNodeParameter('url', i) as string;\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\t\t\t\t\treturn await context.helpers.request({\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\turi: operation === 'preview' ? apiUrl : `${apiUrl}/is-available/`,\n\t\t\t\t\t\tbody: { link },\n\t\t\t\t\t\theaders: { 'X-API-Key': credentials.apiKey },\n\t\t\t\t\t\tjson: true,\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (context.continueOnFail()) {\n\t\t\t\t\t\treturn { error: error.message };\n\t\t\t\t\t}\n\t\t\t\t\tthrow new NodeApiError(context.getNode(), error as JsonObject);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\treturn [context.helpers.returnJsonArray(returnData)];\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAQO;AAEA,MAAM,SAAS;AAIf,MAAM,kBAAkB,yBAAK;AAAA,EAA7B;AAAA;AACN,uBAAoC;AAAA,MACnC,aAAa;AAAA,MACb,MAAM;AAAA;AAAA,MAEN,MAAM;AAAA,MACN,OAAO,CAAC,QAAQ;AAAA,MAChB,SAAS;AAAA,MACT,UAAU;AAAA,MACV,aAAa;AAAA,MACb,UAAU;AAAA,QACT,MAAM;AAAA,MACP;AAAA,MACA,cAAc;AAAA,MACd,QAAQ,CAAC,wCAAoB,IAAI;AAAA,MACjC,SAAS,CAAC,wCAAoB,IAAI;AAAA,MAClC,aAAa;AAAA,QACZ;AAAA,UACC,MAAM;AAAA,UACN,UAAU;AAAA,QACX;AAAA,MACD;AAAA,MACA,YAAY;AAAA,QACX;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,kBAAkB;AAAA,UAClB,SAAS;AAAA,YACR;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aAAa;AAAA,cACb,QAAQ;AAAA,YACT;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aAAa;AAAA,cACb,QAAQ;AAAA,YACT;AAAA,UACD;AAAA,UACA,SAAS;AAAA,QACV;AAAA,QACA;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,SAAS;AAAA,UACT,UAAU;AAAA,QACX;AAAA,MACD;AAAA,IACD;AAAA;AAAA,EAEA,MAAM,QAAQ,SAA6D;AAC1E,UAAM,QAAQ,QAAQ,aAAa;AACnC,UAAM,YAAY,QAAQ,iBAAiB,aAAa,CAAC;AACzD,UAAM,cAAc,MAAM,QAAQ,eAAe,cAAc;AAE/D,UAAM,aAAa,MAAM,QAAQ;AAAA,MAChC,MAAM,IAAI,OAAO,GAAG,MAAM;AACzB,YAAI;AACH,gBAAM,OAAO,QAAQ,iBAAiB,OAAO,CAAC;AAE9C,iBAAO,MAAM,QAAQ,QAAQ,QAAQ;AAAA,YACpC,QAAQ;AAAA,YACR,KAAK,cAAc,YAAY,SAAS,GAAG,MAAM;AAAA,YACjD,MAAM,EAAE,KAAK;AAAA,YACb,SAAS,EAAE,aAAa,YAAY,OAAO;AAAA,YAC3C,MAAM;AAAA,UACP,CAAC;AAAA,QACF,SAAS,OAAO;AACf,cAAI,QAAQ,eAAe,GAAG;AAC7B,mBAAO,EAAE,OAAO,MAAM,QAAQ;AAAA,UAC/B;AACA,gBAAM,IAAI,iCAAa,QAAQ,QAAQ,GAAG,KAAmB;AAAA,QAC9D;AAAA,MACD,CAAC;AAAA,IACF;AACA,WAAO,CAAC,QAAQ,QAAQ,gBAAgB,UAAU,CAAC;AAAA,EACpD;AACD;","names":[]}