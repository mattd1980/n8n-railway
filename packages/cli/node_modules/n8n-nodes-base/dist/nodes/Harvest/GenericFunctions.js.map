{"version":3,"sources":["../../../nodes/Harvest/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHookFunctions,\n\tILoadOptionsFunctions,\n\tJsonObject,\n\tIRequestOptions,\n\tIHttpRequestMethods,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\nexport async function harvestApiRequest(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tqs: IDataObject,\n\tpath: string,\n\tbody: IDataObject = {},\n\toption: IDataObject = {},\n\turi?: string,\n): Promise<any> {\n\tlet options: IRequestOptions = {\n\t\theaders: {\n\t\t\t'Harvest-Account-Id': `${this.getNodeParameter('accountId', 0)}`,\n\t\t\t'User-Agent': 'Harvest App',\n\t\t\tAuthorization: '',\n\t\t},\n\t\tmethod,\n\t\tbody,\n\t\turi: uri || `https://api.harvestapp.com/v2/${path}`,\n\t\tqs,\n\t\tjson: true,\n\t};\n\n\toptions = Object.assign({}, options, option);\n\tif (Object.keys(options.body as IDataObject).length === 0) {\n\t\tdelete options.body;\n\t}\n\tconst authenticationMethod = this.getNodeParameter('authentication', 0);\n\n\ttry {\n\t\tif (authenticationMethod === 'accessToken') {\n\t\t\tconst credentials = await this.getCredentials('harvestApi');\n\n\t\t\t//@ts-ignore\n\t\t\toptions.headers.Authorization = `Bearer ${credentials.accessToken}`;\n\n\t\t\treturn await this.helpers.request(options);\n\t\t} else {\n\t\t\treturn await this.helpers.requestOAuth2.call(this, 'harvestOAuth2Api', options);\n\t\t}\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\n/**\n * Make an API request to paginated flow endpoint\n * and return all results\n */\nexport async function harvestApiRequestAllItems(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tqs: IDataObject,\n\turi: string,\n\tresource: string,\n\tbody: IDataObject = {},\n\toption: IDataObject = {},\n): Promise<any> {\n\tconst returnData: IDataObject[] = [];\n\n\tlet responseData;\n\n\tdo {\n\t\tresponseData = await harvestApiRequest.call(this, method, qs, uri, body, option);\n\t\tqs.page = responseData.next_page;\n\t\treturnData.push.apply(returnData, responseData[resource] as IDataObject[]);\n\t} while (responseData.next_page);\n\n\treturn returnData;\n}\n\n/**\n * fetch All resource using paginated calls\n */\nexport async function getAllResource(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions,\n\tresource: string,\n\ti: number,\n) {\n\tconst endpoint = resource;\n\tconst qs: IDataObject = {};\n\tconst requestMethod = 'GET';\n\n\tqs.per_page = 100;\n\n\tconst additionalFields = this.getNodeParameter('filters', i);\n\tconst returnAll = this.getNodeParameter('returnAll', i);\n\n\tObject.assign(qs, additionalFields);\n\n\tlet responseData: IDataObject = {};\n\tif (returnAll) {\n\t\tresponseData[resource] = await harvestApiRequestAllItems.call(\n\t\t\tthis,\n\t\t\trequestMethod,\n\t\t\tqs,\n\t\t\tendpoint,\n\t\t\tresource,\n\t\t);\n\t} else {\n\t\tconst limit = this.getNodeParameter('limit', i);\n\t\tqs.per_page = limit;\n\t\tresponseData = await harvestApiRequest.call(this, requestMethod, qs, endpoint);\n\t}\n\treturn responseData[resource] as IDataObject[];\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,0BAA6B;AAE7B,eAAsB,kBAErB,QACA,IACA,MACA,OAAoB,CAAC,GACrB,SAAsB,CAAC,GACvB,KACe;AACf,MAAI,UAA2B;AAAA,IAC9B,SAAS;AAAA,MACR,sBAAsB,GAAG,KAAK,iBAAiB,aAAa,CAAC,CAAC;AAAA,MAC9D,cAAc;AAAA,MACd,eAAe;AAAA,IAChB;AAAA,IACA;AAAA,IACA;AAAA,IACA,KAAK,OAAO,iCAAiC,IAAI;AAAA,IACjD;AAAA,IACA,MAAM;AAAA,EACP;AAEA,YAAU,OAAO,OAAO,CAAC,GAAG,SAAS,MAAM;AAC3C,MAAI,OAAO,KAAK,QAAQ,IAAmB,EAAE,WAAW,GAAG;AAC1D,WAAO,QAAQ;AAAA,EAChB;AACA,QAAM,uBAAuB,KAAK,iBAAiB,kBAAkB,CAAC;AAEtE,MAAI;AACH,QAAI,yBAAyB,eAAe;AAC3C,YAAM,cAAc,MAAM,KAAK,eAAe,YAAY;AAG1D,cAAQ,QAAQ,gBAAgB,UAAU,YAAY,WAAW;AAEjE,aAAO,MAAM,KAAK,QAAQ,QAAQ,OAAO;AAAA,IAC1C,OAAO;AACN,aAAO,MAAM,KAAK,QAAQ,cAAc,KAAK,MAAM,oBAAoB,OAAO;AAAA,IAC/E;AAAA,EACD,SAAS,OAAO;AACf,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,KAAmB;AAAA,EAC3D;AACD;AAMA,eAAsB,0BAErB,QACA,IACA,KACA,UACA,OAAoB,CAAC,GACrB,SAAsB,CAAC,GACR;AACf,QAAM,aAA4B,CAAC;AAEnC,MAAI;AAEJ,KAAG;AACF,mBAAe,MAAM,kBAAkB,KAAK,MAAM,QAAQ,IAAI,KAAK,MAAM,MAAM;AAC/E,OAAG,OAAO,aAAa;AACvB,eAAW,KAAK,MAAM,YAAY,aAAa,QAAQ,CAAkB;AAAA,EAC1E,SAAS,aAAa;AAEtB,SAAO;AACR;AAKA,eAAsB,eAErB,UACA,GACC;AACD,QAAM,WAAW;AACjB,QAAM,KAAkB,CAAC;AACzB,QAAM,gBAAgB;AAEtB,KAAG,WAAW;AAEd,QAAM,mBAAmB,KAAK,iBAAiB,WAAW,CAAC;AAC3D,QAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AAEtD,SAAO,OAAO,IAAI,gBAAgB;AAElC,MAAI,eAA4B,CAAC;AACjC,MAAI,WAAW;AACd,iBAAa,QAAQ,IAAI,MAAM,0BAA0B;AAAA,MACxD;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACD,OAAO;AACN,UAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC9C,OAAG,WAAW;AACd,mBAAe,MAAM,kBAAkB,KAAK,MAAM,eAAe,IAAI,QAAQ;AAAA,EAC9E;AACA,SAAO,aAAa,QAAQ;AAC7B;","names":[]}