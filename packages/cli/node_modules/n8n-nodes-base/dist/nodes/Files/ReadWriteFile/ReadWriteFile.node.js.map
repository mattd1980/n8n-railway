{"version":3,"sources":["../../../../nodes/Files/ReadWriteFile/ReadWriteFile.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes } from 'n8n-workflow';\n\nimport * as read from './actions/read.operation';\nimport * as write from './actions/write.operation';\n\nexport class ReadWriteFile implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Read/Write Files from Disk',\n\t\tname: 'readWriteFile',\n\t\ticon: 'file:readWriteFile.svg',\n\t\tgroup: ['input'],\n\t\tversion: 1,\n\t\tdescription: 'Read or write files from the computer that runs n8n',\n\t\tdefaults: {\n\t\t\tname: 'Read/Write Files from Disk',\n\t\t},\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName:\n\t\t\t\t\t'Use this node to read and write files on the same computer running n8n. To handle files between different computers please use other nodes (e.g. FTP, HTTP Request, AWS).',\n\t\t\t\tname: 'info',\n\t\t\t\ttype: 'notice',\n\t\t\t\tdefault: '',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Read File(s) From Disk',\n\t\t\t\t\t\tvalue: 'read',\n\t\t\t\t\t\tdescription: 'Retrieve one or more files from the computer that runs n8n',\n\t\t\t\t\t\taction: 'Read File(s) From Disk',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Write File to Disk',\n\t\t\t\t\t\tvalue: 'write',\n\t\t\t\t\t\tdescription: 'Create a binary file on the computer that runs n8n',\n\t\t\t\t\t\taction: 'Write File to Disk',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'read',\n\t\t\t},\n\t\t\t...read.description,\n\t\t\t...write.description,\n\t\t],\n\t};\n\n\tasync execute(this: IExecuteFunctions) {\n\t\tconst operation = this.getNodeParameter('operation', 0, 'read');\n\t\tconst items = this.getInputData();\n\t\tlet returnData: INodeExecutionData[] = [];\n\n\t\tif (operation === 'read') {\n\t\t\treturnData = await read.execute.call(this, items);\n\t\t}\n\n\t\tif (operation === 'write') {\n\t\t\treturnData = await write.execute.call(this, items);\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,0BAAoC;AAEpC,WAAsB;AACtB,YAAuB;AAEhB,MAAM,cAAmC;AAAA,EAAzC;AACN,uBAAoC;AAAA,MACnC,aAAa;AAAA,MACb,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO,CAAC,OAAO;AAAA,MACf,SAAS;AAAA,MACT,aAAa;AAAA,MACb,UAAU;AAAA,QACT,MAAM;AAAA,MACP;AAAA,MACA,QAAQ,CAAC,wCAAoB,IAAI;AAAA,MACjC,SAAS,CAAC,wCAAoB,IAAI;AAAA,MAClC,YAAY;AAAA,QACX;AAAA,UACC,aACC;AAAA,UACD,MAAM;AAAA,UACN,MAAM;AAAA,UACN,SAAS;AAAA,QACV;AAAA,QACA;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,kBAAkB;AAAA,UAClB,SAAS;AAAA,YACR;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aAAa;AAAA,cACb,QAAQ;AAAA,YACT;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,cACP,aAAa;AAAA,cACb,QAAQ;AAAA,YACT;AAAA,UACD;AAAA,UACA,SAAS;AAAA,QACV;AAAA,QACA,GAAG,KAAK;AAAA,QACR,GAAG,MAAM;AAAA,MACV;AAAA,IACD;AAAA;AAAA,EAEA,MAAM,UAAiC;AACtC,UAAM,YAAY,KAAK,iBAAiB,aAAa,GAAG,MAAM;AAC9D,UAAM,QAAQ,KAAK,aAAa;AAChC,QAAI,aAAmC,CAAC;AAExC,QAAI,cAAc,QAAQ;AACzB,mBAAa,MAAM,KAAK,QAAQ,KAAK,MAAM,KAAK;AAAA,IACjD;AAEA,QAAI,cAAc,SAAS;AAC1B,mBAAa,MAAM,MAAM,QAAQ,KAAK,MAAM,KAAK;AAAA,IAClD;AAEA,WAAO,CAAC,UAAU;AAAA,EACnB;AACD;","names":[]}