{"version":3,"sources":["../../../../nodes/Google/Calendar/GoogleCalendarTrigger.node.ts"],"sourcesContent":["import moment from 'moment-timezone';\nimport type {\n\tIDataObject,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n\tIPollFunctions,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeApiError, NodeOperationError } from 'n8n-workflow';\n\nimport {\n\tencodeURIComponentOnce,\n\tgetCalendars,\n\tgoogleApiRequest,\n\tgoogleApiRequestAllItems,\n} from './GenericFunctions';\n\nexport class GoogleCalendarTrigger implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Google Calendar Trigger',\n\t\tname: 'googleCalendarTrigger',\n\t\ticon: 'file:googleCalendar.svg',\n\t\tgroup: ['trigger'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"triggerOn\"]}}',\n\t\tdescription: 'Starts the workflow when Google Calendar events occur',\n\t\tdefaults: {\n\t\t\tname: 'Google Calendar Trigger',\n\t\t},\n\t\tinputs: [],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'googleCalendarOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tpolling: true,\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Calendar',\n\t\t\t\tname: 'calendarId',\n\t\t\t\ttype: 'resourceLocator',\n\t\t\t\tdefault: { mode: 'list', value: '' },\n\t\t\t\trequired: true,\n\t\t\t\tdescription: 'Google Calendar to operate on',\n\t\t\t\tmodes: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Calendar',\n\t\t\t\t\t\tname: 'list',\n\t\t\t\t\t\ttype: 'list',\n\t\t\t\t\t\tplaceholder: 'Select a Calendar...',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tsearchListMethod: 'getCalendars',\n\t\t\t\t\t\t\tsearchable: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'ID',\n\t\t\t\t\t\tname: 'id',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tvalidation: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'regex',\n\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\t// calendar ids are emails. W3C email regex with optional trailing whitespace.\n\t\t\t\t\t\t\t\t\tregex:\n\t\t\t\t\t\t\t\t\t\t'(^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*(?:[ \\t]+)*$)',\n\t\t\t\t\t\t\t\t\terrorMessage: 'Not a valid Google Calendar ID',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\textractValue: {\n\t\t\t\t\t\t\ttype: 'regex',\n\t\t\t\t\t\t\tregex: '(^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*)',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tplaceholder: 'name@google.com',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Trigger On',\n\t\t\t\tname: 'triggerOn',\n\t\t\t\ttype: 'options',\n\t\t\t\trequired: true,\n\t\t\t\tdefault: '',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Event Cancelled',\n\t\t\t\t\t\tvalue: 'eventCancelled',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Event Created',\n\t\t\t\t\t\tvalue: 'eventCreated',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Event Ended',\n\t\t\t\t\t\tvalue: 'eventEnded',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Event Started',\n\t\t\t\t\t\tvalue: 'eventStarted',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Event Updated',\n\t\t\t\t\t\tvalue: 'eventUpdated',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Options',\n\t\t\t\tname: 'options',\n\t\t\t\ttype: 'collection',\n\t\t\t\tplaceholder: 'Add option',\n\t\t\t\tdefault: {},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Match Term',\n\t\t\t\t\t\tname: 'matchTerm',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Free text search terms to filter events that match these terms in any field, except for extended properties',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t};\n\n\tmethods = {\n\t\tlistSearch: {\n\t\t\tgetCalendars,\n\t\t},\n\t};\n\n\tasync poll(this: IPollFunctions): Promise<INodeExecutionData[][] | null> {\n\t\tconst poolTimes = this.getNodeParameter('pollTimes.item', []) as IDataObject[];\n\t\tconst triggerOn = this.getNodeParameter('triggerOn', '') as string;\n\t\tconst calendarId = encodeURIComponentOnce(\n\t\t\tthis.getNodeParameter('calendarId', '', { extractValue: true }) as string,\n\t\t);\n\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\tconst matchTerm = this.getNodeParameter('options.matchTerm', '') as string;\n\n\t\tif (poolTimes.length === 0) {\n\t\t\tthrow new NodeOperationError(this.getNode(), 'Please set a poll time');\n\t\t}\n\n\t\tif (triggerOn === '') {\n\t\t\tthrow new NodeOperationError(this.getNode(), 'Please select an event');\n\t\t}\n\n\t\tif (calendarId === '') {\n\t\t\tthrow new NodeOperationError(this.getNode(), 'Please select a calendar');\n\t\t}\n\n\t\tconst now = moment().utc().format();\n\n\t\tconst startDate = (webhookData.lastTimeChecked as string) || now;\n\n\t\tconst endDate = now;\n\n\t\tconst qs: IDataObject = {\n\t\t\tshowDeleted: false,\n\t\t};\n\n\t\tif (matchTerm !== '') {\n\t\t\tqs.q = matchTerm;\n\t\t}\n\n\t\tlet events;\n\n\t\tif (\n\t\t\ttriggerOn === 'eventCreated' ||\n\t\t\ttriggerOn === 'eventUpdated' ||\n\t\t\ttriggerOn === 'eventCancelled'\n\t\t) {\n\t\t\tObject.assign(qs, {\n\t\t\t\tupdatedMin: startDate,\n\t\t\t\torderBy: 'updated',\n\t\t\t\tshowDeleted: triggerOn === 'eventCancelled',\n\t\t\t});\n\t\t} else if (triggerOn === 'eventStarted' || triggerOn === 'eventEnded') {\n\t\t\tObject.assign(qs, {\n\t\t\t\tsingleEvents: true,\n\t\t\t\ttimeMin: moment(startDate).startOf('second').utc().format(),\n\t\t\t\ttimeMax: moment(endDate).endOf('second').utc().format(),\n\t\t\t\torderBy: 'startTime',\n\t\t\t});\n\t\t}\n\n\t\tif (this.getMode() === 'manual') {\n\t\t\tdelete qs.updatedMin;\n\t\t\tdelete qs.timeMin;\n\t\t\tdelete qs.timeMax;\n\n\t\t\tqs.maxResults = 1;\n\t\t\tevents = await googleApiRequest.call(\n\t\t\t\tthis,\n\t\t\t\t'GET',\n\t\t\t\t`/calendar/v3/calendars/${calendarId}/events`,\n\t\t\t\t{},\n\t\t\t\tqs,\n\t\t\t);\n\t\t\tevents = events.items;\n\t\t} else {\n\t\t\tevents = await googleApiRequestAllItems.call(\n\t\t\t\tthis,\n\t\t\t\t'items',\n\t\t\t\t'GET',\n\t\t\t\t`/calendar/v3/calendars/${calendarId}/events`,\n\t\t\t\t{},\n\t\t\t\tqs,\n\t\t\t);\n\t\t\tif (triggerOn === 'eventCreated') {\n\t\t\t\tevents = events.filter((event: { created: string }) =>\n\t\t\t\t\tmoment(event.created).isBetween(startDate, endDate),\n\t\t\t\t);\n\t\t\t} else if (triggerOn === 'eventUpdated' || triggerOn === 'eventCancelled') {\n\t\t\t\tevents = events.filter(\n\t\t\t\t\t(event: { created: string; updated: string }) =>\n\t\t\t\t\t\t!moment(moment(event.created).format('YYYY-MM-DDTHH:mm:ss')).isSame(\n\t\t\t\t\t\t\tmoment(event.updated).format('YYYY-MM-DDTHH:mm:ss'),\n\t\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tif (triggerOn === 'eventCancelled') {\n\t\t\t\t\tevents = events.filter((event: { status: string }) => event.status === 'cancelled');\n\t\t\t\t}\n\t\t\t} else if (triggerOn === 'eventStarted') {\n\t\t\t\tevents = events.filter((event: { start: { dateTime: string } }) =>\n\t\t\t\t\tmoment(event.start.dateTime).isBetween(startDate, endDate, null, '[]'),\n\t\t\t\t);\n\t\t\t} else if (triggerOn === 'eventEnded') {\n\t\t\t\tevents = events.filter((event: { end: { dateTime: string } }) =>\n\t\t\t\t\tmoment(event.end.dateTime).isBetween(startDate, endDate, null, '[]'),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\twebhookData.lastTimeChecked = endDate;\n\n\t\tif (Array.isArray(events) && events.length) {\n\t\t\treturn [this.helpers.returnJsonArray(events)];\n\t\t}\n\n\t\tif (this.getMode() === 'manual') {\n\t\t\tthrow new NodeApiError(this.getNode(), {\n\t\t\t\tmessage: 'No data with the current filter could be found',\n\t\t\t});\n\t\t}\n\n\t\treturn null;\n\t}\n}\n"],"mappings":"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","names":["moment"]}