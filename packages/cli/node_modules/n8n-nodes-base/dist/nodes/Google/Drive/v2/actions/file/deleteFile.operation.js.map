{"version":3,"sources":["../../../../../../../nodes/Google/Drive/v2/actions/file/deleteFile.operation.ts"],"sourcesContent":["import type { IExecuteFunctions, INodeExecutionData, INodeProperties } from 'n8n-workflow';\n\nimport { updateDisplayOptions } from '@utils/utilities';\n\nimport { googleApiRequest } from '../../transport';\nimport { fileRLC } from '../common.descriptions';\n\nconst properties: INodeProperties[] = [\n\t{\n\t\t...fileRLC,\n\t\tdescription: 'The file to delete',\n\t},\n\t{\n\t\tdisplayName: 'Options',\n\t\tname: 'options',\n\t\ttype: 'collection',\n\t\tplaceholder: 'Add option',\n\t\tdefault: {},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Delete Permanently',\n\t\t\t\tname: 'deletePermanently',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\tdescription:\n\t\t\t\t\t'Whether to delete the file immediately. If false, the file will be moved to the trash.',\n\t\t\t},\n\t\t],\n\t},\n];\n\nconst displayOptions = {\n\tshow: {\n\t\tresource: ['file'],\n\t\toperation: ['deleteFile'],\n\t},\n};\n\nexport const description = updateDisplayOptions(displayOptions, properties);\n\nexport async function execute(this: IExecuteFunctions, i: number): Promise<INodeExecutionData[]> {\n\tconst fileId = this.getNodeParameter('fileId', i, undefined, {\n\t\textractValue: true,\n\t}) as string;\n\n\tconst deletePermanently = this.getNodeParameter('options.deletePermanently', i, false) as boolean;\n\n\tconst qs = {\n\t\tsupportsAllDrives: true,\n\t};\n\n\tif (deletePermanently) {\n\t\tawait googleApiRequest.call(this, 'DELETE', `/drive/v3/files/${fileId}`, undefined, qs);\n\t} else {\n\t\tawait googleApiRequest.call(this, 'PATCH', `/drive/v3/files/${fileId}`, { trashed: true }, qs);\n\t}\n\n\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\tthis.helpers.returnJsonArray({\n\t\t\tid: fileId,\n\t\t\tsuccess: true,\n\t\t}),\n\t\t{ itemData: { item: i } },\n\t);\n\n\treturn executionData;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,uBAAqC;AAErC,uBAAiC;AACjC,oBAAwB;AAExB,MAAM,aAAgC;AAAA,EACrC;AAAA,IACC,GAAG;AAAA,IACH,aAAa;AAAA,EACd;AAAA,EACA;AAAA,IACC,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,SAAS,CAAC;AAAA,IACV,SAAS;AAAA,MACR;AAAA,QACC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aACC;AAAA,MACF;AAAA,IACD;AAAA,EACD;AACD;AAEA,MAAM,iBAAiB;AAAA,EACtB,MAAM;AAAA,IACL,UAAU,CAAC,MAAM;AAAA,IACjB,WAAW,CAAC,YAAY;AAAA,EACzB;AACD;AAEO,MAAM,kBAAc,uCAAqB,gBAAgB,UAAU;AAE1E,eAAsB,QAAiC,GAA0C;AAChG,QAAM,SAAS,KAAK,iBAAiB,UAAU,GAAG,QAAW;AAAA,IAC5D,cAAc;AAAA,EACf,CAAC;AAED,QAAM,oBAAoB,KAAK,iBAAiB,6BAA6B,GAAG,KAAK;AAErF,QAAM,KAAK;AAAA,IACV,mBAAmB;AAAA,EACpB;AAEA,MAAI,mBAAmB;AACtB,UAAM,kCAAiB,KAAK,MAAM,UAAU,mBAAmB,MAAM,IAAI,QAAW,EAAE;AAAA,EACvF,OAAO;AACN,UAAM,kCAAiB,KAAK,MAAM,SAAS,mBAAmB,MAAM,IAAI,EAAE,SAAS,KAAK,GAAG,EAAE;AAAA,EAC9F;AAEA,QAAM,gBAAgB,KAAK,QAAQ;AAAA,IAClC,KAAK,QAAQ,gBAAgB;AAAA,MAC5B,IAAI;AAAA,MACJ,SAAS;AAAA,IACV,CAAC;AAAA,IACD,EAAE,UAAU,EAAE,MAAM,EAAE,EAAE;AAAA,EACzB;AAEA,SAAO;AACR;","names":[]}