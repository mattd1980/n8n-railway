{"version":3,"sources":["../../../../nodes/Google/Contacts/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHttpRequestMethods,\n\tILoadOptionsFunctions,\n\tIRequestOptions,\n\tJsonObject,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\nexport async function googleApiRequest(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tresource: string,\n\n\tbody: any = {},\n\tqs: IDataObject = {},\n\turi?: string,\n\theaders: IDataObject = {},\n): Promise<any> {\n\tconst options: IRequestOptions = {\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tmethod,\n\t\tbody,\n\t\tqs,\n\t\turi: uri || `https://people.googleapis.com/v1${resource}`,\n\t\tjson: true,\n\t};\n\ttry {\n\t\tif (Object.keys(headers).length !== 0) {\n\t\t\toptions.headers = Object.assign({}, options.headers, headers);\n\t\t}\n\t\tif (Object.keys(body as IDataObject).length === 0) {\n\t\t\tdelete options.body;\n\t\t}\n\n\t\treturn await this.helpers.requestOAuth2.call(this, 'googleContactsOAuth2Api', options);\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\nexport async function googleApiRequestAllItems(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions,\n\tpropertyName: string,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\n\tbody: any = {},\n\tquery: IDataObject = {},\n): Promise<any> {\n\tconst returnData: IDataObject[] = [];\n\n\tlet responseData;\n\tquery.pageSize = 100;\n\n\tdo {\n\t\tresponseData = await googleApiRequest.call(this, method, endpoint, body, query);\n\t\tquery.pageToken = responseData.nextPageToken;\n\t\treturnData.push.apply(returnData, responseData[propertyName] as IDataObject[]);\n\t} while (responseData.nextPageToken !== undefined && responseData.nextPageToken !== '');\n\n\treturn returnData;\n}\n\nexport const allFields = [\n\t'addresses',\n\t'biographies',\n\t'birthdays',\n\t'coverPhotos',\n\t'emailAddresses',\n\t'events',\n\t'genders',\n\t'imClients',\n\t'interests',\n\t'locales',\n\t'memberships',\n\t'metadata',\n\t'names',\n\t'nicknames',\n\t'occupations',\n\t'organizations',\n\t'phoneNumbers',\n\t'photos',\n\t'relations',\n\t'residences',\n\t'sipAddresses',\n\t'skills',\n\t'urls',\n\t'userDefined',\n];\n\nexport function cleanData(responseData: any) {\n\tconst fields = ['emailAddresses', 'phoneNumbers', 'relations', 'events', 'addresses'];\n\tconst newResponseData = [];\n\tif (!Array.isArray(responseData)) {\n\t\tresponseData = [responseData];\n\t}\n\tfor (let y = 0; y < responseData.length; y++) {\n\t\tconst object: { [key: string]: any } = {};\n\t\tfor (const key of Object.keys(responseData[y] as IDataObject)) {\n\t\t\tif (key === 'metadata') {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (key === 'photos') {\n\t\t\t\tresponseData[y][key] = responseData[y][key].map((photo: IDataObject) => photo.url);\n\t\t\t}\n\t\t\tif (key === 'names') {\n\t\t\t\tdelete responseData[y][key][0].metadata;\n\t\t\t\tresponseData[y][key] = responseData[y][key][0];\n\t\t\t}\n\t\t\tif (key === 'memberships') {\n\t\t\t\tfor (let i = 0; i < responseData[y][key].length; i++) {\n\t\t\t\t\tresponseData[y][key][i] = responseData[y][key][i].metadata.source.id;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (key === 'birthdays') {\n\t\t\t\tfor (let i = 0; i < responseData[y][key].length; i++) {\n\t\t\t\t\tconst { year, month, day } = responseData[y][key][i].date;\n\t\t\t\t\tresponseData[y][key][i] = `${month}/${day}/${year}`;\n\t\t\t\t}\n\t\t\t\tresponseData[y][key] = responseData[y][key][0];\n\t\t\t}\n\t\t\tif (key === 'userDefined' || key === 'organizations' || key === 'biographies') {\n\t\t\t\tfor (let i = 0; i < responseData[y][key].length; i++) {\n\t\t\t\t\tdelete responseData[y][key][i].metadata;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (fields.includes(key)) {\n\t\t\t\tconst value: { [key: string]: any } = {};\n\t\t\t\tfor (const data of responseData[y][key]) {\n\t\t\t\t\tlet result;\n\t\t\t\t\tif (value[data.type] === undefined) {\n\t\t\t\t\t\tvalue[data.type] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (key === 'relations') {\n\t\t\t\t\t\tresult = data.person;\n\t\t\t\t\t} else if (key === 'events') {\n\t\t\t\t\t\tconst { year, month, day } = data.date;\n\t\t\t\t\t\tresult = `${month}/${day}/${year}`;\n\t\t\t\t\t} else if (key === 'addresses') {\n\t\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\t\tresult = data;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult = data.value;\n\t\t\t\t\t}\n\t\t\t\t\tvalue[data.type].push(result);\n\t\t\t\t\tdelete data.type;\n\t\t\t\t}\n\t\t\t\tif (Object.keys(value).length > 0) {\n\t\t\t\t\tobject[key] = value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tobject[key] = responseData[y][key];\n\t\t\t}\n\t\t}\n\t\tnewResponseData.push(object);\n\t}\n\treturn newResponseData;\n}\n"],"mappings":"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","names":[]}