{"version":3,"sources":["../../../../../../nodes/Google/Analytics/v2/methods/loadOptions.ts"],"sourcesContent":["import type { ILoadOptionsFunctions, INodePropertyOptions } from 'n8n-workflow';\n\nimport { sortLoadOptions } from '../helpers/utils';\nimport { googleApiRequest } from '../transport';\n\nexport async function getDimensions(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\tconst returnData: INodePropertyOptions[] = [];\n\tconst { items: dimensions } = await googleApiRequest.call(\n\t\tthis,\n\t\t'GET',\n\t\t'',\n\t\t{},\n\t\t{},\n\t\t'https://www.googleapis.com/analytics/v3/metadata/ga/columns',\n\t);\n\n\tfor (const dimension of dimensions) {\n\t\tif (dimension.attributes.type === 'DIMENSION' && dimension.attributes.status !== 'DEPRECATED') {\n\t\t\treturnData.push({\n\t\t\t\tname: dimension.attributes.uiName,\n\t\t\t\tvalue: dimension.id,\n\t\t\t\tdescription: dimension.attributes.description,\n\t\t\t});\n\t\t}\n\t}\n\treturn sortLoadOptions(returnData);\n}\n\nexport async function getMetrics(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\tconst returnData: INodePropertyOptions[] = [];\n\tconst { items: metrics } = await googleApiRequest.call(\n\t\tthis,\n\t\t'GET',\n\t\t'',\n\t\t{},\n\t\t{},\n\t\t'https://www.googleapis.com/analytics/v3/metadata/ga/columns',\n\t);\n\n\tfor (const metric of metrics) {\n\t\tif (metric.attributes.type === 'METRIC' && metric.attributes.status !== 'DEPRECATED') {\n\t\t\treturnData.push({\n\t\t\t\tname: metric.attributes.uiName,\n\t\t\t\tvalue: metric.id,\n\t\t\t\tdescription: metric.attributes.description,\n\t\t\t});\n\t\t}\n\t}\n\treturn sortLoadOptions(returnData);\n}\n\nexport async function getViews(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\tconst returnData: INodePropertyOptions[] = [];\n\tconst { items } = await googleApiRequest.call(\n\t\tthis,\n\t\t'GET',\n\t\t'',\n\t\t{},\n\t\t{},\n\t\t'https://www.googleapis.com/analytics/v3/management/accounts/~all/webproperties/~all/profiles',\n\t);\n\n\tfor (const item of items) {\n\t\treturnData.push({\n\t\t\tname: item.name,\n\t\t\tvalue: item.id,\n\t\t\tdescription: item.websiteUrl,\n\t\t});\n\t}\n\n\treturn sortLoadOptions(returnData);\n}\n\nexport async function getProperties(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\tconst returnData: INodePropertyOptions[] = [];\n\n\tconst { accounts } = await googleApiRequest.call(\n\t\tthis,\n\t\t'GET',\n\t\t'',\n\t\t{},\n\t\t{},\n\t\t'https://analyticsadmin.googleapis.com/v1alpha/accounts',\n\t);\n\n\tfor (const acount of accounts || []) {\n\t\tconst { properties } = await googleApiRequest.call(\n\t\t\tthis,\n\t\t\t'GET',\n\t\t\t'',\n\t\t\t{},\n\t\t\t{ filter: `parent:${acount.name}` },\n\t\t\t'https://analyticsadmin.googleapis.com/v1alpha/properties',\n\t\t);\n\n\t\tif (properties && properties.length > 0) {\n\t\t\tfor (const property of properties) {\n\t\t\t\tconst name = property.displayName;\n\t\t\t\tconst value = property.name.split('/')[1] || property.name;\n\t\t\t\treturnData.push({ name, value });\n\t\t\t}\n\t\t}\n\t}\n\treturn sortLoadOptions(returnData);\n}\n\nexport async function getDimensionsGA4(\n\tthis: ILoadOptionsFunctions,\n): Promise<INodePropertyOptions[]> {\n\tconst returnData: INodePropertyOptions[] = [];\n\tconst propertyId = this.getNodeParameter('propertyId', undefined, {\n\t\textractValue: true,\n\t}) as string;\n\tconst { dimensions } = await googleApiRequest.call(\n\t\tthis,\n\t\t'GET',\n\t\t`/v1beta/properties/${propertyId}/metadata`,\n\t\t{},\n\t\t{ fields: 'dimensions' },\n\t);\n\n\tfor (const dimension of dimensions) {\n\t\treturnData.push({\n\t\t\tname: dimension.uiName as string,\n\t\t\tvalue: dimension.apiName as string,\n\t\t\tdescription: dimension.description as string,\n\t\t});\n\t}\n\treturn sortLoadOptions(returnData);\n}\n\nexport async function getMetricsGA4(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\tconst returnData: INodePropertyOptions[] = [];\n\tconst propertyId = this.getNodeParameter('propertyId', undefined, {\n\t\textractValue: true,\n\t}) as string;\n\tconst { metrics } = await googleApiRequest.call(\n\t\tthis,\n\t\t'GET',\n\t\t`/v1beta/properties/${propertyId}/metadata`,\n\t\t{},\n\t\t{ fields: 'metrics' },\n\t);\n\n\tfor (const metric of metrics) {\n\t\treturnData.push({\n\t\t\tname: metric.uiName as string,\n\t\t\tvalue: metric.apiName as string,\n\t\t\tdescription: metric.description as string,\n\t\t});\n\t}\n\treturn sortLoadOptions(returnData);\n}\n"],"mappings":"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","names":[]}