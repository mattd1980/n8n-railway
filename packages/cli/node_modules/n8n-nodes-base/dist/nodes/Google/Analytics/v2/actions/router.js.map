{"version":3,"sources":["../../../../../../nodes/Google/Analytics/v2/actions/router.ts"],"sourcesContent":["import type { IExecuteFunctions, INodeExecutionData } from 'n8n-workflow';\nimport { NodeOperationError } from 'n8n-workflow';\n\nimport type { GoogleAnalytics, ReportBasedOnProperty } from './node.type';\nimport * as report from './report/Report.resource';\nimport * as userActivity from './userActivity/UserActivity.resource';\n\nexport async function router(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\tconst items = this.getInputData();\n\tconst returnData: INodeExecutionData[] = [];\n\tconst resource = this.getNodeParameter<GoogleAnalytics>('resource', 0) as string;\n\tconst operation = this.getNodeParameter('operation', 0);\n\n\tlet responseData;\n\n\tconst googleAnalytics = {\n\t\tresource,\n\t\toperation,\n\t} as GoogleAnalytics;\n\n\tfor (let i = 0; i < items.length; i++) {\n\t\ttry {\n\t\t\tswitch (googleAnalytics.resource) {\n\t\t\t\tcase 'report':\n\t\t\t\t\tconst propertyType = this.getNodeParameter('propertyType', 0) as string;\n\t\t\t\t\tconst operationBasedOnProperty =\n\t\t\t\t\t\t`${googleAnalytics.operation}${propertyType}` as ReportBasedOnProperty;\n\t\t\t\t\tresponseData = await report[operationBasedOnProperty].execute.call(this, i);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'userActivity':\n\t\t\t\t\tresponseData = await userActivity[googleAnalytics.operation].execute.call(this, i);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new NodeOperationError(this.getNode(), `The resource \"${resource}\" is not known`);\n\t\t\t}\n\n\t\t\treturnData.push(...responseData);\n\t\t} catch (error) {\n\t\t\tif (this.continueOnFail()) {\n\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t);\n\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n\treturn [returnData];\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,0BAAmC;AAGnC,aAAwB;AACxB,mBAA8B;AAE9B,eAAsB,SAAiE;AACtF,QAAM,QAAQ,KAAK,aAAa;AAChC,QAAM,aAAmC,CAAC;AAC1C,QAAM,WAAW,KAAK,iBAAkC,YAAY,CAAC;AACrE,QAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AAEtD,MAAI;AAEJ,QAAM,kBAAkB;AAAA,IACvB;AAAA,IACA;AAAA,EACD;AAEA,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACtC,QAAI;AACH,cAAQ,gBAAgB,UAAU;AAAA,QACjC,KAAK;AACJ,gBAAM,eAAe,KAAK,iBAAiB,gBAAgB,CAAC;AAC5D,gBAAM,2BACL,GAAG,gBAAgB,SAAS,GAAG,YAAY;AAC5C,yBAAe,MAAM,OAAO,wBAAwB,EAAE,QAAQ,KAAK,MAAM,CAAC;AAC1E;AAAA,QACD,KAAK;AACJ,yBAAe,MAAM,aAAa,gBAAgB,SAAS,EAAE,QAAQ,KAAK,MAAM,CAAC;AACjF;AAAA,QACD;AACC,gBAAM,IAAI,uCAAmB,KAAK,QAAQ,GAAG,iBAAiB,QAAQ,gBAAgB;AAAA,MACxF;AAEA,iBAAW,KAAK,GAAG,YAAY;AAAA,IAChC,SAAS,OAAO;AACf,UAAI,KAAK,eAAe,GAAG;AAC1B,cAAM,qBAAqB,KAAK,QAAQ;AAAA,UACvC,KAAK,QAAQ,gBAAgB,EAAE,OAAO,MAAM,QAAQ,CAAC;AAAA,UACrD,EAAE,UAAU,EAAE,MAAM,EAAE,EAAE;AAAA,QACzB;AACA,mBAAW,KAAK,GAAG,kBAAkB;AACrC;AAAA,MACD;AACA,YAAM;AAAA,IACP;AAAA,EACD;AACA,SAAO,CAAC,UAAU;AACnB;","names":[]}