{"version":3,"sources":["../../../../nodes/Google/Chat/GoogleChat.node.ts"],"sourcesContent":["import jwt from 'jsonwebtoken';\nimport moment from 'moment-timezone';\nimport type {\n\tIExecuteFunctions,\n\tICredentialsDecrypted,\n\tICredentialTestFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodeCredentialTestResult,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n\tIRequestOptions,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeOperationError, SEND_AND_WAIT_OPERATION } from 'n8n-workflow';\n\nimport {\n\t// attachmentFields,\n\t// attachmentOperations,\n\t// incomingWebhookFields,\n\t// incomingWebhookOperations,\n\t// mediaFields,\n\t// mediaOperations,\n\tmemberFields,\n\tmemberOperations,\n\tmessageFields,\n\tmessageOperations,\n\tspaceFields,\n\tspaceIdProperty,\n\tspaceOperations,\n} from './descriptions';\nimport {\n\tcreateSendAndWaitMessageBody,\n\tgoogleApiRequest,\n\tgoogleApiRequestAllItems,\n\tvalidateJSON,\n} from './GenericFunctions';\nimport type { IMessage, IMessageUi } from './MessageInterface';\nimport { configureWaitTillDate } from '../../../utils/sendAndWait/configureWaitTillDate.util';\nimport { sendAndWaitWebhooksDescription } from '../../../utils/sendAndWait/descriptions';\nimport { getSendAndWaitProperties, sendAndWaitWebhook } from '../../../utils/sendAndWait/utils';\n\nexport class GoogleChat implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Google Chat',\n\t\tname: 'googleChat',\n\t\ticon: 'file:googleChat.svg',\n\t\tgroup: ['input'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume Google Chat API',\n\t\tdefaults: {\n\t\t\tname: 'Google Chat',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\twebhooks: sendAndWaitWebhooksDescription,\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'googleApi',\n\t\t\t\trequired: true,\n\t\t\t\ttestedBy: 'testGoogleTokenAuth',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['serviceAccount'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'googleChatOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['oAuth2'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Authentication',\n\t\t\t\tname: 'authentication',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-display-name-miscased\n\t\t\t\t\t\tname: 'OAuth2 (recommended)',\n\t\t\t\t\t\tvalue: 'oAuth2',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Service Account',\n\t\t\t\t\t\tvalue: 'serviceAccount',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'serviceAccount',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\trequired: true,\n\t\t\t\tnoDataExpression: true,\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t// {\n\t\t\t\t\t// \tname: 'Attachment',\n\t\t\t\t\t// \tvalue: 'attachment',\n\t\t\t\t\t// },\n\t\t\t\t\t// {\n\t\t\t\t\t// \tname: 'Incoming Webhook',\n\t\t\t\t\t// \tvalue: 'incomingWebhook',\n\t\t\t\t\t// },\n\t\t\t\t\t// {\n\t\t\t\t\t// \tname: 'Media',\n\t\t\t\t\t// \tvalue: 'media',\n\t\t\t\t\t// },\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Member',\n\t\t\t\t\t\tvalue: 'member',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Message',\n\t\t\t\t\t\tvalue: 'message',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Space',\n\t\t\t\t\t\tvalue: 'space',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'message',\n\t\t\t},\n\t\t\t// ...attachmentOperations,\n\t\t\t// ...attachmentFields,\n\t\t\t// ...incomingWebhookOperations,\n\t\t\t// ...incomingWebhookFields,\n\t\t\t// ...mediaOperations,\n\t\t\t// ...mediaFields,\n\t\t\t...memberOperations,\n\t\t\t...memberFields,\n\t\t\t...messageOperations,\n\t\t\t...messageFields,\n\t\t\t...spaceOperations,\n\t\t\t...spaceFields,\n\t\t\t...getSendAndWaitProperties([spaceIdProperty], 'message', undefined, {\n\t\t\t\tnoButtonStyle: true,\n\t\t\t\tdefaultApproveLabel: '✅ Approve',\n\t\t\t\tdefaultDisapproveLabel: '❌ Decline',\n\t\t\t}).filter((p) => p.name !== 'subject'),\n\t\t],\n\t};\n\n\twebhook = sendAndWaitWebhook;\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get all the spaces to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getSpaces(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst spaces = await googleApiRequestAllItems.call(this, 'spaces', 'GET', '/v1/spaces');\n\t\t\t\tfor (const space of spaces) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: space.displayName,\n\t\t\t\t\t\tvalue: space.name,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t\tcredentialTest: {\n\t\t\tasync testGoogleTokenAuth(\n\t\t\t\tthis: ICredentialTestFunctions,\n\t\t\t\tcredential: ICredentialsDecrypted,\n\t\t\t): Promise<INodeCredentialTestResult> {\n\t\t\t\tconst scopes = ['https://www.googleapis.com/auth/chat.bot'];\n\n\t\t\t\tconst now = moment().unix();\n\n\t\t\t\tconst email = (credential.data!.email as string).trim();\n\t\t\t\tconst privateKey = (credential.data!.privateKey as string).replace(/\\\\n/g, '\\n').trim();\n\n\t\t\t\ttry {\n\t\t\t\t\tconst signature = jwt.sign(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tiss: email,\n\t\t\t\t\t\t\tsub: credential.data!.delegatedEmail || email,\n\t\t\t\t\t\t\tscope: scopes.join(' '),\n\t\t\t\t\t\t\taud: 'https://oauth2.googleapis.com/token',\n\t\t\t\t\t\t\tiat: now,\n\t\t\t\t\t\t\texp: now,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tprivateKey,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\talgorithm: 'RS256',\n\t\t\t\t\t\t\theader: {\n\t\t\t\t\t\t\t\tkid: privateKey,\n\t\t\t\t\t\t\t\ttyp: 'JWT',\n\t\t\t\t\t\t\t\talg: 'RS256',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\n\t\t\t\t\tconst options: IRequestOptions = {\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\tform: {\n\t\t\t\t\t\t\tgrant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n\t\t\t\t\t\t\tassertion: signature,\n\t\t\t\t\t\t},\n\t\t\t\t\t\turi: 'https://oauth2.googleapis.com/token',\n\t\t\t\t\t\tjson: true,\n\t\t\t\t\t};\n\n\t\t\t\t\tconst response = await this.helpers.request(options);\n\n\t\t\t\t\tif (!response.access_token) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tstatus: 'Error',\n\t\t\t\t\t\t\tmessage: JSON.stringify(response),\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tstatus: 'Error',\n\t\t\t\t\t\tmessage: `${err.message}`,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tstatus: 'OK',\n\t\t\t\t\tmessage: 'Connection successful!',\n\t\t\t\t};\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst length = items.length;\n\t\tconst qs: IDataObject = {};\n\t\tlet responseData;\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\tif (resource === 'message' && operation === SEND_AND_WAIT_OPERATION) {\n\t\t\tconst spaceId = this.getNodeParameter('spaceId', 0) as string;\n\t\t\tconst body = createSendAndWaitMessageBody(this);\n\n\t\t\tawait googleApiRequest.call(this, 'POST', `/v1/${spaceId}/messages`, body);\n\n\t\t\tconst waitTill = configureWaitTillDate(this);\n\n\t\t\tawait this.putExecutionToWait(waitTill);\n\t\t\treturn [this.getInputData()];\n\t\t}\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'media') {\n\t\t\t\t\tif (operation === 'download') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//             media: download\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://developers.google.com/chat/reference/rest/v1/media/download\n\n\t\t\t\t\t\tconst resourceName = this.getNodeParameter('resourceName', i) as string;\n\n\t\t\t\t\t\tconst endpoint = `/v1/media/${resourceName}?alt=media`;\n\n\t\t\t\t\t\t// Return the data as a buffer\n\t\t\t\t\t\tconst encoding = null;\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\tendpoint,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tencoding,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst newItem: INodeExecutionData = {\n\t\t\t\t\t\t\tjson: items[i].json,\n\t\t\t\t\t\t\tbinary: {},\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (items[i].binary !== undefined) {\n\t\t\t\t\t\t\t// Create a shallow copy of the binary data so that the old\n\t\t\t\t\t\t\t// data references which do not get changed still stay behind\n\t\t\t\t\t\t\t// but the incoming data does not get changed.\n\t\t\t\t\t\t\tObject.assign(newItem.binary!, items[i].binary);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\titems[i] = newItem;\n\n\t\t\t\t\t\tconst binaryPropertyName = this.getNodeParameter('binaryPropertyName', i);\n\n\t\t\t\t\t\titems[i].binary![binaryPropertyName] = await this.helpers.prepareBinaryData(\n\t\t\t\t\t\t\tresponseData as Buffer,\n\t\t\t\t\t\t\tendpoint,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'space') {\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//             space: get\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://developers.google.com/chat/reference/rest/v1/spaces/get\n\n\t\t\t\t\t\tconst spaceId = this.getNodeParameter('spaceId', i) as string;\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(this, 'GET', `/v1/${spaceId}`);\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//             space: getAll\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://developers.google.com/chat/reference/rest/v1/spaces/list\n\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', 0);\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await googleApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'spaces',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/v1/spaces',\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tqs.pageSize = limit;\n\n\t\t\t\t\t\t\tresponseData = await googleApiRequest.call(this, 'GET', '/v1/spaces', undefined, qs);\n\t\t\t\t\t\t\tresponseData = responseData.spaces;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'member') {\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//             member: get\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://developers.google.com/chat/reference/rest/v1/spaces.members/get\n\n\t\t\t\t\t\tconst memberId = this.getNodeParameter('memberId', i) as string;\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(this, 'GET', `/v1/${memberId}`);\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//             member: getAll\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://developers.google.com/chat/reference/rest/v1/spaces.members/list\n\n\t\t\t\t\t\tconst spaceId = this.getNodeParameter('spaceId', i) as string;\n\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', 0);\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await googleApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'memberships',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/v1/${spaceId}/members`,\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tqs.pageSize = limit;\n\n\t\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/v1/${spaceId}/members`,\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.memberships;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'message') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//             message: create\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://developers.google.com/chat/reference/rest/v1/spaces.messages/create\n\n\t\t\t\t\t\tconst spaceId = this.getNodeParameter('spaceId', i) as string;\n\n\t\t\t\t\t\t// get additional fields for threadKey and requestId\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tif (additionalFields.threadKey) {\n\t\t\t\t\t\t\tqs.threadKey = additionalFields.threadKey;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.requestId) {\n\t\t\t\t\t\t\tqs.requestId = additionalFields.requestId;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet message: IMessage = {};\n\t\t\t\t\t\tconst jsonParameters = this.getNodeParameter('jsonParameters', i);\n\t\t\t\t\t\tif (jsonParameters) {\n\t\t\t\t\t\t\tconst messageJson = this.getNodeParameter('messageJson', i);\n\n\t\t\t\t\t\t\tif (messageJson instanceof Object) {\n\t\t\t\t\t\t\t\t// if it is an object\n\t\t\t\t\t\t\t\tmessage = messageJson as IMessage;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// if it is a string\n\t\t\t\t\t\t\t\tif (validateJSON(messageJson as string) !== undefined) {\n\t\t\t\t\t\t\t\t\tmessage = JSON.parse(messageJson as string) as IMessage;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t\t\t'Message (JSON) must be a valid json',\n\t\t\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst messageUi = this.getNodeParameter('messageUi', i) as IMessageUi;\n\t\t\t\t\t\t\tif (messageUi.text && messageUi.text !== '') {\n\t\t\t\t\t\t\t\tmessage.text = messageUi.text;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'Message Text must be provided.', {\n\t\t\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// \t// TODO: get cards from the UI\n\t\t\t\t\t\t\t// if (messageUi?.cards?.metadataValues && messageUi?.cards?.metadataValues.length !== 0) {\n\t\t\t\t\t\t\t// \tconst cards = messageUi.cards.metadataValues as IDataObject[]; // TODO: map cards to messageUi.cards.metadataValues\n\t\t\t\t\t\t\t// \tmessage.cards = cards;\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst body: IDataObject = {};\n\t\t\t\t\t\tObject.assign(body, message);\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/v1/${spaceId}/messages`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//             message: delete\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://developers.google.com/chat/reference/rest/v1/spaces.messages/delete\n\n\t\t\t\t\t\tconst messageId = this.getNodeParameter('messageId', i) as string;\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(this, 'DELETE', `/v1/${messageId}`);\n\t\t\t\t\t} else if (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//             message: get\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://developers.google.com/chat/reference/rest/v1/spaces.messages/get\n\n\t\t\t\t\t\tconst messageId = this.getNodeParameter('messageId', i) as string;\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(this, 'GET', `/v1/${messageId}`);\n\t\t\t\t\t} else if (operation === 'update') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//             message: update\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://developers.google.com/chat/reference/rest/v1/spaces.messages/update\n\n\t\t\t\t\t\tconst messageId = this.getNodeParameter('messageId', i) as string;\n\n\t\t\t\t\t\tlet message: IMessage = {};\n\t\t\t\t\t\tconst jsonParameters = this.getNodeParameter('jsonParameters', i);\n\t\t\t\t\t\tif (jsonParameters) {\n\t\t\t\t\t\t\tconst updateFieldsJson = this.getNodeParameter('updateFieldsJson', i);\n\n\t\t\t\t\t\t\tif (updateFieldsJson instanceof Object) {\n\t\t\t\t\t\t\t\t// if it is an object\n\t\t\t\t\t\t\t\tmessage = updateFieldsJson as IMessage;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// if it is a string\n\t\t\t\t\t\t\t\tif (validateJSON(updateFieldsJson as string) !== undefined) {\n\t\t\t\t\t\t\t\t\tmessage = JSON.parse(updateFieldsJson as string) as IMessage;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t\t\t'Update Fields (JSON) must be a valid json',\n\t\t\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst updateFieldsUi = this.getNodeParameter('updateFieldsUi', i) as IDataObject;\n\t\t\t\t\t\t\tif (updateFieldsUi.text) {\n\t\t\t\t\t\t\t\tmessage.text = updateFieldsUi.text as string;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// // TODO: get cards from the UI\n\t\t\t\t\t\t\t// if (updateFieldsUi.cards) {\n\t\t\t\t\t\t\t// \tmessage.cards = updateFieldsUi.cards as IDataObject[];\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst body: IDataObject = {};\n\t\t\t\t\t\tObject.assign(body, message);\n\n\t\t\t\t\t\t// get update mask\n\t\t\t\t\t\tlet updateMask = '';\n\t\t\t\t\t\tif (message.text) {\n\t\t\t\t\t\t\tupdateMask += 'text,';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (message.cards) {\n\t\t\t\t\t\t\tupdateMask += 'cards,';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tupdateMask = updateMask.slice(0, -1); // remove trailing comma\n\t\t\t\t\t\tqs.updateMask = updateMask;\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(this, 'PUT', `/v1/${messageId}`, body, qs);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'attachment') {\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//             attachment: get\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://developers.google.com/chat/reference/rest/v1/spaces.messages.attachments/get\n\n\t\t\t\t\t\tconst attachmentName = this.getNodeParameter('attachmentName', i) as string;\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(this, 'GET', `/v1/${attachmentName}`);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'incomingWebhook') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// ----------------------------------------\n\t\t\t\t\t\t//             incomingWebhook: create\n\t\t\t\t\t\t// ----------------------------------------\n\n\t\t\t\t\t\t// https://developers.google.com/chat/how-tos/webhooks\n\n\t\t\t\t\t\tconst uri = this.getNodeParameter('incomingWebhookUrl', i) as string;\n\n\t\t\t\t\t\t// get additional fields for threadKey\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tif (additionalFields.threadKey) {\n\t\t\t\t\t\t\tqs.threadKey = additionalFields.threadKey;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet message: IMessage = {};\n\t\t\t\t\t\tconst jsonParameters = this.getNodeParameter('jsonParameters', i);\n\t\t\t\t\t\tif (jsonParameters) {\n\t\t\t\t\t\t\tconst messageJson = this.getNodeParameter('messageJson', i);\n\n\t\t\t\t\t\t\tif (messageJson instanceof Object) {\n\t\t\t\t\t\t\t\t// if it is an object\n\t\t\t\t\t\t\t\tmessage = messageJson as IMessage;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// if it is a string\n\t\t\t\t\t\t\t\tif (validateJSON(messageJson as string) !== undefined) {\n\t\t\t\t\t\t\t\t\tmessage = JSON.parse(messageJson as string) as IMessage;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t\t\t'Message (JSON) must be a valid json',\n\t\t\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst messageUi = this.getNodeParameter('messageUi', i) as IMessageUi;\n\t\t\t\t\t\t\tif (messageUi.text && messageUi.text !== '') {\n\t\t\t\t\t\t\t\tmessage.text = messageUi.text;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'Message Text must be provided.', {\n\t\t\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst body: IDataObject = {};\n\t\t\t\t\t\tObject.assign(body, message);\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(this, 'POST', '', body, qs, uri, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject),\n\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t);\n\t\t\t\treturnData.push(...executionData);\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\t// Return the actual reason as error\n\t\t\t\t\tif (operation === 'download') {\n\t\t\t\t\t\titems[i].json = { error: error.message };\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\tif (operation === 'download') {\n\t\t\t// For file downloads the files get attached to the existing items\n\t\t\treturn [items];\n\t\t} else {\n\t\t\t// For all other ones does the output get replaced\n\t\t\treturn [returnData];\n\t\t}\n\t}\n}\n"],"mappings":"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","names":["import_descriptions","moment","jwt"]}