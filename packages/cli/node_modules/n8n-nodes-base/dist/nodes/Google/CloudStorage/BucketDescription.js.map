{"version":3,"sources":["../../../../nodes/Google/CloudStorage/BucketDescription.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteSingleFunctions,\n\tIHttpRequestOptions,\n\tINodeExecutionData,\n\tINodeProperties,\n} from 'n8n-workflow';\n\n// Projection field controls the page limit maximum\n// When not returning all, return the max number for the current projection parameter\nconst PAGE_LIMITS = {\n\tnoAcl: 1000,\n\tfull: 200,\n};\n\n// Define a JSON parse function here to use it in two places\nasync function parseJSONBody(\n\tthis: IExecuteSingleFunctions,\n\trequestOptions: IHttpRequestOptions,\n): Promise<IHttpRequestOptions> {\n\tif (!requestOptions.body) requestOptions.body = {};\n\tconst body = this.getNodeParameter('createBody') as IDataObject;\n\n\t// Parse all the JSON fields\n\tif (body.acl) {\n\t\ttry {\n\t\t\tbody.acl = JSON.parse(body.acl as string);\n\t\t} catch (error) {}\n\t}\n\tif (body.billing) {\n\t\ttry {\n\t\t\tbody.billing = JSON.parse(body.billing as string);\n\t\t} catch (error) {}\n\t}\n\tif (body.cors) {\n\t\ttry {\n\t\t\tbody.cors = JSON.parse(body.cors as string);\n\t\t} catch (error) {}\n\t}\n\tif (body.customPlacementConfig) {\n\t\ttry {\n\t\t\tbody.customPlacementConfig = JSON.parse(body.customPlacementConfig as string);\n\t\t} catch (error) {}\n\t}\n\tif (body.dataLocations) {\n\t\ttry {\n\t\t\tbody.dataLocations = JSON.parse(body.dataLocations as string);\n\t\t} catch (error) {}\n\t}\n\tif (body.defaultObjectAcl) {\n\t\ttry {\n\t\t\tbody.defaultObjectAcl = JSON.parse(body.defaultObjectAcl as string);\n\t\t} catch (error) {}\n\t}\n\tif (body.encryption) {\n\t\ttry {\n\t\t\tbody.encryption = JSON.parse(body.encryption as string);\n\t\t} catch (error) {}\n\t}\n\tif (body.iamConfiguration) {\n\t\ttry {\n\t\t\tbody.iamConfiguration = JSON.parse(body.iamConfiguration as string);\n\t\t} catch (error) {}\n\t}\n\tif (body.labels) {\n\t\ttry {\n\t\t\tbody.labels = JSON.parse(body.labels as string);\n\t\t} catch (error) {}\n\t}\n\tif (body.lifecycle) {\n\t\ttry {\n\t\t\tbody.lifecycle = JSON.parse(body.lifecycle as string);\n\t\t} catch (error) {}\n\t}\n\tif (body.logging) {\n\t\ttry {\n\t\t\tbody.logging = JSON.parse(body.logging as string);\n\t\t} catch (error) {}\n\t}\n\tif (body.retentionPolicy) {\n\t\ttry {\n\t\t\tbody.retentionPolicy = JSON.parse(body.retentionPolicy as string);\n\t\t} catch (error) {}\n\t}\n\tif (body.versioning) {\n\t\ttry {\n\t\t\tbody.versioning = JSON.parse(body.versioning as string);\n\t\t} catch (error) {}\n\t}\n\tif (body.website) {\n\t\ttry {\n\t\t\tbody.website = JSON.parse(body.website as string);\n\t\t} catch (error) {}\n\t}\n\n\trequestOptions.body = Object.assign(requestOptions.body, body);\n\treturn requestOptions;\n}\n\nexport const bucketOperations: INodeProperties[] = [\n\t{\n\t\tdisplayName: 'Operation',\n\t\tname: 'operation',\n\t\ttype: 'options',\n\t\tnoDataExpression: true,\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['bucket'],\n\t\t\t},\n\t\t},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tname: 'Create',\n\t\t\t\tvalue: 'create',\n\t\t\t\tdescription: 'Create a new Bucket',\n\t\t\t\trouting: {\n\t\t\t\t\trequest: {\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\turl: '/b/',\n\t\t\t\t\t\tqs: {},\n\t\t\t\t\t\tbody: {\n\t\t\t\t\t\t\tname: '={{$parameter[\"bucketName\"]}}',\n\t\t\t\t\t\t},\n\t\t\t\t\t\treturnFullResponse: true,\n\t\t\t\t\t},\n\t\t\t\t\tsend: {\n\t\t\t\t\t\tpreSend: [parseJSONBody],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\taction: 'Create a new Bucket',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Delete',\n\t\t\t\tvalue: 'delete',\n\t\t\t\tdescription: 'Delete an empty Bucket',\n\t\t\t\trouting: {\n\t\t\t\t\trequest: {\n\t\t\t\t\t\tmethod: 'DELETE',\n\t\t\t\t\t\turl: '={{\"/b/\" + $parameter[\"bucketName\"]}}',\n\t\t\t\t\t\treturnFullResponse: true,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\taction: 'Delete an empty Bucket',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Get',\n\t\t\t\tvalue: 'get',\n\t\t\t\tdescription: 'Get metadata for a specific Bucket',\n\t\t\t\trouting: {\n\t\t\t\t\trequest: {\n\t\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\t\turl: '={{\"/b/\" + $parameter[\"bucketName\"]}}',\n\t\t\t\t\t\treturnFullResponse: true,\n\t\t\t\t\t\tqs: {},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\taction: 'Get a Bucket',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Get Many',\n\t\t\t\tvalue: 'getAll',\n\t\t\t\tdescription: 'Get list of Buckets',\n\t\t\t\trouting: {\n\t\t\t\t\trequest: {\n\t\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\t\turl: '/b/',\n\t\t\t\t\t\tqs: {},\n\t\t\t\t\t},\n\t\t\t\t\tsend: {\n\t\t\t\t\t\tpaginate: true,\n\t\t\t\t\t\tpreSend: [\n\t\t\t\t\t\t\tasync function (this, requestOptions) {\n\t\t\t\t\t\t\t\tif (!requestOptions.qs) requestOptions.qs = {};\n\t\t\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll') as boolean;\n\n\t\t\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\t\t\tconst key = this.getNodeParameter('projection') as string;\n\t\t\t\t\t\t\t\t\trequestOptions.qs.maxResults =\n\t\t\t\t\t\t\t\t\t\tkey === 'noAcl' ? PAGE_LIMITS.noAcl : PAGE_LIMITS.full;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn requestOptions;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\toperations: {\n\t\t\t\t\t\tasync pagination(this, requestOptions) {\n\t\t\t\t\t\t\tif (!requestOptions.options.qs) requestOptions.options.qs = {};\n\t\t\t\t\t\t\tlet executions: INodeExecutionData[] = [];\n\t\t\t\t\t\t\tlet responseData: INodeExecutionData[];\n\t\t\t\t\t\t\tlet nextPageToken: string | undefined = undefined;\n\t\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll') as boolean;\n\n\t\t\t\t\t\t\tconst extractBucketsList = (page: INodeExecutionData) => {\n\t\t\t\t\t\t\t\tconst buckets = page.json.items as IDataObject[];\n\t\t\t\t\t\t\t\tif (buckets) {\n\t\t\t\t\t\t\t\t\texecutions = executions.concat(buckets.map((bucket) => ({ json: bucket })));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\trequestOptions.options.qs.pageToken = nextPageToken;\n\t\t\t\t\t\t\t\tresponseData = await this.makeRoutingRequest(requestOptions);\n\n\t\t\t\t\t\t\t\t// Check for another page\n\t\t\t\t\t\t\t\tconst lastItem = responseData[responseData.length - 1].json;\n\t\t\t\t\t\t\t\tnextPageToken = lastItem.nextPageToken as string | undefined;\n\n\t\t\t\t\t\t\t\t// Extract just the list of buckets from the page data\n\t\t\t\t\t\t\t\tresponseData.forEach(extractBucketsList);\n\t\t\t\t\t\t\t\t// If we don't return all, just return the first page\n\t\t\t\t\t\t\t} while (returnAll && nextPageToken);\n\n\t\t\t\t\t\t\t// Return all execution responses as an array\n\t\t\t\t\t\t\treturn executions;\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\taction: 'Get a list of Buckets for a given project',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Update',\n\t\t\t\tvalue: 'update',\n\t\t\t\tdescription: 'Update the metadata of a bucket',\n\t\t\t\trouting: {\n\t\t\t\t\trequest: {\n\t\t\t\t\t\tmethod: 'PATCH',\n\t\t\t\t\t\turl: '={{\"/b/\" + $parameter[\"bucketName\"]}}',\n\t\t\t\t\t\tqs: {\n\t\t\t\t\t\t\tproject: '={{$parameter[\"projectId\"]}}',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbody: {},\n\t\t\t\t\t\treturnFullResponse: true,\n\t\t\t\t\t},\n\t\t\t\t\tsend: {\n\t\t\t\t\t\tpreSend: [parseJSONBody],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\taction: 'Update the metadata of a Bucket',\n\t\t\t},\n\t\t],\n\t\tdefault: 'getAll',\n\t},\n];\n\nexport const bucketFields: INodeProperties[] = [\n\t{\n\t\tdisplayName: 'Project ID',\n\t\tname: 'projectId',\n\t\ttype: 'string',\n\t\trequired: true,\n\t\tplaceholder: 'Project ID',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['bucket'],\n\t\t\t\toperation: ['create', 'getAll'],\n\t\t\t},\n\t\t},\n\t\tdefault: '',\n\t\trouting: {\n\t\t\trequest: {\n\t\t\t\tqs: {\n\t\t\t\t\tproject: '={{$value}}',\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tdisplayName: 'Bucket Name',\n\t\tname: 'bucketName',\n\t\ttype: 'string',\n\t\tplaceholder: 'Bucket Name',\n\t\trequired: true,\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['bucket'],\n\t\t\t\toperation: ['create', 'get', 'update', 'delete'],\n\t\t\t},\n\t\t},\n\t\tdefault: '',\n\t},\n\t{\n\t\tdisplayName: 'Prefix',\n\t\tname: 'prefix',\n\t\ttype: 'string',\n\t\tplaceholder: 'Filter for Bucket Names',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['bucket'],\n\t\t\t\toperation: ['getAll'],\n\t\t\t},\n\t\t},\n\t\tdefault: '',\n\t\trouting: {\n\t\t\trequest: {\n\t\t\t\tqs: {\n\t\t\t\t\tprefix: '={{$value}}',\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tdisplayName: 'Projection',\n\t\tname: 'projection',\n\t\ttype: 'options',\n\t\tnoDataExpression: true,\n\t\toptions: [\n\t\t\t{\n\t\t\t\tname: 'All Properties',\n\t\t\t\tvalue: 'full',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'No ACL',\n\t\t\t\tvalue: 'noAcl',\n\t\t\t},\n\t\t],\n\t\tdefault: 'noAcl',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['bucket'],\n\t\t\t\toperation: ['create', 'get', 'getAll', 'update'],\n\t\t\t},\n\t\t},\n\t\trouting: {\n\t\t\trequest: {\n\t\t\t\tqs: {\n\t\t\t\t\tprojection: '={{$value}}',\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tdisplayName: 'Return All',\n\t\tname: 'returnAll',\n\t\ttype: 'boolean',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['bucket'],\n\t\t\t\toperation: ['getAll'],\n\t\t\t},\n\t\t},\n\t\tdefault: false,\n\t\tdescription: 'Whether to return all results or only up to a given limit',\n\t},\n\t{\n\t\tdisplayName: 'Filters',\n\t\tname: 'getFilters',\n\t\ttype: 'collection',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['bucket'],\n\t\t\t\toperation: ['delete', 'get', 'update'],\n\t\t\t},\n\t\t},\n\t\tdefault: {},\n\t\tplaceholder: 'Add Filter',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Metageneration Match',\n\t\t\t\tname: 'ifMetagenerationMatch',\n\t\t\t\ttype: 'number',\n\t\t\t\tdescription:\n\t\t\t\t\t'Only return data if the metageneration value of the Bucket matches the sent value',\n\t\t\t\tdefault: 0,\n\t\t\t\trouting: {\n\t\t\t\t\trequest: {\n\t\t\t\t\t\tqs: {\n\t\t\t\t\t\t\tifMetagenerationMatch: '={{$value}}',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Metageneration Exclude',\n\t\t\t\tname: 'ifMetagenerationNotMatch',\n\t\t\t\ttype: 'number',\n\t\t\t\tdescription:\n\t\t\t\t\t'Only return data if the metageneration value of the Bucket does not match the sent value',\n\t\t\t\tdefault: 0,\n\t\t\t\trouting: {\n\t\t\t\t\trequest: {\n\t\t\t\t\t\tqs: {\n\t\t\t\t\t\t\tifMetagenerationNotMatch: '={{$value}}',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tdisplayName: 'Predefined Access Control',\n\t\tname: 'createAcl',\n\t\ttype: 'collection',\n\t\tnoDataExpression: true,\n\t\tdefault: {},\n\t\tplaceholder: 'Add Access Control Parameters',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['bucket'],\n\t\t\t\toperation: ['create', 'update'],\n\t\t\t},\n\t\t},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Predefined ACL',\n\t\t\t\tname: 'predefinedAcl',\n\t\t\t\ttype: 'options',\n\t\t\t\tdefault: 'authenticatedRead',\n\t\t\t\tplaceholder: 'Apply a predefined set of access controls to this bucket',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Authenticated Read',\n\t\t\t\t\t\tvalue: 'authenticatedRead',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Private',\n\t\t\t\t\t\tvalue: 'private',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Project Private',\n\t\t\t\t\t\tvalue: 'projectPrivate',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Public Read',\n\t\t\t\t\t\tvalue: 'publicRead',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Public Read/Write',\n\t\t\t\t\t\tvalue: 'publicReadWrite',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\trouting: {\n\t\t\t\t\trequest: {\n\t\t\t\t\t\tqs: {\n\t\t\t\t\t\t\tpredefinedAcl: '={{$value}}',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Predefined Default Object ACL',\n\t\t\t\tname: 'predefinedDefaultObjectAcl',\n\t\t\t\ttype: 'options',\n\t\t\t\tdefault: 'authenticatedRead',\n\t\t\t\tplaceholder: 'Apply a predefined set of default object access controls to this bucket',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Authenticated Read',\n\t\t\t\t\t\tvalue: 'authenticatedRead',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Bucket Owner Full Control',\n\t\t\t\t\t\tvalue: 'bucketOwnerFullControl',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Bucket Owner Read',\n\t\t\t\t\t\tvalue: 'bucketOwnerRead',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Private',\n\t\t\t\t\t\tvalue: 'private',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Project Private',\n\t\t\t\t\t\tvalue: 'projectPrivate',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Public Read',\n\t\t\t\t\t\tvalue: 'publicRead',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\trouting: {\n\t\t\t\t\trequest: {\n\t\t\t\t\t\tqs: {\n\t\t\t\t\t\t\tpredefinedObjectAcl: '={{$value}}',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tdisplayName: 'Additional Parameters',\n\t\tname: 'createBody',\n\t\ttype: 'collection',\n\t\tnoDataExpression: true,\n\t\tdefault: {},\n\t\tplaceholder: 'Add Metadata Parameter',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tresource: ['bucket'],\n\t\t\t\toperation: ['create', 'update'],\n\t\t\t},\n\t\t},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Access Control',\n\t\t\t\tname: 'acl',\n\t\t\t\ttype: 'json',\n\t\t\t\tdefault: '[]',\n\t\t\t\tplaceholder: 'Access controls on the Bucket',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Billing',\n\t\t\t\tname: 'billing',\n\t\t\t\ttype: 'json',\n\t\t\t\tdefault: '{}',\n\t\t\t\tplaceholder: \"The bucket's billing configuration\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'CORS',\n\t\t\t\tname: 'cors',\n\t\t\t\ttype: 'json',\n\t\t\t\tdefault: '[]',\n\t\t\t\tplaceholder: \"The bucket's Cross Origin Resource Sharing configuration\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Custom Placement Config',\n\t\t\t\tname: 'customPlacementConfig',\n\t\t\t\ttype: 'json',\n\t\t\t\tdefault: '{}',\n\t\t\t\tplaceholder: 'The configuration for the region(s) for the Bucket',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Data Locations',\n\t\t\t\tname: 'dataLocations',\n\t\t\t\ttype: 'json',\n\t\t\t\tdefault: '[]',\n\t\t\t\tplaceholder: 'The list of individual regions that comprise a dual-region Bucket',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Default Event Based Hold',\n\t\t\t\tname: 'defaultEventBasedHold',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tplaceholder: 'Whether or not to automatically apply an event based hold to new objects',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Default Object ACL',\n\t\t\t\tname: 'defaultObjectAcl',\n\t\t\t\ttype: 'json',\n\t\t\t\tdefault: '[]',\n\t\t\t\tplaceholder: 'Default Access Controls for new objects when no ACL is provided',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Encryption',\n\t\t\t\tname: 'encryption',\n\t\t\t\ttype: 'json',\n\t\t\t\tdefault: '{}',\n\t\t\t\tplaceholder: 'Encryption configuration for a bucket',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'IAM Configuration',\n\t\t\t\tname: 'iamConfiguration',\n\t\t\t\ttype: 'json',\n\t\t\t\tdefault: '{}',\n\t\t\t\tplaceholder: \"The bucket's IAM configuration\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Labels',\n\t\t\t\tname: 'labels',\n\t\t\t\ttype: 'json',\n\t\t\t\tdefault: '{}',\n\t\t\t\tplaceholder: 'User provided bucket labels, in key/value pairs',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Lifecycle',\n\t\t\t\tname: 'lifecycle',\n\t\t\t\ttype: 'json',\n\t\t\t\tdefault: '{}',\n\t\t\t\tplaceholder: \"The bucket's lifecycle configuration\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Location',\n\t\t\t\tname: 'location',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: 'US',\n\t\t\t\tplaceholder: 'The location of the bucket',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Logging',\n\t\t\t\tname: 'logging',\n\t\t\t\ttype: 'json',\n\t\t\t\tdefault: '{}',\n\t\t\t\tplaceholder: \"The bucket's logging configuration\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Retention Policy',\n\t\t\t\tname: 'retentionPolicy',\n\t\t\t\ttype: 'json',\n\t\t\t\tdefault: '{}',\n\t\t\t\tplaceholder: \"The bucket's retention policy\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Recovery Point Objective',\n\t\t\t\tname: 'rpo',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: 'DEFAULT',\n\t\t\t\tplaceholder: 'The recovery point objective for the bucket',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Storage Class',\n\t\t\t\tname: 'storageClass',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: 'STANDARD',\n\t\t\t\tplaceholder: \"The bucket's default storage class for objects that don't define one\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Versioning',\n\t\t\t\tname: 'versioning',\n\t\t\t\ttype: 'json',\n\t\t\t\tdefault: '{}',\n\t\t\t\tplaceholder: \"The bucket's versioning configuration\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Website',\n\t\t\t\tname: 'website',\n\t\t\t\ttype: 'json',\n\t\t\t\tdefault: '{}',\n\t\t\t\tplaceholder: \"The bucket's website configuration for when it is used to host a website\",\n\t\t\t},\n\t\t],\n\t},\n];\n"],"mappings":"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","names":[]}