{"version":3,"sources":["../../../../nodes/Google/Task/GoogleTasks.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes } from 'n8n-workflow';\n\nimport { googleApiRequest, googleApiRequestAllItems } from './GenericFunctions';\nimport { taskFields, taskOperations } from './TaskDescription';\n\nexport class GoogleTasks implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Google Tasks',\n\t\tname: 'googleTasks',\n\n\t\ticon: 'file:googleTasks.svg',\n\t\tgroup: ['input'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume Google Tasks API',\n\t\tdefaults: {\n\t\t\tname: 'Google Tasks',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'googleTasksOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Task',\n\t\t\t\t\t\tvalue: 'task',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'task',\n\t\t\t},\n\t\t\t...taskOperations,\n\t\t\t...taskFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get all the tasklists to display them to user so that they can select them easily\n\n\t\t\tasync getTasks(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst tasks = await googleApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'items',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/tasks/v1/users/@me/lists',\n\t\t\t\t);\n\t\t\t\tfor (const task of tasks) {\n\t\t\t\t\tconst taskName = task.title;\n\t\t\t\t\tconst taskId = task.id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: taskName,\n\t\t\t\t\t\tvalue: taskId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst length = items.length;\n\t\tconst qs: IDataObject = {};\n\t\tlet responseData;\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\t\tlet body: IDataObject = {};\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'task') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tbody = {};\n\t\t\t\t\t\t//https://developers.google.com/tasks/v1/reference/tasks/insert\n\t\t\t\t\t\tconst taskId = this.getNodeParameter('task', i) as string;\n\t\t\t\t\t\tbody.title = this.getNodeParameter('title', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tif (additionalFields.parent) {\n\t\t\t\t\t\t\tqs.parent = additionalFields.parent as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.previous) {\n\t\t\t\t\t\t\tqs.previous = additionalFields.previous as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.status) {\n\t\t\t\t\t\t\tbody.status = additionalFields.status as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.notes) {\n\t\t\t\t\t\t\tbody.notes = additionalFields.notes as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.dueDate) {\n\t\t\t\t\t\t\tbody.due = additionalFields.dueDate as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.completed) {\n\t\t\t\t\t\t\tbody.completed = additionalFields.completed as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.deleted) {\n\t\t\t\t\t\t\tbody.deleted = additionalFields.deleted as boolean;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/tasks/v1/lists/${taskId}/tasks`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\t//https://developers.google.com/tasks/v1/reference/tasks/delete\n\t\t\t\t\t\tconst taskListId = this.getNodeParameter('task', i) as string;\n\t\t\t\t\t\tconst taskId = this.getNodeParameter('taskId', i) as string;\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/tasks/v1/lists/${taskListId}/tasks/${taskId}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\t//https://developers.google.com/tasks/v1/reference/tasks/get\n\t\t\t\t\t\tconst taskListId = this.getNodeParameter('task', i) as string;\n\t\t\t\t\t\tconst taskId = this.getNodeParameter('taskId', i) as string;\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/tasks/v1/lists/${taskListId}/tasks/${taskId}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\t//https://developers.google.com/tasks/v1/reference/tasks/list\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst taskListId = this.getNodeParameter('task', i) as string;\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\tshowCompleted = true,\n\t\t\t\t\t\t\tshowDeleted = false,\n\t\t\t\t\t\t\tshowHidden = false,\n\t\t\t\t\t\t\t...options\n\t\t\t\t\t\t} = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tif (options.completedMax) {\n\t\t\t\t\t\t\tqs.completedMax = options.completedMax as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.completedMin) {\n\t\t\t\t\t\t\tqs.completedMin = options.completedMin as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.dueMin) {\n\t\t\t\t\t\t\tqs.dueMin = options.dueMin as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.dueMax) {\n\t\t\t\t\t\t\tqs.dueMax = options.dueMax as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tqs.showCompleted = showCompleted;\n\t\t\t\t\t\tqs.showDeleted = showDeleted;\n\t\t\t\t\t\tqs.showHidden = showHidden;\n\n\t\t\t\t\t\tif (options.updatedMin) {\n\t\t\t\t\t\t\tqs.updatedMin = options.updatedMin as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await googleApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'items',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/tasks/v1/lists/${taskListId}/tasks`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.maxResults = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/tasks/v1/lists/${taskListId}/tasks`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.items;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tbody = {};\n\t\t\t\t\t\t//https://developers.google.com/tasks/v1/reference/tasks/patch\n\t\t\t\t\t\tconst taskListId = this.getNodeParameter('task', i) as string;\n\t\t\t\t\t\tconst taskId = this.getNodeParameter('taskId', i) as string;\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\n\t\t\t\t\t\tif (updateFields.previous) {\n\t\t\t\t\t\t\tqs.previous = updateFields.previous as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateFields.status) {\n\t\t\t\t\t\t\tbody.status = updateFields.status as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateFields.notes) {\n\t\t\t\t\t\t\tbody.notes = updateFields.notes as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateFields.title) {\n\t\t\t\t\t\t\tbody.title = updateFields.title as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateFields.dueDate) {\n\t\t\t\t\t\t\tbody.due = updateFields.dueDate as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateFields.completed) {\n\t\t\t\t\t\t\tbody.completed = updateFields.completed as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateFields.deleted) {\n\t\t\t\t\t\t\tbody.deleted = updateFields.deleted as boolean;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PATCH',\n\t\t\t\t\t\t\t`/tasks/v1/lists/${taskListId}/tasks/${taskId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t);\n\n\t\t\t\treturnData.push(...executionData);\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":[]}