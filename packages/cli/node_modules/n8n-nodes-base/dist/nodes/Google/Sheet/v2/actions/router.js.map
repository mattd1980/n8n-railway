{"version":3,"sources":["../../../../../../nodes/Google/Sheet/v2/actions/router.ts"],"sourcesContent":["import { type IExecuteFunctions, type IDataObject, type INodeExecutionData } from 'n8n-workflow';\n\nimport * as sheet from './sheet/Sheet.resource';\nimport * as spreadsheet from './spreadsheet/SpreadSheet.resource';\nimport { GoogleSheet } from '../helpers/GoogleSheet';\nimport type { GoogleSheets, ResourceLocator } from '../helpers/GoogleSheets.types';\nimport { getSpreadsheetId } from '../helpers/GoogleSheets.utils';\n\nexport async function router(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\tlet operationResult: INodeExecutionData[] = [];\n\n\ttry {\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\tconst googleSheets = {\n\t\t\tresource,\n\t\t\toperation,\n\t\t} as GoogleSheets;\n\n\t\tlet results: INodeExecutionData[] | undefined;\n\t\tif (googleSheets.resource === 'sheet') {\n\t\t\tconst { mode, value } = this.getNodeParameter('documentId', 0) as IDataObject;\n\t\t\tconst spreadsheetId = getSpreadsheetId(\n\t\t\t\tthis.getNode(),\n\t\t\t\tmode as ResourceLocator,\n\t\t\t\tvalue as string,\n\t\t\t);\n\n\t\t\tconst googleSheet = new GoogleSheet(spreadsheetId, this);\n\n\t\t\tlet sheetId = '';\n\t\t\tlet sheetName = '';\n\n\t\t\tif (operation !== 'create') {\n\t\t\t\tconst sheetWithinDocument = this.getNodeParameter('sheetName', 0, undefined, {\n\t\t\t\t\textractValue: true,\n\t\t\t\t}) as string;\n\t\t\t\tconst { mode: sheetMode } = this.getNodeParameter('sheetName', 0) as {\n\t\t\t\t\tmode: ResourceLocator;\n\t\t\t\t};\n\n\t\t\t\tconst result = await googleSheet.spreadsheetGetSheet(\n\t\t\t\t\tthis.getNode(),\n\t\t\t\t\tsheetMode,\n\t\t\t\t\tsheetWithinDocument,\n\t\t\t\t);\n\t\t\t\tsheetId = result.sheetId.toString();\n\t\t\t\tsheetName = result.title;\n\t\t\t}\n\n\t\t\tswitch (operation) {\n\t\t\t\tcase 'create':\n\t\t\t\t\tsheetName = spreadsheetId;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'delete':\n\t\t\t\t\tsheetName = sheetId;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'remove':\n\t\t\t\t\tsheetName = `${spreadsheetId}||${sheetId}`;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tresults = await sheet[googleSheets.operation].execute.call(\n\t\t\t\tthis,\n\t\t\t\tgoogleSheet,\n\t\t\t\tsheetName,\n\t\t\t\tsheetId,\n\t\t\t);\n\t\t} else if (googleSheets.resource === 'spreadsheet') {\n\t\t\tresults = await spreadsheet[googleSheets.operation].execute.call(this);\n\t\t}\n\t\tif (results?.length) {\n\t\t\toperationResult = operationResult.concat(results);\n\t\t}\n\t} catch (error) {\n\t\tif (this.continueOnFail()) {\n\t\t\toperationResult.push({ json: this.getInputData(0)[0].json, error });\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\treturn [operationResult];\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,YAAuB;AACvB,kBAA6B;AAC7B,yBAA4B;AAE5B,0BAAiC;AAEjC,eAAsB,SAAiE;AACtF,MAAI,kBAAwC,CAAC;AAE7C,MAAI;AACH,UAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AACpD,UAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AAEtD,UAAM,eAAe;AAAA,MACpB;AAAA,MACA;AAAA,IACD;AAEA,QAAI;AACJ,QAAI,aAAa,aAAa,SAAS;AACtC,YAAM,EAAE,MAAM,MAAM,IAAI,KAAK,iBAAiB,cAAc,CAAC;AAC7D,YAAM,oBAAgB;AAAA,QACrB,KAAK,QAAQ;AAAA,QACb;AAAA,QACA;AAAA,MACD;AAEA,YAAM,cAAc,IAAI,+BAAY,eAAe,IAAI;AAEvD,UAAI,UAAU;AACd,UAAI,YAAY;AAEhB,UAAI,cAAc,UAAU;AAC3B,cAAM,sBAAsB,KAAK,iBAAiB,aAAa,GAAG,QAAW;AAAA,UAC5E,cAAc;AAAA,QACf,CAAC;AACD,cAAM,EAAE,MAAM,UAAU,IAAI,KAAK,iBAAiB,aAAa,CAAC;AAIhE,cAAM,SAAS,MAAM,YAAY;AAAA,UAChC,KAAK,QAAQ;AAAA,UACb;AAAA,UACA;AAAA,QACD;AACA,kBAAU,OAAO,QAAQ,SAAS;AAClC,oBAAY,OAAO;AAAA,MACpB;AAEA,cAAQ,WAAW;AAAA,QAClB,KAAK;AACJ,sBAAY;AACZ;AAAA,QACD,KAAK;AACJ,sBAAY;AACZ;AAAA,QACD,KAAK;AACJ,sBAAY,GAAG,aAAa,KAAK,OAAO;AACxC;AAAA,MACF;AAEA,gBAAU,MAAM,MAAM,aAAa,SAAS,EAAE,QAAQ;AAAA,QACrD;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,IACD,WAAW,aAAa,aAAa,eAAe;AACnD,gBAAU,MAAM,YAAY,aAAa,SAAS,EAAE,QAAQ,KAAK,IAAI;AAAA,IACtE;AACA,QAAI,SAAS,QAAQ;AACpB,wBAAkB,gBAAgB,OAAO,OAAO;AAAA,IACjD;AAAA,EACD,SAAS,OAAO;AACf,QAAI,KAAK,eAAe,GAAG;AAC1B,sBAAgB,KAAK,EAAE,MAAM,KAAK,aAAa,CAAC,EAAE,CAAC,EAAE,MAAM,MAAM,CAAC;AAAA,IACnE,OAAO;AACN,YAAM;AAAA,IACP;AAAA,EACD;AAEA,SAAO,CAAC,eAAe;AACxB;","names":[]}