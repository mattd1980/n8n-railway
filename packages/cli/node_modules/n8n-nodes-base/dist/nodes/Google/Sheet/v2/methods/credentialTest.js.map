{"version":3,"sources":["../../../../../../nodes/Google/Sheet/v2/methods/credentialTest.ts"],"sourcesContent":["import type {\n\tICredentialsDecrypted,\n\tICredentialTestFunctions,\n\tINodeCredentialTestResult,\n} from 'n8n-workflow';\n\nimport { getGoogleAccessToken } from '../../../GenericFunctions';\n\nexport async function googleApiCredentialTest(\n\tthis: ICredentialTestFunctions,\n\tcredential: ICredentialsDecrypted,\n): Promise<INodeCredentialTestResult> {\n\ttry {\n\t\tconst tokenRequest = await getGoogleAccessToken.call(this, credential.data!, 'sheetV2');\n\t\tif (!tokenRequest.access_token) {\n\t\t\treturn {\n\t\t\t\tstatus: 'Error',\n\t\t\t\tmessage: 'Could not generate a token from your private key.',\n\t\t\t};\n\t\t}\n\t} catch (err) {\n\t\treturn {\n\t\t\tstatus: 'Error',\n\t\t\tmessage: `Private key validation failed: ${err.message}`,\n\t\t};\n\t}\n\n\treturn {\n\t\tstatus: 'OK',\n\t\tmessage: 'Connection successful!',\n\t};\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,8BAAqC;AAErC,eAAsB,wBAErB,YACqC;AACrC,MAAI;AACH,UAAM,eAAe,MAAM,6CAAqB,KAAK,MAAM,WAAW,MAAO,SAAS;AACtF,QAAI,CAAC,aAAa,cAAc;AAC/B,aAAO;AAAA,QACN,QAAQ;AAAA,QACR,SAAS;AAAA,MACV;AAAA,IACD;AAAA,EACD,SAAS,KAAK;AACb,WAAO;AAAA,MACN,QAAQ;AAAA,MACR,SAAS,kCAAkC,IAAI,OAAO;AAAA,IACvD;AAAA,EACD;AAEA,SAAO;AAAA,IACN,QAAQ;AAAA,IACR,SAAS;AAAA,EACV;AACD;","names":[]}