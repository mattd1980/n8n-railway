{"version":3,"sources":["../../../../../../nodes/Google/Sheet/v2/helpers/GoogleSheets.types.ts"],"sourcesContent":["import type { AllEntities, Entity, PropertiesOf } from 'n8n-workflow';\n\nexport const ROW_NUMBER = 'row_number';\n\nexport interface ISheetOptions {\n\tscope: string[];\n}\n\nexport interface IGoogleAuthCredentials {\n\temail: string;\n\tprivateKey: string;\n}\n\nexport interface ISheetUpdateData {\n\trange: string;\n\tvalues: string[][];\n}\n\nexport interface ILookupValues {\n\tlookupColumn: string;\n\tlookupValue: string;\n}\n\nexport interface IToDeleteRange {\n\tamount: number;\n\tstartIndex: number;\n\tsheetId: number;\n}\n\nexport interface IToDelete {\n\t[key: string]: IToDeleteRange[] | undefined;\n\tcolumns?: IToDeleteRange[];\n\trows?: IToDeleteRange[];\n}\n\nexport type ValueInputOption = 'RAW' | 'USER_ENTERED';\n\nexport type ValueRenderOption = 'FORMATTED_VALUE' | 'FORMULA' | 'UNFORMATTED_VALUE';\n\nexport type RangeDetectionOptions = {\n\trangeDefinition: 'detectAutomatically' | 'specifyRange' | 'specifyRangeA1';\n\treadRowsUntil?: 'firstEmptyRow' | 'lastRowInSheet';\n\theaderRow?: string;\n\tfirstDataRow?: string;\n\trange?: string;\n};\n\nexport type SheetDataRow = Array<string | number>;\nexport type SheetRangeData = SheetDataRow[];\n\n// delete is del\ntype GoogleSheetsMap = {\n\tspreadsheet: 'create' | 'deleteSpreadsheet';\n\tsheet: 'append' | 'clear' | 'create' | 'delete' | 'read' | 'remove' | 'update' | 'appendOrUpdate';\n};\n\nexport type GoogleSheets = AllEntities<GoogleSheetsMap>;\n\nexport type GoogleSheetsSpreadSheet = Entity<GoogleSheetsMap, 'spreadsheet'>;\nexport type GoogleSheetsSheet = Entity<GoogleSheetsMap, 'sheet'>;\n\nexport type SpreadSheetProperties = PropertiesOf<GoogleSheetsSpreadSheet>;\nexport type SheetProperties = PropertiesOf<GoogleSheetsSheet>;\n\nexport type ResourceLocator = 'id' | 'url' | 'list' | 'name';\n\nexport const ResourceLocatorUiNames = {\n\tid: 'By ID',\n\turl: 'By URL',\n\tlist: 'From List',\n\tname: 'By Name',\n};\n\ntype SpreadSheetResponseSheet = {\n\tproperties: {\n\t\ttitle: string;\n\t\tsheetId: number;\n\t};\n};\n\nexport type SpreadSheetResponse = {\n\tsheets: SpreadSheetResponseSheet[];\n};\n\nexport type SheetCellDecoded = {\n\tcell?: string;\n\tcolumn?: string;\n\trow?: number;\n};\n\nexport type SheetRangeDecoded = {\n\tnameWithRange: string;\n\tname: string;\n\trange: string;\n\tstart?: SheetCellDecoded;\n\tend?: SheetCellDecoded;\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEO,MAAM,aAAa;AAgEnB,MAAM,yBAAyB;AAAA,EACrC,IAAI;AAAA,EACJ,KAAK;AAAA,EACL,MAAM;AAAA,EACN,MAAM;AACP;","names":[]}