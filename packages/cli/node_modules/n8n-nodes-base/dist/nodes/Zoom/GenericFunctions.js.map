{"version":3,"sources":["../../../nodes/Zoom/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tILoadOptionsFunctions,\n\tIDataObject,\n\tJsonObject,\n\tIHttpRequestMethods,\n\tIRequestOptions,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\nexport async function zoomApiRequest(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tresource: string,\n\tbody: object = {},\n\tquery: IDataObject = {},\n\theaders: IDataObject | undefined = undefined,\n\toption: IDataObject = {},\n) {\n\tconst authenticationMethod = this.getNodeParameter('authentication', 0, 'accessToken') as string;\n\n\tlet options: IRequestOptions = {\n\t\tmethod,\n\t\theaders: headers || {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody,\n\t\tqs: query,\n\t\turi: `https://api.zoom.us/v2${resource}`,\n\t\tjson: true,\n\t};\n\toptions = Object.assign({}, options, option);\n\tif (Object.keys(body).length === 0) {\n\t\tdelete options.body;\n\t}\n\tif (Object.keys(query).length === 0) {\n\t\tdelete options.qs;\n\t}\n\n\ttry {\n\t\tif (authenticationMethod === 'accessToken') {\n\t\t\treturn await this.helpers.requestWithAuthentication.call(this, 'zoomApi', options);\n\t\t} else {\n\t\t\treturn await this.helpers.requestOAuth2.call(this, 'zoomOAuth2Api', options);\n\t\t}\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\nasync function wait() {\n\treturn await new Promise((resolve, _reject) => {\n\t\tsetTimeout(() => {\n\t\t\tresolve(true);\n\t\t}, 1000);\n\t});\n}\n\nexport async function zoomApiRequestAllItems(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions,\n\tpropertyName: string,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\tbody: IDataObject = {},\n\tquery: IDataObject = {},\n) {\n\tconst returnData: IDataObject[] = [];\n\tlet responseData;\n\tquery.page_number = 0;\n\tdo {\n\t\tresponseData = await zoomApiRequest.call(this, method, endpoint, body, query);\n\t\tquery.page_number++;\n\t\treturnData.push.apply(returnData, responseData[propertyName] as IDataObject[]);\n\t\t// zoom free plan rate limit is 1 request/second\n\t\t// TODO just wait when the plan is free\n\t\tawait wait();\n\t} while (responseData.page_count !== responseData.page_number);\n\n\treturn returnData;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,0BAA6B;AAE7B,eAAsB,eAErB,QACA,UACA,OAAe,CAAC,GAChB,QAAqB,CAAC,GACtB,UAAmC,QACnC,SAAsB,CAAC,GACtB;AACD,QAAM,uBAAuB,KAAK,iBAAiB,kBAAkB,GAAG,aAAa;AAErF,MAAI,UAA2B;AAAA,IAC9B;AAAA,IACA,SAAS,WAAW;AAAA,MACnB,gBAAgB;AAAA,IACjB;AAAA,IACA;AAAA,IACA,IAAI;AAAA,IACJ,KAAK,yBAAyB,QAAQ;AAAA,IACtC,MAAM;AAAA,EACP;AACA,YAAU,OAAO,OAAO,CAAC,GAAG,SAAS,MAAM;AAC3C,MAAI,OAAO,KAAK,IAAI,EAAE,WAAW,GAAG;AACnC,WAAO,QAAQ;AAAA,EAChB;AACA,MAAI,OAAO,KAAK,KAAK,EAAE,WAAW,GAAG;AACpC,WAAO,QAAQ;AAAA,EAChB;AAEA,MAAI;AACH,QAAI,yBAAyB,eAAe;AAC3C,aAAO,MAAM,KAAK,QAAQ,0BAA0B,KAAK,MAAM,WAAW,OAAO;AAAA,IAClF,OAAO;AACN,aAAO,MAAM,KAAK,QAAQ,cAAc,KAAK,MAAM,iBAAiB,OAAO;AAAA,IAC5E;AAAA,EACD,SAAS,OAAO;AACf,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,KAAmB;AAAA,EAC3D;AACD;AAEA,eAAe,OAAO;AACrB,SAAO,MAAM,IAAI,QAAQ,CAAC,SAAS,YAAY;AAC9C,eAAW,MAAM;AAChB,cAAQ,IAAI;AAAA,IACb,GAAG,GAAI;AAAA,EACR,CAAC;AACF;AAEA,eAAsB,uBAErB,cACA,QACA,UACA,OAAoB,CAAC,GACrB,QAAqB,CAAC,GACrB;AACD,QAAM,aAA4B,CAAC;AACnC,MAAI;AACJ,QAAM,cAAc;AACpB,KAAG;AACF,mBAAe,MAAM,eAAe,KAAK,MAAM,QAAQ,UAAU,MAAM,KAAK;AAC5E,UAAM;AACN,eAAW,KAAK,MAAM,YAAY,aAAa,YAAY,CAAkB;AAG7E,UAAM,KAAK;AAAA,EACZ,SAAS,aAAa,eAAe,aAAa;AAElD,SAAO;AACR;","names":[]}