{"version":3,"sources":["../../../nodes/Disqus/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHookFunctions,\n\tIHttpRequestMethods,\n\tILoadOptionsFunctions,\n\tIRequestOptions,\n\tJsonObject,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\nexport async function disqusApiRequest(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tqs: IDataObject = {},\n\turi?: string,\n\tbody: IDataObject = {},\n\toption: IDataObject = {},\n): Promise<any> {\n\tconst credentials = await this.getCredentials<{ accessToken: string }>('disqusApi');\n\tqs.api_key = credentials.accessToken;\n\n\t// Convert to query string into a format the API can read\n\tconst queryStringElements: string[] = [];\n\tfor (const key of Object.keys(qs)) {\n\t\tif (Array.isArray(qs[key])) {\n\t\t\t(qs[key] as string[]).forEach((value) => {\n\t\t\t\tqueryStringElements.push(`${key}=${value}`);\n\t\t\t});\n\t\t} else {\n\t\t\tqueryStringElements.push(`${key}=${qs[key]}`);\n\t\t}\n\t}\n\n\tlet options: IRequestOptions = {\n\t\tmethod,\n\t\tbody,\n\t\turi: `https://disqus.com/api/3.0/${uri}?${queryStringElements.join('&')}`,\n\t\tjson: true,\n\t};\n\n\toptions = Object.assign({}, options, option);\n\tif (Object.keys(options.body as IDataObject).length === 0) {\n\t\tdelete options.body;\n\t}\n\ttry {\n\t\treturn await this.helpers.request(options);\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\n/**\n * Make an API request to paginated flow endpoint\n * and return all results\n */\nexport async function disqusApiRequestAllItems(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tqs: IDataObject = {},\n\turi?: string,\n\tbody: IDataObject = {},\n\toption: IDataObject = {},\n): Promise<any> {\n\tconst returnData: IDataObject[] = [];\n\n\tlet responseData;\n\n\tdo {\n\t\tresponseData = await disqusApiRequest.call(this, method, qs, uri, body, option);\n\t\tqs.cursor = responseData.cursor.id;\n\t\treturnData.push.apply(returnData, responseData.response as IDataObject[]);\n\t} while (responseData.cursor.more === true && responseData.cursor.hasNext === true);\n\treturn returnData;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,0BAA6B;AAE7B,eAAsB,iBAErB,QACA,KAAkB,CAAC,GACnB,KACA,OAAoB,CAAC,GACrB,SAAsB,CAAC,GACR;AACf,QAAM,cAAc,MAAM,KAAK,eAAwC,WAAW;AAClF,KAAG,UAAU,YAAY;AAGzB,QAAM,sBAAgC,CAAC;AACvC,aAAW,OAAO,OAAO,KAAK,EAAE,GAAG;AAClC,QAAI,MAAM,QAAQ,GAAG,GAAG,CAAC,GAAG;AAC3B,MAAC,GAAG,GAAG,EAAe,QAAQ,CAAC,UAAU;AACxC,4BAAoB,KAAK,GAAG,GAAG,IAAI,KAAK,EAAE;AAAA,MAC3C,CAAC;AAAA,IACF,OAAO;AACN,0BAAoB,KAAK,GAAG,GAAG,IAAI,GAAG,GAAG,CAAC,EAAE;AAAA,IAC7C;AAAA,EACD;AAEA,MAAI,UAA2B;AAAA,IAC9B;AAAA,IACA;AAAA,IACA,KAAK,8BAA8B,GAAG,IAAI,oBAAoB,KAAK,GAAG,CAAC;AAAA,IACvE,MAAM;AAAA,EACP;AAEA,YAAU,OAAO,OAAO,CAAC,GAAG,SAAS,MAAM;AAC3C,MAAI,OAAO,KAAK,QAAQ,IAAmB,EAAE,WAAW,GAAG;AAC1D,WAAO,QAAQ;AAAA,EAChB;AACA,MAAI;AACH,WAAO,MAAM,KAAK,QAAQ,QAAQ,OAAO;AAAA,EAC1C,SAAS,OAAO;AACf,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,KAAmB;AAAA,EAC3D;AACD;AAMA,eAAsB,yBAErB,QACA,KAAkB,CAAC,GACnB,KACA,OAAoB,CAAC,GACrB,SAAsB,CAAC,GACR;AACf,QAAM,aAA4B,CAAC;AAEnC,MAAI;AAEJ,KAAG;AACF,mBAAe,MAAM,iBAAiB,KAAK,MAAM,QAAQ,IAAI,KAAK,MAAM,MAAM;AAC9E,OAAG,SAAS,aAAa,OAAO;AAChC,eAAW,KAAK,MAAM,YAAY,aAAa,QAAyB;AAAA,EACzE,SAAS,aAAa,OAAO,SAAS,QAAQ,aAAa,OAAO,YAAY;AAC9E,SAAO;AACR;","names":[]}