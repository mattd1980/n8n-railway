{"version":3,"sources":["../../../nodes/ServiceNow/ServiceNow.node.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport { attachmentFields, attachmentOperations } from './AttachmentDescription';\nimport { businessServiceFields, businessServiceOperations } from './BusinessServiceDescription';\nimport {\n\tconfigurationItemsFields,\n\tconfigurationItemsOperations,\n} from './ConfigurationItemsDescription';\nimport { departmentFields, departmentOperations } from './DepartmentDescription';\nimport { dictionaryFields, dictionaryOperations } from './DictionaryDescription';\nimport {\n\tmapEndpoint,\n\tserviceNowApiRequest,\n\tserviceNowDownloadAttachment,\n\tserviceNowRequestAllItems,\n\tsortData,\n} from './GenericFunctions';\nimport { incidentFields, incidentOperations } from './IncidentDescription';\nimport { tableRecordFields, tableRecordOperations } from './TableRecordDescription';\nimport { userFields, userOperations } from './UserDescription';\nimport { userGroupFields, userGroupOperations } from './UserGroupDescription';\nimport { userRoleFields, userRoleOperations } from './UserRoleDescription';\n\nexport class ServiceNow implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'ServiceNow',\n\t\tname: 'serviceNow',\n\t\ticon: 'file:servicenow.svg',\n\t\tgroup: ['output'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume ServiceNow API',\n\t\tdefaults: {\n\t\t\tname: 'ServiceNow',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'serviceNowOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['oAuth2'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'serviceNowBasicApi',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['basicAuth'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Authentication',\n\t\t\t\tname: 'authentication',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Basic Auth',\n\t\t\t\t\t\tvalue: 'basicAuth',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'OAuth2',\n\t\t\t\t\t\tvalue: 'oAuth2',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'oAuth2',\n\t\t\t\tdescription: 'Authentication method to use',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Attachment',\n\t\t\t\t\t\tvalue: 'attachment',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Business Service',\n\t\t\t\t\t\tvalue: 'businessService',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Configuration Item',\n\t\t\t\t\t\tvalue: 'configurationItems',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Department',\n\t\t\t\t\t\tvalue: 'department',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Dictionary',\n\t\t\t\t\t\tvalue: 'dictionary',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Incident',\n\t\t\t\t\t\tvalue: 'incident',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Table Record',\n\t\t\t\t\t\tvalue: 'tableRecord',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'User',\n\t\t\t\t\t\tvalue: 'user',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'User Group',\n\t\t\t\t\t\tvalue: 'userGroup',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'User Role',\n\t\t\t\t\t\tvalue: 'userRole',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'user',\n\t\t\t},\n\t\t\t// ATTACHMENT SERVICE\n\t\t\t...attachmentOperations,\n\t\t\t...attachmentFields,\n\t\t\t// BUSINESS SERVICE\n\t\t\t...businessServiceOperations,\n\t\t\t...businessServiceFields,\n\t\t\t// CONFIGURATION ITEMS\n\t\t\t...configurationItemsOperations,\n\t\t\t...configurationItemsFields,\n\t\t\t// DEPARTMENT\n\t\t\t...departmentOperations,\n\t\t\t...departmentFields,\n\t\t\t// DICTIONARY\n\t\t\t...dictionaryOperations,\n\t\t\t...dictionaryFields,\n\t\t\t// INCIDENT\n\t\t\t...incidentOperations,\n\t\t\t...incidentFields,\n\t\t\t// TABLE RECORD\n\t\t\t...tableRecordOperations,\n\t\t\t...tableRecordFields,\n\t\t\t// USER\n\t\t\t...userOperations,\n\t\t\t...userFields,\n\t\t\t// USER GROUP\n\t\t\t...userGroupOperations,\n\t\t\t...userGroupFields,\n\t\t\t// USER ROLE\n\t\t\t...userRoleOperations,\n\t\t\t...userRoleFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\tasync getTables(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst response = await serviceNowApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/now/doc/table/schema',\n\t\t\t\t\t{},\n\t\t\t\t\t{},\n\t\t\t\t);\n\t\t\t\tfor (const table of response.result) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: table.label,\n\t\t\t\t\t\tvalue: table.value,\n\t\t\t\t\t\tdescription: table.value,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn sortData(returnData);\n\t\t\t},\n\t\t\t// Get all the table column to display them to user\n\t\t\tasync getColumns(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst resource = this.getNodeParameter('resource', 0) as string;\n\t\t\t\tconst operation = this.getNodeParameter('operation', 0) as string;\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tlet tableName;\n\t\t\t\tif (resource === 'tableRecord') {\n\t\t\t\t\ttableName = this.getNodeParameter('tableName') as string;\n\t\t\t\t} else {\n\t\t\t\t\ttableName = mapEndpoint(resource, operation);\n\t\t\t\t}\n\n\t\t\t\tconst qs = {\n\t\t\t\t\tsysparm_query: `name=${tableName}`,\n\t\t\t\t\tsysparm_fields: 'column_label,element',\n\t\t\t\t};\n\t\t\t\tconst response = await serviceNowApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/now/table/sys_dictionary',\n\t\t\t\t\t{},\n\t\t\t\t\tqs,\n\t\t\t\t);\n\t\t\t\tfor (const column of response.result) {\n\t\t\t\t\tif (column.element) {\n\t\t\t\t\t\treturnData.push({\n\t\t\t\t\t\t\tname: column.column_label,\n\t\t\t\t\t\t\tvalue: column.element,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn sortData(returnData);\n\t\t\t},\n\t\t\tasync getBusinessServices(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst qs = {\n\t\t\t\t\tsysparm_fields: 'name,sys_id',\n\t\t\t\t};\n\t\t\t\tconst response = await serviceNowApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/now/table/cmdb_ci_service',\n\t\t\t\t\t{},\n\t\t\t\t\tqs,\n\t\t\t\t);\n\n\t\t\t\tfor (const column of response.result) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: column.name,\n\t\t\t\t\t\tvalue: column.sys_id,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn sortData(returnData);\n\t\t\t},\n\t\t\tasync getUsers(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\t\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\t\t\tconst qs = {\n\t\t\t\t\tsysparm_fields: 'sys_id,user_name',\n\t\t\t\t};\n\t\t\t\tif (resource === 'incident' && operation === 'create') {\n\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields') as IDataObject;\n\t\t\t\t\tconst group = additionalFields.assignment_group;\n\n\t\t\t\t\tconst response = await serviceNowRequestAllItems.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t'/now/table/sys_user_grmember',\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsysparm_query: `group=${group}^`,\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\n\t\t\t\t\tfor (const column of response) {\n\t\t\t\t\t\tif (column.user) {\n\t\t\t\t\t\t\tconst responseData = await serviceNowApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/now/table/sys_user/${column.user.value}`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst user = responseData.result;\n\n\t\t\t\t\t\t\treturnData.push({\n\t\t\t\t\t\t\t\tname: user.user_name,\n\t\t\t\t\t\t\t\tvalue: user.sys_id,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst response = await serviceNowRequestAllItems.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t'/now/table/sys_user',\n\t\t\t\t\t\t{},\n\t\t\t\t\t\tqs,\n\t\t\t\t\t);\n\n\t\t\t\t\tfor (const column of response) {\n\t\t\t\t\t\tif (column.user_name) {\n\t\t\t\t\t\t\treturnData.push({\n\t\t\t\t\t\t\t\tname: column.user_name,\n\t\t\t\t\t\t\t\tvalue: column.sys_id,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn sortData(returnData);\n\t\t\t},\n\t\t\tasync getAssignmentGroups(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst qs = {\n\t\t\t\t\tsysparm_fields: 'sys_id,name',\n\t\t\t\t};\n\t\t\t\tconst response = await serviceNowRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/now/table/sys_user_group',\n\t\t\t\t\t{},\n\t\t\t\t\tqs,\n\t\t\t\t);\n\n\t\t\t\tfor (const column of response) {\n\t\t\t\t\tif (column.name) {\n\t\t\t\t\t\treturnData.push({\n\t\t\t\t\t\t\tname: column.name,\n\t\t\t\t\t\t\tvalue: column.sys_id,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn sortData(returnData);\n\t\t\t},\n\t\t\tasync getUserRoles(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst qs = {\n\t\t\t\t\tsysparm_fields: 'sys_id,name',\n\t\t\t\t};\n\t\t\t\tconst response = await serviceNowRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/now/table/sys_user_role',\n\t\t\t\t\t{},\n\t\t\t\t\tqs,\n\t\t\t\t);\n\n\t\t\t\tfor (const column of response) {\n\t\t\t\t\tif (column.name) {\n\t\t\t\t\t\treturnData.push({\n\t\t\t\t\t\t\tname: column.name,\n\t\t\t\t\t\t\tvalue: column.sys_id,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn sortData(returnData);\n\t\t\t},\n\t\t\tasync getConfigurationItems(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst qs = {\n\t\t\t\t\tsysparm_fields: 'sys_id,name,sys_class_name',\n\t\t\t\t};\n\t\t\t\tconst response = await serviceNowRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/now/table/cmdb_ci',\n\t\t\t\t\t{},\n\t\t\t\t\tqs,\n\t\t\t\t);\n\n\t\t\t\tfor (const column of response) {\n\t\t\t\t\tif (column.name) {\n\t\t\t\t\t\treturnData.push({\n\t\t\t\t\t\t\tname: column.name,\n\t\t\t\t\t\t\tvalue: column.sys_id,\n\t\t\t\t\t\t\tdescription: column.sys_class_name,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn sortData(returnData);\n\t\t\t},\n\t\t\tasync getIncidentCategories(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst qs = {\n\t\t\t\t\tsysparm_fields: 'label,value',\n\t\t\t\t\tsysparm_query: 'element=category^name=incident',\n\t\t\t\t};\n\t\t\t\tconst response = await serviceNowRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/now/table/sys_choice',\n\t\t\t\t\t{},\n\t\t\t\t\tqs,\n\t\t\t\t);\n\n\t\t\t\tfor (const column of response) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: column.label,\n\t\t\t\t\t\tvalue: column.value,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn sortData(returnData);\n\t\t\t},\n\t\t\tasync getIncidentSubcategories(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst operation = this.getNodeParameter('operation');\n\t\t\t\tlet category;\n\t\t\t\tif (operation === 'update') {\n\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields') as IDataObject;\n\t\t\t\t\tcategory = updateFields.category;\n\t\t\t\t} else {\n\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields') as IDataObject;\n\t\t\t\t\tcategory = additionalFields.category;\n\t\t\t\t}\n\t\t\t\tconst qs = {\n\t\t\t\t\tsysparm_fields: 'label,value',\n\t\t\t\t\tsysparm_query: `name=incident^element=subcategory^dependent_value=${category}`,\n\t\t\t\t};\n\t\t\t\tconst response = await serviceNowRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/now/table/sys_choice',\n\t\t\t\t\t{},\n\t\t\t\t\tqs,\n\t\t\t\t);\n\n\t\t\t\tfor (const column of response) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: column.label,\n\t\t\t\t\t\tvalue: column.value,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn sortData(returnData);\n\t\t\t},\n\t\t\tasync getIncidentStates(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst qs = {\n\t\t\t\t\tsysparm_fields: 'label,value',\n\t\t\t\t\tsysparm_query: 'element=state^name=incident',\n\t\t\t\t};\n\t\t\t\tconst response = await serviceNowRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/now/table/sys_choice',\n\t\t\t\t\t{},\n\t\t\t\t\tqs,\n\t\t\t\t);\n\n\t\t\t\tfor (const column of response) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: column.label,\n\t\t\t\t\t\tvalue: column.value,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn sortData(returnData);\n\t\t\t},\n\t\t\tasync getIncidentResolutionCodes(\n\t\t\t\tthis: ILoadOptionsFunctions,\n\t\t\t): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst qs = {\n\t\t\t\t\tsysparm_fields: 'label,value',\n\t\t\t\t\tsysparm_query: 'element=close_code^name=incident',\n\t\t\t\t};\n\t\t\t\tconst response = await serviceNowRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/now/table/sys_choice',\n\t\t\t\t\t{},\n\t\t\t\t\tqs,\n\t\t\t\t);\n\n\t\t\t\tfor (const column of response) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: column.label,\n\t\t\t\t\t\tvalue: column.value,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn sortData(returnData);\n\t\t\t},\n\t\t\tasync getIncidentHoldReasons(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst qs = {\n\t\t\t\t\tsysparm_fields: 'label,value',\n\t\t\t\t\tsysparm_query: 'element=hold_reason^name=incident',\n\t\t\t\t};\n\t\t\t\tconst response = await serviceNowRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/now/table/sys_choice',\n\t\t\t\t\t{},\n\t\t\t\t\tqs,\n\t\t\t\t);\n\n\t\t\t\tfor (const column of response) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: column.label,\n\t\t\t\t\t\tvalue: column.value,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn sortData(returnData);\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst length = items.length;\n\t\tlet responseData = {};\n\t\tlet qs: IDataObject;\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\ttry {\n\t\t\t\t// https://developer.servicenow.com/dev.do#!/reference/api/rome/rest/c_AttachmentAPI\n\t\t\t\tif (resource === 'attachment') {\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst attachmentsSysId = this.getNodeParameter('attachmentId', i) as string;\n\t\t\t\t\t\tconst download = this.getNodeParameter('download', i);\n\t\t\t\t\t\tconst endpoint = `/now/attachment/${attachmentsSysId}`;\n\n\t\t\t\t\t\tconst response = await serviceNowApiRequest.call(this, 'GET', endpoint, {});\n\t\t\t\t\t\tconst fileMetadata = response.result;\n\n\t\t\t\t\t\tresponseData = {\n\t\t\t\t\t\t\tjson: fileMetadata,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (download) {\n\t\t\t\t\t\t\tconst outputField = this.getNodeParameter('outputField', i) as string;\n\t\t\t\t\t\t\tresponseData = {\n\t\t\t\t\t\t\t\t...responseData,\n\t\t\t\t\t\t\t\tbinary: {\n\t\t\t\t\t\t\t\t\t[outputField]: await serviceNowDownloadAttachment.call(\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\tendpoint,\n\t\t\t\t\t\t\t\t\t\tfileMetadata.file_name as string,\n\t\t\t\t\t\t\t\t\t\tfileMetadata.content_type as string,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\tconst download = this.getNodeParameter('download', i);\n\t\t\t\t\t\tconst tableName = this.getNodeParameter('tableName', i) as string;\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\n\t\t\t\t\t\tqs = {} as IDataObject;\n\n\t\t\t\t\t\tqs.sysparm_query = `table_name=${tableName}`;\n\n\t\t\t\t\t\tif (options.queryFilter) {\n\t\t\t\t\t\t\tqs.sysparm_query = `${qs.sysparm_query}^${options.queryFilter}`;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tqs.sysparm_limit = limit;\n\t\t\t\t\t\t\tconst response = await serviceNowApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/now/attachment',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = response.result;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresponseData = await serviceNowRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/now/attachment',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (download) {\n\t\t\t\t\t\t\tconst outputField = this.getNodeParameter('outputField', i) as string;\n\t\t\t\t\t\t\tconst responseDataWithAttachments: IDataObject[] = [];\n\n\t\t\t\t\t\t\tfor (const data of responseData as IDataObject[]) {\n\t\t\t\t\t\t\t\tresponseDataWithAttachments.push({\n\t\t\t\t\t\t\t\t\tjson: data,\n\t\t\t\t\t\t\t\t\tbinary: {\n\t\t\t\t\t\t\t\t\t\t[outputField]: await serviceNowDownloadAttachment.call(\n\t\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\t\t`/now/attachment/${data.sys_id}`,\n\t\t\t\t\t\t\t\t\t\t\tdata.file_name as string,\n\t\t\t\t\t\t\t\t\t\t\tdata.content_type as string,\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tresponseData = responseDataWithAttachments;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresponseData = (responseData as IDataObject[]).map((data) => ({ json: data }));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (operation === 'upload') {\n\t\t\t\t\t\tconst tableName = this.getNodeParameter('tableName', i) as string;\n\t\t\t\t\t\tconst recordId = this.getNodeParameter('id', i) as string;\n\t\t\t\t\t\tconst inputDataFieldName = this.getNodeParameter('inputDataFieldName', i) as string;\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\n\t\t\t\t\t\tconst binaryData = this.helpers.assertBinaryData(i, inputDataFieldName);\n\n\t\t\t\t\t\tconst headers: IDataObject = {\n\t\t\t\t\t\t\t'Content-Type': binaryData.mimeType,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tconst query: IDataObject = {\n\t\t\t\t\t\t\ttable_name: tableName,\n\t\t\t\t\t\t\ttable_sys_id: recordId,\n\t\t\t\t\t\t\tfile_name: binaryData.fileName\n\t\t\t\t\t\t\t\t? binaryData.fileName\n\t\t\t\t\t\t\t\t: `${inputDataFieldName}.${binaryData.fileExtension}`,\n\t\t\t\t\t\t\t...options,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tconst body = await this.helpers.getBinaryDataBuffer(i, inputDataFieldName);\n\n\t\t\t\t\t\tconst response = await serviceNowApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/now/attachment/file',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tquery,\n\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t{ headers },\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = response.result;\n\t\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\t\tconst attachmentsSysId = this.getNodeParameter('attachmentId', i) as string;\n\t\t\t\t\t\tawait serviceNowApiRequest.call(this, 'DELETE', `/now/attachment/${attachmentsSysId}`);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'businessService') {\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tqs = this.getNodeParameter('options', i);\n\n\t\t\t\t\t\tif (qs.sysparm_fields && typeof qs.sysparm_fields !== 'string') {\n\t\t\t\t\t\t\tqs.sysparm_fields = (qs.sysparm_fields as string[]).join(',');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tqs.sysparm_limit = limit;\n\t\t\t\t\t\t\tconst response = await serviceNowApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/now/table/cmdb_ci_service',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = response.result;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresponseData = await serviceNowRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/now/table/cmdb_ci_service',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'configurationItems') {\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tqs = this.getNodeParameter('options', i);\n\n\t\t\t\t\t\tif (qs.sysparm_fields && typeof qs.sysparm_fields !== 'string') {\n\t\t\t\t\t\t\tqs.sysparm_fields = (qs.sysparm_fields as string[]).join(',');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tqs.sysparm_limit = limit;\n\t\t\t\t\t\t\tconst response = await serviceNowApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/now/table/cmdb_ci',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = response.result;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresponseData = await serviceNowRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/now/table/cmdb_ci',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'department') {\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tqs = this.getNodeParameter('options', i);\n\n\t\t\t\t\t\tif (qs.sysparm_fields && typeof qs.sysparm_fields !== 'string') {\n\t\t\t\t\t\t\tqs.sysparm_fields = (qs.sysparm_fields as string[]).join(',');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tqs.sysparm_limit = limit;\n\t\t\t\t\t\t\tconst response = await serviceNowApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/now/table/cmn_department',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = response.result;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresponseData = await serviceNowRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/now/table/cmn_department',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'dictionary') {\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tqs = this.getNodeParameter('options', i);\n\n\t\t\t\t\t\tif (qs.sysparm_fields && typeof qs.sysparm_fields !== 'string') {\n\t\t\t\t\t\t\tqs.sysparm_fields = (qs.sysparm_fields as string[]).join(',');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tqs.sysparm_limit = limit;\n\t\t\t\t\t\t\tconst response = await serviceNowApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/now/table/sys_dictionary',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = response.result;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresponseData = await serviceNowRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/now/table/sys_dictionary',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'incident') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst shortDescription = this.getNodeParameter('short_description', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\tshort_description: shortDescription,\n\t\t\t\t\t\t\t...additionalFields,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tconst response = await serviceNowApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/now/table/incident',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = response.result;\n\t\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\t\tconst id = this.getNodeParameter('id', i) as string;\n\t\t\t\t\t\tresponseData = await serviceNowApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/now/table/incident/${id}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t} else if (operation === 'get') {\n\t\t\t\t\t\tconst id = this.getNodeParameter('id', i) as string;\n\t\t\t\t\t\tqs = this.getNodeParameter('options', i);\n\n\t\t\t\t\t\tif (qs.sysparm_fields && typeof qs.sysparm_fields !== 'string') {\n\t\t\t\t\t\t\tqs.sysparm_fields = (qs.sysparm_fields as string[]).join(',');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst response = await serviceNowApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/now/table/incident/${id}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = response.result;\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tqs = this.getNodeParameter('options', i);\n\n\t\t\t\t\t\tif (qs.sysparm_fields && typeof qs.sysparm_fields !== 'string') {\n\t\t\t\t\t\t\tqs.sysparm_fields = (qs.sysparm_fields as string[]).join(',');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tqs.sysparm_limit = limit;\n\t\t\t\t\t\t\tconst response = await serviceNowApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/now/table/incident',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = response.result;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresponseData = await serviceNowRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/now/table/incident',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (operation === 'update') {\n\t\t\t\t\t\tconst id = this.getNodeParameter('id', i) as string;\n\t\t\t\t\t\tconst body = this.getNodeParameter('updateFields', i);\n\n\t\t\t\t\t\tconst response = await serviceNowApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PATCH',\n\t\t\t\t\t\t\t`/now/table/incident/${id}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = response.result;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t`The operation \"${operation}\" is not known!`,\n\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'tableRecord') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst tableName = this.getNodeParameter('tableName', i) as string;\n\t\t\t\t\t\tconst dataToSend = this.getNodeParameter('dataToSend', i) as string;\n\t\t\t\t\t\tlet body = {};\n\n\t\t\t\t\t\tif (dataToSend === 'mapInput') {\n\t\t\t\t\t\t\tconst inputsToIgnore = (this.getNodeParameter('inputsToIgnore', i) as string)\n\t\t\t\t\t\t\t\t.split(',')\n\t\t\t\t\t\t\t\t.map((field) => field.trim());\n\t\t\t\t\t\t\tbody = Object.entries(items[i].json)\n\t\t\t\t\t\t\t\t.filter(([key]) => !inputsToIgnore.includes(key))\n\t\t\t\t\t\t\t\t.reduce((obj, [key, val]) => Object.assign(obj, { [key]: val }), {});\n\t\t\t\t\t\t} else if (dataToSend === 'columns') {\n\t\t\t\t\t\t\tconst fieldsToSend = this.getNodeParameter('fieldsToSend', i) as {\n\t\t\t\t\t\t\t\tfield: IDataObject[];\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tbody = fieldsToSend.field.reduce((obj, field) => {\n\t\t\t\t\t\t\t\tobj[field.column as string] = field.value;\n\t\t\t\t\t\t\t\treturn obj;\n\t\t\t\t\t\t\t}, {});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst response = await serviceNowApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/now/table/${tableName}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = response.result;\n\t\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\t\tconst tableName = this.getNodeParameter('tableName', i) as string;\n\t\t\t\t\t\tconst id = this.getNodeParameter('id', i) as string;\n\t\t\t\t\t\tresponseData = await serviceNowApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/now/table/${tableName}/${id}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t} else if (operation === 'get') {\n\t\t\t\t\t\tconst tableName = this.getNodeParameter('tableName', i) as string;\n\t\t\t\t\t\tconst id = this.getNodeParameter('id', i) as string;\n\t\t\t\t\t\tqs = this.getNodeParameter('options', i);\n\n\t\t\t\t\t\tif (qs.sysparm_fields && typeof qs.sysparm_fields !== 'string') {\n\t\t\t\t\t\t\tqs.sysparm_fields = (qs.sysparm_fields as string[]).join(',');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst response = await serviceNowApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/now/table/${tableName}/${id}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = response.result;\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\tconst tableName = this.getNodeParameter('tableName', i) as string;\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tqs = this.getNodeParameter('options', i);\n\n\t\t\t\t\t\tif (qs.sysparm_fields && typeof qs.sysparm_fields !== 'string') {\n\t\t\t\t\t\t\tqs.sysparm_fields = (qs.sysparm_fields as string[]).join(',');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tqs.sysparm_limit = limit;\n\t\t\t\t\t\t\tconst response = await serviceNowApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/now/table/${tableName}`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = response.result;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresponseData = await serviceNowRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/now/table/${tableName}`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (operation === 'update') {\n\t\t\t\t\t\tconst tableName = this.getNodeParameter('tableName', i) as string;\n\t\t\t\t\t\tconst id = this.getNodeParameter('id', i) as string;\n\t\t\t\t\t\tconst dataToSend = this.getNodeParameter('dataToSend', i) as string;\n\t\t\t\t\t\tlet body = {};\n\n\t\t\t\t\t\tif (dataToSend === 'mapInput') {\n\t\t\t\t\t\t\tconst inputsToIgnore = (this.getNodeParameter('inputsToIgnore', i) as string)\n\t\t\t\t\t\t\t\t.split(',')\n\t\t\t\t\t\t\t\t.map((field) => field.trim());\n\t\t\t\t\t\t\tbody = Object.entries(items[i].json)\n\t\t\t\t\t\t\t\t.filter(([key]) => !inputsToIgnore.includes(key))\n\t\t\t\t\t\t\t\t.reduce((obj, [key, val]) => Object.assign(obj, { [key]: val }), {});\n\t\t\t\t\t\t} else if (dataToSend === 'columns') {\n\t\t\t\t\t\t\tconst fieldsToSend = this.getNodeParameter('fieldsToSend', i) as {\n\t\t\t\t\t\t\t\tfield: IDataObject[];\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tbody = fieldsToSend.field.reduce((obj, field) => {\n\t\t\t\t\t\t\t\tobj[field.column as string] = field.value;\n\t\t\t\t\t\t\t\treturn obj;\n\t\t\t\t\t\t\t}, {});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst response = await serviceNowApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PATCH',\n\t\t\t\t\t\t\t`/now/table/${tableName}/${id}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = response.result;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t`The operation \"${operation}\" is not known!`,\n\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'user') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst body = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tconst response = await serviceNowApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/now/table/sys_user',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = response.result;\n\t\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\t\tconst id = this.getNodeParameter('id', i) as string;\n\t\t\t\t\t\tresponseData = await serviceNowApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/now/table/sys_user/${id}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t} else if (operation === 'get') {\n\t\t\t\t\t\tconst getOption = this.getNodeParameter('getOption', i) as string;\n\t\t\t\t\t\tqs = this.getNodeParameter('options', i);\n\n\t\t\t\t\t\tif (qs.sysparm_fields && typeof qs.sysparm_fields !== 'string') {\n\t\t\t\t\t\t\tqs.sysparm_fields = (qs.sysparm_fields as string[]).join(',');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (getOption === 'id') {\n\t\t\t\t\t\t\tconst id = this.getNodeParameter('id', i) as string;\n\t\t\t\t\t\t\tconst response = await serviceNowApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/now/table/sys_user/${id}`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = response.result;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst userName = this.getNodeParameter('user_name', i) as string;\n\t\t\t\t\t\t\tqs.sysparm_query = `user_name=${userName}`;\n\t\t\t\t\t\t\tqs.sysparm_limit = 1;\n\t\t\t\t\t\t\tconst response = await serviceNowApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/now/table/sys_user',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = response.result;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tqs = this.getNodeParameter('options', i);\n\n\t\t\t\t\t\tif (qs.sysparm_fields && typeof qs.sysparm_fields !== 'string') {\n\t\t\t\t\t\t\tqs.sysparm_fields = (qs.sysparm_fields as string[]).join(',');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tqs.sysparm_limit = limit;\n\t\t\t\t\t\t\tconst response = await serviceNowApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/now/table/sys_user',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = response.result;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresponseData = await serviceNowRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/now/table/sys_user',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (operation === 'update') {\n\t\t\t\t\t\tconst id = this.getNodeParameter('id', i) as string;\n\t\t\t\t\t\tconst body = this.getNodeParameter('updateFields', i);\n\n\t\t\t\t\t\tconst response = await serviceNowApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PATCH',\n\t\t\t\t\t\t\t`/now/table/sys_user/${id}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = response.result;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t`The operation \"${operation}\" is not known!`,\n\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'userGroup') {\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tqs = this.getNodeParameter('options', i);\n\n\t\t\t\t\t\tif (qs.sysparm_fields && typeof qs.sysparm_fields !== 'string') {\n\t\t\t\t\t\t\tqs.sysparm_fields = (qs.sysparm_fields as string[]).join(',');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tqs.sysparm_limit = limit;\n\t\t\t\t\t\t\tconst response = await serviceNowApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/now/table/sys_user_group',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = response.result;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresponseData = await serviceNowRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/now/table/sys_user_group',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t`The operation \"${operation}\" is not known!`,\n\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'userRole') {\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tqs = this.getNodeParameter('options', i);\n\n\t\t\t\t\t\tif (qs.sysparm_fields && typeof qs.sysparm_fields !== 'string') {\n\t\t\t\t\t\t\tqs.sysparm_fields = (qs.sysparm_fields as string[]).join(',');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tqs.sysparm_limit = limit;\n\t\t\t\t\t\t\tconst response = await serviceNowApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/now/table/sys_user_role',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = response.result;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresponseData = await serviceNowRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/now/table/sys_user_role',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t`The operation \"${operation}\" is not known!`,\n\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new NodeOperationError(this.getNode(), `The resource \"${resource}\" is not known!`, {\n\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\tthis.helpers.returnJsonArray(responseData),\n\t\t\t\t{ itemData: { item: i } },\n\t\t\t);\n\n\t\t\treturnData.push(...executionData);\n\t\t}\n\n\t\tif (resource === 'attachment') {\n\t\t\tif (operation === 'get' || operation === 'getAll') {\n\t\t\t\treturn [returnData];\n\t\t\t}\n\t\t}\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,0BAAwD;AAExD,mCAAuD;AACvD,wCAAiE;AACjE,2CAGO;AACP,mCAAuD;AACvD,mCAAuD;AACvD,8BAMO;AACP,iCAAmD;AACnD,oCAAyD;AACzD,6BAA2C;AAC3C,kCAAqD;AACrD,iCAAmD;AAE5C,MAAM,WAAgC;AAAA,EAAtC;AACN,uBAAoC;AAAA,MACnC,aAAa;AAAA,MACb,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO,CAAC,QAAQ;AAAA,MAChB,SAAS;AAAA,MACT,UAAU;AAAA,MACV,aAAa;AAAA,MACb,UAAU;AAAA,QACT,MAAM;AAAA,MACP;AAAA,MACA,cAAc;AAAA,MACd,QAAQ,CAAC,wCAAoB,IAAI;AAAA,MACjC,SAAS,CAAC,wCAAoB,IAAI;AAAA,MAClC,aAAa;AAAA,QACZ;AAAA,UACC,MAAM;AAAA,UACN,UAAU;AAAA,UACV,gBAAgB;AAAA,YACf,MAAM;AAAA,cACL,gBAAgB,CAAC,QAAQ;AAAA,YAC1B;AAAA,UACD;AAAA,QACD;AAAA,QACA;AAAA,UACC,MAAM;AAAA,UACN,UAAU;AAAA,UACV,gBAAgB;AAAA,YACf,MAAM;AAAA,cACL,gBAAgB,CAAC,WAAW;AAAA,YAC7B;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,MACA,YAAY;AAAA,QACX;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,SAAS;AAAA,YACR;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,UACD;AAAA,UACA,SAAS;AAAA,UACT,aAAa;AAAA,QACd;AAAA,QACA;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,kBAAkB;AAAA,UAClB,SAAS;AAAA,YACR;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,YACA;AAAA,cACC,MAAM;AAAA,cACN,OAAO;AAAA,YACR;AAAA,UACD;AAAA,UACA,SAAS;AAAA,QACV;AAAA;AAAA,QAEA,GAAG;AAAA,QACH,GAAG;AAAA;AAAA,QAEH,GAAG;AAAA,QACH,GAAG;AAAA;AAAA,QAEH,GAAG;AAAA,QACH,GAAG;AAAA;AAAA,QAEH,GAAG;AAAA,QACH,GAAG;AAAA;AAAA,QAEH,GAAG;AAAA,QACH,GAAG;AAAA;AAAA,QAEH,GAAG;AAAA,QACH,GAAG;AAAA;AAAA,QAEH,GAAG;AAAA,QACH,GAAG;AAAA;AAAA,QAEH,GAAG;AAAA,QACH,GAAG;AAAA;AAAA,QAEH,GAAG;AAAA,QACH,GAAG;AAAA;AAAA,QAEH,GAAG;AAAA,QACH,GAAG;AAAA,MACJ;AAAA,IACD;AAEA,mBAAU;AAAA,MACT,aAAa;AAAA,QACZ,MAAM,YAAwE;AAC7E,gBAAM,aAAqC,CAAC;AAC5C,gBAAM,WAAW,MAAM,6CAAqB;AAAA,YAC3C;AAAA,YACA;AAAA,YACA;AAAA,YACA,CAAC;AAAA,YACD,CAAC;AAAA,UACF;AACA,qBAAW,SAAS,SAAS,QAAQ;AACpC,uBAAW,KAAK;AAAA,cACf,MAAM,MAAM;AAAA,cACZ,OAAO,MAAM;AAAA,cACb,aAAa,MAAM;AAAA,YACpB,CAAC;AAAA,UACF;AACA,qBAAO,kCAAS,UAAU;AAAA,QAC3B;AAAA;AAAA,QAEA,MAAM,aAAyE;AAC9E,gBAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AACpD,gBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,gBAAM,aAAqC,CAAC;AAC5C,cAAI;AACJ,cAAI,aAAa,eAAe;AAC/B,wBAAY,KAAK,iBAAiB,WAAW;AAAA,UAC9C,OAAO;AACN,4BAAY,qCAAY,UAAU,SAAS;AAAA,UAC5C;AAEA,gBAAM,KAAK;AAAA,YACV,eAAe,QAAQ,SAAS;AAAA,YAChC,gBAAgB;AAAA,UACjB;AACA,gBAAM,WAAW,MAAM,6CAAqB;AAAA,YAC3C;AAAA,YACA;AAAA,YACA;AAAA,YACA,CAAC;AAAA,YACD;AAAA,UACD;AACA,qBAAW,UAAU,SAAS,QAAQ;AACrC,gBAAI,OAAO,SAAS;AACnB,yBAAW,KAAK;AAAA,gBACf,MAAM,OAAO;AAAA,gBACb,OAAO,OAAO;AAAA,cACf,CAAC;AAAA,YACF;AAAA,UACD;AACA,qBAAO,kCAAS,UAAU;AAAA,QAC3B;AAAA,QACA,MAAM,sBAAkF;AACvF,gBAAM,aAAqC,CAAC;AAC5C,gBAAM,KAAK;AAAA,YACV,gBAAgB;AAAA,UACjB;AACA,gBAAM,WAAW,MAAM,6CAAqB;AAAA,YAC3C;AAAA,YACA;AAAA,YACA;AAAA,YACA,CAAC;AAAA,YACD;AAAA,UACD;AAEA,qBAAW,UAAU,SAAS,QAAQ;AACrC,uBAAW,KAAK;AAAA,cACf,MAAM,OAAO;AAAA,cACb,OAAO,OAAO;AAAA,YACf,CAAC;AAAA,UACF;AACA,qBAAO,kCAAS,UAAU;AAAA,QAC3B;AAAA,QACA,MAAM,WAAuE;AAC5E,gBAAM,aAAqC,CAAC;AAC5C,gBAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AACpD,gBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AAEtD,gBAAM,KAAK;AAAA,YACV,gBAAgB;AAAA,UACjB;AACA,cAAI,aAAa,cAAc,cAAc,UAAU;AACtD,kBAAM,mBAAmB,KAAK,iBAAiB,kBAAkB;AACjE,kBAAM,QAAQ,iBAAiB;AAE/B,kBAAM,WAAW,MAAM,kDAA0B;AAAA,cAChD;AAAA,cACA;AAAA,cACA;AAAA,cACA,CAAC;AAAA,cACD;AAAA,gBACC,eAAe,SAAS,KAAK;AAAA,cAC9B;AAAA,YACD;AAEA,uBAAW,UAAU,UAAU;AAC9B,kBAAI,OAAO,MAAM;AAChB,sBAAM,eAAe,MAAM,6CAAqB;AAAA,kBAC/C;AAAA,kBACA;AAAA,kBACA,uBAAuB,OAAO,KAAK,KAAK;AAAA,kBACxC,CAAC;AAAA,kBACD,CAAC;AAAA,gBACF;AACA,sBAAM,OAAO,aAAa;AAE1B,2BAAW,KAAK;AAAA,kBACf,MAAM,KAAK;AAAA,kBACX,OAAO,KAAK;AAAA,gBACb,CAAC;AAAA,cACF;AAAA,YACD;AAAA,UACD,OAAO;AACN,kBAAM,WAAW,MAAM,kDAA0B;AAAA,cAChD;AAAA,cACA;AAAA,cACA;AAAA,cACA,CAAC;AAAA,cACD;AAAA,YACD;AAEA,uBAAW,UAAU,UAAU;AAC9B,kBAAI,OAAO,WAAW;AACrB,2BAAW,KAAK;AAAA,kBACf,MAAM,OAAO;AAAA,kBACb,OAAO,OAAO;AAAA,gBACf,CAAC;AAAA,cACF;AAAA,YACD;AAAA,UACD;AACA,qBAAO,kCAAS,UAAU;AAAA,QAC3B;AAAA,QACA,MAAM,sBAAkF;AACvF,gBAAM,aAAqC,CAAC;AAC5C,gBAAM,KAAK;AAAA,YACV,gBAAgB;AAAA,UACjB;AACA,gBAAM,WAAW,MAAM,kDAA0B;AAAA,YAChD;AAAA,YACA;AAAA,YACA;AAAA,YACA,CAAC;AAAA,YACD;AAAA,UACD;AAEA,qBAAW,UAAU,UAAU;AAC9B,gBAAI,OAAO,MAAM;AAChB,yBAAW,KAAK;AAAA,gBACf,MAAM,OAAO;AAAA,gBACb,OAAO,OAAO;AAAA,cACf,CAAC;AAAA,YACF;AAAA,UACD;AACA,qBAAO,kCAAS,UAAU;AAAA,QAC3B;AAAA,QACA,MAAM,eAA2E;AAChF,gBAAM,aAAqC,CAAC;AAC5C,gBAAM,KAAK;AAAA,YACV,gBAAgB;AAAA,UACjB;AACA,gBAAM,WAAW,MAAM,kDAA0B;AAAA,YAChD;AAAA,YACA;AAAA,YACA;AAAA,YACA,CAAC;AAAA,YACD;AAAA,UACD;AAEA,qBAAW,UAAU,UAAU;AAC9B,gBAAI,OAAO,MAAM;AAChB,yBAAW,KAAK;AAAA,gBACf,MAAM,OAAO;AAAA,gBACb,OAAO,OAAO;AAAA,cACf,CAAC;AAAA,YACF;AAAA,UACD;AACA,qBAAO,kCAAS,UAAU;AAAA,QAC3B;AAAA,QACA,MAAM,wBAAoF;AACzF,gBAAM,aAAqC,CAAC;AAC5C,gBAAM,KAAK;AAAA,YACV,gBAAgB;AAAA,UACjB;AACA,gBAAM,WAAW,MAAM,kDAA0B;AAAA,YAChD;AAAA,YACA;AAAA,YACA;AAAA,YACA,CAAC;AAAA,YACD;AAAA,UACD;AAEA,qBAAW,UAAU,UAAU;AAC9B,gBAAI,OAAO,MAAM;AAChB,yBAAW,KAAK;AAAA,gBACf,MAAM,OAAO;AAAA,gBACb,OAAO,OAAO;AAAA,gBACd,aAAa,OAAO;AAAA,cACrB,CAAC;AAAA,YACF;AAAA,UACD;AACA,qBAAO,kCAAS,UAAU;AAAA,QAC3B;AAAA,QACA,MAAM,wBAAoF;AACzF,gBAAM,aAAqC,CAAC;AAC5C,gBAAM,KAAK;AAAA,YACV,gBAAgB;AAAA,YAChB,eAAe;AAAA,UAChB;AACA,gBAAM,WAAW,MAAM,kDAA0B;AAAA,YAChD;AAAA,YACA;AAAA,YACA;AAAA,YACA,CAAC;AAAA,YACD;AAAA,UACD;AAEA,qBAAW,UAAU,UAAU;AAC9B,uBAAW,KAAK;AAAA,cACf,MAAM,OAAO;AAAA,cACb,OAAO,OAAO;AAAA,YACf,CAAC;AAAA,UACF;AACA,qBAAO,kCAAS,UAAU;AAAA,QAC3B;AAAA,QACA,MAAM,2BAAuF;AAC5F,gBAAM,aAAqC,CAAC;AAC5C,gBAAM,YAAY,KAAK,iBAAiB,WAAW;AACnD,cAAI;AACJ,cAAI,cAAc,UAAU;AAC3B,kBAAM,eAAe,KAAK,iBAAiB,cAAc;AACzD,uBAAW,aAAa;AAAA,UACzB,OAAO;AACN,kBAAM,mBAAmB,KAAK,iBAAiB,kBAAkB;AACjE,uBAAW,iBAAiB;AAAA,UAC7B;AACA,gBAAM,KAAK;AAAA,YACV,gBAAgB;AAAA,YAChB,eAAe,qDAAqD,QAAQ;AAAA,UAC7E;AACA,gBAAM,WAAW,MAAM,kDAA0B;AAAA,YAChD;AAAA,YACA;AAAA,YACA;AAAA,YACA,CAAC;AAAA,YACD;AAAA,UACD;AAEA,qBAAW,UAAU,UAAU;AAC9B,uBAAW,KAAK;AAAA,cACf,MAAM,OAAO;AAAA,cACb,OAAO,OAAO;AAAA,YACf,CAAC;AAAA,UACF;AAEA,qBAAO,kCAAS,UAAU;AAAA,QAC3B;AAAA,QACA,MAAM,oBAAgF;AACrF,gBAAM,aAAqC,CAAC;AAC5C,gBAAM,KAAK;AAAA,YACV,gBAAgB;AAAA,YAChB,eAAe;AAAA,UAChB;AACA,gBAAM,WAAW,MAAM,kDAA0B;AAAA,YAChD;AAAA,YACA;AAAA,YACA;AAAA,YACA,CAAC;AAAA,YACD;AAAA,UACD;AAEA,qBAAW,UAAU,UAAU;AAC9B,uBAAW,KAAK;AAAA,cACf,MAAM,OAAO;AAAA,cACb,OAAO,OAAO;AAAA,YACf,CAAC;AAAA,UACF;AACA,qBAAO,kCAAS,UAAU;AAAA,QAC3B;AAAA,QACA,MAAM,6BAE6B;AAClC,gBAAM,aAAqC,CAAC;AAC5C,gBAAM,KAAK;AAAA,YACV,gBAAgB;AAAA,YAChB,eAAe;AAAA,UAChB;AACA,gBAAM,WAAW,MAAM,kDAA0B;AAAA,YAChD;AAAA,YACA;AAAA,YACA;AAAA,YACA,CAAC;AAAA,YACD;AAAA,UACD;AAEA,qBAAW,UAAU,UAAU;AAC9B,uBAAW,KAAK;AAAA,cACf,MAAM,OAAO;AAAA,cACb,OAAO,OAAO;AAAA,YACf,CAAC;AAAA,UACF;AACA,qBAAO,kCAAS,UAAU;AAAA,QAC3B;AAAA,QACA,MAAM,yBAAqF;AAC1F,gBAAM,aAAqC,CAAC;AAC5C,gBAAM,KAAK;AAAA,YACV,gBAAgB;AAAA,YAChB,eAAe;AAAA,UAChB;AACA,gBAAM,WAAW,MAAM,kDAA0B;AAAA,YAChD;AAAA,YACA;AAAA,YACA;AAAA,YACA,CAAC;AAAA,YACD;AAAA,UACD;AAEA,qBAAW,UAAU,UAAU;AAC9B,uBAAW,KAAK;AAAA,cACf,MAAM,OAAO;AAAA,cACb,OAAO,OAAO;AAAA,YACf,CAAC;AAAA,UACF;AACA,qBAAO,kCAAS,UAAU;AAAA,QAC3B;AAAA,MACD;AAAA,IACD;AAAA;AAAA,EAEA,MAAM,UAAkE;AACvE,UAAM,QAAQ,KAAK,aAAa;AAChC,UAAM,aAAmC,CAAC;AAC1C,UAAM,SAAS,MAAM;AACrB,QAAI,eAAe,CAAC;AACpB,QAAI;AACJ,UAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AACpD,UAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AAEtD,aAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAChC,UAAI;AAEH,YAAI,aAAa,cAAc;AAC9B,cAAI,cAAc,OAAO;AACxB,kBAAM,mBAAmB,KAAK,iBAAiB,gBAAgB,CAAC;AAChE,kBAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AACpD,kBAAM,WAAW,mBAAmB,gBAAgB;AAEpD,kBAAM,WAAW,MAAM,6CAAqB,KAAK,MAAM,OAAO,UAAU,CAAC,CAAC;AAC1E,kBAAM,eAAe,SAAS;AAE9B,2BAAe;AAAA,cACd,MAAM;AAAA,YACP;AAEA,gBAAI,UAAU;AACb,oBAAM,cAAc,KAAK,iBAAiB,eAAe,CAAC;AAC1D,6BAAe;AAAA,gBACd,GAAG;AAAA,gBACH,QAAQ;AAAA,kBACP,CAAC,WAAW,GAAG,MAAM,qDAA6B;AAAA,oBACjD;AAAA,oBACA;AAAA,oBACA,aAAa;AAAA,oBACb,aAAa;AAAA,kBACd;AAAA,gBACD;AAAA,cACD;AAAA,YACD;AAAA,UACD,WAAW,cAAc,UAAU;AAClC,kBAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AACpD,kBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,kBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,kBAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAElD,iBAAK,CAAC;AAEN,eAAG,gBAAgB,cAAc,SAAS;AAE1C,gBAAI,QAAQ,aAAa;AACxB,iBAAG,gBAAgB,GAAG,GAAG,aAAa,IAAI,QAAQ,WAAW;AAAA,YAC9D;AAEA,gBAAI,CAAC,WAAW;AACf,oBAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC9C,iBAAG,gBAAgB;AACnB,oBAAM,WAAW,MAAM,6CAAqB;AAAA,gBAC3C;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,CAAC;AAAA,gBACD;AAAA,cACD;AACA,6BAAe,SAAS;AAAA,YACzB,OAAO;AACN,6BAAe,MAAM,kDAA0B;AAAA,gBAC9C;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,CAAC;AAAA,gBACD;AAAA,cACD;AAAA,YACD;AAEA,gBAAI,UAAU;AACb,oBAAM,cAAc,KAAK,iBAAiB,eAAe,CAAC;AAC1D,oBAAM,8BAA6C,CAAC;AAEpD,yBAAW,QAAQ,cAA+B;AACjD,4CAA4B,KAAK;AAAA,kBAChC,MAAM;AAAA,kBACN,QAAQ;AAAA,oBACP,CAAC,WAAW,GAAG,MAAM,qDAA6B;AAAA,sBACjD;AAAA,sBACA,mBAAmB,KAAK,MAAM;AAAA,sBAC9B,KAAK;AAAA,sBACL,KAAK;AAAA,oBACN;AAAA,kBACD;AAAA,gBACD,CAAC;AAAA,cACF;AAEA,6BAAe;AAAA,YAChB,OAAO;AACN,6BAAgB,aAA+B,IAAI,CAAC,UAAU,EAAE,MAAM,KAAK,EAAE;AAAA,YAC9E;AAAA,UACD,WAAW,cAAc,UAAU;AAClC,kBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,kBAAM,WAAW,KAAK,iBAAiB,MAAM,CAAC;AAC9C,kBAAM,qBAAqB,KAAK,iBAAiB,sBAAsB,CAAC;AACxE,kBAAM,UAAU,KAAK,iBAAiB,WAAW,CAAC;AAElD,kBAAM,aAAa,KAAK,QAAQ,iBAAiB,GAAG,kBAAkB;AAEtE,kBAAM,UAAuB;AAAA,cAC5B,gBAAgB,WAAW;AAAA,YAC5B;AAEA,kBAAM,QAAqB;AAAA,cAC1B,YAAY;AAAA,cACZ,cAAc;AAAA,cACd,WAAW,WAAW,WACnB,WAAW,WACX,GAAG,kBAAkB,IAAI,WAAW,aAAa;AAAA,cACpD,GAAG;AAAA,YACJ;AAEA,kBAAM,OAAO,MAAM,KAAK,QAAQ,oBAAoB,GAAG,kBAAkB;AAEzE,kBAAM,WAAW,MAAM,6CAAqB;AAAA,cAC3C;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA,EAAE,QAAQ;AAAA,YACX;AACA,2BAAe,SAAS;AAAA,UACzB,WAAW,cAAc,UAAU;AAClC,kBAAM,mBAAmB,KAAK,iBAAiB,gBAAgB,CAAC;AAChE,kBAAM,6CAAqB,KAAK,MAAM,UAAU,mBAAmB,gBAAgB,EAAE;AACrF,2BAAe,EAAE,SAAS,KAAK;AAAA,UAChC;AAAA,QACD,WAAW,aAAa,mBAAmB;AAC1C,cAAI,cAAc,UAAU;AAC3B,kBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,iBAAK,KAAK,iBAAiB,WAAW,CAAC;AAEvC,gBAAI,GAAG,kBAAkB,OAAO,GAAG,mBAAmB,UAAU;AAC/D,iBAAG,iBAAkB,GAAG,eAA4B,KAAK,GAAG;AAAA,YAC7D;AAEA,gBAAI,CAAC,WAAW;AACf,oBAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC9C,iBAAG,gBAAgB;AACnB,oBAAM,WAAW,MAAM,6CAAqB;AAAA,gBAC3C;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,CAAC;AAAA,gBACD;AAAA,cACD;AACA,6BAAe,SAAS;AAAA,YACzB,OAAO;AACN,6BAAe,MAAM,kDAA0B;AAAA,gBAC9C;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,CAAC;AAAA,gBACD;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAAA,QACD,WAAW,aAAa,sBAAsB;AAC7C,cAAI,cAAc,UAAU;AAC3B,kBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,iBAAK,KAAK,iBAAiB,WAAW,CAAC;AAEvC,gBAAI,GAAG,kBAAkB,OAAO,GAAG,mBAAmB,UAAU;AAC/D,iBAAG,iBAAkB,GAAG,eAA4B,KAAK,GAAG;AAAA,YAC7D;AAEA,gBAAI,CAAC,WAAW;AACf,oBAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC9C,iBAAG,gBAAgB;AACnB,oBAAM,WAAW,MAAM,6CAAqB;AAAA,gBAC3C;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,CAAC;AAAA,gBACD;AAAA,cACD;AACA,6BAAe,SAAS;AAAA,YACzB,OAAO;AACN,6BAAe,MAAM,kDAA0B;AAAA,gBAC9C;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,CAAC;AAAA,gBACD;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAAA,QACD,WAAW,aAAa,cAAc;AACrC,cAAI,cAAc,UAAU;AAC3B,kBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,iBAAK,KAAK,iBAAiB,WAAW,CAAC;AAEvC,gBAAI,GAAG,kBAAkB,OAAO,GAAG,mBAAmB,UAAU;AAC/D,iBAAG,iBAAkB,GAAG,eAA4B,KAAK,GAAG;AAAA,YAC7D;AAEA,gBAAI,CAAC,WAAW;AACf,oBAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC9C,iBAAG,gBAAgB;AACnB,oBAAM,WAAW,MAAM,6CAAqB;AAAA,gBAC3C;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,CAAC;AAAA,gBACD;AAAA,cACD;AACA,6BAAe,SAAS;AAAA,YACzB,OAAO;AACN,6BAAe,MAAM,kDAA0B;AAAA,gBAC9C;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,CAAC;AAAA,gBACD;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAAA,QACD,WAAW,aAAa,cAAc;AACrC,cAAI,cAAc,UAAU;AAC3B,kBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,iBAAK,KAAK,iBAAiB,WAAW,CAAC;AAEvC,gBAAI,GAAG,kBAAkB,OAAO,GAAG,mBAAmB,UAAU;AAC/D,iBAAG,iBAAkB,GAAG,eAA4B,KAAK,GAAG;AAAA,YAC7D;AAEA,gBAAI,CAAC,WAAW;AACf,oBAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC9C,iBAAG,gBAAgB;AACnB,oBAAM,WAAW,MAAM,6CAAqB;AAAA,gBAC3C;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,CAAC;AAAA,gBACD;AAAA,cACD;AACA,6BAAe,SAAS;AAAA,YACzB,OAAO;AACN,6BAAe,MAAM,kDAA0B;AAAA,gBAC9C;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,CAAC;AAAA,gBACD;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAAA,QACD,WAAW,aAAa,YAAY;AACnC,cAAI,cAAc,UAAU;AAC3B,kBAAM,mBAAmB,KAAK,iBAAiB,qBAAqB,CAAC;AACrE,kBAAM,mBAAmB,KAAK,iBAAiB,oBAAoB,CAAC;AACpE,kBAAM,OAAO;AAAA,cACZ,mBAAmB;AAAA,cACnB,GAAG;AAAA,YACJ;AAEA,kBAAM,WAAW,MAAM,6CAAqB;AAAA,cAC3C;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YACD;AACA,2BAAe,SAAS;AAAA,UACzB,WAAW,cAAc,UAAU;AAClC,kBAAM,KAAK,KAAK,iBAAiB,MAAM,CAAC;AACxC,2BAAe,MAAM,6CAAqB;AAAA,cACzC;AAAA,cACA;AAAA,cACA,uBAAuB,EAAE;AAAA,YAC1B;AACA,2BAAe,EAAE,SAAS,KAAK;AAAA,UAChC,WAAW,cAAc,OAAO;AAC/B,kBAAM,KAAK,KAAK,iBAAiB,MAAM,CAAC;AACxC,iBAAK,KAAK,iBAAiB,WAAW,CAAC;AAEvC,gBAAI,GAAG,kBAAkB,OAAO,GAAG,mBAAmB,UAAU;AAC/D,iBAAG,iBAAkB,GAAG,eAA4B,KAAK,GAAG;AAAA,YAC7D;AAEA,kBAAM,WAAW,MAAM,6CAAqB;AAAA,cAC3C;AAAA,cACA;AAAA,cACA,uBAAuB,EAAE;AAAA,cACzB,CAAC;AAAA,cACD;AAAA,YACD;AACA,2BAAe,SAAS;AAAA,UACzB,WAAW,cAAc,UAAU;AAClC,kBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,iBAAK,KAAK,iBAAiB,WAAW,CAAC;AAEvC,gBAAI,GAAG,kBAAkB,OAAO,GAAG,mBAAmB,UAAU;AAC/D,iBAAG,iBAAkB,GAAG,eAA4B,KAAK,GAAG;AAAA,YAC7D;AAEA,gBAAI,CAAC,WAAW;AACf,oBAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC9C,iBAAG,gBAAgB;AACnB,oBAAM,WAAW,MAAM,6CAAqB;AAAA,gBAC3C;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,CAAC;AAAA,gBACD;AAAA,cACD;AACA,6BAAe,SAAS;AAAA,YACzB,OAAO;AACN,6BAAe,MAAM,kDAA0B;AAAA,gBAC9C;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,CAAC;AAAA,gBACD;AAAA,cACD;AAAA,YACD;AAAA,UACD,WAAW,cAAc,UAAU;AAClC,kBAAM,KAAK,KAAK,iBAAiB,MAAM,CAAC;AACxC,kBAAM,OAAO,KAAK,iBAAiB,gBAAgB,CAAC;AAEpD,kBAAM,WAAW,MAAM,6CAAqB;AAAA,cAC3C;AAAA,cACA;AAAA,cACA,uBAAuB,EAAE;AAAA,cACzB;AAAA,YACD;AACA,2BAAe,SAAS;AAAA,UACzB,OAAO;AACN,kBAAM,IAAI;AAAA,cACT,KAAK,QAAQ;AAAA,cACb,kBAAkB,SAAS;AAAA,cAC3B,EAAE,WAAW,EAAE;AAAA,YAChB;AAAA,UACD;AAAA,QACD,WAAW,aAAa,eAAe;AACtC,cAAI,cAAc,UAAU;AAC3B,kBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,kBAAM,aAAa,KAAK,iBAAiB,cAAc,CAAC;AACxD,gBAAI,OAAO,CAAC;AAEZ,gBAAI,eAAe,YAAY;AAC9B,oBAAM,iBAAkB,KAAK,iBAAiB,kBAAkB,CAAC,EAC/D,MAAM,GAAG,EACT,IAAI,CAAC,UAAU,MAAM,KAAK,CAAC;AAC7B,qBAAO,OAAO,QAAQ,MAAM,CAAC,EAAE,IAAI,EACjC,OAAO,CAAC,CAAC,GAAG,MAAM,CAAC,eAAe,SAAS,GAAG,CAAC,EAC/C,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,OAAO,OAAO,KAAK,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;AAAA,YACrE,WAAW,eAAe,WAAW;AACpC,oBAAM,eAAe,KAAK,iBAAiB,gBAAgB,CAAC;AAG5D,qBAAO,aAAa,MAAM,OAAO,CAAC,KAAK,UAAU;AAChD,oBAAI,MAAM,MAAgB,IAAI,MAAM;AACpC,uBAAO;AAAA,cACR,GAAG,CAAC,CAAC;AAAA,YACN;AAEA,kBAAM,WAAW,MAAM,6CAAqB;AAAA,cAC3C;AAAA,cACA;AAAA,cACA,cAAc,SAAS;AAAA,cACvB;AAAA,YACD;AACA,2BAAe,SAAS;AAAA,UACzB,WAAW,cAAc,UAAU;AAClC,kBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,kBAAM,KAAK,KAAK,iBAAiB,MAAM,CAAC;AACxC,2BAAe,MAAM,6CAAqB;AAAA,cACzC;AAAA,cACA;AAAA,cACA,cAAc,SAAS,IAAI,EAAE;AAAA,YAC9B;AACA,2BAAe,EAAE,SAAS,KAAK;AAAA,UAChC,WAAW,cAAc,OAAO;AAC/B,kBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,kBAAM,KAAK,KAAK,iBAAiB,MAAM,CAAC;AACxC,iBAAK,KAAK,iBAAiB,WAAW,CAAC;AAEvC,gBAAI,GAAG,kBAAkB,OAAO,GAAG,mBAAmB,UAAU;AAC/D,iBAAG,iBAAkB,GAAG,eAA4B,KAAK,GAAG;AAAA,YAC7D;AAEA,kBAAM,WAAW,MAAM,6CAAqB;AAAA,cAC3C;AAAA,cACA;AAAA,cACA,cAAc,SAAS,IAAI,EAAE;AAAA,cAC7B,CAAC;AAAA,cACD;AAAA,YACD;AACA,2BAAe,SAAS;AAAA,UACzB,WAAW,cAAc,UAAU;AAClC,kBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,kBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,iBAAK,KAAK,iBAAiB,WAAW,CAAC;AAEvC,gBAAI,GAAG,kBAAkB,OAAO,GAAG,mBAAmB,UAAU;AAC/D,iBAAG,iBAAkB,GAAG,eAA4B,KAAK,GAAG;AAAA,YAC7D;AAEA,gBAAI,CAAC,WAAW;AACf,oBAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC9C,iBAAG,gBAAgB;AACnB,oBAAM,WAAW,MAAM,6CAAqB;AAAA,gBAC3C;AAAA,gBACA;AAAA,gBACA,cAAc,SAAS;AAAA,gBACvB,CAAC;AAAA,gBACD;AAAA,cACD;AACA,6BAAe,SAAS;AAAA,YACzB,OAAO;AACN,6BAAe,MAAM,kDAA0B;AAAA,gBAC9C;AAAA,gBACA;AAAA,gBACA,cAAc,SAAS;AAAA,gBACvB,CAAC;AAAA,gBACD;AAAA,cACD;AAAA,YACD;AAAA,UACD,WAAW,cAAc,UAAU;AAClC,kBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,kBAAM,KAAK,KAAK,iBAAiB,MAAM,CAAC;AACxC,kBAAM,aAAa,KAAK,iBAAiB,cAAc,CAAC;AACxD,gBAAI,OAAO,CAAC;AAEZ,gBAAI,eAAe,YAAY;AAC9B,oBAAM,iBAAkB,KAAK,iBAAiB,kBAAkB,CAAC,EAC/D,MAAM,GAAG,EACT,IAAI,CAAC,UAAU,MAAM,KAAK,CAAC;AAC7B,qBAAO,OAAO,QAAQ,MAAM,CAAC,EAAE,IAAI,EACjC,OAAO,CAAC,CAAC,GAAG,MAAM,CAAC,eAAe,SAAS,GAAG,CAAC,EAC/C,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,OAAO,OAAO,KAAK,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;AAAA,YACrE,WAAW,eAAe,WAAW;AACpC,oBAAM,eAAe,KAAK,iBAAiB,gBAAgB,CAAC;AAG5D,qBAAO,aAAa,MAAM,OAAO,CAAC,KAAK,UAAU;AAChD,oBAAI,MAAM,MAAgB,IAAI,MAAM;AACpC,uBAAO;AAAA,cACR,GAAG,CAAC,CAAC;AAAA,YACN;AAEA,kBAAM,WAAW,MAAM,6CAAqB;AAAA,cAC3C;AAAA,cACA;AAAA,cACA,cAAc,SAAS,IAAI,EAAE;AAAA,cAC7B;AAAA,YACD;AACA,2BAAe,SAAS;AAAA,UACzB,OAAO;AACN,kBAAM,IAAI;AAAA,cACT,KAAK,QAAQ;AAAA,cACb,kBAAkB,SAAS;AAAA,cAC3B,EAAE,WAAW,EAAE;AAAA,YAChB;AAAA,UACD;AAAA,QACD,WAAW,aAAa,QAAQ;AAC/B,cAAI,cAAc,UAAU;AAC3B,kBAAM,OAAO,KAAK,iBAAiB,oBAAoB,CAAC;AAExD,kBAAM,WAAW,MAAM,6CAAqB;AAAA,cAC3C;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YACD;AACA,2BAAe,SAAS;AAAA,UACzB,WAAW,cAAc,UAAU;AAClC,kBAAM,KAAK,KAAK,iBAAiB,MAAM,CAAC;AACxC,2BAAe,MAAM,6CAAqB;AAAA,cACzC;AAAA,cACA;AAAA,cACA,uBAAuB,EAAE;AAAA,YAC1B;AACA,2BAAe,EAAE,SAAS,KAAK;AAAA,UAChC,WAAW,cAAc,OAAO;AAC/B,kBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,iBAAK,KAAK,iBAAiB,WAAW,CAAC;AAEvC,gBAAI,GAAG,kBAAkB,OAAO,GAAG,mBAAmB,UAAU;AAC/D,iBAAG,iBAAkB,GAAG,eAA4B,KAAK,GAAG;AAAA,YAC7D;AAEA,gBAAI,cAAc,MAAM;AACvB,oBAAM,KAAK,KAAK,iBAAiB,MAAM,CAAC;AACxC,oBAAM,WAAW,MAAM,6CAAqB;AAAA,gBAC3C;AAAA,gBACA;AAAA,gBACA,uBAAuB,EAAE;AAAA,gBACzB,CAAC;AAAA,gBACD;AAAA,cACD;AACA,6BAAe,SAAS;AAAA,YACzB,OAAO;AACN,oBAAM,WAAW,KAAK,iBAAiB,aAAa,CAAC;AACrD,iBAAG,gBAAgB,aAAa,QAAQ;AACxC,iBAAG,gBAAgB;AACnB,oBAAM,WAAW,MAAM,6CAAqB;AAAA,gBAC3C;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,CAAC;AAAA,gBACD;AAAA,cACD;AACA,6BAAe,SAAS;AAAA,YACzB;AAAA,UACD,WAAW,cAAc,UAAU;AAClC,kBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,iBAAK,KAAK,iBAAiB,WAAW,CAAC;AAEvC,gBAAI,GAAG,kBAAkB,OAAO,GAAG,mBAAmB,UAAU;AAC/D,iBAAG,iBAAkB,GAAG,eAA4B,KAAK,GAAG;AAAA,YAC7D;AAEA,gBAAI,CAAC,WAAW;AACf,oBAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC9C,iBAAG,gBAAgB;AACnB,oBAAM,WAAW,MAAM,6CAAqB;AAAA,gBAC3C;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,CAAC;AAAA,gBACD;AAAA,cACD;AACA,6BAAe,SAAS;AAAA,YACzB,OAAO;AACN,6BAAe,MAAM,kDAA0B;AAAA,gBAC9C;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,CAAC;AAAA,gBACD;AAAA,cACD;AAAA,YACD;AAAA,UACD,WAAW,cAAc,UAAU;AAClC,kBAAM,KAAK,KAAK,iBAAiB,MAAM,CAAC;AACxC,kBAAM,OAAO,KAAK,iBAAiB,gBAAgB,CAAC;AAEpD,kBAAM,WAAW,MAAM,6CAAqB;AAAA,cAC3C;AAAA,cACA;AAAA,cACA,uBAAuB,EAAE;AAAA,cACzB;AAAA,YACD;AACA,2BAAe,SAAS;AAAA,UACzB,OAAO;AACN,kBAAM,IAAI;AAAA,cACT,KAAK,QAAQ;AAAA,cACb,kBAAkB,SAAS;AAAA,cAC3B,EAAE,WAAW,EAAE;AAAA,YAChB;AAAA,UACD;AAAA,QACD,WAAW,aAAa,aAAa;AACpC,cAAI,cAAc,UAAU;AAC3B,kBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,iBAAK,KAAK,iBAAiB,WAAW,CAAC;AAEvC,gBAAI,GAAG,kBAAkB,OAAO,GAAG,mBAAmB,UAAU;AAC/D,iBAAG,iBAAkB,GAAG,eAA4B,KAAK,GAAG;AAAA,YAC7D;AAEA,gBAAI,CAAC,WAAW;AACf,oBAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC9C,iBAAG,gBAAgB;AACnB,oBAAM,WAAW,MAAM,6CAAqB;AAAA,gBAC3C;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,CAAC;AAAA,gBACD;AAAA,cACD;AACA,6BAAe,SAAS;AAAA,YACzB,OAAO;AACN,6BAAe,MAAM,kDAA0B;AAAA,gBAC9C;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,CAAC;AAAA,gBACD;AAAA,cACD;AAAA,YACD;AAAA,UACD,OAAO;AACN,kBAAM,IAAI;AAAA,cACT,KAAK,QAAQ;AAAA,cACb,kBAAkB,SAAS;AAAA,cAC3B,EAAE,WAAW,EAAE;AAAA,YAChB;AAAA,UACD;AAAA,QACD,WAAW,aAAa,YAAY;AACnC,cAAI,cAAc,UAAU;AAC3B,kBAAM,YAAY,KAAK,iBAAiB,aAAa,CAAC;AACtD,iBAAK,KAAK,iBAAiB,WAAW,CAAC;AAEvC,gBAAI,GAAG,kBAAkB,OAAO,GAAG,mBAAmB,UAAU;AAC/D,iBAAG,iBAAkB,GAAG,eAA4B,KAAK,GAAG;AAAA,YAC7D;AAEA,gBAAI,CAAC,WAAW;AACf,oBAAM,QAAQ,KAAK,iBAAiB,SAAS,CAAC;AAC9C,iBAAG,gBAAgB;AACnB,oBAAM,WAAW,MAAM,6CAAqB;AAAA,gBAC3C;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,CAAC;AAAA,gBACD;AAAA,cACD;AACA,6BAAe,SAAS;AAAA,YACzB,OAAO;AACN,6BAAe,MAAM,kDAA0B;AAAA,gBAC9C;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,CAAC;AAAA,gBACD;AAAA,cACD;AAAA,YACD;AAAA,UACD,OAAO;AACN,kBAAM,IAAI;AAAA,cACT,KAAK,QAAQ;AAAA,cACb,kBAAkB,SAAS;AAAA,cAC3B,EAAE,WAAW,EAAE;AAAA,YAChB;AAAA,UACD;AAAA,QACD,OAAO;AACN,gBAAM,IAAI,uCAAmB,KAAK,QAAQ,GAAG,iBAAiB,QAAQ,mBAAmB;AAAA,YACxF,WAAW;AAAA,UACZ,CAAC;AAAA,QACF;AAAA,MACD,SAAS,OAAO;AACf,YAAI,KAAK,eAAe,GAAG;AAC1B,gBAAM,qBAAqB,KAAK,QAAQ;AAAA,YACvC,KAAK,QAAQ,gBAAgB,EAAE,OAAO,MAAM,QAAQ,CAAC;AAAA,YACrD,EAAE,UAAU,EAAE,MAAM,EAAE,EAAE;AAAA,UACzB;AACA,qBAAW,KAAK,GAAG,kBAAkB;AACrC;AAAA,QACD;AAEA,cAAM;AAAA,MACP;AAEA,YAAM,gBAAgB,KAAK,QAAQ;AAAA,QAClC,KAAK,QAAQ,gBAAgB,YAAY;AAAA,QACzC,EAAE,UAAU,EAAE,MAAM,EAAE,EAAE;AAAA,MACzB;AAEA,iBAAW,KAAK,GAAG,aAAa;AAAA,IACjC;AAEA,QAAI,aAAa,cAAc;AAC9B,UAAI,cAAc,SAAS,cAAc,UAAU;AAClD,eAAO,CAAC,UAAU;AAAA,MACnB;AAAA,IACD;AACA,WAAO,CAAC,UAAU;AAAA,EACnB;AACD;","names":[]}