{"version":3,"sources":["../../../nodes/Baserow/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHttpRequestMethods,\n\tILoadOptionsFunctions,\n\tIRequestOptions,\n\tJsonObject,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\nimport type { Accumulator, BaserowCredentials, LoadedResource } from './types';\n\n/**\n * Make a request to Baserow API.\n */\nexport async function baserowApiRequest(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\tjwtToken: string,\n\tbody: IDataObject = {},\n\tqs: IDataObject = {},\n) {\n\tconst credentials = await this.getCredentials<BaserowCredentials>('baserowApi');\n\n\tconst options: IRequestOptions = {\n\t\theaders: {\n\t\t\tAuthorization: `JWT ${jwtToken}`,\n\t\t},\n\t\tmethod,\n\t\tbody,\n\t\tqs,\n\t\turi: `${credentials.host}${endpoint}`,\n\t\tjson: true,\n\t};\n\n\tif (Object.keys(qs).length === 0) {\n\t\tdelete options.qs;\n\t}\n\n\tif (Object.keys(body).length === 0) {\n\t\tdelete options.body;\n\t}\n\n\ttry {\n\t\treturn await this.helpers.request(options);\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\n/**\n * Get all results from a paginated query to Baserow API.\n */\nexport async function baserowApiRequestAllItems(\n\tthis: IExecuteFunctions,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\tjwtToken: string,\n\tbody: IDataObject,\n\tqs: IDataObject = {},\n): Promise<IDataObject[]> {\n\tconst returnData: IDataObject[] = [];\n\tlet responseData;\n\n\tqs.page = 1;\n\tqs.size = 100;\n\n\tconst returnAll = this.getNodeParameter('returnAll', 0, false);\n\tconst limit = this.getNodeParameter('limit', 0, 0);\n\n\tdo {\n\t\tresponseData = await baserowApiRequest.call(this, method, endpoint, jwtToken, body, qs);\n\t\treturnData.push(...(responseData.results as IDataObject[]));\n\n\t\tif (!returnAll && returnData.length > limit) {\n\t\t\treturn returnData.slice(0, limit);\n\t\t}\n\n\t\tqs.page += 1;\n\t} while (responseData.next !== null);\n\n\treturn returnData;\n}\n\n/**\n * Get a JWT token based on Baserow account username and password.\n */\nexport async function getJwtToken(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions,\n\t{ username, password, host }: BaserowCredentials,\n) {\n\tconst options: IRequestOptions = {\n\t\tmethod: 'POST',\n\t\tbody: {\n\t\t\tusername,\n\t\t\tpassword,\n\t\t},\n\t\turi: `${host}/api/user/token-auth/`,\n\t\tjson: true,\n\t};\n\n\ttry {\n\t\tconst { token } = (await this.helpers.request(options)) as { token: string };\n\t\treturn token;\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\nexport async function getFieldNamesAndIds(\n\tthis: IExecuteFunctions,\n\ttableId: string,\n\tjwtToken: string,\n) {\n\tconst endpoint = `/api/database/fields/table/${tableId}/`;\n\tconst response = (await baserowApiRequest.call(\n\t\tthis,\n\t\t'GET',\n\t\tendpoint,\n\t\tjwtToken,\n\t)) as LoadedResource[];\n\n\treturn {\n\t\tnames: response.map((field) => field.name),\n\t\tids: response.map((field) => `field_${field.id}`),\n\t};\n}\n\nexport const toOptions = (items: LoadedResource[]) =>\n\titems.map(({ name, id }) => ({ name, value: id }));\n\n/**\n * Responsible for mapping field IDs `field_n` to names and vice versa.\n */\nexport class TableFieldMapper {\n\tnameToIdMapping: Record<string, string> = {};\n\n\tidToNameMapping: Record<string, string> = {};\n\n\tmapIds = true;\n\n\tasync getTableFields(\n\t\tthis: IExecuteFunctions,\n\t\ttable: string,\n\t\tjwtToken: string,\n\t): Promise<LoadedResource[]> {\n\t\tconst endpoint = `/api/database/fields/table/${table}/`;\n\t\treturn await baserowApiRequest.call(this, 'GET', endpoint, jwtToken);\n\t}\n\n\tcreateMappings(tableFields: LoadedResource[]) {\n\t\tthis.nameToIdMapping = this.createNameToIdMapping(tableFields);\n\t\tthis.idToNameMapping = this.createIdToNameMapping(tableFields);\n\t}\n\n\tprivate createIdToNameMapping(responseData: LoadedResource[]) {\n\t\treturn responseData.reduce<Accumulator>((acc, cur) => {\n\t\t\tacc[`field_${cur.id}`] = cur.name;\n\t\t\treturn acc;\n\t\t}, {});\n\t}\n\n\tprivate createNameToIdMapping(responseData: LoadedResource[]) {\n\t\treturn responseData.reduce<Accumulator>((acc, cur) => {\n\t\t\tacc[cur.name] = `field_${cur.id}`;\n\t\t\treturn acc;\n\t\t}, {});\n\t}\n\n\tsetField(field: string) {\n\t\treturn this.mapIds ? field : (this.nameToIdMapping[field] ?? field);\n\t}\n\n\tidsToNames(obj: Record<string, unknown>) {\n\t\tObject.entries(obj).forEach(([key, value]) => {\n\t\t\tif (this.idToNameMapping[key] !== undefined) {\n\t\t\t\tdelete obj[key];\n\t\t\t\tobj[this.idToNameMapping[key]] = value;\n\t\t\t}\n\t\t});\n\t}\n\n\tnamesToIds(obj: Record<string, unknown>) {\n\t\tObject.entries(obj).forEach(([key, value]) => {\n\t\t\tif (this.nameToIdMapping[key] !== undefined) {\n\t\t\t\tdelete obj[key];\n\t\t\t\tobj[this.nameToIdMapping[key]] = value;\n\t\t\t}\n\t\t});\n\t}\n}\n"],"mappings":"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","names":[]}