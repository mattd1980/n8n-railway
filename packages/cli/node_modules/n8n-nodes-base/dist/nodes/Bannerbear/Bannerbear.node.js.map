{"version":3,"sources":["../../../nodes/Bannerbear/Bannerbear.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes } from 'n8n-workflow';\n\nimport { bannerbearApiRequest, keysToSnakeCase } from './GenericFunctions';\nimport { imageFields, imageOperations } from './ImageDescription';\nimport { templateFields, templateOperations } from './TemplateDescription';\n\nexport class Bannerbear implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Bannerbear',\n\t\tname: 'bannerbear',\n\t\t// eslint-disable-next-line n8n-nodes-base/node-class-description-icon-not-svg\n\t\ticon: 'file:bannerbear.png',\n\t\tgroup: ['output'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume Bannerbear API',\n\t\tdefaults: {\n\t\t\tname: 'Bannerbear',\n\t\t},\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'bannerbearApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Image',\n\t\t\t\t\t\tvalue: 'image',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Template',\n\t\t\t\t\t\tvalue: 'template',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'image',\n\t\t\t},\n\t\t\t// IMAGE\n\t\t\t...imageOperations,\n\t\t\t...imageFields,\n\t\t\t// TEMPLATE\n\t\t\t...templateOperations,\n\t\t\t...templateFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get all the available templates to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getTemplates(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst templates = await bannerbearApiRequest.call(this, 'GET', '/templates');\n\t\t\t\tfor (const template of templates) {\n\t\t\t\t\tconst templateName = template.name;\n\t\t\t\t\tconst templateId = template.uid;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: templateName,\n\t\t\t\t\t\tvalue: templateId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\n\t\t\t// Get all the available modifications to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getModificationNames(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst templateId = this.getCurrentNodeParameter('templateId');\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst { available_modifications } = await bannerbearApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t`/templates/${templateId}`,\n\t\t\t\t);\n\t\t\t\tfor (const modification of available_modifications) {\n\t\t\t\t\tconst modificationName = modification.name;\n\t\t\t\t\tconst modificationId = modification.name;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: modificationName,\n\t\t\t\t\t\tvalue: modificationId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: IDataObject[] = [];\n\t\tconst length = items.length;\n\t\tlet responseData;\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tif (resource === 'image') {\n\t\t\t\t//https://developers.bannerbear.com/#create-an-image\n\t\t\t\tif (operation === 'create') {\n\t\t\t\t\tconst templateId = this.getNodeParameter('templateId', i) as string;\n\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\tconst modifications = (this.getNodeParameter('modificationsUi', i) as IDataObject)\n\t\t\t\t\t\t.modificationsValues as IDataObject;\n\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\ttemplate: templateId,\n\t\t\t\t\t};\n\t\t\t\t\tif (additionalFields.webhookUrl) {\n\t\t\t\t\t\tbody.webhook_url = additionalFields.webhookUrl as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (additionalFields.metadata) {\n\t\t\t\t\t\tbody.metadata = additionalFields.metadata as string;\n\t\t\t\t\t}\n\t\t\t\t\tif (modifications) {\n\t\t\t\t\t\tbody.modifications = keysToSnakeCase(modifications);\n\t\t\t\t\t\t// delete all fields set to empty\n\t\t\t\t\t\tfor (const modification of body.modifications as IDataObject[]) {\n\t\t\t\t\t\t\tfor (const key of Object.keys(modification)) {\n\t\t\t\t\t\t\t\tif (modification[key] === '') {\n\t\t\t\t\t\t\t\t\tdelete modification[key];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tresponseData = await bannerbearApiRequest.call(this, 'POST', '/images', body);\n\t\t\t\t\tif (additionalFields.waitForImage && responseData.status !== 'completed') {\n\t\t\t\t\t\tlet maxTries = (additionalFields.waitForImageMaxTries as number) || 3;\n\n\t\t\t\t\t\tconst promise = async (uid: string) => {\n\t\t\t\t\t\t\tlet data: IDataObject = {};\n\t\t\t\t\t\t\treturn await new Promise((resolve, reject) => {\n\t\t\t\t\t\t\t\tconst timeout = setInterval(async () => {\n\t\t\t\t\t\t\t\t\tdata = await bannerbearApiRequest.call(this, 'GET', `/images/${uid}`);\n\n\t\t\t\t\t\t\t\t\tif (data.status === 'completed') {\n\t\t\t\t\t\t\t\t\t\tclearInterval(timeout);\n\t\t\t\t\t\t\t\t\t\tresolve(data);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (--maxTries === 0) {\n\t\t\t\t\t\t\t\t\t\tclearInterval(timeout);\n\t\t\t\t\t\t\t\t\t\treject(new Error('Image did not finish processing after multiple tries.'));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}, 2000);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tresponseData = await promise(responseData.uid as string);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//https://developers.bannerbear.com/#get-a-specific-image\n\t\t\t\tif (operation === 'get') {\n\t\t\t\t\tconst imageId = this.getNodeParameter('imageId', i) as string;\n\t\t\t\t\tresponseData = await bannerbearApiRequest.call(this, 'GET', `/images/${imageId}`);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (resource === 'template') {\n\t\t\t\t//https://developers.bannerbear.com/#get-a-specific-template\n\t\t\t\tif (operation === 'get') {\n\t\t\t\t\tconst templateId = this.getNodeParameter('templateId', i) as string;\n\t\t\t\t\tresponseData = await bannerbearApiRequest.call(this, 'GET', `/templates/${templateId}`);\n\t\t\t\t}\n\t\t\t\t//https://developers.bannerbear.com/#list-templates\n\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\tresponseData = await bannerbearApiRequest.call(this, 'GET', '/templates');\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (Array.isArray(responseData)) {\n\t\t\t\treturnData.push.apply(returnData, responseData as IDataObject[]);\n\t\t\t} else {\n\t\t\t\treturnData.push(responseData as IDataObject);\n\t\t\t}\n\t\t}\n\t\treturn [this.helpers.returnJsonArray(returnData)];\n\t}\n}\n"],"mappings":"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","names":[]}