{"version":3,"sources":["../../../nodes/Salesforce/GenericFunctions.ts"],"sourcesContent":["import jwt from 'jsonwebtoken';\nimport moment from 'moment-timezone';\nimport type {\n\tIExecuteFunctions,\n\tILoadOptionsFunctions,\n\tIDataObject,\n\tINodePropertyOptions,\n\tJsonObject,\n\tIHttpRequestMethods,\n\tIRequestOptions,\n\tIPollFunctions,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\nfunction getOptions(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions | IPollFunctions,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\n\tbody: any,\n\tqs: IDataObject,\n\tinstanceUrl: string,\n): IRequestOptions {\n\tconst options: IRequestOptions = {\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tmethod,\n\t\tbody,\n\t\tqs,\n\t\turi: `${instanceUrl}/services/data/v59.0${endpoint}`,\n\t\tjson: true,\n\t};\n\n\tif (!Object.keys(options.body as IDataObject).length) {\n\t\tdelete options.body;\n\t}\n\n\treturn options;\n}\n\nasync function getAccessToken(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions | IPollFunctions,\n\tcredentials: IDataObject,\n): Promise<IDataObject> {\n\tconst now = moment().unix();\n\tconst authUrl =\n\t\tcredentials.environment === 'sandbox'\n\t\t\t? 'https://test.salesforce.com'\n\t\t\t: 'https://login.salesforce.com';\n\n\tconst signature = jwt.sign(\n\t\t{\n\t\t\tiss: credentials.clientId as string,\n\t\t\tsub: credentials.username as string,\n\t\t\taud: authUrl,\n\t\t\texp: now + 3 * 60,\n\t\t},\n\t\tcredentials.privateKey as string,\n\t\t{\n\t\t\talgorithm: 'RS256',\n\t\t\theader: {\n\t\t\t\talg: 'RS256',\n\t\t\t},\n\t\t},\n\t);\n\n\tconst options: IRequestOptions = {\n\t\theaders: {\n\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t},\n\t\tmethod: 'POST',\n\t\tform: {\n\t\t\tgrant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n\t\t\tassertion: signature,\n\t\t},\n\t\turi: `${authUrl}/services/oauth2/token`,\n\t\tjson: true,\n\t};\n\n\treturn await this.helpers.request(options);\n}\n\nexport async function salesforceApiRequest(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions | IPollFunctions,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\n\tbody: any = {},\n\tqs: IDataObject = {},\n\turi?: string,\n\toption: IDataObject = {},\n): Promise<any> {\n\tconst authenticationMethod = this.getNodeParameter('authentication', 0, 'oAuth2') as string;\n\ttry {\n\t\tif (authenticationMethod === 'jwt') {\n\t\t\t// https://help.salesforce.com/articleView?id=remoteaccess_oauth_jwt_flow.htm&type=5\n\t\t\tconst credentialsType = 'salesforceJwtApi';\n\t\t\tconst credentials = await this.getCredentials(credentialsType);\n\t\t\tconst response = await getAccessToken.call(this, credentials);\n\t\t\tconst { instance_url, access_token } = response;\n\t\t\tconst options = getOptions.call(\n\t\t\t\tthis,\n\t\t\t\tmethod,\n\t\t\t\turi || endpoint,\n\t\t\t\tbody,\n\t\t\t\tqs,\n\t\t\t\tinstance_url as string,\n\t\t\t);\n\t\t\tthis.logger.debug(\n\t\t\t\t`Authentication for \"Salesforce\" node is using \"jwt\". Invoking URI ${options.uri}`,\n\t\t\t);\n\t\t\toptions.headers!.Authorization = `Bearer ${access_token}`;\n\t\t\tObject.assign(options, option);\n\t\t\treturn await this.helpers.request(options);\n\t\t} else {\n\t\t\t// https://help.salesforce.com/articleView?id=remoteaccess_oauth_web_server_flow.htm&type=5\n\t\t\tconst credentialsType = 'salesforceOAuth2Api';\n\t\t\tconst credentials = await this.getCredentials<{\n\t\t\t\toauthTokenData: { instance_url: string };\n\t\t\t}>(credentialsType);\n\t\t\tconst options = getOptions.call(\n\t\t\t\tthis,\n\t\t\t\tmethod,\n\t\t\t\turi || endpoint,\n\t\t\t\tbody,\n\t\t\t\tqs,\n\t\t\t\tcredentials.oauthTokenData.instance_url,\n\t\t\t);\n\t\t\tthis.logger.debug(\n\t\t\t\t`Authentication for \"Salesforce\" node is using \"OAuth2\". Invoking URI ${options.uri}`,\n\t\t\t);\n\t\t\tObject.assign(options, option);\n\n\t\t\treturn await this.helpers.requestOAuth2.call(this, credentialsType, options);\n\t\t}\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\nexport async function salesforceApiRequestAllItems(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions | IPollFunctions,\n\tpropertyName: string,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\n\tbody: any = {},\n\tquery: IDataObject = {},\n): Promise<any> {\n\tconst returnData: IDataObject[] = [];\n\n\tlet responseData;\n\tlet uri: string | undefined;\n\n\tdo {\n\t\tresponseData = await salesforceApiRequest.call(this, method, endpoint, body, query, uri);\n\t\turi = `${endpoint}/${responseData.nextRecordsUrl?.split('/')?.pop()}`;\n\t\treturnData.push.apply(returnData, responseData[propertyName] as IDataObject[]);\n\t} while (responseData.nextRecordsUrl !== undefined && responseData.nextRecordsUrl !== null);\n\n\treturn returnData;\n}\n\n/**\n * Sorts the given options alphabetically\n *\n */\nexport function sortOptions(options: INodePropertyOptions[]): void {\n\toptions.sort((a, b) => {\n\t\tif (a.name < b.name) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (a.name > b.name) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t});\n}\n\nexport function getValue(value: any) {\n\tif (moment(value as string).isValid()) {\n\t\treturn value;\n\t} else if (typeof value === 'string') {\n\t\treturn `'${value}'`;\n\t} else {\n\t\treturn value;\n\t}\n}\n\nexport function getConditions(options: IDataObject) {\n\tconst conditions = (options.conditionsUi as IDataObject)?.conditionValues as IDataObject[];\n\tlet data = undefined;\n\tif (Array.isArray(conditions) && conditions.length !== 0) {\n\t\tdata = conditions.map(\n\t\t\t(condition: IDataObject) =>\n\t\t\t\t`${condition.field} ${\n\t\t\t\t\tcondition.operation === 'equal' ? '=' : condition.operation\n\t\t\t\t} ${getValue(condition.value)}`,\n\t\t);\n\t\tdata = `WHERE ${data.join(' AND ')}`;\n\t}\n\treturn data;\n}\n\nexport function getDefaultFields(sobject: string) {\n\treturn (\n\t\t{\n\t\t\tAccount: 'id,name,type',\n\t\t\tLead: 'id,company,firstname,lastname,street,postalCode,city,email,status',\n\t\t\tContact: 'id,firstname,lastname,email',\n\t\t\tOpportunity: 'id,accountId,amount,probability,type',\n\t\t\tCase: 'id,accountId,contactId,priority,status,subject,type',\n\t\t\tTask: 'id,subject,status,priority',\n\t\t\tAttachment: 'id,name',\n\t\t\tUser: 'id,name,email',\n\t\t} as IDataObject\n\t)[sobject];\n}\n\nexport function getQuery(options: IDataObject, sobject: string, returnAll: boolean, limit = 0) {\n\tconst fields: string[] = [];\n\tif (options.fields) {\n\t\t// options.fields is comma separated in standard Salesforce objects and array in custom Salesforce objects -- handle both cases\n\t\tif (typeof options.fields === 'string') {\n\t\t\tfields.push.apply(fields, options.fields.split(','));\n\t\t} else {\n\t\t\tfields.push.apply(fields, options.fields as string[]);\n\t\t}\n\t} else {\n\t\tfields.push.apply(fields, ((getDefaultFields(sobject) as string) || 'id').split(','));\n\t}\n\tconst conditions = getConditions(options);\n\n\tlet query = `SELECT ${fields.join(',')} FROM ${sobject} ${conditions ? conditions : ''}`;\n\n\tif (!returnAll) {\n\t\tquery = `SELECT ${fields.join(',')} FROM ${sobject} ${\n\t\t\tconditions ? conditions : ''\n\t\t} LIMIT ${limit}`;\n\t}\n\n\treturn query;\n}\n"],"mappings":"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","names":["moment","jwt"]}