{"version":3,"sources":["../../../nodes/Salesforce/Salesforce.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n\tJsonObject,\n\tIHttpRequestMethods,\n} from 'n8n-workflow';\nimport { NodeApiError, NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport { accountFields, accountOperations } from './AccountDescription';\nimport type { IAccount } from './AccountInterface';\nimport { attachmentFields, attachmentOperations } from './AttachmentDescription';\nimport type { IAttachment } from './AttachmentInterface';\nimport type { ICampaignMember } from './CampaignMemberInterface';\nimport { caseFields, caseOperations } from './CaseDescription';\nimport type { ICase, ICaseComment } from './CaseInterface';\nimport { contactFields, contactOperations } from './ContactDescription';\nimport type { IContact } from './ContactInterface';\nimport { customObjectFields, customObjectOperations } from './CustomObjectDescription';\nimport { documentFields, documentOperations } from './DocumentDescription';\nimport { flowFields, flowOperations } from './FlowDescription';\nimport {\n\tgetQuery,\n\tsalesforceApiRequest,\n\tsalesforceApiRequestAllItems,\n\tsortOptions,\n} from './GenericFunctions';\nimport { leadFields, leadOperations } from './LeadDescription';\nimport type { ILead } from './LeadInterface';\nimport type { INote } from './NoteInterface';\nimport { opportunityFields, opportunityOperations } from './OpportunityDescription';\nimport type { IOpportunity } from './OpportunityInterface';\nimport { searchFields, searchOperations } from './SearchDescription';\nimport { taskFields, taskOperations } from './TaskDescription';\nimport type { ITask } from './TaskInterface';\nimport { userFields, userOperations } from './UserDescription';\n\nexport class Salesforce implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Salesforce',\n\t\tname: 'salesforce',\n\t\ticon: 'file:salesforce.svg',\n\t\tgroup: ['output'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume Salesforce API',\n\t\tdefaults: {\n\t\t\tname: 'Salesforce',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'salesforceOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['oAuth2'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'salesforceJwtApi',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['jwt'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Authentication',\n\t\t\t\tname: 'authentication',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'OAuth2',\n\t\t\t\t\t\tvalue: 'oAuth2',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'OAuth2 JWT',\n\t\t\t\t\t\tvalue: 'jwt',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'oAuth2',\n\t\t\t\tdescription: 'OAuth Authorization Flow',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Account',\n\t\t\t\t\t\tvalue: 'account',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Represents an individual account, which is an organization or person involved with your business (such as customers, competitors, and partners)',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Attachment',\n\t\t\t\t\t\tvalue: 'attachment',\n\t\t\t\t\t\tdescription: 'Represents a file that a has uploaded and attached to a parent object',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Case',\n\t\t\t\t\t\tvalue: 'case',\n\t\t\t\t\t\tdescription: 'Represents a case, which is a customer issue or problem',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Contact',\n\t\t\t\t\t\tvalue: 'contact',\n\t\t\t\t\t\tdescription: 'Represents a contact, which is an individual associated with an account',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Custom Object',\n\t\t\t\t\t\tvalue: 'customObject',\n\t\t\t\t\t\tdescription: 'Represents a custom object',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Document',\n\t\t\t\t\t\tvalue: 'document',\n\t\t\t\t\t\tdescription: 'Represents a document',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Flow',\n\t\t\t\t\t\tvalue: 'flow',\n\t\t\t\t\t\tdescription: 'Represents an autolaunched flow',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Lead',\n\t\t\t\t\t\tvalue: 'lead',\n\t\t\t\t\t\tdescription: 'Represents a prospect or potential',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Opportunity',\n\t\t\t\t\t\tvalue: 'opportunity',\n\t\t\t\t\t\tdescription: 'Represents an opportunity, which is a sale or pending deal',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Search',\n\t\t\t\t\t\tvalue: 'search',\n\t\t\t\t\t\tdescription: 'Search records',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Task',\n\t\t\t\t\t\tvalue: 'task',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Represents a business activity such as making a phone call or other to-do items. In the user interface, and records are collectively referred to as activities.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'User',\n\t\t\t\t\t\tvalue: 'user',\n\t\t\t\t\t\tdescription: 'Represents a person, which is one user in system',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'lead',\n\t\t\t},\n\t\t\t...leadOperations,\n\t\t\t...leadFields,\n\t\t\t...contactOperations,\n\t\t\t...contactFields,\n\t\t\t...customObjectOperations,\n\t\t\t...customObjectFields,\n\t\t\t...documentOperations,\n\t\t\t...documentFields,\n\t\t\t...opportunityOperations,\n\t\t\t...opportunityFields,\n\t\t\t...accountOperations,\n\t\t\t...accountFields,\n\t\t\t...searchOperations,\n\t\t\t...searchFields,\n\t\t\t...caseOperations,\n\t\t\t...caseFields,\n\t\t\t...taskOperations,\n\t\t\t...taskFields,\n\t\t\t...attachmentOperations,\n\t\t\t...attachmentFields,\n\t\t\t...userOperations,\n\t\t\t...userFields,\n\t\t\t...flowOperations,\n\t\t\t...flowFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get all the lead statuses to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getLeadStatuses(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst qs = {\n\t\t\t\t\tq: 'SELECT id, MasterLabel FROM LeadStatus',\n\t\t\t\t};\n\t\t\t\tconst statuses = await salesforceApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'records',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/query',\n\t\t\t\t\t{},\n\t\t\t\t\tqs,\n\t\t\t\t);\n\t\t\t\tfor (const status of statuses) {\n\t\t\t\t\tconst statusName = status.MasterLabel;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: statusName,\n\t\t\t\t\t\tvalue: statusName,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tsortOptions(returnData);\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the users to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getUsers(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst qs = {\n\t\t\t\t\tq: 'SELECT id, Name FROM User',\n\t\t\t\t};\n\t\t\t\tconst users = await salesforceApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'records',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/query',\n\t\t\t\t\t{},\n\t\t\t\t\tqs,\n\t\t\t\t);\n\t\t\t\tfor (const user of users) {\n\t\t\t\t\tconst userName = user.Name;\n\t\t\t\t\tconst userId = user.Id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: userName,\n\t\t\t\t\t\tvalue: userId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tsortOptions(returnData);\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the users and case queues to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getCaseOwners(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst qsQueues = {\n\t\t\t\t\tq: \"SELECT Queue.Id, Queue.Name FROM QueuesObject where Queue.Type='Queue' and SobjectType = 'Case'\",\n\t\t\t\t};\n\t\t\t\tconst queues = await salesforceApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'records',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/query',\n\t\t\t\t\t{},\n\t\t\t\t\tqsQueues,\n\t\t\t\t);\n\t\t\t\tfor (const queue of queues) {\n\t\t\t\t\tconst queueName = queue.Queue.Name;\n\t\t\t\t\tconst queueId = queue.Queue.Id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: `Queue: ${queueName}`,\n\t\t\t\t\t\tvalue: queueId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tconst qsUsers = {\n\t\t\t\t\tq: 'SELECT id, Name FROM User',\n\t\t\t\t};\n\t\t\t\tconst users = await salesforceApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'records',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/query',\n\t\t\t\t\t{},\n\t\t\t\t\tqsUsers,\n\t\t\t\t);\n\t\t\t\tconst userPrefix = returnData.length > 0 ? 'User: ' : '';\n\t\t\t\tfor (const user of users) {\n\t\t\t\t\tconst userName = user.Name;\n\t\t\t\t\tconst userId = user.Id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: userPrefix + (userName as string),\n\t\t\t\t\t\tvalue: userId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tsortOptions(returnData);\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the users and lead queues to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getLeadOwners(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst qsQueues = {\n\t\t\t\t\tq: \"SELECT Queue.Id, Queue.Name FROM QueuesObject where Queue.Type='Queue' and SobjectType = 'Lead'\",\n\t\t\t\t};\n\t\t\t\tconst queues = await salesforceApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'records',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/query',\n\t\t\t\t\t{},\n\t\t\t\t\tqsQueues,\n\t\t\t\t);\n\t\t\t\tfor (const queue of queues) {\n\t\t\t\t\tconst queueName = queue.Queue.Name;\n\t\t\t\t\tconst queueId = queue.Queue.Id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: `Queue: ${queueName}`,\n\t\t\t\t\t\tvalue: queueId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tconst qsUsers = {\n\t\t\t\t\tq: 'SELECT id, Name FROM User',\n\t\t\t\t};\n\t\t\t\tconst users = await salesforceApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'records',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/query',\n\t\t\t\t\t{},\n\t\t\t\t\tqsUsers,\n\t\t\t\t);\n\t\t\t\tconst userPrefix = returnData.length > 0 ? 'User: ' : '';\n\t\t\t\tfor (const user of users) {\n\t\t\t\t\tconst userName = user.Name;\n\t\t\t\t\tconst userId = user.Id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: userPrefix + (userName as string),\n\t\t\t\t\t\tvalue: userId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tsortOptions(returnData);\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the lead sources to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getLeadSources(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\t// TODO: find a way to filter this object to get just the lead sources instead of the whole object\n\t\t\t\tconst { fields } = await salesforceApiRequest.call(this, 'GET', '/sobjects/lead/describe');\n\n\t\t\t\tfor (const field of fields) {\n\t\t\t\t\tif (field.name === 'LeadSource') {\n\t\t\t\t\t\tfor (const pickValue of field.picklistValues) {\n\t\t\t\t\t\t\tconst pickValueName = pickValue.label;\n\t\t\t\t\t\t\tconst pickValueId = pickValue.value;\n\t\t\t\t\t\t\treturnData.push({\n\t\t\t\t\t\t\t\tname: pickValueName,\n\t\t\t\t\t\t\t\tvalue: pickValueId,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsortOptions(returnData);\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the lead custom fields to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getCustomFields(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\t\t\t// TODO: find a way to filter this object to get just the lead sources instead of the whole object\n\t\t\t\tconst { fields } = await salesforceApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t`/sobjects/${resource}/describe`,\n\t\t\t\t);\n\t\t\t\tfor (const field of fields) {\n\t\t\t\t\tif (field.custom === true) {\n\t\t\t\t\t\tconst fieldName = field.label;\n\t\t\t\t\t\tconst fieldId = field.name;\n\t\t\t\t\t\treturnData.push({\n\t\t\t\t\t\t\tname: fieldName,\n\t\t\t\t\t\t\tvalue: fieldId,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsortOptions(returnData);\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the record types to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getRecordTypes(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tlet resource = this.getNodeParameter('resource', 0);\n\t\t\t\tif (resource === 'customObject') {\n\t\t\t\t\tresource = this.getNodeParameter('customObject', 0) as string;\n\t\t\t\t}\n\t\t\t\tconst qs = {\n\t\t\t\t\tq: `SELECT Id, Name, SobjectType, IsActive FROM RecordType WHERE SobjectType = '${resource}'`,\n\t\t\t\t};\n\t\t\t\tconst types = await salesforceApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'records',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/query',\n\t\t\t\t\t{},\n\t\t\t\t\tqs,\n\t\t\t\t);\n\t\t\t\tfor (const type of types) {\n\t\t\t\t\tif (type.IsActive === true) {\n\t\t\t\t\t\treturnData.push({\n\t\t\t\t\t\t\tname: type.Name,\n\t\t\t\t\t\t\tvalue: type.Id,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsortOptions(returnData);\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the external id fields to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getExternalIdFields(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tlet resource = this.getCurrentNodeParameter('resource') as string;\n\t\t\t\tresource =\n\t\t\t\t\tresource === 'customObject'\n\t\t\t\t\t\t? (this.getCurrentNodeParameter('customObject') as string)\n\t\t\t\t\t\t: resource;\n\t\t\t\tconst { fields } = await salesforceApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t`/sobjects/${resource}/describe`,\n\t\t\t\t);\n\t\t\t\tfor (const field of fields) {\n\t\t\t\t\tif (field.externalId === true || field.idLookup === true) {\n\t\t\t\t\t\tconst fieldName = field.label;\n\t\t\t\t\t\tconst fieldId = field.name;\n\t\t\t\t\t\treturnData.push({\n\t\t\t\t\t\t\tname: fieldName,\n\t\t\t\t\t\t\tvalue: fieldId,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsortOptions(returnData);\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the accounts to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getAccounts(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst qs = {\n\t\t\t\t\tq: 'SELECT id, Name FROM Account',\n\t\t\t\t};\n\t\t\t\tconst accounts = await salesforceApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'records',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/query',\n\t\t\t\t\t{},\n\t\t\t\t\tqs,\n\t\t\t\t);\n\t\t\t\tfor (const account of accounts) {\n\t\t\t\t\tconst accountName = account.Name;\n\t\t\t\t\tconst accountId = account.Id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: accountName,\n\t\t\t\t\t\tvalue: accountId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tsortOptions(returnData);\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the campaigns to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getCampaigns(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst qs = {\n\t\t\t\t\tq: 'SELECT id, Name FROM Campaign',\n\t\t\t\t};\n\t\t\t\tconst campaigns = await salesforceApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'records',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/query',\n\t\t\t\t\t{},\n\t\t\t\t\tqs,\n\t\t\t\t);\n\t\t\t\tfor (const campaign of campaigns) {\n\t\t\t\t\tconst campaignName = campaign.Name;\n\t\t\t\t\tconst campaignId = campaign.Id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: campaignName,\n\t\t\t\t\t\tvalue: campaignId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tsortOptions(returnData);\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the stages to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getStages(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\t// TODO: find a way to filter this object to get just the lead sources instead of the whole object\n\t\t\t\tconst { fields } = await salesforceApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/sobjects/opportunity/describe',\n\t\t\t\t);\n\t\t\t\tfor (const field of fields) {\n\t\t\t\t\tif (field.name === 'StageName') {\n\t\t\t\t\t\tfor (const pickValue of field.picklistValues) {\n\t\t\t\t\t\t\tconst pickValueName = pickValue.label;\n\t\t\t\t\t\t\tconst pickValueId = pickValue.value;\n\t\t\t\t\t\t\treturnData.push({\n\t\t\t\t\t\t\t\tname: pickValueName,\n\t\t\t\t\t\t\t\tvalue: pickValueId,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsortOptions(returnData);\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the stages to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getAccountTypes(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\t// TODO: find a way to filter this object to get just the lead sources instead of the whole object\n\t\t\t\tconst { fields } = await salesforceApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/sobjects/account/describe',\n\t\t\t\t);\n\t\t\t\tfor (const field of fields) {\n\t\t\t\t\tif (field.name === 'Type') {\n\t\t\t\t\t\tfor (const pickValue of field.picklistValues) {\n\t\t\t\t\t\t\tconst pickValueName = pickValue.label;\n\t\t\t\t\t\t\tconst pickValueId = pickValue.value;\n\t\t\t\t\t\t\treturnData.push({\n\t\t\t\t\t\t\t\tname: pickValueName,\n\t\t\t\t\t\t\t\tvalue: pickValueId,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsortOptions(returnData);\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the account sources to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getAccountSources(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\t// TODO: find a way to filter this object to get just the lead sources instead of the whole object\n\t\t\t\tconst { fields } = await salesforceApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/sobjects/account/describe',\n\t\t\t\t);\n\t\t\t\tfor (const field of fields) {\n\t\t\t\t\tif (field.name === 'AccountSource') {\n\t\t\t\t\t\tfor (const pickValue of field.picklistValues) {\n\t\t\t\t\t\t\tconst pickValueName = pickValue.label;\n\t\t\t\t\t\t\tconst pickValueId = pickValue.value;\n\t\t\t\t\t\t\treturnData.push({\n\t\t\t\t\t\t\t\tname: pickValueName,\n\t\t\t\t\t\t\t\tvalue: pickValueId,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsortOptions(returnData);\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the case types to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getCaseTypes(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\t// TODO: find a way to filter this object to get just the lead sources instead of the whole object\n\t\t\t\tconst { fields } = await salesforceApiRequest.call(this, 'GET', '/sobjects/case/describe');\n\t\t\t\tfor (const field of fields) {\n\t\t\t\t\tif (field.name === 'Type') {\n\t\t\t\t\t\tfor (const pickValue of field.picklistValues) {\n\t\t\t\t\t\t\tconst pickValueName = pickValue.label;\n\t\t\t\t\t\t\tconst pickValueId = pickValue.value;\n\t\t\t\t\t\t\treturnData.push({\n\t\t\t\t\t\t\t\tname: pickValueName,\n\t\t\t\t\t\t\t\tvalue: pickValueId,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsortOptions(returnData);\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the case statuses to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getCaseStatuses(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\t// TODO: find a way to filter this object to get just the lead sources instead of the whole object\n\t\t\t\tconst { fields } = await salesforceApiRequest.call(this, 'GET', '/sobjects/case/describe');\n\t\t\t\tfor (const field of fields) {\n\t\t\t\t\tif (field.name === 'Status') {\n\t\t\t\t\t\tfor (const pickValue of field.picklistValues) {\n\t\t\t\t\t\t\tconst pickValueName = pickValue.label;\n\t\t\t\t\t\t\tconst pickValueId = pickValue.value;\n\t\t\t\t\t\t\treturnData.push({\n\t\t\t\t\t\t\t\tname: pickValueName,\n\t\t\t\t\t\t\t\tvalue: pickValueId,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsortOptions(returnData);\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the case reasons to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getCaseReasons(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\t// TODO: find a way to filter this object to get just the lead sources instead of the whole object\n\t\t\t\tconst { fields } = await salesforceApiRequest.call(this, 'GET', '/sobjects/case/describe');\n\t\t\t\tfor (const field of fields) {\n\t\t\t\t\tif (field.name === 'Reason') {\n\t\t\t\t\t\tfor (const pickValue of field.picklistValues) {\n\t\t\t\t\t\t\tconst pickValueName = pickValue.label;\n\t\t\t\t\t\t\tconst pickValueId = pickValue.value;\n\t\t\t\t\t\t\treturnData.push({\n\t\t\t\t\t\t\t\tname: pickValueName,\n\t\t\t\t\t\t\t\tvalue: pickValueId,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsortOptions(returnData);\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the case origins to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getCaseOrigins(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\t// TODO: find a way to filter this object to get just the lead sources instead of the whole object\n\t\t\t\tconst { fields } = await salesforceApiRequest.call(this, 'GET', '/sobjects/case/describe');\n\t\t\t\tfor (const field of fields) {\n\t\t\t\t\tif (field.name === 'Origin') {\n\t\t\t\t\t\tfor (const pickValue of field.picklistValues) {\n\t\t\t\t\t\t\tconst pickValueName = pickValue.label;\n\t\t\t\t\t\t\tconst pickValueId = pickValue.value;\n\t\t\t\t\t\t\treturnData.push({\n\t\t\t\t\t\t\t\tname: pickValueName,\n\t\t\t\t\t\t\t\tvalue: pickValueId,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsortOptions(returnData);\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the case priorities to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getCasePriorities(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\t// TODO: find a way to filter this object to get just the lead sources instead of the whole object\n\t\t\t\tconst { fields } = await salesforceApiRequest.call(this, 'GET', '/sobjects/case/describe');\n\t\t\t\tfor (const field of fields) {\n\t\t\t\t\tif (field.name === 'Priority') {\n\t\t\t\t\t\tfor (const pickValue of field.picklistValues) {\n\t\t\t\t\t\t\tconst pickValueName = pickValue.label;\n\t\t\t\t\t\t\tconst pickValueId = pickValue.value;\n\t\t\t\t\t\t\treturnData.push({\n\t\t\t\t\t\t\t\tname: pickValueName,\n\t\t\t\t\t\t\t\tvalue: pickValueId,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsortOptions(returnData);\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the task statuses to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getTaskStatuses(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\t// TODO: find a way to filter this object to get just the lead sources instead of the whole object\n\t\t\t\tconst { fields } = await salesforceApiRequest.call(this, 'GET', '/sobjects/task/describe');\n\t\t\t\tfor (const field of fields) {\n\t\t\t\t\tif (field.name === 'Status') {\n\t\t\t\t\t\tfor (const pickValue of field.picklistValues) {\n\t\t\t\t\t\t\tconst pickValueName = pickValue.label;\n\t\t\t\t\t\t\tconst pickValueId = pickValue.value;\n\t\t\t\t\t\t\treturnData.push({\n\t\t\t\t\t\t\t\tname: pickValueName,\n\t\t\t\t\t\t\t\tvalue: pickValueId,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsortOptions(returnData);\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the task types to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getTaskTypes(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\t// TODO: find a way to filter this object to get just the lead sources instead of the whole object\n\t\t\t\tconst { fields } = await salesforceApiRequest.call(this, 'GET', '/sobjects/task/describe');\n\t\t\t\tfor (const field of fields) {\n\t\t\t\t\tif (field.name === 'TaskSubtype') {\n\t\t\t\t\t\tfor (const pickValue of field.picklistValues) {\n\t\t\t\t\t\t\tconst pickValueName = pickValue.label;\n\t\t\t\t\t\t\tconst pickValueId = pickValue.value;\n\t\t\t\t\t\t\treturnData.push({\n\t\t\t\t\t\t\t\tname: pickValueName,\n\t\t\t\t\t\t\t\tvalue: pickValueId,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsortOptions(returnData);\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the task subjects to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getTaskSubjects(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\t// TODO: find a way to filter this object to get just the lead sources instead of the whole object\n\t\t\t\tconst { fields } = await salesforceApiRequest.call(this, 'GET', '/sobjects/task/describe');\n\t\t\t\tfor (const field of fields) {\n\t\t\t\t\tif (field.name === 'Subject') {\n\t\t\t\t\t\tfor (const pickValue of field.picklistValues) {\n\t\t\t\t\t\t\tconst pickValueName = pickValue.label;\n\t\t\t\t\t\t\tconst pickValueId = pickValue.value;\n\t\t\t\t\t\t\treturnData.push({\n\t\t\t\t\t\t\t\tname: pickValueName,\n\t\t\t\t\t\t\t\tvalue: pickValueId,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsortOptions(returnData);\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the task call types to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getTaskCallTypes(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\t// TODO: find a way to filter this object to get just the lead sources instead of the whole object\n\t\t\t\tconst { fields } = await salesforceApiRequest.call(this, 'GET', '/sobjects/task/describe');\n\t\t\t\tfor (const field of fields) {\n\t\t\t\t\tif (field.name === 'CallType') {\n\t\t\t\t\t\tfor (const pickValue of field.picklistValues) {\n\t\t\t\t\t\t\tconst pickValueName = pickValue.label;\n\t\t\t\t\t\t\tconst pickValueId = pickValue.value;\n\t\t\t\t\t\t\treturnData.push({\n\t\t\t\t\t\t\t\tname: pickValueName,\n\t\t\t\t\t\t\t\tvalue: pickValueId,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsortOptions(returnData);\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the task call priorities to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getTaskPriorities(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\t// TODO: find a way to filter this object to get just the lead sources instead of the whole object\n\t\t\t\tconst { fields } = await salesforceApiRequest.call(this, 'GET', '/sobjects/task/describe');\n\t\t\t\tfor (const field of fields) {\n\t\t\t\t\tif (field.name === 'Priority') {\n\t\t\t\t\t\tfor (const pickValue of field.picklistValues) {\n\t\t\t\t\t\t\tconst pickValueName = pickValue.label;\n\t\t\t\t\t\t\tconst pickValueId = pickValue.value;\n\t\t\t\t\t\t\treturnData.push({\n\t\t\t\t\t\t\t\tname: pickValueName,\n\t\t\t\t\t\t\t\tvalue: pickValueId,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsortOptions(returnData);\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the task recurrence types to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getTaskRecurrenceTypes(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\t// TODO: find a way to filter this object to get just the lead sources instead of the whole object\n\t\t\t\tconst { fields } = await salesforceApiRequest.call(this, 'GET', '/sobjects/task/describe');\n\t\t\t\tfor (const field of fields) {\n\t\t\t\t\tif (field.name === 'RecurrenceType') {\n\t\t\t\t\t\tfor (const pickValue of field.picklistValues) {\n\t\t\t\t\t\t\tconst pickValueName = pickValue.label;\n\t\t\t\t\t\t\tconst pickValueId = pickValue.value;\n\t\t\t\t\t\t\treturnData.push({\n\t\t\t\t\t\t\t\tname: pickValueName,\n\t\t\t\t\t\t\t\tvalue: pickValueId,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsortOptions(returnData);\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the task recurrence instances to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getTaskRecurrenceInstances(\n\t\t\t\tthis: ILoadOptionsFunctions,\n\t\t\t): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\t// TODO: find a way to filter this object to get just the lead sources instead of the whole object\n\t\t\t\tconst { fields } = await salesforceApiRequest.call(this, 'GET', '/sobjects/task/describe');\n\t\t\t\tfor (const field of fields) {\n\t\t\t\t\tif (field.name === 'RecurrenceInstance') {\n\t\t\t\t\t\tfor (const pickValue of field.picklistValues) {\n\t\t\t\t\t\t\tconst pickValueName = pickValue.label;\n\t\t\t\t\t\t\tconst pickValueId = pickValue.value;\n\t\t\t\t\t\t\treturnData.push({\n\t\t\t\t\t\t\t\tname: pickValueName,\n\t\t\t\t\t\t\t\tvalue: pickValueId,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsortOptions(returnData);\n\t\t\t\treturn returnData;\n\t\t\t},\n\n\t\t\t// Get all the custom objects recurrence instances to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getCustomObjects(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\t// TODO: find a way to filter this object to get just the lead sources instead of the whole object\n\t\t\t\tconst { sobjects: objects } = await salesforceApiRequest.call(this, 'GET', '/sobjects');\n\t\t\t\tfor (const object of objects) {\n\t\t\t\t\tif (object.custom === true) {\n\t\t\t\t\t\tconst objectName = object.label;\n\t\t\t\t\t\tconst objectId = object.name;\n\t\t\t\t\t\treturnData.push({\n\t\t\t\t\t\t\tname: objectName,\n\t\t\t\t\t\t\tvalue: objectId,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsortOptions(returnData);\n\t\t\t\treturn returnData;\n\t\t\t},\n\n\t\t\t// Get all the custom objects fields recurrence instances to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getCustomObjectFields(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\t// TODO: find a way to filter this object to get just the lead sources instead of the whole object\n\t\t\t\tconst customObject = this.getCurrentNodeParameter('customObject') as string;\n\t\t\t\tconst { fields } = await salesforceApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t`/sobjects/${customObject}/describe`,\n\t\t\t\t);\n\t\t\t\tfor (const field of fields) {\n\t\t\t\t\tconst fieldName = field.label;\n\t\t\t\t\tconst fieldId = field.name;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: fieldName,\n\t\t\t\t\t\tvalue: fieldId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tsortOptions(returnData);\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the account fields recurrence instances to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getAccountFields(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\t// TODO: find a way to filter this object to get just the lead sources instead of the whole object\n\t\t\t\tconst { fields } = await salesforceApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/sobjects/account/describe',\n\t\t\t\t);\n\t\t\t\tfor (const field of fields) {\n\t\t\t\t\tconst fieldName = field.label;\n\t\t\t\t\tconst fieldId = field.name;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: fieldName,\n\t\t\t\t\t\tvalue: fieldId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tsortOptions(returnData);\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the attachment fields recurrence instances to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getAtachmentFields(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\t// TODO: find a way to filter this object to get just the lead sources instead of the whole object\n\t\t\t\tconst { fields } = await salesforceApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/sobjects/attachment/describe',\n\t\t\t\t);\n\t\t\t\tfor (const field of fields) {\n\t\t\t\t\tconst fieldName = field.label;\n\t\t\t\t\tconst fieldId = field.name;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: fieldName,\n\t\t\t\t\t\tvalue: fieldId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tsortOptions(returnData);\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the case fields recurrence instances to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getCaseFields(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\t// TODO: find a way to filter this object to get just the lead sources instead of the whole object\n\t\t\t\tconst { fields } = await salesforceApiRequest.call(this, 'GET', '/sobjects/case/describe');\n\t\t\t\tfor (const field of fields) {\n\t\t\t\t\tconst fieldName = field.label;\n\t\t\t\t\tconst fieldId = field.name;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: fieldName,\n\t\t\t\t\t\tvalue: fieldId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tsortOptions(returnData);\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the lead fields recurrence instances to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getLeadFields(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\t// TODO: find a way to filter this object to get just the lead sources instead of the whole object\n\t\t\t\tconst { fields } = await salesforceApiRequest.call(this, 'GET', '/sobjects/lead/describe');\n\t\t\t\tfor (const field of fields) {\n\t\t\t\t\tconst fieldName = field.label;\n\t\t\t\t\tconst fieldId = field.name;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: fieldName,\n\t\t\t\t\t\tvalue: fieldId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tsortOptions(returnData);\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the opportunity fields recurrence instances to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getOpportunityFields(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\t// TODO: find a way to filter this object to get just the lead sources instead of the whole object\n\t\t\t\tconst { fields } = await salesforceApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/sobjects/opportunity/describe',\n\t\t\t\t);\n\t\t\t\tfor (const field of fields) {\n\t\t\t\t\tconst fieldName = field.label;\n\t\t\t\t\tconst fieldId = field.name;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: fieldName,\n\t\t\t\t\t\tvalue: fieldId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tsortOptions(returnData);\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the opportunity fields recurrence instances to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getTaskFields(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\t// TODO: find a way to filter this object to get just the lead sources instead of the whole object\n\t\t\t\tconst { fields } = await salesforceApiRequest.call(this, 'GET', '/sobjects/task/describe');\n\t\t\t\tfor (const field of fields) {\n\t\t\t\t\tconst fieldName = field.label;\n\t\t\t\t\tconst fieldId = field.name;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: fieldName,\n\t\t\t\t\t\tvalue: fieldId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tsortOptions(returnData);\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the users fields recurrence instances to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getUserFields(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\t// TODO: find a way to filter this object to get just the lead sources instead of the whole object\n\t\t\t\tconst { fields } = await salesforceApiRequest.call(this, 'GET', '/sobjects/user/describe');\n\t\t\t\tfor (const field of fields) {\n\t\t\t\t\tconst fieldName = field.label;\n\t\t\t\t\tconst fieldId = field.name;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: fieldName,\n\t\t\t\t\t\tvalue: fieldId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tsortOptions(returnData);\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the contact fields recurrence instances to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getContactFields(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\t// TODO: find a way to filter this object to get just the lead sources instead of the whole object\n\t\t\t\tconst { fields } = await salesforceApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/sobjects/contact/describe',\n\t\t\t\t);\n\t\t\t\tfor (const field of fields) {\n\t\t\t\t\tconst fieldName = field.label;\n\t\t\t\t\tconst fieldId = field.name;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: fieldName,\n\t\t\t\t\t\tvalue: fieldId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tsortOptions(returnData);\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// // Get all folders to display them to user so that they can\n\t\t\t// // select them easily\n\t\t\t// async getFolders(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t// \tconst returnData: INodePropertyOptions[] = [];\n\t\t\t// \tconst fields = await salesforceApiRequestAllItems.call(this, 'records', 'GET', '/sobjects/folder/describe');\n\t\t\t// \tthis.logger.debug(JSON.stringify(fields, undefined, 2))\n\t\t\t// \tconst qs = {\n\t\t\t// \t\t//ContentFolderItem ContentWorkspace ContentFolder\n\t\t\t// \t\tq: `SELECT Id, Title FROM ContentVersion`,\n\t\t\t// \t\t//q: `SELECT Id FROM Folder where Type = 'Document'`,\n\n\t\t\t// \t};\n\t\t\t// \tconst folders = await salesforceApiRequestAllItems.call(this, 'records', 'GET', '/query', {}, qs);\n\t\t\t// \tfor (const folder of folders) {\n\t\t\t// \t\treturnData.push({\n\t\t\t// \t\t\tname: folder.Name,\n\t\t\t// \t\t\tvalue: folder.Id,\n\t\t\t// \t\t});\n\t\t\t// \t}\n\t\t\t// \treturn returnData;\n\t\t\t// },\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tlet responseData;\n\t\tconst qs: IDataObject = {};\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\tthis.logger.debug(\n\t\t\t`Running \"Salesforce\" node named \"${this.getNode.name}\" resource \"${resource}\" operation \"${operation}\"`,\n\t\t);\n\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'lead') {\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Lead/post-lead\n\t\t\t\t\tif (operation === 'create' || operation === 'upsert') {\n\t\t\t\t\t\tconst company = this.getNodeParameter('company', i) as string;\n\t\t\t\t\t\tconst lastname = this.getNodeParameter('lastname', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst body: ILead = {\n\t\t\t\t\t\t\tCompany: company,\n\t\t\t\t\t\t\tLastName: lastname,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (additionalFields.hasOptedOutOfEmail !== undefined) {\n\t\t\t\t\t\t\tbody.HasOptedOutOfEmail = additionalFields.hasOptedOutOfEmail as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.hasOptedOutOfFax !== undefined) {\n\t\t\t\t\t\t\tbody.HasOptedOutOfFax = additionalFields.hasOptedOutOfFax as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.email !== undefined) {\n\t\t\t\t\t\t\tbody.Email = additionalFields.email as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.city !== undefined) {\n\t\t\t\t\t\t\tbody.City = additionalFields.city as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.phone !== undefined) {\n\t\t\t\t\t\t\tbody.Phone = additionalFields.phone as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.state !== undefined) {\n\t\t\t\t\t\t\tbody.State = additionalFields.state as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.title !== undefined) {\n\t\t\t\t\t\t\tbody.Title = additionalFields.title as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.jigsaw !== undefined) {\n\t\t\t\t\t\t\tbody.Jigsaw = additionalFields.jigsaw as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.rating !== undefined) {\n\t\t\t\t\t\t\tbody.Rating = additionalFields.rating as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.status !== undefined) {\n\t\t\t\t\t\t\tbody.Status = additionalFields.status as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.street !== undefined) {\n\t\t\t\t\t\t\tbody.Street = additionalFields.street as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.country !== undefined) {\n\t\t\t\t\t\t\tbody.Country = additionalFields.country as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.owner !== undefined) {\n\t\t\t\t\t\t\tbody.OwnerId = additionalFields.owner as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.website !== undefined) {\n\t\t\t\t\t\t\tbody.Website = additionalFields.website as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.industry !== undefined) {\n\t\t\t\t\t\t\tbody.Industry = additionalFields.industry as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.fax !== undefined) {\n\t\t\t\t\t\t\tbody.Fax = additionalFields.fax as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.firstname !== undefined) {\n\t\t\t\t\t\t\tbody.FirstName = additionalFields.firstname as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.leadSource !== undefined) {\n\t\t\t\t\t\t\tbody.LeadSource = additionalFields.leadSource as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.postalCode !== undefined) {\n\t\t\t\t\t\t\tbody.PostalCode = additionalFields.postalCode as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.salutation !== undefined) {\n\t\t\t\t\t\t\tbody.Salutation = additionalFields.salutation as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.description !== undefined) {\n\t\t\t\t\t\t\tbody.Description = additionalFields.description as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.annualRevenue !== undefined) {\n\t\t\t\t\t\t\tbody.AnnualRevenue = additionalFields.annualRevenue as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.isUnreadByOwner !== undefined) {\n\t\t\t\t\t\t\tbody.IsUnreadByOwner = additionalFields.isUnreadByOwner as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.numberOfEmployees !== undefined) {\n\t\t\t\t\t\t\tbody.NumberOfEmployees = additionalFields.numberOfEmployees as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.mobilePhone !== undefined) {\n\t\t\t\t\t\t\tbody.MobilePhone = additionalFields.mobilePhone as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.recordTypeId !== undefined) {\n\t\t\t\t\t\t\tbody.RecordTypeId = additionalFields.recordTypeId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.customFieldsUi) {\n\t\t\t\t\t\t\tconst customFields = (additionalFields.customFieldsUi as IDataObject)\n\t\t\t\t\t\t\t\t.customFieldsValues as IDataObject[];\n\t\t\t\t\t\t\tif (customFields) {\n\t\t\t\t\t\t\t\tfor (const customField of customFields) {\n\t\t\t\t\t\t\t\t\tbody[customField.fieldId as string] = customField.value;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet endpoint = '/sobjects/lead';\n\t\t\t\t\t\tlet method: IHttpRequestMethods = 'POST';\n\t\t\t\t\t\tif (operation === 'upsert') {\n\t\t\t\t\t\t\tmethod = 'PATCH';\n\t\t\t\t\t\t\tconst externalId = this.getNodeParameter('externalId', 0) as string;\n\t\t\t\t\t\t\tconst externalIdValue = this.getNodeParameter('externalIdValue', i) as string;\n\t\t\t\t\t\t\tendpoint = `/sobjects/lead/${externalId}/${externalIdValue}`;\n\t\t\t\t\t\t\tif (body[externalId] !== undefined) {\n\t\t\t\t\t\t\t\tdelete body[externalId];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(this, method, endpoint, body);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Lead/patch-lead-id\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst leadId = this.getNodeParameter('leadId', i) as string;\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\tconst body: ILead = {};\n\t\t\t\t\t\tif (!Object.keys(updateFields).length) {\n\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t'You must add at least one update field',\n\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.hasOptedOutOfEmail !== undefined) {\n\t\t\t\t\t\t\tbody.HasOptedOutOfEmail = updateFields.hasOptedOutOfEmail as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.hasOptedOutOfFax !== undefined) {\n\t\t\t\t\t\t\tbody.hasOptedOutOfFax = updateFields.hasOptedOutOfFax as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.lastname !== undefined) {\n\t\t\t\t\t\t\tbody.LastName = updateFields.lastname as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.company !== undefined) {\n\t\t\t\t\t\t\tbody.Company = updateFields.company as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.email !== undefined) {\n\t\t\t\t\t\t\tbody.Email = updateFields.email as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.city !== undefined) {\n\t\t\t\t\t\t\tbody.City = updateFields.city as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.phone !== undefined) {\n\t\t\t\t\t\t\tbody.Phone = updateFields.phone as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.state !== undefined) {\n\t\t\t\t\t\t\tbody.State = updateFields.state as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.title !== undefined) {\n\t\t\t\t\t\t\tbody.Title = updateFields.title as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.jigsaw !== undefined) {\n\t\t\t\t\t\t\tbody.Jigsaw = updateFields.jigsaw as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.rating !== undefined) {\n\t\t\t\t\t\t\tbody.Rating = updateFields.rating as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.status !== undefined) {\n\t\t\t\t\t\t\tbody.Status = updateFields.status as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.street !== undefined) {\n\t\t\t\t\t\t\tbody.Street = updateFields.street as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.country !== undefined) {\n\t\t\t\t\t\t\tbody.Country = updateFields.country as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.owner !== undefined) {\n\t\t\t\t\t\t\tbody.OwnerId = updateFields.owner as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.website !== undefined) {\n\t\t\t\t\t\t\tbody.Website = updateFields.website as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.industry !== undefined) {\n\t\t\t\t\t\t\tbody.Industry = updateFields.industry as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.firstname !== undefined) {\n\t\t\t\t\t\t\tbody.FirstName = updateFields.firstname as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.fax !== undefined) {\n\t\t\t\t\t\t\tbody.Fax = updateFields.fax as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.leadSource !== undefined) {\n\t\t\t\t\t\t\tbody.LeadSource = updateFields.leadSource as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.postalCode !== undefined) {\n\t\t\t\t\t\t\tbody.PostalCode = updateFields.postalCode as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.salutation !== undefined) {\n\t\t\t\t\t\t\tbody.Salutation = updateFields.salutation as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.description !== undefined) {\n\t\t\t\t\t\t\tbody.Description = updateFields.description as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.annualRevenue !== undefined) {\n\t\t\t\t\t\t\tbody.AnnualRevenue = updateFields.annualRevenue as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.isUnreadByOwner !== undefined) {\n\t\t\t\t\t\t\tbody.IsUnreadByOwner = updateFields.isUnreadByOwner as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.numberOfEmployees !== undefined) {\n\t\t\t\t\t\t\tbody.NumberOfEmployees = updateFields.numberOfEmployees as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.mobilePhone !== undefined) {\n\t\t\t\t\t\t\tbody.MobilePhone = updateFields.mobilePhone as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.recordTypeId !== undefined) {\n\t\t\t\t\t\t\tbody.RecordTypeId = updateFields.recordTypeId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.customFieldsUi) {\n\t\t\t\t\t\t\tconst customFields = (updateFields.customFieldsUi as IDataObject)\n\t\t\t\t\t\t\t\t.customFieldsValues as IDataObject[];\n\t\t\t\t\t\t\tif (customFields) {\n\t\t\t\t\t\t\t\tfor (const customField of customFields) {\n\t\t\t\t\t\t\t\t\tbody[customField.fieldId as string] = customField.value;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PATCH',\n\t\t\t\t\t\t\t`/sobjects/lead/${leadId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Lead/get-lead-id\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst leadId = this.getNodeParameter('leadId', i) as string;\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(this, 'GET', `/sobjects/lead/${leadId}`);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_query.htm\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\t\tqs.q = getQuery(options, 'Lead', returnAll);\n\t\t\t\t\t\t\t\tresponseData = await salesforceApiRequestAllItems.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'records',\n\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t'/query',\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\t\tqs.q = getQuery(options, 'Lead', returnAll, limit);\n\t\t\t\t\t\t\t\tresponseData = await salesforceApiRequestAllItems.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'records',\n\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t'/query',\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Lead/delete-lead-id\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst leadId = this.getNodeParameter('leadId', i) as string;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t\t`/sobjects/lead/${leadId}`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Lead/get-lead\n\t\t\t\t\tif (operation === 'getSummary') {\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(this, 'GET', '/sobjects/lead');\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/CampaignMember\n\t\t\t\t\tif (operation === 'addToCampaign') {\n\t\t\t\t\t\tconst leadId = this.getNodeParameter('leadId', i) as string;\n\t\t\t\t\t\tconst campaignId = this.getNodeParameter('campaignId', i) as string;\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tconst body: ICampaignMember = {\n\t\t\t\t\t\t\tLeadId: leadId,\n\t\t\t\t\t\t\tCampaignId: campaignId,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (options.status) {\n\t\t\t\t\t\t\tbody.Status = options.status as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/sobjects/CampaignMember',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Note/post-note\n\t\t\t\t\tif (operation === 'addNote') {\n\t\t\t\t\t\tconst leadId = this.getNodeParameter('leadId', i) as string;\n\t\t\t\t\t\tconst title = this.getNodeParameter('title', i) as string;\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tconst body: INote = {\n\t\t\t\t\t\t\tTitle: title,\n\t\t\t\t\t\t\tParentId: leadId,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (options.body) {\n\t\t\t\t\t\t\tbody.Body = options.body as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.owner) {\n\t\t\t\t\t\t\tbody.OwnerId = options.owner as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.isPrivate) {\n\t\t\t\t\t\t\tbody.IsPrivate = options.isPrivate as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(this, 'POST', '/sobjects/note', body);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'contact') {\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Contact/post-contact\n\t\t\t\t\tif (operation === 'create' || operation === 'upsert') {\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst lastname = this.getNodeParameter('lastname', i) as string;\n\t\t\t\t\t\tconst body: IContact = {\n\t\t\t\t\t\t\tLastName: lastname,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (additionalFields.fax !== undefined) {\n\t\t\t\t\t\t\tbody.Fax = additionalFields.fax as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.email !== undefined) {\n\t\t\t\t\t\t\tbody.Email = additionalFields.email as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.phone !== undefined) {\n\t\t\t\t\t\t\tbody.Phone = additionalFields.phone as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.title !== undefined) {\n\t\t\t\t\t\t\tbody.Title = additionalFields.title as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.jigsaw !== undefined) {\n\t\t\t\t\t\t\tbody.Jigsaw = additionalFields.jigsaw as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.recordTypeId !== undefined) {\n\t\t\t\t\t\t\tbody.RecordTypeId = additionalFields.recordTypeId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.owner !== undefined) {\n\t\t\t\t\t\t\tbody.OwnerId = additionalFields.owner as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.acconuntId !== undefined) {\n\t\t\t\t\t\t\tbody.AccountId = additionalFields.acconuntId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.birthdate !== undefined) {\n\t\t\t\t\t\t\tbody.Birthdate = additionalFields.birthdate as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.firstName !== undefined) {\n\t\t\t\t\t\t\tbody.FirstName = additionalFields.firstName as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.homePhone !== undefined) {\n\t\t\t\t\t\t\tbody.HomePhone = additionalFields.homePhone as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.otherCity !== undefined) {\n\t\t\t\t\t\t\tbody.OtherCity = additionalFields.otherCity as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.department !== undefined) {\n\t\t\t\t\t\t\tbody.Department = additionalFields.department as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.leadSource !== undefined) {\n\t\t\t\t\t\t\tbody.LeadSource = additionalFields.leadSource as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.otherPhone !== undefined) {\n\t\t\t\t\t\t\tbody.OtherPhone = additionalFields.otherPhone as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.otherState !== undefined) {\n\t\t\t\t\t\t\tbody.OtherState = additionalFields.otherState as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.salutation !== undefined) {\n\t\t\t\t\t\t\tbody.Salutation = additionalFields.salutation as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.description !== undefined) {\n\t\t\t\t\t\t\tbody.Description = additionalFields.description as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.mailingCity !== undefined) {\n\t\t\t\t\t\t\tbody.MailingCity = additionalFields.mailingCity as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.mobilePhone !== undefined) {\n\t\t\t\t\t\t\tbody.MobilePhone = additionalFields.mobilePhone as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.otherStreet !== undefined) {\n\t\t\t\t\t\t\tbody.OtherStreet = additionalFields.otherStreet as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.mailingState !== undefined) {\n\t\t\t\t\t\t\tbody.MailingState = additionalFields.mailingState as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.otherCountry !== undefined) {\n\t\t\t\t\t\t\tbody.OtherCountry = additionalFields.otherCountry as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.assistantName !== undefined) {\n\t\t\t\t\t\t\tbody.AssistantName = additionalFields.assistantName as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.mailingStreet !== undefined) {\n\t\t\t\t\t\t\tbody.MailingStreet = additionalFields.mailingStreet as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.assistantPhone !== undefined) {\n\t\t\t\t\t\t\tbody.AssistantPhone = additionalFields.assistantPhone as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.mailingCountry !== undefined) {\n\t\t\t\t\t\t\tbody.MailingCountry = additionalFields.mailingCountry as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.otherPostalCode !== undefined) {\n\t\t\t\t\t\t\tbody.OtherPostalCode = additionalFields.otherPostalCode as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.emailBouncedDate !== undefined) {\n\t\t\t\t\t\t\tbody.EmailBouncedDate = additionalFields.emailBouncedDate as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.mailingPostalCode !== undefined) {\n\t\t\t\t\t\t\tbody.MailingPostalCode = additionalFields.mailingPostalCode as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.emailBouncedReason !== undefined) {\n\t\t\t\t\t\t\tbody.EmailBouncedReason = additionalFields.emailBouncedReason as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.customFieldsUi) {\n\t\t\t\t\t\t\tconst customFields = (additionalFields.customFieldsUi as IDataObject)\n\t\t\t\t\t\t\t\t.customFieldsValues as IDataObject[];\n\t\t\t\t\t\t\tif (customFields) {\n\t\t\t\t\t\t\t\tfor (const customField of customFields) {\n\t\t\t\t\t\t\t\t\tbody[customField.fieldId as string] = customField.value;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet endpoint = '/sobjects/contact';\n\t\t\t\t\t\tlet method: IHttpRequestMethods = 'POST';\n\t\t\t\t\t\tif (operation === 'upsert') {\n\t\t\t\t\t\t\tmethod = 'PATCH';\n\t\t\t\t\t\t\tconst externalId = this.getNodeParameter('externalId', 0) as string;\n\t\t\t\t\t\t\tconst externalIdValue = this.getNodeParameter('externalIdValue', i) as string;\n\t\t\t\t\t\t\tendpoint = `/sobjects/contact/${externalId}/${externalIdValue}`;\n\t\t\t\t\t\t\tif (body[externalId] !== undefined) {\n\t\t\t\t\t\t\t\tdelete body[externalId];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(this, method, endpoint, body);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Contact/patch-contact-id\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i) as string;\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\tconst body: IContact = {};\n\t\t\t\t\t\tif (!Object.keys(updateFields).length) {\n\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t'You must add at least one update field',\n\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.lastName !== undefined) {\n\t\t\t\t\t\t\tbody.LastName = updateFields.lastName as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.fax !== undefined) {\n\t\t\t\t\t\t\tbody.Fax = updateFields.fax as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.email !== undefined) {\n\t\t\t\t\t\t\tbody.Email = updateFields.email as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.recordTypeId !== undefined) {\n\t\t\t\t\t\t\tbody.RecordTypeId = updateFields.recordTypeId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.phone !== undefined) {\n\t\t\t\t\t\t\tbody.Phone = updateFields.phone as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.title !== undefined) {\n\t\t\t\t\t\t\tbody.Title = updateFields.title as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.jigsaw !== undefined) {\n\t\t\t\t\t\t\tbody.Jigsaw = updateFields.jigsaw as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.owner !== undefined) {\n\t\t\t\t\t\t\tbody.OwnerId = updateFields.owner as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.acconuntId !== undefined) {\n\t\t\t\t\t\t\tbody.AccountId = updateFields.acconuntId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.birthdate !== undefined) {\n\t\t\t\t\t\t\tbody.Birthdate = updateFields.birthdate as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.firstName !== undefined) {\n\t\t\t\t\t\t\tbody.FirstName = updateFields.firstName as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.homePhone !== undefined) {\n\t\t\t\t\t\t\tbody.HomePhone = updateFields.homePhone as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.otherCity !== undefined) {\n\t\t\t\t\t\t\tbody.OtherCity = updateFields.otherCity as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.department !== undefined) {\n\t\t\t\t\t\t\tbody.Department = updateFields.department as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.leadSource !== undefined) {\n\t\t\t\t\t\t\tbody.LeadSource = updateFields.leadSource as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.otherPhone !== undefined) {\n\t\t\t\t\t\t\tbody.OtherPhone = updateFields.otherPhone as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.otherState !== undefined) {\n\t\t\t\t\t\t\tbody.OtherState = updateFields.otherState as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.salutation !== undefined) {\n\t\t\t\t\t\t\tbody.Salutation = updateFields.salutation as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.description !== undefined) {\n\t\t\t\t\t\t\tbody.Description = updateFields.description as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.mailingCity !== undefined) {\n\t\t\t\t\t\t\tbody.MailingCity = updateFields.mailingCity as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.mobilePhone !== undefined) {\n\t\t\t\t\t\t\tbody.MobilePhone = updateFields.mobilePhone as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.otherStreet !== undefined) {\n\t\t\t\t\t\t\tbody.OtherStreet = updateFields.otherStreet as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.mailingState !== undefined) {\n\t\t\t\t\t\t\tbody.MailingState = updateFields.mailingState as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.otherCountry !== undefined) {\n\t\t\t\t\t\t\tbody.OtherCountry = updateFields.otherCountry as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.assistantName !== undefined) {\n\t\t\t\t\t\t\tbody.AssistantName = updateFields.assistantName as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.mailingStreet !== undefined) {\n\t\t\t\t\t\t\tbody.MailingStreet = updateFields.mailingStreet as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.assistantPhone !== undefined) {\n\t\t\t\t\t\t\tbody.AssistantPhone = updateFields.assistantPhone as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.mailingCountry !== undefined) {\n\t\t\t\t\t\t\tbody.MailingCountry = updateFields.mailingCountry as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.otherPostalCode !== undefined) {\n\t\t\t\t\t\t\tbody.OtherPostalCode = updateFields.otherPostalCode as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.emailBouncedDate !== undefined) {\n\t\t\t\t\t\t\tbody.EmailBouncedDate = updateFields.emailBouncedDate as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.mailingPostalCode !== undefined) {\n\t\t\t\t\t\t\tbody.MailingPostalCode = updateFields.mailingPostalCode as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.emailBouncedReason !== undefined) {\n\t\t\t\t\t\t\tbody.EmailBouncedReason = updateFields.emailBouncedReason as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.customFieldsUi) {\n\t\t\t\t\t\t\tconst customFields = (updateFields.customFieldsUi as IDataObject)\n\t\t\t\t\t\t\t\t.customFieldsValues as IDataObject[];\n\t\t\t\t\t\t\tif (customFields) {\n\t\t\t\t\t\t\t\tfor (const customField of customFields) {\n\t\t\t\t\t\t\t\t\tbody[customField.fieldId as string] = customField.value;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PATCH',\n\t\t\t\t\t\t\t`/sobjects/contact/${contactId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Contact/get-contact-id\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i) as string;\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/sobjects/contact/${contactId}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_query.htm\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\t\tqs.q = getQuery(options, 'Contact', returnAll);\n\t\t\t\t\t\t\t\tresponseData = await salesforceApiRequestAllItems.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'records',\n\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t'/query',\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\t\tqs.q = getQuery(options, 'Contact', returnAll, limit);\n\t\t\t\t\t\t\t\tresponseData = await salesforceApiRequestAllItems.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'records',\n\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t'/query',\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Contact/delete-contact-id\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i) as string;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t\t`/sobjects/contact/${contactId}`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Contact/get-contact\n\t\t\t\t\tif (operation === 'getSummary') {\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(this, 'GET', '/sobjects/contact');\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/CampaignMember\n\t\t\t\t\tif (operation === 'addToCampaign') {\n\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i) as string;\n\t\t\t\t\t\tconst campaignId = this.getNodeParameter('campaignId', i) as string;\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tconst body: ICampaignMember = {\n\t\t\t\t\t\t\tContactId: contactId,\n\t\t\t\t\t\t\tCampaignId: campaignId,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (options.status) {\n\t\t\t\t\t\t\tbody.Status = options.status as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/sobjects/CampaignMember',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Note/post-note\n\t\t\t\t\tif (operation === 'addNote') {\n\t\t\t\t\t\tconst contactId = this.getNodeParameter('contactId', i) as string;\n\t\t\t\t\t\tconst title = this.getNodeParameter('title', i) as string;\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tconst body: INote = {\n\t\t\t\t\t\t\tTitle: title,\n\t\t\t\t\t\t\tParentId: contactId,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (options.body !== undefined) {\n\t\t\t\t\t\t\tbody.Body = options.body as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.owner !== undefined) {\n\t\t\t\t\t\t\tbody.OwnerId = options.owner as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.isPrivate !== undefined) {\n\t\t\t\t\t\t\tbody.IsPrivate = options.isPrivate as boolean;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(this, 'POST', '/sobjects/note', body);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'customObject') {\n\t\t\t\t\tif (operation === 'create' || operation === 'upsert') {\n\t\t\t\t\t\tconst customObject = this.getNodeParameter('customObject', i) as string;\n\t\t\t\t\t\tconst customFieldsUi = this.getNodeParameter('customFieldsUi', i) as IDataObject;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst body: IDataObject = {};\n\t\t\t\t\t\tif (customFieldsUi) {\n\t\t\t\t\t\t\tconst customFields = customFieldsUi.customFieldsValues as IDataObject[];\n\t\t\t\t\t\t\tif (customFields) {\n\t\t\t\t\t\t\t\tfor (const customField of customFields) {\n\t\t\t\t\t\t\t\t\tbody[customField.fieldId as string] = customField.value;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.recordTypeId) {\n\t\t\t\t\t\t\tbody.RecordTypeId = additionalFields.recordTypeId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet endpoint = `/sobjects/${customObject}`;\n\t\t\t\t\t\tlet method: IHttpRequestMethods = 'POST';\n\t\t\t\t\t\tif (operation === 'upsert') {\n\t\t\t\t\t\t\tmethod = 'PATCH';\n\t\t\t\t\t\t\tconst externalId = this.getNodeParameter('externalId', 0) as string;\n\t\t\t\t\t\t\tconst externalIdValue = this.getNodeParameter('externalIdValue', i) as string;\n\t\t\t\t\t\t\tendpoint = `/sobjects/${customObject}/${externalId}/${externalIdValue}`;\n\t\t\t\t\t\t\tif (body[externalId] !== undefined) {\n\t\t\t\t\t\t\t\tdelete body[externalId];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(this, method, endpoint, body);\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst recordId = this.getNodeParameter('recordId', i) as string;\n\t\t\t\t\t\tconst customObject = this.getNodeParameter('customObject', i) as string;\n\t\t\t\t\t\tconst customFieldsUi = this.getNodeParameter('customFieldsUi', i) as IDataObject;\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\tconst body: IDataObject = {};\n\t\t\t\t\t\tif (updateFields.recordTypeId) {\n\t\t\t\t\t\t\tbody.RecordTypeId = updateFields.recordTypeId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (customFieldsUi) {\n\t\t\t\t\t\t\tconst customFields = customFieldsUi.customFieldsValues as IDataObject[];\n\t\t\t\t\t\t\tif (customFields) {\n\t\t\t\t\t\t\t\tfor (const customField of customFields) {\n\t\t\t\t\t\t\t\t\tbody[customField.fieldId as string] = customField.value;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PATCH',\n\t\t\t\t\t\t\t`/sobjects/${customObject}/${recordId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst customObject = this.getNodeParameter('customObject', i) as string;\n\t\t\t\t\t\tconst recordId = this.getNodeParameter('recordId', i) as string;\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/sobjects/${customObject}/${recordId}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst customObject = this.getNodeParameter('customObject', i) as string;\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\t\tqs.q = getQuery(options, customObject, returnAll);\n\t\t\t\t\t\t\t\tresponseData = await salesforceApiRequestAllItems.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'records',\n\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t'/query',\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\t\tqs.q = getQuery(options, customObject, returnAll, limit);\n\t\t\t\t\t\t\t\tresponseData = await salesforceApiRequestAllItems.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'records',\n\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t'/query',\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst customObject = this.getNodeParameter('customObject', i) as string;\n\t\t\t\t\t\tconst recordId = this.getNodeParameter('recordId', i) as string;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t\t`/sobjects/${customObject}/${recordId}`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'document') {\n\t\t\t\t\t//https://developer.salesforce.com/docs/atlas.en-us.206.0.api_rest.meta/api_rest/dome_sobject_insert_update_blob.htm\n\t\t\t\t\tif (operation === 'upload') {\n\t\t\t\t\t\tconst title = this.getNodeParameter('title', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst binaryPropertyName = this.getNodeParameter('binaryPropertyName', i);\n\t\t\t\t\t\tconst body: { entity_content: { [key: string]: string } } = {\n\t\t\t\t\t\t\tentity_content: {\n\t\t\t\t\t\t\t\tTitle: title,\n\t\t\t\t\t\t\t\tContentLocation: 'S',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (additionalFields.ownerId) {\n\t\t\t\t\t\t\tbody.entity_content.ownerId = additionalFields.ownerId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.linkToObjectId) {\n\t\t\t\t\t\t\tbody.entity_content.FirstPublishLocationId =\n\t\t\t\t\t\t\t\tadditionalFields.linkToObjectId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst binaryData = this.helpers.assertBinaryData(i, binaryPropertyName);\n\t\t\t\t\t\tconst dataBuffer = await this.helpers.getBinaryDataBuffer(i, binaryPropertyName);\n\n\t\t\t\t\t\tbody.entity_content.PathOnClient = `${title}.${\n\t\t\t\t\t\t\tadditionalFields.fileExtension || binaryData.fileExtension\n\t\t\t\t\t\t}`;\n\t\t\t\t\t\tconst data = {\n\t\t\t\t\t\t\tentity_content: {\n\t\t\t\t\t\t\t\tvalue: JSON.stringify(body.entity_content),\n\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\tcontentType: 'application/json',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tVersionData: {\n\t\t\t\t\t\t\t\tvalue: dataBuffer,\n\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\tfilename: body.entity_content.PathOnClient,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/sobjects/ContentVersion',\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t{ formData: data },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'opportunity') {\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Opportunity/post-opportunity\n\t\t\t\t\tif (operation === 'create' || operation === 'upsert') {\n\t\t\t\t\t\tconst name = this.getNodeParameter('name', i) as string;\n\t\t\t\t\t\tconst closeDate = this.getNodeParameter('closeDate', i) as string;\n\t\t\t\t\t\tconst stageName = this.getNodeParameter('stageName', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst body: IOpportunity = {\n\t\t\t\t\t\t\tName: name,\n\t\t\t\t\t\t\tCloseDate: closeDate,\n\t\t\t\t\t\t\tStageName: stageName,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (additionalFields.type !== undefined) {\n\t\t\t\t\t\t\tbody.Type = additionalFields.type as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.amount !== undefined) {\n\t\t\t\t\t\t\tbody.Amount = additionalFields.amount as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.owner !== undefined) {\n\t\t\t\t\t\t\tbody.OwnerId = additionalFields.owner as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.nextStep !== undefined) {\n\t\t\t\t\t\t\tbody.NextStep = additionalFields.nextStep as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.accountId !== undefined) {\n\t\t\t\t\t\t\tbody.AccountId = additionalFields.accountId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.campaignId !== undefined) {\n\t\t\t\t\t\t\tbody.CampaignId = additionalFields.campaignId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.leadSource !== undefined) {\n\t\t\t\t\t\t\tbody.LeadSource = additionalFields.leadSource as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.description !== undefined) {\n\t\t\t\t\t\t\tbody.Description = additionalFields.description as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.probability !== undefined) {\n\t\t\t\t\t\t\tbody.Probability = additionalFields.probability as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.pricebook2Id !== undefined) {\n\t\t\t\t\t\t\tbody.Pricebook2Id = additionalFields.pricebook2Id as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.forecastCategoryName !== undefined) {\n\t\t\t\t\t\t\tbody.ForecastCategoryName = additionalFields.forecastCategoryName as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.customFieldsUi) {\n\t\t\t\t\t\t\tconst customFields = (additionalFields.customFieldsUi as IDataObject)\n\t\t\t\t\t\t\t\t.customFieldsValues as IDataObject[];\n\t\t\t\t\t\t\tif (customFields) {\n\t\t\t\t\t\t\t\tfor (const customField of customFields) {\n\t\t\t\t\t\t\t\t\tbody[customField.fieldId as string] = customField.value;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet endpoint = '/sobjects/opportunity';\n\t\t\t\t\t\tlet method: IHttpRequestMethods = 'POST';\n\t\t\t\t\t\tif (operation === 'upsert') {\n\t\t\t\t\t\t\tmethod = 'PATCH';\n\t\t\t\t\t\t\tconst externalId = this.getNodeParameter('externalId', 0) as string;\n\t\t\t\t\t\t\tconst externalIdValue = this.getNodeParameter('externalIdValue', i) as string;\n\t\t\t\t\t\t\tendpoint = `/sobjects/opportunity/${externalId}/${externalIdValue}`;\n\t\t\t\t\t\t\tif (body[externalId] !== undefined) {\n\t\t\t\t\t\t\t\tdelete body[externalId];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(this, method, endpoint, body);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Opportunity/post-opportunity\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst opportunityId = this.getNodeParameter('opportunityId', i) as string;\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\tconst body: IOpportunity = {};\n\t\t\t\t\t\tif (updateFields.name !== undefined) {\n\t\t\t\t\t\t\tbody.Name = updateFields.name as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.closeDate !== undefined) {\n\t\t\t\t\t\t\tbody.CloseDate = updateFields.closeDate as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.stageName !== undefined) {\n\t\t\t\t\t\t\tbody.StageName = updateFields.stageName as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.type !== undefined) {\n\t\t\t\t\t\t\tbody.Type = updateFields.type as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.amount !== undefined) {\n\t\t\t\t\t\t\tbody.Amount = updateFields.amount as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.owner !== undefined) {\n\t\t\t\t\t\t\tbody.OwnerId = updateFields.owner as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.nextStep !== undefined) {\n\t\t\t\t\t\t\tbody.NextStep = updateFields.nextStep as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.accountId !== undefined) {\n\t\t\t\t\t\t\tbody.AccountId = updateFields.accountId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.campaignId !== undefined) {\n\t\t\t\t\t\t\tbody.CampaignId = updateFields.campaignId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.leadSource !== undefined) {\n\t\t\t\t\t\t\tbody.LeadSource = updateFields.leadSource as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.description !== undefined) {\n\t\t\t\t\t\t\tbody.Description = updateFields.description as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.probability !== undefined) {\n\t\t\t\t\t\t\tbody.Probability = updateFields.probability as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.pricebook2Id !== undefined) {\n\t\t\t\t\t\t\tbody.Pricebook2Id = updateFields.pricebook2Id as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.forecastCategoryName !== undefined) {\n\t\t\t\t\t\t\tbody.ForecastCategoryName = updateFields.forecastCategoryName as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.customFieldsUi) {\n\t\t\t\t\t\t\tconst customFields = (updateFields.customFieldsUi as IDataObject)\n\t\t\t\t\t\t\t\t.customFieldsValues as IDataObject[];\n\t\t\t\t\t\t\tif (customFields) {\n\t\t\t\t\t\t\t\tfor (const customField of customFields) {\n\t\t\t\t\t\t\t\t\tbody[customField.fieldId as string] = customField.value;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PATCH',\n\t\t\t\t\t\t\t`/sobjects/opportunity/${opportunityId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Opportunity/get-opportunity-id\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst opportunityId = this.getNodeParameter('opportunityId', i) as string;\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/sobjects/opportunity/${opportunityId}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_query.htm\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\t\tqs.q = getQuery(options, 'Opportunity', returnAll);\n\t\t\t\t\t\t\t\tresponseData = await salesforceApiRequestAllItems.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'records',\n\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t'/query',\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\t\tqs.q = getQuery(options, 'Opportunity', returnAll, limit);\n\t\t\t\t\t\t\t\tresponseData = await salesforceApiRequestAllItems.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'records',\n\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t'/query',\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Opportunity/delete-opportunity-id\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst opportunityId = this.getNodeParameter('opportunityId', i) as string;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t\t`/sobjects/opportunity/${opportunityId}`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Opportunity/get-opportunity\n\t\t\t\t\tif (operation === 'getSummary') {\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(this, 'GET', '/sobjects/opportunity');\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Note/post-note\n\t\t\t\t\tif (operation === 'addNote') {\n\t\t\t\t\t\tconst opportunityId = this.getNodeParameter('opportunityId', i) as string;\n\t\t\t\t\t\tconst title = this.getNodeParameter('title', i) as string;\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tconst body: INote = {\n\t\t\t\t\t\t\tTitle: title,\n\t\t\t\t\t\t\tParentId: opportunityId,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (options.body !== undefined) {\n\t\t\t\t\t\t\tbody.Body = options.body as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.owner !== undefined) {\n\t\t\t\t\t\t\tbody.OwnerId = options.owner as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.isPrivate !== undefined) {\n\t\t\t\t\t\t\tbody.IsPrivate = options.isPrivate as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(this, 'POST', '/sobjects/note', body);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'account') {\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Account/post-account\n\t\t\t\t\tif (operation === 'create' || operation === 'upsert') {\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst name = this.getNodeParameter('name', i) as string;\n\t\t\t\t\t\tconst body: IAccount = {\n\t\t\t\t\t\t\tName: name,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (additionalFields.fax !== undefined) {\n\t\t\t\t\t\t\tbody.Fax = additionalFields.fax as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.type !== undefined) {\n\t\t\t\t\t\t\tbody.Type = additionalFields.type as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.jigsaw !== undefined) {\n\t\t\t\t\t\t\tbody.Jigsaw = additionalFields.jigsaw as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.phone !== undefined) {\n\t\t\t\t\t\t\tbody.Phone = additionalFields.phone as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.owner !== undefined) {\n\t\t\t\t\t\t\tbody.OwnerId = additionalFields.owner as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.sicDesc !== undefined) {\n\t\t\t\t\t\t\tbody.SicDesc = additionalFields.sicDesc as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.website !== undefined) {\n\t\t\t\t\t\t\tbody.Website = additionalFields.website as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.industry !== undefined) {\n\t\t\t\t\t\t\tbody.Industry = additionalFields.industry as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.parentId !== undefined) {\n\t\t\t\t\t\t\tbody.ParentId = additionalFields.parentId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.billingCity !== undefined) {\n\t\t\t\t\t\t\tbody.BillingCity = additionalFields.billingCity as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.description !== undefined) {\n\t\t\t\t\t\t\tbody.Description = additionalFields.description as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.billingState !== undefined) {\n\t\t\t\t\t\t\tbody.BillingState = additionalFields.billingState as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.shippingCity !== undefined) {\n\t\t\t\t\t\t\tbody.ShippingCity = additionalFields.shippingCity as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.accountNumber !== undefined) {\n\t\t\t\t\t\t\tbody.AccountNumber = additionalFields.accountNumber as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.accountSource !== undefined) {\n\t\t\t\t\t\t\tbody.AccountSource = additionalFields.accountSource as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.annualRevenue !== undefined) {\n\t\t\t\t\t\t\tbody.AnnualRevenue = additionalFields.annualRevenue as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.billingStreet !== undefined) {\n\t\t\t\t\t\t\tbody.BillingStreet = additionalFields.billingStreet as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.shippingState !== undefined) {\n\t\t\t\t\t\t\tbody.ShippingState = additionalFields.shippingState as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.billingCountry !== undefined) {\n\t\t\t\t\t\t\tbody.BillingCountry = additionalFields.billingCountry as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.shippingStreet !== undefined) {\n\t\t\t\t\t\t\tbody.ShippingStreet = additionalFields.shippingStreet as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.shippingCountry !== undefined) {\n\t\t\t\t\t\t\tbody.ShippingCountry = additionalFields.shippingCountry as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.billingPostalCode !== undefined) {\n\t\t\t\t\t\t\tbody.BillingPostalCode = additionalFields.billingPostalCode as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.numberOfEmployees !== undefined) {\n\t\t\t\t\t\t\tbody.NumberOfEmployees = additionalFields.numberOfEmployees as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.shippingPostalCode !== undefined) {\n\t\t\t\t\t\t\tbody.ShippingPostalCode = additionalFields.shippingPostalCode as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.shippingPostalCode !== undefined) {\n\t\t\t\t\t\t\tbody.ShippingPostalCode = additionalFields.shippingPostalCode as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.recordTypeId !== undefined) {\n\t\t\t\t\t\t\tbody.RecordTypeId = additionalFields.recordTypeId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.customFieldsUi) {\n\t\t\t\t\t\t\tconst customFields = (additionalFields.customFieldsUi as IDataObject)\n\t\t\t\t\t\t\t\t.customFieldsValues as IDataObject[];\n\t\t\t\t\t\t\tif (customFields) {\n\t\t\t\t\t\t\t\tfor (const customField of customFields) {\n\t\t\t\t\t\t\t\t\tbody[customField.fieldId as string] = customField.value;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet endpoint = '/sobjects/account';\n\t\t\t\t\t\tlet method: IHttpRequestMethods = 'POST';\n\t\t\t\t\t\tif (operation === 'upsert') {\n\t\t\t\t\t\t\tmethod = 'PATCH';\n\t\t\t\t\t\t\tconst externalId = this.getNodeParameter('externalId', 0) as string;\n\t\t\t\t\t\t\tconst externalIdValue = this.getNodeParameter('externalIdValue', i) as string;\n\t\t\t\t\t\t\tendpoint = `/sobjects/account/${externalId}/${externalIdValue}`;\n\t\t\t\t\t\t\tif (body[externalId] !== undefined) {\n\t\t\t\t\t\t\t\tdelete body[externalId];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(this, method, endpoint, body);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Account/patch-account-id\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst accountId = this.getNodeParameter('accountId', i) as string;\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\tconst body: IAccount = {};\n\t\t\t\t\t\tif (updateFields.name !== undefined) {\n\t\t\t\t\t\t\tbody.Name = updateFields.name as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.fax !== undefined) {\n\t\t\t\t\t\t\tbody.Fax = updateFields.fax as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.type !== undefined) {\n\t\t\t\t\t\t\tbody.Type = updateFields.type as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.jigsaw !== undefined) {\n\t\t\t\t\t\t\tbody.Jigsaw = updateFields.jigsaw as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.phone !== undefined) {\n\t\t\t\t\t\t\tbody.Phone = updateFields.phone as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.ownerId !== undefined) {\n\t\t\t\t\t\t\tbody.OwnerId = updateFields.ownerId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.sicDesc !== undefined) {\n\t\t\t\t\t\t\tbody.SicDesc = updateFields.sicDesc as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.recordTypeId !== undefined) {\n\t\t\t\t\t\t\tbody.RecordTypeId = updateFields.recordTypeId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.website !== undefined) {\n\t\t\t\t\t\t\tbody.Website = updateFields.website as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.industry !== undefined) {\n\t\t\t\t\t\t\tbody.Industry = updateFields.industry as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.parentId !== undefined) {\n\t\t\t\t\t\t\tbody.ParentId = updateFields.parentId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.billingCity !== undefined) {\n\t\t\t\t\t\t\tbody.BillingCity = updateFields.billingCity as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.description !== undefined) {\n\t\t\t\t\t\t\tbody.Description = updateFields.description as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.billingState !== undefined) {\n\t\t\t\t\t\t\tbody.BillingState = updateFields.billingState as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.shippingCity !== undefined) {\n\t\t\t\t\t\t\tbody.ShippingCity = updateFields.shippingCity as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.accountNumber !== undefined) {\n\t\t\t\t\t\t\tbody.AccountNumber = updateFields.accountNumber as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.accountSource !== undefined) {\n\t\t\t\t\t\t\tbody.AccountSource = updateFields.accountSource as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.annualRevenue !== undefined) {\n\t\t\t\t\t\t\tbody.AnnualRevenue = updateFields.annualRevenue as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.billingStreet !== undefined) {\n\t\t\t\t\t\t\tbody.BillingStreet = updateFields.billingStreet as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.shippingState !== undefined) {\n\t\t\t\t\t\t\tbody.ShippingState = updateFields.shippingState as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.billingCountry !== undefined) {\n\t\t\t\t\t\t\tbody.BillingCountry = updateFields.billingCountry as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.shippingStreet !== undefined) {\n\t\t\t\t\t\t\tbody.ShippingStreet = updateFields.shippingStreet as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.shippingCountry !== undefined) {\n\t\t\t\t\t\t\tbody.ShippingCountry = updateFields.shippingCountry as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.billingPostalCode !== undefined) {\n\t\t\t\t\t\t\tbody.BillingPostalCode = updateFields.billingPostalCode as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.numberOfEmployees !== undefined) {\n\t\t\t\t\t\t\tbody.NumberOfEmployees = updateFields.numberOfEmployees as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.shippingPostalCode !== undefined) {\n\t\t\t\t\t\t\tbody.ShippingPostalCode = updateFields.shippingPostalCode as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.shippingPostalCode !== undefined) {\n\t\t\t\t\t\t\tbody.ShippingPostalCode = updateFields.shippingPostalCode as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.customFieldsUi) {\n\t\t\t\t\t\t\tconst customFields = (updateFields.customFieldsUi as IDataObject)\n\t\t\t\t\t\t\t\t.customFieldsValues as IDataObject[];\n\t\t\t\t\t\t\tif (customFields) {\n\t\t\t\t\t\t\t\tfor (const customField of customFields) {\n\t\t\t\t\t\t\t\t\tbody[customField.fieldId as string] = customField.value;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PATCH',\n\t\t\t\t\t\t\t`/sobjects/account/${accountId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Account/get-account-id\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst accountId = this.getNodeParameter('accountId', i) as string;\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/sobjects/account/${accountId}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_query.htm\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\t\tqs.q = getQuery(options, 'Account', returnAll);\n\t\t\t\t\t\t\t\tresponseData = await salesforceApiRequestAllItems.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'records',\n\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t'/query',\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\t\tqs.q = getQuery(options, 'Account', returnAll, limit);\n\t\t\t\t\t\t\t\tresponseData = await salesforceApiRequestAllItems.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'records',\n\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t'/query',\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Account/delete-account-id\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst accountId = this.getNodeParameter('accountId', i) as string;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t\t`/sobjects/account/${accountId}`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Account/get-account\n\t\t\t\t\tif (operation === 'getSummary') {\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(this, 'GET', '/sobjects/account');\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Note/post-note\n\t\t\t\t\tif (operation === 'addNote') {\n\t\t\t\t\t\tconst accountId = this.getNodeParameter('accountId', i) as string;\n\t\t\t\t\t\tconst title = this.getNodeParameter('title', i) as string;\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tconst body: INote = {\n\t\t\t\t\t\t\tTitle: title,\n\t\t\t\t\t\t\tParentId: accountId,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (options.body !== undefined) {\n\t\t\t\t\t\t\tbody.Body = options.body as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.owner !== undefined) {\n\t\t\t\t\t\t\tbody.OwnerId = options.owner as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.isPrivate !== undefined) {\n\t\t\t\t\t\t\tbody.IsPrivate = options.isPrivate as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(this, 'POST', '/sobjects/note', body);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'case') {\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Case/post-case\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst type = this.getNodeParameter('type', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst body: ICase = {\n\t\t\t\t\t\t\tType: type,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (additionalFields.origin !== undefined) {\n\t\t\t\t\t\t\tbody.Origin = additionalFields.origin as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.reason !== undefined) {\n\t\t\t\t\t\t\tbody.Reason = additionalFields.reason as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.status !== undefined) {\n\t\t\t\t\t\t\tbody.Status = additionalFields.status as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.owner !== undefined) {\n\t\t\t\t\t\t\tbody.OwnerId = additionalFields.owner as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.subject !== undefined) {\n\t\t\t\t\t\t\tbody.Subject = additionalFields.subject as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.parentId !== undefined) {\n\t\t\t\t\t\t\tbody.ParentId = additionalFields.parentId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.priority !== undefined) {\n\t\t\t\t\t\t\tbody.Priority = additionalFields.priority as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.accountId !== undefined) {\n\t\t\t\t\t\t\tbody.AccountId = additionalFields.accountId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.contactId !== undefined) {\n\t\t\t\t\t\t\tbody.ContactId = additionalFields.contactId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.description !== undefined) {\n\t\t\t\t\t\t\tbody.Description = additionalFields.description as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.isEscalated !== undefined) {\n\t\t\t\t\t\t\tbody.IsEscalated = additionalFields.isEscalated as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.suppliedName !== undefined) {\n\t\t\t\t\t\t\tbody.SuppliedName = additionalFields.suppliedName as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.suppliedEmail !== undefined) {\n\t\t\t\t\t\t\tbody.SuppliedEmail = additionalFields.suppliedEmail as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.suppliedPhone !== undefined) {\n\t\t\t\t\t\t\tbody.SuppliedPhone = additionalFields.suppliedPhone as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.suppliedCompany !== undefined) {\n\t\t\t\t\t\t\tbody.SuppliedCompany = additionalFields.suppliedCompany as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.recordTypeId !== undefined) {\n\t\t\t\t\t\t\tbody.RecordTypeId = additionalFields.recordTypeId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.customFieldsUi) {\n\t\t\t\t\t\t\tconst customFields = (additionalFields.customFieldsUi as IDataObject)\n\t\t\t\t\t\t\t\t.customFieldsValues as IDataObject[];\n\t\t\t\t\t\t\tif (customFields) {\n\t\t\t\t\t\t\t\tfor (const customField of customFields) {\n\t\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\t\tbody[customField.fieldId as string] = customField.value;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(this, 'POST', '/sobjects/case', body);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Case/patch-case-id\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst caseId = this.getNodeParameter('caseId', i) as string;\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\tconst body: ICase = {};\n\t\t\t\t\t\tif (updateFields.type !== undefined) {\n\t\t\t\t\t\t\tbody.Type = updateFields.type as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.origin !== undefined) {\n\t\t\t\t\t\t\tbody.Origin = updateFields.origin as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.reason !== undefined) {\n\t\t\t\t\t\t\tbody.Reason = updateFields.reason as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.status !== undefined) {\n\t\t\t\t\t\t\tbody.Status = updateFields.status as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.owner !== undefined) {\n\t\t\t\t\t\t\tbody.OwnerId = updateFields.owner as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.subject !== undefined) {\n\t\t\t\t\t\t\tbody.Subject = updateFields.subject as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.parentId !== undefined) {\n\t\t\t\t\t\t\tbody.ParentId = updateFields.parentId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.priority !== undefined) {\n\t\t\t\t\t\t\tbody.Priority = updateFields.priority as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.accountId !== undefined) {\n\t\t\t\t\t\t\tbody.AccountId = updateFields.accountId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.recordTypeId !== undefined) {\n\t\t\t\t\t\t\tbody.RecordTypeId = updateFields.recordTypeId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.contactId !== undefined) {\n\t\t\t\t\t\t\tbody.ContactId = updateFields.contactId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.description !== undefined) {\n\t\t\t\t\t\t\tbody.Description = updateFields.description as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.isEscalated !== undefined) {\n\t\t\t\t\t\t\tbody.IsEscalated = updateFields.isEscalated as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.suppliedName !== undefined) {\n\t\t\t\t\t\t\tbody.SuppliedName = updateFields.suppliedName as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.suppliedEmail !== undefined) {\n\t\t\t\t\t\t\tbody.SuppliedEmail = updateFields.suppliedEmail as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.suppliedPhone !== undefined) {\n\t\t\t\t\t\t\tbody.SuppliedPhone = updateFields.suppliedPhone as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.suppliedCompany !== undefined) {\n\t\t\t\t\t\t\tbody.SuppliedCompany = updateFields.suppliedCompany as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.customFieldsUi) {\n\t\t\t\t\t\t\tconst customFields = (updateFields.customFieldsUi as IDataObject)\n\t\t\t\t\t\t\t\t.customFieldsValues as IDataObject[];\n\t\t\t\t\t\t\tif (customFields) {\n\t\t\t\t\t\t\t\tfor (const customField of customFields) {\n\t\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\t\tbody[customField.fieldId] = customField.value;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PATCH',\n\t\t\t\t\t\t\t`/sobjects/case/${caseId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Case/get-case-id\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst caseId = this.getNodeParameter('caseId', i) as string;\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(this, 'GET', `/sobjects/case/${caseId}`);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_query.htm\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\t\tqs.q = getQuery(options, 'Case', returnAll);\n\t\t\t\t\t\t\t\tresponseData = await salesforceApiRequestAllItems.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'records',\n\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t'/query',\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\t\tqs.q = getQuery(options, 'Case', returnAll, limit);\n\t\t\t\t\t\t\t\tresponseData = await salesforceApiRequestAllItems.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'records',\n\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t'/query',\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Case/delete-case-id\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst caseId = this.getNodeParameter('caseId', i) as string;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t\t`/sobjects/case/${caseId}`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Case/get-case\n\t\t\t\t\tif (operation === 'getSummary') {\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(this, 'GET', '/sobjects/case');\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/CaseComment/post-casecomment\n\t\t\t\t\tif (operation === 'addComment') {\n\t\t\t\t\t\tconst caseId = this.getNodeParameter('caseId', i) as string;\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tconst body: ICaseComment = {\n\t\t\t\t\t\t\tParentId: caseId,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (options.commentBody !== undefined) {\n\t\t\t\t\t\t\tbody.CommentBody = options.commentBody as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.isPublished !== undefined) {\n\t\t\t\t\t\t\tbody.IsPublished = options.isPublished as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/sobjects/casecomment',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'task') {\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Task/post-task\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst status = this.getNodeParameter('status', i) as string;\n\t\t\t\t\t\tconst body: ITask = {\n\t\t\t\t\t\t\tStatus: status,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (additionalFields.type !== undefined) {\n\t\t\t\t\t\t\tbody.TaskSubtype = additionalFields.type as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.whoId !== undefined) {\n\t\t\t\t\t\t\tbody.WhoId = additionalFields.whoId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.whatId !== undefined) {\n\t\t\t\t\t\t\tbody.WhatId = additionalFields.whatId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.owner !== undefined) {\n\t\t\t\t\t\t\tbody.OwnerId = additionalFields.owner as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.subject !== undefined) {\n\t\t\t\t\t\t\tbody.Subject = additionalFields.subject as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.callType !== undefined) {\n\t\t\t\t\t\t\tbody.CallType = additionalFields.callType as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.priority !== undefined) {\n\t\t\t\t\t\t\tbody.Priority = additionalFields.priority as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.callObject !== undefined) {\n\t\t\t\t\t\t\tbody.CallObject = additionalFields.callObject as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.description !== undefined) {\n\t\t\t\t\t\t\tbody.Description = additionalFields.description as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.activityDate !== undefined) {\n\t\t\t\t\t\t\tbody.ActivityDate = additionalFields.activityDate as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.isReminderSet !== undefined) {\n\t\t\t\t\t\t\tbody.IsReminderSet = additionalFields.isReminderSet as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.recurrenceType !== undefined) {\n\t\t\t\t\t\t\tbody.RecurrenceType = additionalFields.recurrenceType as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.callDisposition !== undefined) {\n\t\t\t\t\t\t\tbody.CallDisposition = additionalFields.callDisposition as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.reminderDateTime !== undefined) {\n\t\t\t\t\t\t\tbody.ReminderDateTime = additionalFields.reminderDateTime as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.recurrenceInstance !== undefined) {\n\t\t\t\t\t\t\tbody.RecurrenceInstance = additionalFields.recurrenceInstance as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.recurrenceInterval !== undefined) {\n\t\t\t\t\t\t\tbody.RecurrenceInterval = additionalFields.recurrenceInterval as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.recurrenceDayOfMonth !== undefined) {\n\t\t\t\t\t\t\tbody.RecurrenceDayOfMonth = additionalFields.recurrenceDayOfMonth as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.callDurationInSeconds !== undefined) {\n\t\t\t\t\t\t\tbody.CallDurationInSeconds = additionalFields.callDurationInSeconds as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.recurrenceEndDateOnly !== undefined) {\n\t\t\t\t\t\t\tbody.RecurrenceEndDateOnly = additionalFields.recurrenceEndDateOnly as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.recurrenceMonthOfYear !== undefined) {\n\t\t\t\t\t\t\tbody.RecurrenceMonthOfYear = additionalFields.recurrenceMonthOfYear as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.recurrenceDayOfWeekMask !== undefined) {\n\t\t\t\t\t\t\tbody.RecurrenceDayOfWeekMask = additionalFields.recurrenceDayOfWeekMask as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.recurrenceStartDateOnly !== undefined) {\n\t\t\t\t\t\t\tbody.RecurrenceStartDateOnly = additionalFields.recurrenceStartDateOnly as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.recurrenceTimeZoneSidKey !== undefined) {\n\t\t\t\t\t\t\tbody.RecurrenceTimeZoneSidKey = additionalFields.recurrenceTimeZoneSidKey as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.recurrenceRegeneratedType !== undefined) {\n\t\t\t\t\t\t\tbody.RecurrenceRegeneratedType = additionalFields.recurrenceRegeneratedType as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.customFieldsUi) {\n\t\t\t\t\t\t\tconst customFields = (additionalFields.customFieldsUi as IDataObject)\n\t\t\t\t\t\t\t\t.customFieldsValues as IDataObject[];\n\t\t\t\t\t\t\tif (customFields) {\n\t\t\t\t\t\t\t\tfor (const customField of customFields) {\n\t\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\t\tbody[customField.fieldId] = customField.value;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(this, 'POST', '/sobjects/task', body);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Task/patch-task-id\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst taskId = this.getNodeParameter('taskId', i) as string;\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\tconst body: ITask = {};\n\t\t\t\t\t\tif (updateFields.type !== undefined) {\n\t\t\t\t\t\t\tbody.TaskSubtype = updateFields.type as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.whoId !== undefined) {\n\t\t\t\t\t\t\tbody.WhoId = updateFields.whoId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.status !== undefined) {\n\t\t\t\t\t\t\tbody.Status = updateFields.status as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.whatId !== undefined) {\n\t\t\t\t\t\t\tbody.WhatId = updateFields.whatId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.owner !== undefined) {\n\t\t\t\t\t\t\tbody.OwnerId = updateFields.owner as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.subject !== undefined) {\n\t\t\t\t\t\t\tbody.Subject = updateFields.subject as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.callType !== undefined) {\n\t\t\t\t\t\t\tbody.CallType = updateFields.callType as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.priority !== undefined) {\n\t\t\t\t\t\t\tbody.Priority = updateFields.priority as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.callObject !== undefined) {\n\t\t\t\t\t\t\tbody.CallObject = updateFields.callObject as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.description !== undefined) {\n\t\t\t\t\t\t\tbody.Description = updateFields.description as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.activityDate !== undefined) {\n\t\t\t\t\t\t\tbody.ActivityDate = updateFields.activityDate as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.isReminderSet !== undefined) {\n\t\t\t\t\t\t\tbody.IsReminderSet = updateFields.isReminderSet as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.recurrenceType !== undefined) {\n\t\t\t\t\t\t\tbody.RecurrenceType = updateFields.recurrenceType as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.callDisposition !== undefined) {\n\t\t\t\t\t\t\tbody.CallDisposition = updateFields.callDisposition as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.reminderDateTime !== undefined) {\n\t\t\t\t\t\t\tbody.ReminderDateTime = updateFields.reminderDateTime as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.recurrenceInstance !== undefined) {\n\t\t\t\t\t\t\tbody.RecurrenceInstance = updateFields.recurrenceInstance as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.recurrenceInterval !== undefined) {\n\t\t\t\t\t\t\tbody.RecurrenceInterval = updateFields.recurrenceInterval as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.recurrenceDayOfMonth !== undefined) {\n\t\t\t\t\t\t\tbody.RecurrenceDayOfMonth = updateFields.recurrenceDayOfMonth as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.callDurationInSeconds !== undefined) {\n\t\t\t\t\t\t\tbody.CallDurationInSeconds = updateFields.callDurationInSeconds as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.recurrenceEndDateOnly !== undefined) {\n\t\t\t\t\t\t\tbody.RecurrenceEndDateOnly = updateFields.recurrenceEndDateOnly as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.recurrenceMonthOfYear !== undefined) {\n\t\t\t\t\t\t\tbody.RecurrenceMonthOfYear = updateFields.recurrenceMonthOfYear as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.recurrenceDayOfWeekMask !== undefined) {\n\t\t\t\t\t\t\tbody.RecurrenceDayOfWeekMask = updateFields.recurrenceDayOfWeekMask as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.recurrenceStartDateOnly !== undefined) {\n\t\t\t\t\t\t\tbody.RecurrenceStartDateOnly = updateFields.recurrenceStartDateOnly as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.recurrenceTimeZoneSidKey !== undefined) {\n\t\t\t\t\t\t\tbody.RecurrenceTimeZoneSidKey = updateFields.recurrenceTimeZoneSidKey as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.recurrenceRegeneratedType !== undefined) {\n\t\t\t\t\t\t\tbody.RecurrenceRegeneratedType = updateFields.recurrenceRegeneratedType as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.customFieldsUi) {\n\t\t\t\t\t\t\tconst customFields = (updateFields.customFieldsUi as IDataObject)\n\t\t\t\t\t\t\t\t.customFieldsValues as IDataObject[];\n\t\t\t\t\t\t\tif (customFields) {\n\t\t\t\t\t\t\t\tfor (const customField of customFields) {\n\t\t\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\t\t\tbody[customField.fieldId] = customField.value;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PATCH',\n\t\t\t\t\t\t\t`/sobjects/task/${taskId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Task/get-task-id\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst taskId = this.getNodeParameter('taskId', i) as string;\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(this, 'GET', `/sobjects/task/${taskId}`);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_query.htm\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\t\tqs.q = getQuery(options, 'Task', returnAll);\n\t\t\t\t\t\t\t\tresponseData = await salesforceApiRequestAllItems.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'records',\n\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t'/query',\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\t\tqs.q = getQuery(options, 'Task', returnAll, limit);\n\t\t\t\t\t\t\t\tresponseData = await salesforceApiRequestAllItems.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'records',\n\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t'/query',\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Task/delete-task-id\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst taskId = this.getNodeParameter('taskId', i) as string;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t\t`/sobjects/task/${taskId}`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Task/get-task\n\t\t\t\t\tif (operation === 'getSummary') {\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(this, 'GET', '/sobjects/task');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'attachment') {\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Attachment/post-attachment\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst name = this.getNodeParameter('name', i) as string;\n\t\t\t\t\t\tconst parentId = this.getNodeParameter('parentId', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst binaryPropertyName = this.getNodeParameter('binaryPropertyName', i);\n\t\t\t\t\t\tconst body: IAttachment = {\n\t\t\t\t\t\t\tName: name,\n\t\t\t\t\t\t\tParentId: parentId,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (items[i].binary?.[binaryPropertyName]) {\n\t\t\t\t\t\t\tbody.Body = items[i].binary![binaryPropertyName].data;\n\t\t\t\t\t\t\tbody.ContentType = items[i].binary![binaryPropertyName].mimeType;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t`The property ${binaryPropertyName} does not exist`,\n\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.description !== undefined) {\n\t\t\t\t\t\t\tbody.Description = additionalFields.description as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.owner !== undefined) {\n\t\t\t\t\t\t\tbody.OwnerId = additionalFields.owner as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.isPrivate !== undefined) {\n\t\t\t\t\t\t\tbody.IsPrivate = additionalFields.isPrivate as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/sobjects/attachment',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Attachment/patch-attachment-id\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst attachmentId = this.getNodeParameter('attachmentId', i) as string;\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\tconst body: IAttachment = {};\n\t\t\t\t\t\tif (updateFields.binaryPropertyName !== undefined) {\n\t\t\t\t\t\t\tconst binaryPropertyName = updateFields.binaryPropertyName as string;\n\t\t\t\t\t\t\tif (items[i].binary?.[binaryPropertyName]) {\n\t\t\t\t\t\t\t\tbody.Body = items[i].binary![binaryPropertyName].data;\n\t\t\t\t\t\t\t\tbody.ContentType = items[i].binary![binaryPropertyName].mimeType;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t\t`The property ${binaryPropertyName} does not exist`,\n\t\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.name !== undefined) {\n\t\t\t\t\t\t\tbody.Name = updateFields.name as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.description !== undefined) {\n\t\t\t\t\t\t\tbody.Description = updateFields.description as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.owner !== undefined) {\n\t\t\t\t\t\t\tbody.OwnerId = updateFields.owner as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.isPrivate !== undefined) {\n\t\t\t\t\t\t\tbody.IsPrivate = updateFields.isPrivate as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PATCH',\n\t\t\t\t\t\t\t`/sobjects/attachment/${attachmentId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Attachment/get-attachment-id\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst attachmentId = this.getNodeParameter('attachmentId', i) as string;\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/sobjects/attachment/${attachmentId}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_query.htm\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\t\tqs.q = getQuery(options, 'Attachment', returnAll);\n\t\t\t\t\t\t\t\tresponseData = await salesforceApiRequestAllItems.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'records',\n\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t'/query',\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\t\tqs.q = getQuery(options, 'Attachment', returnAll, limit);\n\t\t\t\t\t\t\t\tresponseData = await salesforceApiRequestAllItems.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'records',\n\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t'/query',\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Attachment/delete-attachment-id\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst attachmentId = this.getNodeParameter('attachmentId', i) as string;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t\t`/sobjects/attachment/${attachmentId}`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/Attachment/get-attachment-id\n\t\t\t\t\tif (operation === 'getSummary') {\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(this, 'GET', '/sobjects/attachment');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'user') {\n\t\t\t\t\t//https://developer.salesforce.com/docs/api-explorer/sobject/User/get-user-id\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst userId = this.getNodeParameter('userId', i) as string;\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(this, 'GET', `/sobjects/user/${userId}`);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_query.htm\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\t\tqs.q = getQuery(options, 'User', returnAll);\n\t\t\t\t\t\t\t\tresponseData = await salesforceApiRequestAllItems.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'records',\n\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t'/query',\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\t\tqs.q = getQuery(options, 'User', returnAll, limit);\n\t\t\t\t\t\t\t\tresponseData = await salesforceApiRequestAllItems.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'records',\n\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t'/query',\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'flow') {\n\t\t\t\t\t//https://developer.salesforce.com/docs/atlas.en-us.api_action.meta/api_action/actions_obj_flow.htm\n\t\t\t\t\tif (operation === 'invoke') {\n\t\t\t\t\t\tconst apiName = this.getNodeParameter('apiName', i) as string;\n\t\t\t\t\t\tconst jsonParameters = this.getNodeParameter('jsonParameters', i);\n\t\t\t\t\t\tlet variables = {};\n\t\t\t\t\t\tif (jsonParameters) {\n\t\t\t\t\t\t\tvariables = this.getNodeParameter('variablesJson', i) as object;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Input variables are defined in UI\n\t\t\t\t\t\t\tconst setInputVariable = this.getNodeParameter('variablesUi', i, {}) as IDataObject;\n\t\t\t\t\t\t\tif (setInputVariable.variablesValues !== undefined) {\n\t\t\t\t\t\t\t\tfor (const inputVariableData of setInputVariable.variablesValues as IDataObject[]) {\n\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\tvariables[inputVariableData.name as string] = inputVariableData.value;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\tinputs: [variables],\n\t\t\t\t\t\t};\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/actions/custom/flow/${apiName}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.salesforce.com/docs/atlas.en-us.api_action.meta/api_action/actions_obj_flow.htm\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tresponseData = await salesforceApiRequest.call(this, 'GET', '/actions/custom/flow');\n\t\t\t\t\t\tresponseData = responseData.actions;\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = responseData.splice(0, limit);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'search') {\n\t\t\t\t\t//https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_query.htm\n\t\t\t\t\tif (operation === 'query') {\n\t\t\t\t\t\tqs.q = this.getNodeParameter('query', i) as string;\n\t\t\t\t\t\tresponseData = await salesforceApiRequestAllItems.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'records',\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t'/query',\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!Array.isArray(responseData) && responseData === undefined) {\n\t\t\t\t\t// Make sure that always valid JSON gets returned which also matches the\n\t\t\t\t\t// Salesforce default response\n\t\t\t\t\tresponseData = {\n\t\t\t\t\t\terrors: [],\n\t\t\t\t\t\tsuccess: true,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t);\n\n\t\t\t\treturnData.push(...executionData);\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":[]}