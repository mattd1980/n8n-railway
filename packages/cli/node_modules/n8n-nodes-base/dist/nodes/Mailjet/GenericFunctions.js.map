{"version":3,"sources":["../../../nodes/Mailjet/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tILoadOptionsFunctions,\n\tIDataObject,\n\tIHookFunctions,\n\tIHttpRequestMethods,\n\tIRequestOptions,\n} from 'n8n-workflow';\n\nexport async function mailjetApiRequest(\n\tthis: IExecuteFunctions | IHookFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tpath: string,\n\n\tbody: any = {},\n\tqs: IDataObject = {},\n\turi?: string,\n\toption: IDataObject = {},\n): Promise<any> {\n\tconst resource = this.getNodeParameter('resource', 0);\n\n\tlet credentialType;\n\n\tif (resource === 'email' || this.getNode().type.includes('Trigger')) {\n\t\tcredentialType = 'mailjetEmailApi';\n\t\tconst { sandboxMode } = await this.getCredentials<{\n\t\t\tsandboxMode: boolean;\n\t\t}>('mailjetEmailApi');\n\n\t\tif (!this.getNode().type.includes('Trigger')) {\n\t\t\tObject.assign(body, { SandboxMode: sandboxMode });\n\t\t}\n\t} else {\n\t\tcredentialType = 'mailjetSmsApi';\n\t}\n\n\tlet options: IRequestOptions = {\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tmethod,\n\t\tqs,\n\t\tbody,\n\t\turi: uri || `https://api.mailjet.com${path}`,\n\t\tjson: true,\n\t};\n\toptions = Object.assign({}, options, option);\n\tif (Object.keys(options.body as IDataObject).length === 0) {\n\t\tdelete options.body;\n\t}\n\n\treturn await this.helpers.requestWithAuthentication.call(this, credentialType, options);\n}\n\nexport async function mailjetApiRequestAllItems(\n\tthis: IExecuteFunctions | IHookFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\n\tbody: any = {},\n\tquery: IDataObject = {},\n): Promise<any> {\n\tconst returnData: IDataObject[] = [];\n\n\tlet responseData;\n\n\tquery.Limit = 1000;\n\tquery.Offset = 0;\n\n\tdo {\n\t\tresponseData = await mailjetApiRequest.call(this, method, endpoint, body, query, undefined, {\n\t\t\tresolveWithFullResponse: true,\n\t\t});\n\t\treturnData.push.apply(returnData, responseData.body as IDataObject[]);\n\t\tquery.Offset = query.Offset + query.Limit;\n\t} while (responseData.length !== 0);\n\treturn returnData;\n}\n\nexport function validateJSON(json: string | undefined): IDataObject | undefined {\n\tlet result;\n\ttry {\n\t\tresult = JSON.parse(json!);\n\t} catch (exception) {\n\t\tresult = undefined;\n\t}\n\treturn result;\n}\n\nexport interface IMessage {\n\tFrom?: { Email?: string; Name?: string };\n\tSubject?: string;\n\tTo?: IDataObject[];\n\tCc?: IDataObject[];\n\tBcc?: IDataObject[];\n\tVariables?: IDataObject;\n\tTemplateLanguage?: boolean;\n\tTemplateID?: number;\n\tHTMLPart?: string;\n\tTextPart?: string;\n\tTrackOpens?: string;\n\tReplyTo?: IDataObject;\n\tTrackClicks?: string;\n\tPriority?: number;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,eAAsB,kBAErB,QACA,MAEA,OAAY,CAAC,GACb,KAAkB,CAAC,GACnB,KACA,SAAsB,CAAC,GACR;AACf,QAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AAEpD,MAAI;AAEJ,MAAI,aAAa,WAAW,KAAK,QAAQ,EAAE,KAAK,SAAS,SAAS,GAAG;AACpE,qBAAiB;AACjB,UAAM,EAAE,YAAY,IAAI,MAAM,KAAK,eAEhC,iBAAiB;AAEpB,QAAI,CAAC,KAAK,QAAQ,EAAE,KAAK,SAAS,SAAS,GAAG;AAC7C,aAAO,OAAO,MAAM,EAAE,aAAa,YAAY,CAAC;AAAA,IACjD;AAAA,EACD,OAAO;AACN,qBAAiB;AAAA,EAClB;AAEA,MAAI,UAA2B;AAAA,IAC9B,SAAS;AAAA,MACR,QAAQ;AAAA,MACR,gBAAgB;AAAA,IACjB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,KAAK,OAAO,0BAA0B,IAAI;AAAA,IAC1C,MAAM;AAAA,EACP;AACA,YAAU,OAAO,OAAO,CAAC,GAAG,SAAS,MAAM;AAC3C,MAAI,OAAO,KAAK,QAAQ,IAAmB,EAAE,WAAW,GAAG;AAC1D,WAAO,QAAQ;AAAA,EAChB;AAEA,SAAO,MAAM,KAAK,QAAQ,0BAA0B,KAAK,MAAM,gBAAgB,OAAO;AACvF;AAEA,eAAsB,0BAErB,QACA,UAEA,OAAY,CAAC,GACb,QAAqB,CAAC,GACP;AACf,QAAM,aAA4B,CAAC;AAEnC,MAAI;AAEJ,QAAM,QAAQ;AACd,QAAM,SAAS;AAEf,KAAG;AACF,mBAAe,MAAM,kBAAkB,KAAK,MAAM,QAAQ,UAAU,MAAM,OAAO,QAAW;AAAA,MAC3F,yBAAyB;AAAA,IAC1B,CAAC;AACD,eAAW,KAAK,MAAM,YAAY,aAAa,IAAqB;AACpE,UAAM,SAAS,MAAM,SAAS,MAAM;AAAA,EACrC,SAAS,aAAa,WAAW;AACjC,SAAO;AACR;AAEO,SAAS,aAAa,MAAmD;AAC/E,MAAI;AACJ,MAAI;AACH,aAAS,KAAK,MAAM,IAAK;AAAA,EAC1B,SAAS,WAAW;AACnB,aAAS;AAAA,EACV;AACA,SAAO;AACR;","names":[]}