{"version":3,"sources":["../../../nodes/Mindee/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tILoadOptionsFunctions,\n\tIDataObject,\n\tJsonObject,\n\tIHttpRequestMethods,\n\tIRequestOptions,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\nexport async function mindeeApiRequest(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tpath: string,\n\tbody: any = {},\n\tqs: IDataObject = {},\n\toption = {},\n): Promise<any> {\n\tconst resource = this.getNodeParameter('resource', 0);\n\n\tlet service;\n\n\tif (resource === 'receipt') {\n\t\tservice = 'mindeeReceiptApi';\n\t} else {\n\t\tservice = 'mindeeInvoiceApi';\n\t}\n\n\tconst version = this.getNodeParameter('apiVersion', 0) as number;\n\t// V1 of mindee is deprecated, we are keeping it for now but now V3 is active\n\tconst url =\n\t\tversion === 1\n\t\t\t? `https://api.mindee.net/products${path}`\n\t\t\t: `https://api.mindee.net/v1/products/mindee${path}`;\n\n\tconst options: IRequestOptions = {\n\t\theaders: {},\n\t\tmethod,\n\t\tbody,\n\t\tqs,\n\t\turi: url,\n\t\tjson: true,\n\t};\n\ttry {\n\t\tif (Object.keys(body as IDataObject).length === 0) {\n\t\t\tdelete options.body;\n\t\t}\n\t\tif (Object.keys(qs).length === 0) {\n\t\t\tdelete options.qs;\n\t\t}\n\t\tif (Object.keys(option).length !== 0) {\n\t\t\tObject.assign(options, option);\n\t\t}\n\n\t\treturn await this.helpers.requestWithAuthentication.call(this, service, options);\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\nexport function cleanDataPreviousApiVersions(predictions: IDataObject[]) {\n\tconst newData: IDataObject = {};\n\n\tfor (const key of Object.keys(predictions[0])) {\n\t\tconst data = predictions[0][key] as IDataObject | IDataObject[];\n\n\t\tif (key === 'taxes' && data.length) {\n\t\t\tnewData[key] = {\n\t\t\t\tamount: (data as IDataObject[])[0].amount,\n\t\t\t\trate: (data as IDataObject[])[0].rate,\n\t\t\t};\n\t\t} else if (key === 'locale') {\n\t\t\t//@ts-ignore\n\t\t\tnewData.currency = data.currency;\n\t\t\t//@ts-ignore\n\t\t\tnewData.locale = data.value;\n\t\t} else {\n\t\t\tnewData[key] =\n\t\t\t\t//@ts-ignore\n\t\t\t\tdata.value || data.name || data.raw || data.degrees || data.amount || data.iban;\n\t\t}\n\t}\n\n\treturn newData;\n}\n\nexport function cleanData(document: IDataObject) {\n\t// @ts-ignore\n\tconst prediction = document.inference.prediction as IDataObject;\n\tconst newData: IDataObject = {};\n\tnewData.id = document.id;\n\tnewData.name = document.name;\n\tnewData.number_of_pages = document.n_pages;\n\tfor (const key of Object.keys(prediction)) {\n\t\tconst data = prediction[key] as IDataObject | IDataObject[];\n\n\t\tif (key === 'taxes' && data.length) {\n\t\t\tnewData[key] = {\n\t\t\t\tamount: (data as IDataObject[])[0].amount,\n\t\t\t\trate: (data as IDataObject[])[0].rate,\n\t\t\t};\n\t\t} else if (key === 'locale') {\n\t\t\t//@ts-ignore\n\t\t\tnewData.currency = data.currency;\n\t\t\t//@ts-ignore\n\t\t\tnewData.locale = data.value;\n\t\t} else if (key === 'line_items') {\n\t\t\tconst lineItems: IDataObject[] = [];\n\t\t\tfor (const lineItem of data as IDataObject[]) {\n\t\t\t\tlineItems.push({\n\t\t\t\t\tdescription: lineItem.description,\n\t\t\t\t\tproduct_code: lineItem.product_code,\n\t\t\t\t\tquantity: lineItem.quantity,\n\t\t\t\t\ttax_amount: lineItem.tax_amount,\n\t\t\t\t\ttax_rate: lineItem.tax_rate,\n\t\t\t\t\ttotal_amount: lineItem.total_amount,\n\t\t\t\t\tunit_price: lineItem.unit_price,\n\t\t\t\t});\n\t\t\t}\n\t\t\tnewData[key] = lineItems;\n\t\t} else {\n\t\t\tnewData[key] =\n\t\t\t\t//@ts-ignore\n\t\t\t\tdata.value || data.name || data.raw || data.degrees || data.amount || data.iban;\n\t\t}\n\t}\n\n\treturn newData;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,0BAA6B;AAE7B,eAAsB,iBAErB,QACA,MACA,OAAY,CAAC,GACb,KAAkB,CAAC,GACnB,SAAS,CAAC,GACK;AACf,QAAM,WAAW,KAAK,iBAAiB,YAAY,CAAC;AAEpD,MAAI;AAEJ,MAAI,aAAa,WAAW;AAC3B,cAAU;AAAA,EACX,OAAO;AACN,cAAU;AAAA,EACX;AAEA,QAAM,UAAU,KAAK,iBAAiB,cAAc,CAAC;AAErD,QAAM,MACL,YAAY,IACT,kCAAkC,IAAI,KACtC,4CAA4C,IAAI;AAEpD,QAAM,UAA2B;AAAA,IAChC,SAAS,CAAC;AAAA,IACV;AAAA,IACA;AAAA,IACA;AAAA,IACA,KAAK;AAAA,IACL,MAAM;AAAA,EACP;AACA,MAAI;AACH,QAAI,OAAO,KAAK,IAAmB,EAAE,WAAW,GAAG;AAClD,aAAO,QAAQ;AAAA,IAChB;AACA,QAAI,OAAO,KAAK,EAAE,EAAE,WAAW,GAAG;AACjC,aAAO,QAAQ;AAAA,IAChB;AACA,QAAI,OAAO,KAAK,MAAM,EAAE,WAAW,GAAG;AACrC,aAAO,OAAO,SAAS,MAAM;AAAA,IAC9B;AAEA,WAAO,MAAM,KAAK,QAAQ,0BAA0B,KAAK,MAAM,SAAS,OAAO;AAAA,EAChF,SAAS,OAAO;AACf,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,KAAmB;AAAA,EAC3D;AACD;AAEO,SAAS,6BAA6B,aAA4B;AACxE,QAAM,UAAuB,CAAC;AAE9B,aAAW,OAAO,OAAO,KAAK,YAAY,CAAC,CAAC,GAAG;AAC9C,UAAM,OAAO,YAAY,CAAC,EAAE,GAAG;AAE/B,QAAI,QAAQ,WAAW,KAAK,QAAQ;AACnC,cAAQ,GAAG,IAAI;AAAA,QACd,QAAS,KAAuB,CAAC,EAAE;AAAA,QACnC,MAAO,KAAuB,CAAC,EAAE;AAAA,MAClC;AAAA,IACD,WAAW,QAAQ,UAAU;AAE5B,cAAQ,WAAW,KAAK;AAExB,cAAQ,SAAS,KAAK;AAAA,IACvB,OAAO;AACN,cAAQ,GAAG;AAAA,MAEV,KAAK,SAAS,KAAK,QAAQ,KAAK,OAAO,KAAK,WAAW,KAAK,UAAU,KAAK;AAAA,IAC7E;AAAA,EACD;AAEA,SAAO;AACR;AAEO,SAAS,UAAU,UAAuB;AAEhD,QAAM,aAAa,SAAS,UAAU;AACtC,QAAM,UAAuB,CAAC;AAC9B,UAAQ,KAAK,SAAS;AACtB,UAAQ,OAAO,SAAS;AACxB,UAAQ,kBAAkB,SAAS;AACnC,aAAW,OAAO,OAAO,KAAK,UAAU,GAAG;AAC1C,UAAM,OAAO,WAAW,GAAG;AAE3B,QAAI,QAAQ,WAAW,KAAK,QAAQ;AACnC,cAAQ,GAAG,IAAI;AAAA,QACd,QAAS,KAAuB,CAAC,EAAE;AAAA,QACnC,MAAO,KAAuB,CAAC,EAAE;AAAA,MAClC;AAAA,IACD,WAAW,QAAQ,UAAU;AAE5B,cAAQ,WAAW,KAAK;AAExB,cAAQ,SAAS,KAAK;AAAA,IACvB,WAAW,QAAQ,cAAc;AAChC,YAAM,YAA2B,CAAC;AAClC,iBAAW,YAAY,MAAuB;AAC7C,kBAAU,KAAK;AAAA,UACd,aAAa,SAAS;AAAA,UACtB,cAAc,SAAS;AAAA,UACvB,UAAU,SAAS;AAAA,UACnB,YAAY,SAAS;AAAA,UACrB,UAAU,SAAS;AAAA,UACnB,cAAc,SAAS;AAAA,UACvB,YAAY,SAAS;AAAA,QACtB,CAAC;AAAA,MACF;AACA,cAAQ,GAAG,IAAI;AAAA,IAChB,OAAO;AACN,cAAQ,GAAG;AAAA,MAEV,KAAK,SAAS,KAAK,QAAQ,KAAK,OAAO,KAAK,WAAW,KAAK,UAAU,KAAK;AAAA,IAC7E;AAAA,EACD;AAEA,SAAO;AACR;","names":[]}