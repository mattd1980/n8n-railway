{"version":3,"sources":["../../../nodes/Mindee/Mindee.node.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport { cleanData, cleanDataPreviousApiVersions, mindeeApiRequest } from './GenericFunctions';\n\nexport class Mindee implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Mindee',\n\t\tname: 'mindee',\n\t\ticon: 'file:mindee.svg',\n\t\tgroup: ['input'],\n\t\tversion: [1, 2, 3],\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume Mindee API',\n\t\tdefaults: {\n\t\t\tname: 'Mindee',\n\t\t},\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'mindeeReceiptApi',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['receipt'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'mindeeInvoiceApi',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['invoice'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'API Version',\n\t\t\t\tname: 'apiVersion',\n\t\t\t\ttype: 'options',\n\t\t\t\tisNodeSetting: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\t'@version': [1],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: '1',\n\t\t\t\t\t\tvalue: 1,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: '3',\n\t\t\t\t\t\tvalue: 3,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: '4',\n\t\t\t\t\t\tvalue: 4,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 1,\n\t\t\t\tdescription: 'Which Mindee API Version to use',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'API Version',\n\t\t\t\tname: 'apiVersion',\n\t\t\t\ttype: 'options',\n\t\t\t\tisNodeSetting: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\t'@version': [2],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: '1',\n\t\t\t\t\t\tvalue: 1,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: '3',\n\t\t\t\t\t\tvalue: 3,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: '4',\n\t\t\t\t\t\tvalue: 4,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 3,\n\t\t\t\tdescription: 'Which Mindee API Version to use',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'API Version',\n\t\t\t\tname: 'apiVersion',\n\t\t\t\ttype: 'options',\n\t\t\t\tisNodeSetting: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\t'@version': [3],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: '1',\n\t\t\t\t\t\tvalue: 1,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: '3',\n\t\t\t\t\t\tvalue: 3,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: '4',\n\t\t\t\t\t\tvalue: 4,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 4,\n\t\t\t\tdescription: 'Which Mindee API Version to use',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Invoice',\n\t\t\t\t\t\tvalue: 'invoice',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Receipt',\n\t\t\t\t\t\tvalue: 'receipt',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'receipt',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Predict',\n\t\t\t\t\t\tvalue: 'predict',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'predict',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Input Binary Field',\n\t\t\t\tname: 'binaryPropertyName',\n\t\t\t\ttype: 'string',\n\t\t\t\trequired: true,\n\t\t\t\tdefault: 'data',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['predict'],\n\t\t\t\t\t\tresource: ['receipt', 'invoice'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\thint: 'The name of the input binary field containing the file to be uploaded',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'RAW Data',\n\t\t\t\tname: 'rawData',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: 'Whether to return the data exactly in the way it got received from the API',\n\t\t\t},\n\t\t],\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: IDataObject[] = [];\n\t\tconst length = items.length;\n\t\tlet responseData;\n\t\tconst version = this.getNodeParameter('apiVersion', 0) as number;\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\t\tlet endpoint;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'receipt') {\n\t\t\t\t\tif (operation === 'predict') {\n\t\t\t\t\t\tconst rawData = this.getNodeParameter('rawData', i);\n\t\t\t\t\t\tconst binaryPropertyName = this.getNodeParameter('binaryPropertyName', i);\n\n\t\t\t\t\t\tconst binaryData = this.helpers.assertBinaryData(i, binaryPropertyName);\n\t\t\t\t\t\tconst dataBuffer = await this.helpers.getBinaryDataBuffer(i, binaryPropertyName);\n\n\t\t\t\t\t\tif (version === 1) {\n\t\t\t\t\t\t\tresponseData = await mindeeApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t\t'/expense_receipts/v2/predict',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tformData: {\n\t\t\t\t\t\t\t\t\t\tfile: {\n\t\t\t\t\t\t\t\t\t\t\tvalue: dataBuffer,\n\t\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\tfilename: binaryData.fileName,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else if (version === 3) {\n\t\t\t\t\t\t\tendpoint = '/expense_receipts/v3/predict';\n\t\t\t\t\t\t\tresponseData = await mindeeApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t\tendpoint,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tformData: {\n\t\t\t\t\t\t\t\t\t\tdocument: {\n\t\t\t\t\t\t\t\t\t\t\tvalue: dataBuffer,\n\t\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\tfilename: binaryData.fileName,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else if (version === 4) {\n\t\t\t\t\t\t\tendpoint = '/expense_receipts/v4/predict';\n\t\t\t\t\t\t\tresponseData = await mindeeApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t\tendpoint,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tformData: {\n\t\t\t\t\t\t\t\t\t\tdocument: {\n\t\t\t\t\t\t\t\t\t\t\tvalue: dataBuffer,\n\t\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\tfilename: binaryData.fileName,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!rawData) {\n\t\t\t\t\t\t\tif (version === 1) {\n\t\t\t\t\t\t\t\tresponseData = cleanDataPreviousApiVersions(\n\t\t\t\t\t\t\t\t\tresponseData.predictions as IDataObject[],\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else if (version === 3 || version === 4) {\n\t\t\t\t\t\t\t\tresponseData = cleanData(responseData.document as IDataObject);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (resource === 'invoice') {\n\t\t\t\t\tif (operation === 'predict') {\n\t\t\t\t\t\tconst rawData = this.getNodeParameter('rawData', i);\n\t\t\t\t\t\tconst binaryPropertyName = this.getNodeParameter('binaryPropertyName', i);\n\n\t\t\t\t\t\tconst binaryData = this.helpers.assertBinaryData(i, binaryPropertyName);\n\t\t\t\t\t\tconst dataBuffer = await this.helpers.getBinaryDataBuffer(i, binaryPropertyName);\n\n\t\t\t\t\t\tif (version === 1) {\n\t\t\t\t\t\t\tendpoint = '/invoices/v1/predict';\n\t\t\t\t\t\t\tresponseData = await mindeeApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t\tendpoint,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tformData: {\n\t\t\t\t\t\t\t\t\t\tfile: {\n\t\t\t\t\t\t\t\t\t\t\tvalue: dataBuffer,\n\t\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\tfilename: binaryData.fileName,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else if (version === 3) {\n\t\t\t\t\t\t\tendpoint = '/invoices/v3/predict';\n\t\t\t\t\t\t\tresponseData = await mindeeApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t\tendpoint,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tformData: {\n\t\t\t\t\t\t\t\t\t\tdocument: {\n\t\t\t\t\t\t\t\t\t\t\tvalue: dataBuffer,\n\t\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\tfilename: binaryData.fileName,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else if (version === 4) {\n\t\t\t\t\t\t\tendpoint = '/invoices/v4/predict';\n\t\t\t\t\t\t\tresponseData = await mindeeApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t\tendpoint,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tformData: {\n\t\t\t\t\t\t\t\t\t\tdocument: {\n\t\t\t\t\t\t\t\t\t\t\tvalue: dataBuffer,\n\t\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\tfilename: binaryData.fileName,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'Invalid API version');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!rawData) {\n\t\t\t\t\t\t\tif (version === 1) {\n\t\t\t\t\t\t\t\tresponseData = cleanDataPreviousApiVersions(\n\t\t\t\t\t\t\t\t\tresponseData.predictions as IDataObject[],\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else if (version === 3 || version === 4) {\n\t\t\t\t\t\t\t\tresponseData = cleanData(responseData.document as IDataObject);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (Array.isArray(responseData)) {\n\t\t\t\t\treturnData.push.apply(returnData, responseData as IDataObject[]);\n\t\t\t\t} else if (responseData !== undefined) {\n\t\t\t\t\treturnData.push(responseData as IDataObject);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\treturnData.push({ error: error.message });\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t\treturn [this.helpers.returnJsonArray(returnData)];\n\t}\n}\n"],"mappings":"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","names":[]}