{"version":3,"sources":["../../../nodes/Storyblok/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHookFunctions,\n\tILoadOptionsFunctions,\n\tJsonObject,\n\tIRequestOptions,\n\tIHttpRequestMethods,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\nexport async function storyblokApiRequest(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tresource: string,\n\tbody: IDataObject = {},\n\tqs: IDataObject = {},\n\toption: IDataObject = {},\n) {\n\tconst authenticationMethod = this.getNodeParameter('source', 0) as string;\n\n\tlet options: IRequestOptions = {\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tmethod,\n\t\tqs,\n\t\tbody,\n\t\turi: '',\n\t\tjson: true,\n\t};\n\n\toptions = Object.assign({}, options, option);\n\n\tif (Object.keys(options.body).length === 0) {\n\t\tdelete options.body;\n\t}\n\n\tif (authenticationMethod === 'contentApi') {\n\t\tconst credentials = await this.getCredentials('storyblokContentApi');\n\n\t\toptions.uri = `https://api.storyblok.com${resource}`;\n\n\t\tObject.assign(options.qs ?? {}, { token: credentials.apiKey });\n\t} else {\n\t\tconst credentials = await this.getCredentials('storyblokManagementApi');\n\n\t\toptions.uri = `https://mapi.storyblok.com${resource}`;\n\n\t\tif (options.headers) {\n\t\t\tObject.assign(options.headers, { Authorization: credentials.accessToken });\n\t\t}\n\t}\n\n\ttry {\n\t\treturn await this.helpers.request(options);\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\nexport async function storyblokApiRequestAllItems(\n\tthis: IHookFunctions | ILoadOptionsFunctions | IExecuteFunctions,\n\tpropertyName: string,\n\tmethod: IHttpRequestMethods,\n\tresource: string,\n\tbody: IDataObject = {},\n\tquery: IDataObject = {},\n) {\n\tconst returnData: IDataObject[] = [];\n\n\tlet responseData;\n\n\tquery.per_page = 100;\n\n\tquery.page = 1;\n\n\tdo {\n\t\tresponseData = await storyblokApiRequest.call(this, method, resource, body, query);\n\t\tquery.page++;\n\t\treturnData.push.apply(returnData, responseData[propertyName] as IDataObject[]);\n\t} while (responseData[propertyName].length !== 0);\n\n\treturn returnData;\n}\n\nexport function validateJSON(json: string | undefined): any {\n\tlet result;\n\ttry {\n\t\tresult = JSON.parse(json!);\n\t} catch (exception) {\n\t\tresult = undefined;\n\t}\n\treturn result;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,0BAA6B;AAE7B,eAAsB,oBAErB,QACA,UACA,OAAoB,CAAC,GACrB,KAAkB,CAAC,GACnB,SAAsB,CAAC,GACtB;AACD,QAAM,uBAAuB,KAAK,iBAAiB,UAAU,CAAC;AAE9D,MAAI,UAA2B;AAAA,IAC9B,SAAS;AAAA,MACR,gBAAgB;AAAA,IACjB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,KAAK;AAAA,IACL,MAAM;AAAA,EACP;AAEA,YAAU,OAAO,OAAO,CAAC,GAAG,SAAS,MAAM;AAE3C,MAAI,OAAO,KAAK,QAAQ,IAAI,EAAE,WAAW,GAAG;AAC3C,WAAO,QAAQ;AAAA,EAChB;AAEA,MAAI,yBAAyB,cAAc;AAC1C,UAAM,cAAc,MAAM,KAAK,eAAe,qBAAqB;AAEnE,YAAQ,MAAM,4BAA4B,QAAQ;AAElD,WAAO,OAAO,QAAQ,MAAM,CAAC,GAAG,EAAE,OAAO,YAAY,OAAO,CAAC;AAAA,EAC9D,OAAO;AACN,UAAM,cAAc,MAAM,KAAK,eAAe,wBAAwB;AAEtE,YAAQ,MAAM,6BAA6B,QAAQ;AAEnD,QAAI,QAAQ,SAAS;AACpB,aAAO,OAAO,QAAQ,SAAS,EAAE,eAAe,YAAY,YAAY,CAAC;AAAA,IAC1E;AAAA,EACD;AAEA,MAAI;AACH,WAAO,MAAM,KAAK,QAAQ,QAAQ,OAAO;AAAA,EAC1C,SAAS,OAAO;AACf,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,KAAmB;AAAA,EAC3D;AACD;AAEA,eAAsB,4BAErB,cACA,QACA,UACA,OAAoB,CAAC,GACrB,QAAqB,CAAC,GACrB;AACD,QAAM,aAA4B,CAAC;AAEnC,MAAI;AAEJ,QAAM,WAAW;AAEjB,QAAM,OAAO;AAEb,KAAG;AACF,mBAAe,MAAM,oBAAoB,KAAK,MAAM,QAAQ,UAAU,MAAM,KAAK;AACjF,UAAM;AACN,eAAW,KAAK,MAAM,YAAY,aAAa,YAAY,CAAkB;AAAA,EAC9E,SAAS,aAAa,YAAY,EAAE,WAAW;AAE/C,SAAO;AACR;AAEO,SAAS,aAAa,MAA+B;AAC3D,MAAI;AACJ,MAAI;AACH,aAAS,KAAK,MAAM,IAAK;AAAA,EAC1B,SAAS,WAAW;AACnB,aAAS;AAAA,EACV;AACA,SAAO;AACR;","names":[]}