{"version":3,"sources":["../../../nodes/Storyblok/Storyblok.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes } from 'n8n-workflow';\n\nimport { storyblokApiRequest, storyblokApiRequestAllItems } from './GenericFunctions';\nimport { storyContentFields, storyContentOperations } from './StoryContentDescription';\nimport { storyManagementFields, storyManagementOperations } from './StoryManagementDescription';\n\nexport class Storyblok implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Storyblok',\n\t\tname: 'storyblok',\n\t\ticon: 'file:storyblok.svg',\n\t\tgroup: ['output'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume Storyblok API',\n\t\tdefaults: {\n\t\t\tname: 'Storyblok',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'storyblokContentApi',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tsource: ['contentApi'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'storyblokManagementApi',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tsource: ['managementApi'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Source',\n\t\t\t\tname: 'source',\n\t\t\t\ttype: 'options',\n\t\t\t\tdefault: 'contentApi',\n\t\t\t\tdescription: 'Pick where your data comes from, Content or Management API',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Content API',\n\t\t\t\t\t\tvalue: 'contentApi',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Management API',\n\t\t\t\t\t\tvalue: 'managementApi',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t// Resources: Content API\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Story',\n\t\t\t\t\t\tvalue: 'story',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'story',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tsource: ['contentApi'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t// Resources: Management API\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Story',\n\t\t\t\t\t\tvalue: 'story',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'story',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tsource: ['managementApi'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t// Content API - Story\n\t\t\t...storyContentOperations,\n\t\t\t...storyContentFields,\n\t\t\t// Management API - Story\n\t\t\t...storyManagementOperations,\n\t\t\t...storyManagementFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\tasync getSpaces(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst { spaces } = await storyblokApiRequest.call(this, 'GET', '/v1/spaces');\n\t\t\t\tfor (const space of spaces) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: space.name,\n\t\t\t\t\t\tvalue: space.id,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\tasync getComponents(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst space = this.getCurrentNodeParameter('space') as string;\n\t\t\t\tconst { components } = await storyblokApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'GET',\n\t\t\t\t\t`/v1/spaces/${space}/components`,\n\t\t\t\t);\n\t\t\t\tfor (const component of components) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: `${component.name} ${component.is_root ? '(root)' : ''}`,\n\t\t\t\t\t\tvalue: component.name,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst length = items.length;\n\t\tconst qs: IDataObject = {};\n\t\tlet responseData;\n\t\tconst source = this.getNodeParameter('source', 0) as string;\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\ttry {\n\t\t\t\tif (source === 'contentApi') {\n\t\t\t\t\tif (resource === 'story') {\n\t\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\t\tconst identifier = this.getNodeParameter('identifier', i) as string;\n\n\t\t\t\t\t\t\tresponseData = await storyblokApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/v1/cdn/stories/${identifier}`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.story;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\t\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\t\tObject.assign(qs, filters);\n\n\t\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\t\tresponseData = await storyblokApiRequestAllItems.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'stories',\n\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t'/v1/cdn/stories',\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\t\tqs.per_page = limit;\n\t\t\t\t\t\t\t\tresponseData = await storyblokApiRequest.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t'/v1/cdn/stories',\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tresponseData = responseData.stories;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (source === 'managementApi') {\n\t\t\t\t\tif (resource === 'story') {\n\t\t\t\t\t\t// if (operation === 'create') {\n\t\t\t\t\t\t// \tconst space = this.getNodeParameter('space', i) as string;\n\t\t\t\t\t\t// \tconst name = this.getNodeParameter('name', i) as string;\n\t\t\t\t\t\t// \tconst slug = this.getNodeParameter('slug', i) as string;\n\t\t\t\t\t\t// \tconst jsonParameters = this.getNodeParameter('jsonParameters', i);\n\t\t\t\t\t\t// \tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\t// \tconst body: IDataObject = {\n\t\t\t\t\t\t// \t\tname,\n\t\t\t\t\t\t// \t\tslug,\n\t\t\t\t\t\t// \t};\n\n\t\t\t\t\t\t// \tif (jsonParameters) {\n\t\t\t\t\t\t// \t\tif (additionalFields.contentJson) {\n\t\t\t\t\t\t// \t\t\tconst json = validateJSON(additionalFields.contentJson as string);\n\t\t\t\t\t\t// \t\t\tbody.content = json;\n\t\t\t\t\t\t// \t\t}\n\t\t\t\t\t\t// \t} else {\n\t\t\t\t\t\t// \t\tif (additionalFields.contentUi) {\n\t\t\t\t\t\t// \t\t\tconst contentValue = (additionalFields.contentUi as IDataObject).contentValue as IDataObject;\n\t\t\t\t\t\t// \t\t\tconst content: { component: string, body: IDataObject[] } = { component: '', body: [] };\n\t\t\t\t\t\t// \t\t\tif (contentValue) {\n\t\t\t\t\t\t// \t\t\t\tcontent.component = contentValue.component as string;\n\t\t\t\t\t\t// \t\t\t\tconst elementValues = (contentValue.elementUi as IDataObject).elementValues as IDataObject[];\n\t\t\t\t\t\t// \t\t\t\tfor (const elementValue of elementValues) {\n\t\t\t\t\t\t// \t\t\t\t\tconst body: IDataObject = {};\n\t\t\t\t\t\t// \t\t\t\t\tbody._uid = uuidv4();\n\t\t\t\t\t\t// \t\t\t\t\tbody.component = elementValue.component;\n\t\t\t\t\t\t// \t\t\t\t\tif (elementValue.dataUi) {\n\t\t\t\t\t\t// \t\t\t\t\t\tconst dataValues = (elementValue.dataUi as IDataObject).dataValues as IDataObject[];\n\t\t\t\t\t\t// \t\t\t\t\t\tfor (const dataValue of dataValues) {\n\t\t\t\t\t\t// \t\t\t\t\t\t\tbody[dataValue.key as string] = dataValue.value;\n\t\t\t\t\t\t// \t\t\t\t\t\t}\n\t\t\t\t\t\t// \t\t\t\t\t}\n\t\t\t\t\t\t// \t\t\t\t\tcontent.body.push(body);\n\t\t\t\t\t\t// \t\t\t\t}\n\t\t\t\t\t\t// \t\t\t}\n\t\t\t\t\t\t// \t\t\tbody.content = content;\n\t\t\t\t\t\t// \t\t}\n\t\t\t\t\t\t// \t}\n\n\t\t\t\t\t\t// \tif (additionalFields.parentId) {\n\t\t\t\t\t\t// \t\tbody.parent_id = additionalFields.parentId as string;\n\t\t\t\t\t\t// \t}\n\t\t\t\t\t\t// \tif (additionalFields.path) {\n\t\t\t\t\t\t// \t\tbody.path = additionalFields.path as string;\n\t\t\t\t\t\t// \t}\n\t\t\t\t\t\t// \tif (additionalFields.isStartpage) {\n\t\t\t\t\t\t// \t\tbody.is_startpage = additionalFields.isStartpage as string;\n\t\t\t\t\t\t// \t}\n\t\t\t\t\t\t// \tif (additionalFields.firstPublishedAt) {\n\t\t\t\t\t\t// \t\tbody.first_published_at = additionalFields.firstPublishedAt as string;\n\t\t\t\t\t\t// \t}\n\n\t\t\t\t\t\t// \tresponseData = await storyblokApiRequest.call(this, 'POST', `/v1/spaces/${space}/stories`, { story: body });\n\t\t\t\t\t\t// \tresponseData = responseData.story;\n\t\t\t\t\t\t// }\n\t\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\t\tconst space = this.getNodeParameter('space', i) as string;\n\t\t\t\t\t\t\tconst storyId = this.getNodeParameter('storyId', i) as string;\n\n\t\t\t\t\t\t\tresponseData = await storyblokApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t\t`/v1/spaces/${space}/stories/${storyId}`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.story;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\t\tconst space = this.getNodeParameter('space', i) as string;\n\t\t\t\t\t\t\tconst storyId = this.getNodeParameter('storyId', i) as string;\n\n\t\t\t\t\t\t\tresponseData = await storyblokApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/v1/spaces/${space}/stories/${storyId}`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.story;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\t\tconst space = this.getNodeParameter('space', i) as string;\n\t\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\t\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\t\tObject.assign(qs, filters);\n\n\t\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\t\tresponseData = await storyblokApiRequestAllItems.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'stories',\n\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t`/v1/spaces/${space}/stories`,\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\t\tqs.per_page = limit;\n\t\t\t\t\t\t\t\tresponseData = await storyblokApiRequest.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t\t`/v1/spaces/${space}/stories`,\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tresponseData = responseData.stories;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (operation === 'publish') {\n\t\t\t\t\t\t\tconst space = this.getNodeParameter('space', i) as string;\n\t\t\t\t\t\t\tconst storyId = this.getNodeParameter('storyId', i) as string;\n\t\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\t\tconst query: IDataObject = {};\n\t\t\t\t\t\t\t// Not sure if these two options work\n\t\t\t\t\t\t\tif (options.releaseId) {\n\t\t\t\t\t\t\t\tquery.release_id = options.releaseId as string;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (options.language) {\n\t\t\t\t\t\t\t\tquery.lang = options.language as string;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tresponseData = await storyblokApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/v1/spaces/${space}/stories/${storyId}/publish`,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tquery,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.story;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (operation === 'unpublish') {\n\t\t\t\t\t\t\tconst space = this.getNodeParameter('space', i) as string;\n\t\t\t\t\t\t\tconst storyId = this.getNodeParameter('storyId', i) as string;\n\n\t\t\t\t\t\t\tresponseData = await storyblokApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/v1/spaces/${space}/stories/${storyId}/unpublish`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.story;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t);\n\n\t\t\t\treturnData.push(...executionData);\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":[]}