{"version":3,"sources":["../../../nodes/Linear/LinearTrigger.node.ts"],"sourcesContent":["import {\n\ttype IHookFunctions,\n\ttype IWebhookFunctions,\n\ttype ILoadOptionsFunctions,\n\ttype INodePropertyOptions,\n\ttype INodeType,\n\ttype INodeTypeDescription,\n\ttype IWebhookResponseData,\n\tNodeConnectionTypes,\n} from 'n8n-workflow';\n\nimport { capitalizeFirstLetter, linearApiRequest } from './GenericFunctions';\n\nexport class LinearTrigger implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Linear Trigger',\n\t\tname: 'linearTrigger',\n\t\ticon: 'file:linear.svg',\n\t\tgroup: ['trigger'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"triggerOn\"]}}',\n\t\tdescription: 'Starts the workflow when Linear events occur',\n\t\tdefaults: {\n\t\t\tname: 'Linear Trigger',\n\t\t},\n\t\tinputs: [],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'linearApi',\n\t\t\t\trequired: true,\n\t\t\t\ttestedBy: 'linearApiTest',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['apiToken'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'linearOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['oAuth2'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\twebhooks: [\n\t\t\t{\n\t\t\t\tname: 'default',\n\t\t\t\thttpMethod: 'POST',\n\t\t\t\tresponseMode: 'onReceived',\n\t\t\t\tpath: 'webhook',\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Authentication',\n\t\t\t\tname: 'authentication',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'API Token',\n\t\t\t\t\t\tvalue: 'apiToken',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'OAuth2',\n\t\t\t\t\t\tvalue: 'oAuth2',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'apiToken',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Make sure your credential has the \"Admin\" scope to create webhooks.',\n\t\t\t\tname: 'notice',\n\t\t\t\ttype: 'notice',\n\t\t\t\tdefault: '',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Team Name or ID',\n\t\t\t\tname: 'teamId',\n\t\t\t\ttype: 'options',\n\t\t\t\tdescription:\n\t\t\t\t\t'Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getTeams',\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Listen to Resources',\n\t\t\t\tname: 'resources',\n\t\t\t\ttype: 'multiOptions',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Comment Reaction',\n\t\t\t\t\t\tvalue: 'reaction',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Cycle',\n\t\t\t\t\t\tvalue: 'cycle',\n\t\t\t\t\t},\n\t\t\t\t\t/* It's still on Alpha stage\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Issue Attachment',\n\t\t\t\t\t\tvalue: 'attachment',\n\t\t\t\t\t},*/\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Issue',\n\t\t\t\t\t\tvalue: 'issue',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Issue Comment',\n\t\t\t\t\t\tvalue: 'comment',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Issue Label',\n\t\t\t\t\t\tvalue: 'issueLabel',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Project',\n\t\t\t\t\t\tvalue: 'project',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: [],\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\tasync getTeams(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst body = {\n\t\t\t\t\tquery: `query Teams {\n\t\t\t\t\t\t\t teams {\n\t\t\t\t\t\t\t\tnodes {\n\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}`,\n\t\t\t\t};\n\t\t\t\tconst {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tteams: { nodes },\n\t\t\t\t\t},\n\t\t\t\t} = await linearApiRequest.call(this, body);\n\n\t\t\t\tfor (const node of nodes) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: node.name,\n\t\t\t\t\t\tvalue: node.id,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\twebhookMethods = {\n\t\tdefault: {\n\t\t\tasync checkExists(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookUrl = this.getNodeWebhookUrl('default');\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tconst teamId = this.getNodeParameter('teamId') as string;\n\t\t\t\tconst body = {\n\t\t\t\t\tquery: `query {\n\t\t\t\t\t\t\t webhooks {\n\t\t\t\t\t\t\t\t\tnodes {\n\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\turl\n\t\t\t\t\t\t\t\t\t\tenabled\n\t\t\t\t\t\t\t\t\t\tteam {\n\t\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}`,\n\t\t\t\t};\n\t\t\t\t// Check all the webhooks which exist already if it is identical to the\n\t\t\t\t// one that is supposed to get created.\n\t\t\t\tconst {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\twebhooks: { nodes },\n\t\t\t\t\t},\n\t\t\t\t} = await linearApiRequest.call(this, body);\n\n\t\t\t\tfor (const node of nodes) {\n\t\t\t\t\tif (node.url === webhookUrl && node.team.id === teamId && node.enabled === true) {\n\t\t\t\t\t\twebhookData.webhookId = node.id as string;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tasync create(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tconst webhookUrl = this.getNodeWebhookUrl('default');\n\t\t\t\tconst teamId = this.getNodeParameter('teamId') as string;\n\t\t\t\tconst resources = this.getNodeParameter('resources') as string[];\n\t\t\t\tconst body = {\n\t\t\t\t\tquery: `\n\t\t\t\t\t\tmutation webhookCreate($url: String!, $teamId: String!, $resources: [String!]!) {\n\t\t\t\t\t\t\twebhookCreate(\n\t\t\t\t\t\t\t\tinput: {\n\t\t\t\t\t\t\t\t\turl: $url\n\t\t\t\t\t\t\t\t\tteamId: $teamId\n\t\t\t\t\t\t\t\t\tresourceTypes: $resources\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tsuccess\n\t\t\t\t\t\t\t\twebhook {\n\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\tenabled\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}`,\n\t\t\t\t\tvariables: {\n\t\t\t\t\t\turl: webhookUrl,\n\t\t\t\t\t\tteamId,\n\t\t\t\t\t\tresources: resources.map(capitalizeFirstLetter),\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tconst {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\twebhookCreate: {\n\t\t\t\t\t\t\tsuccess,\n\t\t\t\t\t\t\twebhook: { id },\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t} = await linearApiRequest.call(this, body);\n\n\t\t\t\tif (!success) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\twebhookData.webhookId = id as string;\n\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tasync delete(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\tif (webhookData.webhookId !== undefined) {\n\t\t\t\t\tconst body = {\n\t\t\t\t\t\tquery: `\n\t\t\t\t\t\t\tmutation webhookDelete($id: String!){\n\t\t\t\t\t\t\t\twebhookDelete(\n\t\t\t\t\t\t\t\t\tid: $id\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tsuccess\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}`,\n\t\t\t\t\t\tvariables: {\n\t\t\t\t\t\t\tid: webhookData.webhookId,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait linearApiRequest.call(this, body);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t// Remove from the static workflow data so that it is clear\n\t\t\t\t\t// that no webhooks are registered anymore\n\t\t\t\t\tdelete webhookData.webhookId;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync webhook(this: IWebhookFunctions): Promise<IWebhookResponseData> {\n\t\tconst bodyData = this.getBodyData();\n\t\treturn {\n\t\t\tworkflowData: [this.helpers.returnJsonArray(bodyData)],\n\t\t};\n\t}\n}\n"],"mappings":"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","names":[]}