{"version":3,"sources":["../../../nodes/Demio/Demio.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes } from 'n8n-workflow';\n\nimport { eventFields, eventOperations } from './EventDescription';\nimport { demioApiRequest } from './GenericFunctions';\nimport { reportFields, reportOperations } from './ReportDescription';\n\nexport class Demio implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Demio',\n\t\tname: 'demio',\n\t\ticon: 'file:demio.svg',\n\t\tgroup: ['output'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume the Demio API',\n\t\tdefaults: {\n\t\t\tname: 'Demio',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'demioApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Event',\n\t\t\t\t\t\tvalue: 'event',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Report',\n\t\t\t\t\t\tvalue: 'report',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'event',\n\t\t\t},\n\t\t\t// Event\n\t\t\t...eventOperations,\n\t\t\t...eventFields,\n\t\t\t// Report\n\t\t\t...reportOperations,\n\t\t\t...reportFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get all the events to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getEvents(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst events = await demioApiRequest.call(this, 'GET', '/events', {}, { type: 'upcoming' });\n\t\t\t\tfor (const event of events) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: event.name,\n\t\t\t\t\t\tvalue: event.id,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\n\t\t\t// Get all the sessions to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getEventSessions(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst eventId = this.getCurrentNodeParameter('eventId') as string;\n\t\t\t\tconst qs: IDataObject = {};\n\n\t\t\t\tconst resource = this.getCurrentNodeParameter('resource') as string;\n\n\t\t\t\tif (resource !== 'report') {\n\t\t\t\t\tqs.active = true;\n\t\t\t\t}\n\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst { dates } = await demioApiRequest.call(this, 'GET', `/event/${eventId}`, {});\n\t\t\t\tfor (const date of dates) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: date.datetime,\n\t\t\t\t\t\tvalue: date.date_id,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: IDataObject[] = [];\n\t\tconst length = items.length;\n\t\tconst qs: IDataObject = {};\n\t\tlet responseData;\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'event') {\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst id = this.getNodeParameter('eventId', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tif (additionalFields.date_id !== undefined) {\n\t\t\t\t\t\t\tresponseData = await demioApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t`/event/${id}/date/${additionalFields.date_id}`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tObject.assign(qs, additionalFields);\n\t\t\t\t\t\t\tresponseData = await demioApiRequest.call(this, 'GET', `/event/${id}`, {}, qs);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\n\t\t\t\t\t\tObject.assign(qs, filters);\n\n\t\t\t\t\t\tresponseData = await demioApiRequest.call(this, 'GET', '/events', {}, qs);\n\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tconst limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = responseData.splice(0, limit);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'register') {\n\t\t\t\t\t\tconst eventId = this.getNodeParameter('eventId', i) as string;\n\t\t\t\t\t\tconst firstName = this.getNodeParameter('firstName', i) as string;\n\t\t\t\t\t\tconst email = this.getNodeParameter('email', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tname: firstName,\n\t\t\t\t\t\t\temail,\n\t\t\t\t\t\t\tid: eventId,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tObject.assign(body, additionalFields);\n\n\t\t\t\t\t\tif (additionalFields.customFieldsUi) {\n\t\t\t\t\t\t\tconst customFields =\n\t\t\t\t\t\t\t\t((additionalFields.customFieldsUi as IDataObject)\n\t\t\t\t\t\t\t\t\t?.customFieldsValues as IDataObject[]) || [];\n\t\t\t\t\t\t\tconst data = customFields.reduce(\n\t\t\t\t\t\t\t\t(obj, value) => Object.assign(obj, { [`${value.fieldId}`]: value.value }),\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tObject.assign(body, data);\n\t\t\t\t\t\t\tdelete additionalFields.customFields;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await demioApiRequest.call(this, 'PUT', '/event/register', body);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'report') {\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst sessionId = this.getNodeParameter('dateId', i) as string;\n\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\n\t\t\t\t\t\tObject.assign(qs, filters);\n\n\t\t\t\t\t\tresponseData = await demioApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/report/${sessionId}/participants`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = responseData.participants;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (Array.isArray(responseData)) {\n\t\t\t\t\treturnData.push.apply(returnData, responseData as IDataObject[]);\n\t\t\t\t} else {\n\t\t\t\t\treturnData.push(responseData as IDataObject);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\treturnData.push({ error: error.message });\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t\treturn [this.helpers.returnJsonArray(returnData)];\n\t}\n}\n"],"mappings":"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","names":[]}