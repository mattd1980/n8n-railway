{"version":3,"sources":["../../../nodes/Box/Box.node.ts"],"sourcesContent":["import { noCase } from 'change-case';\nimport moment from 'moment-timezone';\nimport type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport { fileFields, fileOperations } from './FileDescription';\nimport { folderFields, folderOperations } from './FolderDescription';\nimport { boxApiRequest, boxApiRequestAllItems } from './GenericFunctions';\n\nexport class Box implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Box',\n\t\tname: 'box',\n\t\t// eslint-disable-next-line n8n-nodes-base/node-class-description-icon-not-svg\n\t\ticon: 'file:box.png',\n\t\tgroup: ['input'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume Box API',\n\t\tdefaults: {\n\t\t\tname: 'Box',\n\t\t},\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'boxOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'File',\n\t\t\t\t\t\tvalue: 'file',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Folder',\n\t\t\t\t\t\tvalue: 'folder',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'file',\n\t\t\t},\n\t\t\t...fileOperations,\n\t\t\t...fileFields,\n\t\t\t...folderOperations,\n\t\t\t...folderFields,\n\t\t],\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst length = items.length;\n\t\tconst qs: IDataObject = {};\n\t\tlet responseData;\n\t\tconst timezone = this.getTimezone();\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'file') {\n\t\t\t\t\t// https://developer.box.com/reference/post-files-id-copy\n\t\t\t\t\tif (operation === 'copy') {\n\t\t\t\t\t\tconst fileId = this.getNodeParameter('fileId', i) as string;\n\t\t\t\t\t\tconst parentId = this.getNodeParameter('parentId', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst body: IDataObject = {};\n\t\t\t\t\t\tif (additionalFields.name) {\n\t\t\t\t\t\t\tbody.name = additionalFields.name as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (parentId) {\n\t\t\t\t\t\t\tbody.parent = { id: parentId };\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbody.parent = { id: 0 };\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.fields) {\n\t\t\t\t\t\t\tqs.fields = additionalFields.fields as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.version) {\n\t\t\t\t\t\t\tbody.version = additionalFields.version as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await boxApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t`/files/${fileId}/copy`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t// https://developer.box.com/reference/delete-files-id\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst fileId = this.getNodeParameter('fileId', i) as string;\n\t\t\t\t\t\tresponseData = await boxApiRequest.call(this, 'DELETE', `/files/${fileId}`);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t\t// https://developer.box.com/reference/get-files-id-content\n\t\t\t\t\tif (operation === 'download') {\n\t\t\t\t\t\tconst fileId = this.getNodeParameter('fileId', i) as string;\n\t\t\t\t\t\tconst dataPropertyNameDownload = this.getNodeParameter('binaryPropertyName', i);\n\t\t\t\t\t\tresponseData = await boxApiRequest.call(this, 'GET', `/files/${fileId}`);\n\n\t\t\t\t\t\tconst fileName = responseData.name;\n\n\t\t\t\t\t\tlet mimeType: string | undefined;\n\n\t\t\t\t\t\tresponseData = await boxApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/files/${fileId}/content`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t{ encoding: null, resolveWithFullResponse: true },\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst newItem: INodeExecutionData = {\n\t\t\t\t\t\t\tjson: items[i].json,\n\t\t\t\t\t\t\tbinary: {},\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (mimeType === undefined && responseData.headers['content-type']) {\n\t\t\t\t\t\t\tmimeType = responseData.headers['content-type'];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (items[i].binary !== undefined) {\n\t\t\t\t\t\t\t// Create a shallow copy of the binary data so that the old\n\t\t\t\t\t\t\t// data references which do not get changed still stay behind\n\t\t\t\t\t\t\t// but the incoming data does not get changed.\n\t\t\t\t\t\t\tObject.assign(newItem.binary!, items[i].binary);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\titems[i] = newItem;\n\n\t\t\t\t\t\tconst data = Buffer.from(responseData.body as string);\n\n\t\t\t\t\t\titems[i].binary![dataPropertyNameDownload] = await this.helpers.prepareBinaryData(\n\t\t\t\t\t\t\tdata as unknown as Buffer,\n\t\t\t\t\t\t\tfileName as string,\n\t\t\t\t\t\t\tmimeType,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t// https://developer.box.com/reference/get-files-id\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst fileId = this.getNodeParameter('fileId', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tif (additionalFields.fields) {\n\t\t\t\t\t\t\tqs.fields = additionalFields.fields as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await boxApiRequest.call(this, 'GET', `/files/${fileId}`, {}, qs);\n\t\t\t\t\t}\n\t\t\t\t\t// https://developer.box.com/reference/get-search/\n\t\t\t\t\tif (operation === 'search') {\n\t\t\t\t\t\tconst query = this.getNodeParameter('query', i) as string;\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst tz = this.getTimezone();\n\t\t\t\t\t\tqs.type = 'file';\n\t\t\t\t\t\tqs.query = query;\n\t\t\t\t\t\tObject.assign(qs, additionalFields);\n\n\t\t\t\t\t\tif (qs.content_types) {\n\t\t\t\t\t\t\tqs.content_types = (qs.content_types as string).split(',');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.createdRangeUi) {\n\t\t\t\t\t\t\tconst createdRangeValues = (additionalFields.createdRangeUi as IDataObject)\n\t\t\t\t\t\t\t\t.createdRangeValuesUi as IDataObject;\n\t\t\t\t\t\t\tif (createdRangeValues) {\n\t\t\t\t\t\t\t\tconst from = moment.tz(createdRangeValues.from, tz).format();\n\t\t\t\t\t\t\t\tconst to = moment.tz(createdRangeValues.to, tz).format();\n\t\t\t\t\t\t\t\tqs.created_at_range = `${from},${to}`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete qs.createdRangeUi;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.updatedRangeUi) {\n\t\t\t\t\t\t\tconst updateRangeValues = (additionalFields.updatedRangeUi as IDataObject)\n\t\t\t\t\t\t\t\t.updatedRangeValuesUi as IDataObject;\n\t\t\t\t\t\t\tif (updateRangeValues) {\n\t\t\t\t\t\t\t\tqs.updated_at_range = `${moment.tz(updateRangeValues.from, tz).format()},${moment\n\t\t\t\t\t\t\t\t\t.tz(updateRangeValues.to, tz)\n\t\t\t\t\t\t\t\t\t.format()}`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete qs.updatedRangeUi;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await boxApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'entries',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/search',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await boxApiRequest.call(this, 'GET', '/search', {}, qs);\n\t\t\t\t\t\t\tresponseData = responseData.entries;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// https://developer.box.com/reference/post-collaborations/\n\t\t\t\t\tif (operation === 'share') {\n\t\t\t\t\t\tconst fileId = this.getNodeParameter('fileId', i) as string;\n\t\t\t\t\t\tconst role = this.getNodeParameter('role', i) as string;\n\t\t\t\t\t\tconst accessibleBy = this.getNodeParameter('accessibleBy', i) as string;\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\n\t\t\t\t\t\tconst body: { accessible_by: IDataObject; [key: string]: any } = {\n\t\t\t\t\t\t\taccessible_by: {},\n\t\t\t\t\t\t\titem: {\n\t\t\t\t\t\t\t\tid: fileId,\n\t\t\t\t\t\t\t\ttype: 'file',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\trole: role === 'coOwner' ? 'co-owner' : noCase(role),\n\t\t\t\t\t\t\t...options,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (body.fields) {\n\t\t\t\t\t\t\tqs.fields = body.fields;\n\t\t\t\t\t\t\tdelete body.fields;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (body.expires_at) {\n\t\t\t\t\t\t\tbody.expires_at = moment.tz(body.expires_at, timezone).format();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (body.notify) {\n\t\t\t\t\t\t\tqs.notify = body.notify;\n\t\t\t\t\t\t\tdelete body.notify;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (accessibleBy === 'user') {\n\t\t\t\t\t\t\tconst useEmail = this.getNodeParameter('useEmail', i) as boolean;\n\t\t\t\t\t\t\tif (useEmail) {\n\t\t\t\t\t\t\t\tbody.accessible_by.login = this.getNodeParameter('email', i) as string;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbody.accessible_by.id = this.getNodeParameter('userId', i) as string;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbody.accessible_by.id = this.getNodeParameter('groupId', i) as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await boxApiRequest.call(this, 'POST', '/collaborations', body, qs);\n\t\t\t\t\t}\n\t\t\t\t\t// https://developer.box.com/reference/post-files-content\n\t\t\t\t\tif (operation === 'upload') {\n\t\t\t\t\t\tconst parentId = this.getNodeParameter('parentId', i) as string;\n\t\t\t\t\t\tconst isBinaryData = this.getNodeParameter('binaryData', i);\n\t\t\t\t\t\tconst fileName = this.getNodeParameter('fileName', i) as string;\n\n\t\t\t\t\t\tconst attributes: IDataObject = {};\n\n\t\t\t\t\t\tif (parentId !== '') {\n\t\t\t\t\t\t\tattributes.parent = { id: parentId };\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// if not parent defined save it on the root directory\n\t\t\t\t\t\t\tattributes.parent = { id: 0 };\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (isBinaryData) {\n\t\t\t\t\t\t\tconst binaryPropertyName = this.getNodeParameter('binaryPropertyName', i);\n\t\t\t\t\t\t\tconst binaryData = this.helpers.assertBinaryData(i, binaryPropertyName);\n\t\t\t\t\t\t\tconst binaryDataBuffer = await this.helpers.getBinaryDataBuffer(\n\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t\tbinaryPropertyName,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tconst body: IDataObject = {};\n\n\t\t\t\t\t\t\tattributes.name = fileName || binaryData.fileName;\n\n\t\t\t\t\t\t\tbody.attributes = JSON.stringify(attributes);\n\n\t\t\t\t\t\t\tbody.file = {\n\t\t\t\t\t\t\t\tvalue: binaryDataBuffer,\n\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\tfilename: binaryData.fileName,\n\t\t\t\t\t\t\t\t\tcontentType: binaryData.mimeType,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tresponseData = await boxApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t'https://upload.box.com/api/2.0/files/content',\n\t\t\t\t\t\t\t\t{ formData: body },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.entries;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst content = this.getNodeParameter('fileContent', i) as string;\n\n\t\t\t\t\t\t\tif (fileName === '') {\n\t\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'File name must be set!', {\n\t\t\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tattributes.name = fileName;\n\n\t\t\t\t\t\t\tconst body: IDataObject = {};\n\n\t\t\t\t\t\t\tbody.attributes = JSON.stringify(attributes);\n\n\t\t\t\t\t\t\tbody.file = {\n\t\t\t\t\t\t\t\tvalue: Buffer.from(content),\n\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\tfilename: fileName,\n\t\t\t\t\t\t\t\t\tcontentType: 'text/plain',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tresponseData = await boxApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t'https://upload.box.com/api/2.0/files/content',\n\t\t\t\t\t\t\t\t{ formData: body },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.entries;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'folder') {\n\t\t\t\t\t// https://developer.box.com/reference/post-folders\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst name = this.getNodeParameter('name', i) as string;\n\t\t\t\t\t\tconst parentId = this.getNodeParameter('parentId', i) as string;\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (parentId) {\n\t\t\t\t\t\t\tbody.parent = { id: parentId };\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbody.parent = { id: 0 };\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (options.access) {\n\t\t\t\t\t\t\tbody.folder_upload_email = {\n\t\t\t\t\t\t\t\taccess: options.access as string,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (options.fields) {\n\t\t\t\t\t\t\tqs.fields = options.fields as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await boxApiRequest.call(this, 'POST', '/folders', body, qs);\n\t\t\t\t\t}\n\t\t\t\t\t// https://developer.box.com/reference/delete-folders-id\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst folderId = this.getNodeParameter('folderId', i) as string;\n\t\t\t\t\t\tconst recursive = this.getNodeParameter('recursive', i) as boolean;\n\t\t\t\t\t\tqs.recursive = recursive;\n\n\t\t\t\t\t\tresponseData = await boxApiRequest.call(this, 'DELETE', `/folders/${folderId}`, qs);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t\t// https://developer.box.com/reference/get-folders-id/\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst folderId = this.getNodeParameter('folderId', i) as string;\n\t\t\t\t\t\tresponseData = await boxApiRequest.call(this, 'GET', `/folders/${folderId}`, qs);\n\t\t\t\t\t}\n\t\t\t\t\t// https://developer.box.com/reference/get-search/\n\t\t\t\t\tif (operation === 'search') {\n\t\t\t\t\t\tconst query = this.getNodeParameter('query', i) as string;\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst tz = this.getTimezone();\n\t\t\t\t\t\tqs.type = 'folder';\n\t\t\t\t\t\tqs.query = query;\n\t\t\t\t\t\tObject.assign(qs, additionalFields);\n\n\t\t\t\t\t\tif (qs.content_types) {\n\t\t\t\t\t\t\tqs.content_types = (qs.content_types as string).split(',');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.createdRangeUi) {\n\t\t\t\t\t\t\tconst createdRangeValues = (additionalFields.createdRangeUi as IDataObject)\n\t\t\t\t\t\t\t\t.createdRangeValuesUi as IDataObject;\n\t\t\t\t\t\t\tif (createdRangeValues) {\n\t\t\t\t\t\t\t\tqs.created_at_range = `${moment.tz(createdRangeValues.from, tz).format()},${moment\n\t\t\t\t\t\t\t\t\t.tz(createdRangeValues.to, tz)\n\t\t\t\t\t\t\t\t\t.format()}`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete qs.createdRangeUi;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.updatedRangeUi) {\n\t\t\t\t\t\t\tconst updateRangeValues = (additionalFields.updatedRangeUi as IDataObject)\n\t\t\t\t\t\t\t\t.updatedRangeValuesUi as IDataObject;\n\t\t\t\t\t\t\tif (updateRangeValues) {\n\t\t\t\t\t\t\t\tqs.updated_at_range = `${moment.tz(updateRangeValues.from, tz).format()},${moment\n\t\t\t\t\t\t\t\t\t.tz(updateRangeValues.to, tz)\n\t\t\t\t\t\t\t\t\t.format()}`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete qs.updatedRangeUi;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await boxApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'entries',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/search',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await boxApiRequest.call(this, 'GET', '/search', {}, qs);\n\t\t\t\t\t\t\tresponseData = responseData.entries;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// https://developer.box.com/reference/post-collaborations/\n\t\t\t\t\tif (operation === 'share') {\n\t\t\t\t\t\tconst folderId = this.getNodeParameter('folderId', i) as string;\n\t\t\t\t\t\tconst role = this.getNodeParameter('role', i) as string;\n\t\t\t\t\t\tconst accessibleBy = this.getNodeParameter('accessibleBy', i) as string;\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\n\t\t\t\t\t\tconst body: { accessible_by: IDataObject; [key: string]: any } = {\n\t\t\t\t\t\t\taccessible_by: {},\n\t\t\t\t\t\t\titem: {\n\t\t\t\t\t\t\t\tid: folderId,\n\t\t\t\t\t\t\t\ttype: 'folder',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\trole: role === 'coOwner' ? 'co-owner' : noCase(role),\n\t\t\t\t\t\t\t...options,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (body.fields) {\n\t\t\t\t\t\t\tqs.fields = body.fields;\n\t\t\t\t\t\t\tdelete body.fields;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (body.expires_at) {\n\t\t\t\t\t\t\tbody.expires_at = moment.tz(body.expires_at, timezone).format();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (body.notify) {\n\t\t\t\t\t\t\tqs.notify = body.notify;\n\t\t\t\t\t\t\tdelete body.notify;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (accessibleBy === 'user') {\n\t\t\t\t\t\t\tconst useEmail = this.getNodeParameter('useEmail', i) as boolean;\n\t\t\t\t\t\t\tif (useEmail) {\n\t\t\t\t\t\t\t\tbody.accessible_by.login = this.getNodeParameter('email', i) as string;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbody.accessible_by.id = this.getNodeParameter('userId', i) as string;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbody.accessible_by.id = this.getNodeParameter('groupId', i) as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await boxApiRequest.call(this, 'POST', '/collaborations', body, qs);\n\t\t\t\t\t}\n\t\t\t\t\t//https://developer.box.com/guides/folders/single/move/\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst folderId = this.getNodeParameter('folderId', i) as string;\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\n\t\t\t\t\t\tif (updateFields.fields) {\n\t\t\t\t\t\t\tqs.fields = updateFields.fields;\n\t\t\t\t\t\t\tdelete updateFields.fields;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst body = {\n\t\t\t\t\t\t\t...updateFields,\n\t\t\t\t\t\t} as IDataObject;\n\n\t\t\t\t\t\tif (body.parentId) {\n\t\t\t\t\t\t\tbody.parent = {\n\t\t\t\t\t\t\t\tid: body.parentId,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tdelete body.parentId;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (body.tags) {\n\t\t\t\t\t\t\tbody.tags = (body.tags as string).split(',');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await boxApiRequest.call(this, 'PUT', `/folders/${folderId}`, body, qs);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t);\n\t\t\t\treturnData.push(...executionData);\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\tif (resource === 'file' && operation === 'download') {\n\t\t\t// For file downloads the files get attached to the existing items\n\t\t\treturn [items];\n\t\t} else {\n\t\t\treturn [returnData];\n\t\t}\n\t}\n}\n"],"mappings":"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","names":["moment"]}