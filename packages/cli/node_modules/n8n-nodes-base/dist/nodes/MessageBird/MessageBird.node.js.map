{"version":3,"sources":["../../../nodes/MessageBird/MessageBird.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n\tIHttpRequestMethods,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport { messageBirdApiRequest } from './GenericFunctions';\n\nexport class MessageBird implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'MessageBird',\n\t\tname: 'messageBird',\n\t\ticon: 'file:messagebird.svg',\n\t\tgroup: ['output'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Sends SMS via MessageBird',\n\t\tdefaults: {\n\t\t\tname: 'MessageBird',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'messageBirdApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'SMS',\n\t\t\t\t\t\tvalue: 'sms',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Balance',\n\t\t\t\t\t\tvalue: 'balance',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'sms',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['sms'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Send',\n\t\t\t\t\t\tvalue: 'send',\n\t\t\t\t\t\tdescription: 'Send text messages (SMS)',\n\t\t\t\t\t\taction: 'Send an SMS',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'send',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['balance'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get',\n\t\t\t\t\t\tvalue: 'get',\n\t\t\t\t\t\tdescription: 'Get the balance',\n\t\t\t\t\t\taction: 'Get the current balance',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'get',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         sms:send\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'From',\n\t\t\t\tname: 'originator',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tplaceholder: '14155238886',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['send'],\n\t\t\t\t\t\tresource: ['sms'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The number from which to send the message',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'To',\n\t\t\t\tname: 'recipients',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tplaceholder: '14155238886/+14155238886',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['send'],\n\t\t\t\t\t\tresource: ['sms'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'All recipients separated by commas',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Message',\n\t\t\t\tname: 'message',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['send'],\n\t\t\t\t\t\tresource: ['sms'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The message to be send',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Additional Fields',\n\t\t\t\tname: 'additionalFields',\n\t\t\t\ttype: 'collection',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['send'],\n\t\t\t\t\t\tresource: ['sms'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplaceholder: 'Add Fields',\n\t\t\t\tdefault: {},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Created Date-Time',\n\t\t\t\t\t\tname: 'createdDatetime',\n\t\t\t\t\t\ttype: 'dateTime',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'The date and time of the creation of the message in RFC3339 format (Y-m-dTH:i:sP)',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Datacoding',\n\t\t\t\t\t\tname: 'datacoding',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Auto',\n\t\t\t\t\t\t\t\tvalue: 'auto',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Plain',\n\t\t\t\t\t\t\t\tvalue: 'plain',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Unicode',\n\t\t\t\t\t\t\t\tvalue: 'unicode',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Using unicode will limit the maximum number of characters to 70 instead of 160',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Gateway',\n\t\t\t\t\t\tname: 'gateway',\n\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'The SMS route that is used to send the message',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Group IDs',\n\t\t\t\t\t\tname: 'groupIds',\n\t\t\t\t\t\tplaceholder: '1,2',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Group IDs separated by commas, If provided recipients can be omitted',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Message Type',\n\t\t\t\t\t\tname: 'mclass',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\tplaceholder: 'Permissible values from 0-3',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Flash',\n\t\t\t\t\t\t\t\tvalue: 1,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Normal',\n\t\t\t\t\t\t\t\tvalue: 0,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: 1,\n\t\t\t\t\t\tdescription: 'Indicated the message type. 1 is a normal message, 0 is a flash message.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Reference',\n\t\t\t\t\t\tname: 'reference',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'A client reference',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Report Url',\n\t\t\t\t\t\tname: 'reportUrl',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'The status report URL to be used on a per-message basis. Reference is required for a status report webhook to be sent.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Scheduled Date-Time',\n\t\t\t\t\t\tname: 'scheduledDatetime',\n\t\t\t\t\t\ttype: 'dateTime',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'The scheduled date and time of the message in RFC3339 format (Y-m-dTH:i:sP)',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Type',\n\t\t\t\t\t\tname: 'type',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Binary',\n\t\t\t\t\t\t\t\tvalue: 'binary',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Flash',\n\t\t\t\t\t\t\t\tvalue: 'flash',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'SMS',\n\t\t\t\t\t\t\t\tvalue: 'sms',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'The type of message. Values can be: sms, binary, or flash.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Type Details',\n\t\t\t\t\t\tname: 'typeDetails',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'A hash with extra information. Is only used when a binary message is sent.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Validity',\n\t\t\t\t\t\tname: 'validity',\n\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\tdefault: 1,\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tminValue: 1,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdescription: 'The amount of seconds that the message is valid',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: IDataObject[] = [];\n\n\t\tlet operation: string;\n\t\tlet resource: string;\n\n\t\t// For POST\n\t\tlet bodyRequest: IDataObject = {};\n\t\t// For Query string\n\t\tlet qs: IDataObject;\n\n\t\tlet requestMethod: IHttpRequestMethods;\n\t\tlet requestPath;\n\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\tqs = {};\n\t\t\ttry {\n\t\t\t\tresource = this.getNodeParameter('resource', i);\n\t\t\t\toperation = this.getNodeParameter('operation', i);\n\n\t\t\t\tif (resource === 'sms') {\n\t\t\t\t\t//https://developers.messagebird.com/api/sms-messaging/#sms-api\n\t\t\t\t\tif (operation === 'send') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         sms:send\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'POST';\n\t\t\t\t\t\trequestPath = '/messages';\n\t\t\t\t\t\tconst originator = this.getNodeParameter('originator', i) as string;\n\t\t\t\t\t\tconst body = this.getNodeParameter('message', i) as string;\n\n\t\t\t\t\t\tbodyRequest = {\n\t\t\t\t\t\t\trecipients: [],\n\t\t\t\t\t\t\toriginator,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tif (additionalFields.groupIds) {\n\t\t\t\t\t\t\tbodyRequest.groupIds = additionalFields.groupIds as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.type) {\n\t\t\t\t\t\t\tbodyRequest.type = additionalFields.type as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.reference) {\n\t\t\t\t\t\t\tbodyRequest.reference = additionalFields.reference as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.reportUrl) {\n\t\t\t\t\t\t\tbodyRequest.reportUrl = additionalFields.reportUrl as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.validity) {\n\t\t\t\t\t\t\tbodyRequest.validity = additionalFields.reportUrl as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.gateway) {\n\t\t\t\t\t\t\tbodyRequest.gateway = additionalFields.gateway as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.typeDetails) {\n\t\t\t\t\t\t\tbodyRequest.typeDetails = additionalFields.typeDetails as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.datacoding) {\n\t\t\t\t\t\t\tbodyRequest.datacoding = additionalFields.datacoding as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.mclass) {\n\t\t\t\t\t\t\tbodyRequest.mclass = additionalFields.mclass as number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.scheduledDatetime) {\n\t\t\t\t\t\t\tbodyRequest.scheduledDatetime = additionalFields.scheduledDatetime as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalFields.createdDatetime) {\n\t\t\t\t\t\t\tbodyRequest.createdDatetime = additionalFields.createdDatetime as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst receivers = this.getNodeParameter('recipients', i) as string;\n\t\t\t\t\t\tbodyRequest.recipients = receivers.split(',').map((item) => {\n\t\t\t\t\t\t\treturn parseInt(item, 10);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t`The operation \"${operation}\" is not known!`,\n\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'balance') {\n\t\t\t\t\trequestMethod = 'GET';\n\t\t\t\t\trequestPath = '/balance';\n\t\t\t\t} else {\n\t\t\t\t\tthrow new NodeOperationError(this.getNode(), `The resource \"${resource}\" is not known!`, {\n\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tconst responseData = await messageBirdApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\trequestMethod,\n\t\t\t\t\trequestPath,\n\t\t\t\t\tbodyRequest,\n\t\t\t\t\tqs,\n\t\t\t\t);\n\n\t\t\t\treturnData.push(responseData as IDataObject);\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\treturnData.push({ error: error.message });\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn [this.helpers.returnJsonArray(returnData)];\n\t}\n}\n"],"mappings":"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","names":[]}