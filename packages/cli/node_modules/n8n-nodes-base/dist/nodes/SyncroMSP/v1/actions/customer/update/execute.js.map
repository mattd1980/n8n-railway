{"version":3,"sources":["../../../../../../../nodes/SyncroMSP/v1/actions/customer/update/execute.ts"],"sourcesContent":["import type { IDataObject, IExecuteFunctions, INodeExecutionData, JsonObject } from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\nimport { apiRequest } from '../../../transport';\n\nexport async function updateCustomer(\n\tthis: IExecuteFunctions,\n\tindex: number,\n): Promise<INodeExecutionData[]> {\n\tconst id = this.getNodeParameter('customerId', index) as IDataObject;\n\tconst {\n\t\taddress,\n\t\tbusinessName,\n\t\temail,\n\t\tfirstName,\n\t\tgetSms,\n\t\tinvoiceCcEmails,\n\t\tlastName,\n\t\tnoEmail,\n\t\tnotes,\n\t\tnotificationEmail,\n\t\tphone,\n\t\treferredBy,\n\t} = this.getNodeParameter('updateFields', index);\n\n\tconst qs = {} as IDataObject;\n\tconst requestMethod = 'PUT';\n\tconst endpoint = `customers/${id}`;\n\tlet body = {} as IDataObject;\n\tlet addressData = address as IDataObject;\n\n\tif (addressData) {\n\t\taddressData = addressData.addressFields as IDataObject;\n\t\taddressData.address_2 = addressData.address2;\n\t}\n\n\tbody = {\n\t\t...addressData,\n\t\tbusiness_name: businessName,\n\t\temail,\n\t\tfirstname: firstName,\n\t\tget_sms: getSms,\n\t\tinvoice_cc_emails: ((invoiceCcEmails as string[]) || []).join(','),\n\t\tlastname: lastName,\n\t\tno_email: noEmail,\n\t\tnotes,\n\t\tnotification_email: notificationEmail,\n\t\tphone,\n\t\treferred_by: referredBy,\n\t};\n\n\tconst responseData = await apiRequest.call(this, requestMethod, endpoint, body, qs);\n\tif (!responseData.customer) {\n\t\tthrow new NodeApiError(this.getNode(), responseData as JsonObject, {\n\t\t\thttpCode: '404',\n\t\t\tmessage: 'Customer ID not found',\n\t\t});\n\t}\n\treturn this.helpers.returnJsonArray(responseData.customer as IDataObject[]);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,0BAA6B;AAE7B,uBAA2B;AAE3B,eAAsB,eAErB,OACgC;AAChC,QAAM,KAAK,KAAK,iBAAiB,cAAc,KAAK;AACpD,QAAM;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD,IAAI,KAAK,iBAAiB,gBAAgB,KAAK;AAE/C,QAAM,KAAK,CAAC;AACZ,QAAM,gBAAgB;AACtB,QAAM,WAAW,aAAa,EAAE;AAChC,MAAI,OAAO,CAAC;AACZ,MAAI,cAAc;AAElB,MAAI,aAAa;AAChB,kBAAc,YAAY;AAC1B,gBAAY,YAAY,YAAY;AAAA,EACrC;AAEA,SAAO;AAAA,IACN,GAAG;AAAA,IACH,eAAe;AAAA,IACf;AAAA,IACA,WAAW;AAAA,IACX,SAAS;AAAA,IACT,oBAAqB,mBAAgC,CAAC,GAAG,KAAK,GAAG;AAAA,IACjE,UAAU;AAAA,IACV,UAAU;AAAA,IACV;AAAA,IACA,oBAAoB;AAAA,IACpB;AAAA,IACA,aAAa;AAAA,EACd;AAEA,QAAM,eAAe,MAAM,4BAAW,KAAK,MAAM,eAAe,UAAU,MAAM,EAAE;AAClF,MAAI,CAAC,aAAa,UAAU;AAC3B,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,cAA4B;AAAA,MAClE,UAAU;AAAA,MACV,SAAS;AAAA,IACV,CAAC;AAAA,EACF;AACA,SAAO,KAAK,QAAQ,gBAAgB,aAAa,QAAyB;AAC3E;","names":[]}