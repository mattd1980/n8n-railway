{"version":3,"sources":["../../../../../../../nodes/SyncroMSP/v1/actions/rmm/create/execute.ts"],"sourcesContent":["import type { IExecuteFunctions, IDataObject, INodeExecutionData } from 'n8n-workflow';\n\nimport { apiRequest } from '../../../transport';\n\nexport async function addAlert(\n\tthis: IExecuteFunctions,\n\tindex: number,\n): Promise<INodeExecutionData[]> {\n\tconst customerId = this.getNodeParameter('customerId', index) as IDataObject;\n\tconst assetId = this.getNodeParameter('assetId', index) as IDataObject;\n\tconst description = this.getNodeParameter('description', index) as IDataObject;\n\tconst additionalFields = this.getNodeParameter('additionalFields', index);\n\n\tconst qs = {} as IDataObject;\n\tconst requestMethod = 'POST';\n\tconst endpoint = 'rmm_alerts';\n\tlet body = {} as IDataObject;\n\n\tif (additionalFields) {\n\t\tbody = additionalFields;\n\t}\n\n\tbody.customer_id = customerId;\n\tbody.asset_id = assetId;\n\tbody.description = description;\n\n\tconst responseData = await apiRequest.call(this, requestMethod, endpoint, body, qs);\n\n\treturn this.helpers.returnJsonArray(responseData.alert as IDataObject);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,uBAA2B;AAE3B,eAAsB,SAErB,OACgC;AAChC,QAAM,aAAa,KAAK,iBAAiB,cAAc,KAAK;AAC5D,QAAM,UAAU,KAAK,iBAAiB,WAAW,KAAK;AACtD,QAAM,cAAc,KAAK,iBAAiB,eAAe,KAAK;AAC9D,QAAM,mBAAmB,KAAK,iBAAiB,oBAAoB,KAAK;AAExE,QAAM,KAAK,CAAC;AACZ,QAAM,gBAAgB;AACtB,QAAM,WAAW;AACjB,MAAI,OAAO,CAAC;AAEZ,MAAI,kBAAkB;AACrB,WAAO;AAAA,EACR;AAEA,OAAK,cAAc;AACnB,OAAK,WAAW;AAChB,OAAK,cAAc;AAEnB,QAAM,eAAe,MAAM,4BAAW,KAAK,MAAM,eAAe,UAAU,MAAM,EAAE;AAElF,SAAO,KAAK,QAAQ,gBAAgB,aAAa,KAAoB;AACtE;","names":[]}