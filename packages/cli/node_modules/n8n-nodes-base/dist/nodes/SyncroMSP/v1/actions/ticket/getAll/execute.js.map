{"version":3,"sources":["../../../../../../../nodes/SyncroMSP/v1/actions/ticket/getAll/execute.ts"],"sourcesContent":["import type { IExecuteFunctions, IDataObject, INodeExecutionData } from 'n8n-workflow';\n\nimport { apiRequest, apiRequestAllItems } from '../../../transport';\n\nexport async function getAll(\n\tthis: IExecuteFunctions,\n\tindex: number,\n): Promise<INodeExecutionData[]> {\n\tconst returnAll = this.getNodeParameter('returnAll', index);\n\tconst filters = this.getNodeParameter('filters', index);\n\n\tlet qs = {} as IDataObject;\n\tconst requestMethod = 'GET';\n\tconst endpoint = 'tickets';\n\tconst body = {} as IDataObject;\n\n\tif (filters) {\n\t\tqs = filters;\n\t}\n\n\tif (!returnAll) {\n\t\tqs.per_page = this.getNodeParameter('limit', index);\n\t}\n\n\tlet responseData;\n\tif (returnAll) {\n\t\tresponseData = await apiRequestAllItems.call(this, requestMethod, endpoint, body, qs);\n\t\treturn this.helpers.returnJsonArray(responseData);\n\t} else {\n\t\tresponseData = await apiRequest.call(this, requestMethod, endpoint, body, qs);\n\t\treturn this.helpers.returnJsonArray(responseData.tickets as IDataObject[]);\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,uBAA+C;AAE/C,eAAsB,OAErB,OACgC;AAChC,QAAM,YAAY,KAAK,iBAAiB,aAAa,KAAK;AAC1D,QAAM,UAAU,KAAK,iBAAiB,WAAW,KAAK;AAEtD,MAAI,KAAK,CAAC;AACV,QAAM,gBAAgB;AACtB,QAAM,WAAW;AACjB,QAAM,OAAO,CAAC;AAEd,MAAI,SAAS;AACZ,SAAK;AAAA,EACN;AAEA,MAAI,CAAC,WAAW;AACf,OAAG,WAAW,KAAK,iBAAiB,SAAS,KAAK;AAAA,EACnD;AAEA,MAAI;AACJ,MAAI,WAAW;AACd,mBAAe,MAAM,oCAAmB,KAAK,MAAM,eAAe,UAAU,MAAM,EAAE;AACpF,WAAO,KAAK,QAAQ,gBAAgB,YAAY;AAAA,EACjD,OAAO;AACN,mBAAe,MAAM,4BAAW,KAAK,MAAM,eAAe,UAAU,MAAM,EAAE;AAC5E,WAAO,KAAK,QAAQ,gBAAgB,aAAa,OAAwB;AAAA,EAC1E;AACD;","names":[]}