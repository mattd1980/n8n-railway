{"version":3,"sources":["../../../../../nodes/Notion/v2/methods/loadOptions.ts"],"sourcesContent":["import moment from 'moment-timezone';\nimport type { IDataObject, ILoadOptionsFunctions, INodePropertyOptions } from 'n8n-workflow';\n\nimport {\n\textractPageId,\n\tgetBlockTypesOptions,\n\tnotionApiRequest,\n\tnotionApiRequestAllItems,\n} from '../../shared/GenericFunctions';\n\nexport async function getDatabaseProperties(\n\tthis: ILoadOptionsFunctions,\n): Promise<INodePropertyOptions[]> {\n\tconst returnData: INodePropertyOptions[] = [];\n\tconst databaseId = this.getCurrentNodeParameter('databaseId', {\n\t\textractValue: true,\n\t}) as string;\n\tconst { properties } = await notionApiRequest.call(this, 'GET', `/databases/${databaseId}`);\n\tfor (const key of Object.keys(properties as IDataObject)) {\n\t\t//remove parameters that cannot be set from the API.\n\t\tif (\n\t\t\t![\n\t\t\t\t'created_time',\n\t\t\t\t'last_edited_time',\n\t\t\t\t'created_by',\n\t\t\t\t'last_edited_by',\n\t\t\t\t'formula',\n\t\t\t\t'rollup',\n\t\t\t].includes(properties[key].type as string)\n\t\t) {\n\t\t\treturnData.push({\n\t\t\t\tname: `${key}`,\n\t\t\t\tvalue: `${key}|${properties[key].type}`,\n\t\t\t});\n\t\t}\n\t}\n\treturnData.sort((a, b) => {\n\t\tif (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t});\n\treturn returnData;\n}\n\nexport async function getFilterProperties(\n\tthis: ILoadOptionsFunctions,\n): Promise<INodePropertyOptions[]> {\n\tconst returnData: INodePropertyOptions[] = [];\n\tconst databaseId = this.getCurrentNodeParameter('databaseId', {\n\t\textractValue: true,\n\t}) as string;\n\tconst { properties } = await notionApiRequest.call(this, 'GET', `/databases/${databaseId}`);\n\tfor (const key of Object.keys(properties as IDataObject)) {\n\t\treturnData.push({\n\t\t\tname: `${key}`,\n\t\t\tvalue: `${key}|${properties[key].type}`,\n\t\t});\n\t}\n\treturnData.sort((a, b) => {\n\t\tif (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t});\n\treturn returnData;\n}\n\nexport async function getBlockTypes(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\treturn getBlockTypesOptions();\n}\n\nexport async function getPropertySelectValues(\n\tthis: ILoadOptionsFunctions,\n): Promise<INodePropertyOptions[]> {\n\tconst [name, type] = (this.getCurrentNodeParameter('&key') as string).split('|');\n\tconst databaseId = this.getCurrentNodeParameter('databaseId', {\n\t\textractValue: true,\n\t}) as string;\n\tconst resource = this.getCurrentNodeParameter('resource') as string;\n\tconst operation = this.getCurrentNodeParameter('operation') as string;\n\tconst { properties } = await notionApiRequest.call(this, 'GET', `/databases/${databaseId}`);\n\tif (resource === 'databasePage') {\n\t\tif (['multi_select', 'select', 'status'].includes(type) && operation === 'getAll') {\n\t\t\treturn properties[name][type].options.map((option: IDataObject) => ({\n\t\t\t\tname: option.name,\n\t\t\t\tvalue: option.name,\n\t\t\t}));\n\t\t} else if (\n\t\t\t['multi_select', 'select', 'status'].includes(type) &&\n\t\t\t['create', 'update'].includes(operation)\n\t\t) {\n\t\t\treturn properties[name][type].options.map((option: IDataObject) => ({\n\t\t\t\tname: option.name,\n\t\t\t\tvalue: option.name,\n\t\t\t}));\n\t\t}\n\t}\n\treturn properties[name][type].options.map((option: IDataObject) => ({\n\t\tname: option.name,\n\t\tvalue: option.id,\n\t}));\n}\n\nexport async function getUsers(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\tconst returnData: INodePropertyOptions[] = [];\n\tconst users = await notionApiRequestAllItems.call(this, 'results', 'GET', '/users');\n\tfor (const user of users) {\n\t\tif (user.type === 'person') {\n\t\t\treturnData.push({\n\t\t\t\tname: user.name,\n\t\t\t\tvalue: user.id,\n\t\t\t});\n\t\t}\n\t}\n\treturn returnData;\n}\n\nexport async function getDatabaseIdFromPage(\n\tthis: ILoadOptionsFunctions,\n): Promise<INodePropertyOptions[]> {\n\tconst returnData: INodePropertyOptions[] = [];\n\tconst pageId = extractPageId(\n\t\tthis.getCurrentNodeParameter('pageId', { extractValue: true }) as string,\n\t);\n\tconst {\n\t\tparent: { database_id: databaseId },\n\t} = await notionApiRequest.call(this, 'GET', `/pages/${pageId}`);\n\tconst { properties } = await notionApiRequest.call(this, 'GET', `/databases/${databaseId}`);\n\tfor (const key of Object.keys(properties as IDataObject)) {\n\t\t//remove parameters that cannot be set from the API.\n\t\tif (\n\t\t\t![\n\t\t\t\t'created_time',\n\t\t\t\t'last_edited_time',\n\t\t\t\t'created_by',\n\t\t\t\t'last_edited_by',\n\t\t\t\t'formula',\n\t\t\t\t'rollup',\n\t\t\t].includes(properties[key].type as string)\n\t\t) {\n\t\t\treturnData.push({\n\t\t\t\tname: `${key}`,\n\t\t\t\tvalue: `${key}|${properties[key].type}`,\n\t\t\t});\n\t\t}\n\t}\n\treturnData.sort((a, b) => {\n\t\tif (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t});\n\treturn returnData;\n}\n\nexport async function getDatabaseOptionsFromPage(\n\tthis: ILoadOptionsFunctions,\n): Promise<INodePropertyOptions[]> {\n\tconst pageId = extractPageId(\n\t\tthis.getCurrentNodeParameter('pageId', { extractValue: true }) as string,\n\t);\n\tconst [name, type] = (this.getCurrentNodeParameter('&key') as string).split('|');\n\tconst {\n\t\tparent: { database_id: databaseId },\n\t} = await notionApiRequest.call(this, 'GET', `/pages/${pageId}`);\n\tconst { properties } = await notionApiRequest.call(this, 'GET', `/databases/${databaseId}`);\n\treturn properties[name][type].options.map((option: IDataObject) => ({\n\t\tname: option.name,\n\t\tvalue: option.name,\n\t}));\n}\n\n// Get all the timezones to display them to user so that they can\n// select them easily\nexport async function getTimezones(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\tconst returnData: INodePropertyOptions[] = [];\n\tfor (const timezone of moment.tz.names()) {\n\t\tconst timezoneName = timezone;\n\t\tconst timezoneId = timezone;\n\t\treturnData.push({\n\t\t\tname: timezoneName,\n\t\t\tvalue: timezoneId,\n\t\t});\n\t}\n\treturnData.unshift({\n\t\tname: 'Default',\n\t\tvalue: 'default',\n\t\tdescription: 'Timezone set in n8n',\n\t});\n\treturn returnData;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAmB;AAGnB,8BAKO;AAEP,eAAsB,wBAEa;AAClC,QAAM,aAAqC,CAAC;AAC5C,QAAM,aAAa,KAAK,wBAAwB,cAAc;AAAA,IAC7D,cAAc;AAAA,EACf,CAAC;AACD,QAAM,EAAE,WAAW,IAAI,MAAM,yCAAiB,KAAK,MAAM,OAAO,cAAc,UAAU,EAAE;AAC1F,aAAW,OAAO,OAAO,KAAK,UAAyB,GAAG;AAEzD,QACC,CAAC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD,EAAE,SAAS,WAAW,GAAG,EAAE,IAAc,GACxC;AACD,iBAAW,KAAK;AAAA,QACf,MAAM,GAAG,GAAG;AAAA,QACZ,OAAO,GAAG,GAAG,IAAI,WAAW,GAAG,EAAE,IAAI;AAAA,MACtC,CAAC;AAAA,IACF;AAAA,EACD;AACA,aAAW,KAAK,CAAC,GAAG,MAAM;AACzB,QAAI,EAAE,KAAK,kBAAkB,IAAI,EAAE,KAAK,kBAAkB,GAAG;AAC5D,aAAO;AAAA,IACR;AACA,QAAI,EAAE,KAAK,kBAAkB,IAAI,EAAE,KAAK,kBAAkB,GAAG;AAC5D,aAAO;AAAA,IACR;AACA,WAAO;AAAA,EACR,CAAC;AACD,SAAO;AACR;AAEA,eAAsB,sBAEa;AAClC,QAAM,aAAqC,CAAC;AAC5C,QAAM,aAAa,KAAK,wBAAwB,cAAc;AAAA,IAC7D,cAAc;AAAA,EACf,CAAC;AACD,QAAM,EAAE,WAAW,IAAI,MAAM,yCAAiB,KAAK,MAAM,OAAO,cAAc,UAAU,EAAE;AAC1F,aAAW,OAAO,OAAO,KAAK,UAAyB,GAAG;AACzD,eAAW,KAAK;AAAA,MACf,MAAM,GAAG,GAAG;AAAA,MACZ,OAAO,GAAG,GAAG,IAAI,WAAW,GAAG,EAAE,IAAI;AAAA,IACtC,CAAC;AAAA,EACF;AACA,aAAW,KAAK,CAAC,GAAG,MAAM;AACzB,QAAI,EAAE,KAAK,kBAAkB,IAAI,EAAE,KAAK,kBAAkB,GAAG;AAC5D,aAAO;AAAA,IACR;AACA,QAAI,EAAE,KAAK,kBAAkB,IAAI,EAAE,KAAK,kBAAkB,GAAG;AAC5D,aAAO;AAAA,IACR;AACA,WAAO;AAAA,EACR,CAAC;AACD,SAAO;AACR;AAEA,eAAsB,gBAA4E;AACjG,aAAO,8CAAqB;AAC7B;AAEA,eAAsB,0BAEa;AAClC,QAAM,CAAC,MAAM,IAAI,IAAK,KAAK,wBAAwB,MAAM,EAAa,MAAM,GAAG;AAC/E,QAAM,aAAa,KAAK,wBAAwB,cAAc;AAAA,IAC7D,cAAc;AAAA,EACf,CAAC;AACD,QAAM,WAAW,KAAK,wBAAwB,UAAU;AACxD,QAAM,YAAY,KAAK,wBAAwB,WAAW;AAC1D,QAAM,EAAE,WAAW,IAAI,MAAM,yCAAiB,KAAK,MAAM,OAAO,cAAc,UAAU,EAAE;AAC1F,MAAI,aAAa,gBAAgB;AAChC,QAAI,CAAC,gBAAgB,UAAU,QAAQ,EAAE,SAAS,IAAI,KAAK,cAAc,UAAU;AAClF,aAAO,WAAW,IAAI,EAAE,IAAI,EAAE,QAAQ,IAAI,CAAC,YAAyB;AAAA,QACnE,MAAM,OAAO;AAAA,QACb,OAAO,OAAO;AAAA,MACf,EAAE;AAAA,IACH,WACC,CAAC,gBAAgB,UAAU,QAAQ,EAAE,SAAS,IAAI,KAClD,CAAC,UAAU,QAAQ,EAAE,SAAS,SAAS,GACtC;AACD,aAAO,WAAW,IAAI,EAAE,IAAI,EAAE,QAAQ,IAAI,CAAC,YAAyB;AAAA,QACnE,MAAM,OAAO;AAAA,QACb,OAAO,OAAO;AAAA,MACf,EAAE;AAAA,IACH;AAAA,EACD;AACA,SAAO,WAAW,IAAI,EAAE,IAAI,EAAE,QAAQ,IAAI,CAAC,YAAyB;AAAA,IACnE,MAAM,OAAO;AAAA,IACb,OAAO,OAAO;AAAA,EACf,EAAE;AACH;AAEA,eAAsB,WAAuE;AAC5F,QAAM,aAAqC,CAAC;AAC5C,QAAM,QAAQ,MAAM,iDAAyB,KAAK,MAAM,WAAW,OAAO,QAAQ;AAClF,aAAW,QAAQ,OAAO;AACzB,QAAI,KAAK,SAAS,UAAU;AAC3B,iBAAW,KAAK;AAAA,QACf,MAAM,KAAK;AAAA,QACX,OAAO,KAAK;AAAA,MACb,CAAC;AAAA,IACF;AAAA,EACD;AACA,SAAO;AACR;AAEA,eAAsB,wBAEa;AAClC,QAAM,aAAqC,CAAC;AAC5C,QAAM,aAAS;AAAA,IACd,KAAK,wBAAwB,UAAU,EAAE,cAAc,KAAK,CAAC;AAAA,EAC9D;AACA,QAAM;AAAA,IACL,QAAQ,EAAE,aAAa,WAAW;AAAA,EACnC,IAAI,MAAM,yCAAiB,KAAK,MAAM,OAAO,UAAU,MAAM,EAAE;AAC/D,QAAM,EAAE,WAAW,IAAI,MAAM,yCAAiB,KAAK,MAAM,OAAO,cAAc,UAAU,EAAE;AAC1F,aAAW,OAAO,OAAO,KAAK,UAAyB,GAAG;AAEzD,QACC,CAAC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD,EAAE,SAAS,WAAW,GAAG,EAAE,IAAc,GACxC;AACD,iBAAW,KAAK;AAAA,QACf,MAAM,GAAG,GAAG;AAAA,QACZ,OAAO,GAAG,GAAG,IAAI,WAAW,GAAG,EAAE,IAAI;AAAA,MACtC,CAAC;AAAA,IACF;AAAA,EACD;AACA,aAAW,KAAK,CAAC,GAAG,MAAM;AACzB,QAAI,EAAE,KAAK,kBAAkB,IAAI,EAAE,KAAK,kBAAkB,GAAG;AAC5D,aAAO;AAAA,IACR;AACA,QAAI,EAAE,KAAK,kBAAkB,IAAI,EAAE,KAAK,kBAAkB,GAAG;AAC5D,aAAO;AAAA,IACR;AACA,WAAO;AAAA,EACR,CAAC;AACD,SAAO;AACR;AAEA,eAAsB,6BAEa;AAClC,QAAM,aAAS;AAAA,IACd,KAAK,wBAAwB,UAAU,EAAE,cAAc,KAAK,CAAC;AAAA,EAC9D;AACA,QAAM,CAAC,MAAM,IAAI,IAAK,KAAK,wBAAwB,MAAM,EAAa,MAAM,GAAG;AAC/E,QAAM;AAAA,IACL,QAAQ,EAAE,aAAa,WAAW;AAAA,EACnC,IAAI,MAAM,yCAAiB,KAAK,MAAM,OAAO,UAAU,MAAM,EAAE;AAC/D,QAAM,EAAE,WAAW,IAAI,MAAM,yCAAiB,KAAK,MAAM,OAAO,cAAc,UAAU,EAAE;AAC1F,SAAO,WAAW,IAAI,EAAE,IAAI,EAAE,QAAQ,IAAI,CAAC,YAAyB;AAAA,IACnE,MAAM,OAAO;AAAA,IACb,OAAO,OAAO;AAAA,EACf,EAAE;AACH;AAIA,eAAsB,eAA2E;AAChG,QAAM,aAAqC,CAAC;AAC5C,aAAW,YAAY,uBAAAA,QAAO,GAAG,MAAM,GAAG;AACzC,UAAM,eAAe;AACrB,UAAM,aAAa;AACnB,eAAW,KAAK;AAAA,MACf,MAAM;AAAA,MACN,OAAO;AAAA,IACR,CAAC;AAAA,EACF;AACA,aAAW,QAAQ;AAAA,IAClB,MAAM;AAAA,IACN,OAAO;AAAA,IACP,aAAa;AAAA,EACd,CAAC;AACD,SAAO;AACR;","names":["moment"]}