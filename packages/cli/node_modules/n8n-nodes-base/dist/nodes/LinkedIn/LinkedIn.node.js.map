{"version":3,"sources":["../../../nodes/LinkedIn/LinkedIn.node.ts"],"sourcesContent":["import type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes } from 'n8n-workflow';\n\nimport { linkedInApiRequest } from './GenericFunctions';\nimport { postFields, postOperations } from './PostDescription';\n\nexport class LinkedIn implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'LinkedIn',\n\t\tname: 'linkedIn',\n\t\ticon: 'file:linkedin.svg',\n\t\tgroup: ['input'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume LinkedIn API',\n\t\tdefaults: {\n\t\t\tname: 'LinkedIn',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'linkedInOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['standard'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'linkedInCommunityManagementOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['communityManagement'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Authentication',\n\t\t\t\tname: 'authentication',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Standard',\n\t\t\t\t\t\tvalue: 'standard',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Community Management',\n\t\t\t\t\t\tvalue: 'communityManagement',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'standard',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Post',\n\t\t\t\t\t\tvalue: 'post',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'post',\n\t\t\t},\n\t\t\t//POST\n\t\t\t...postOperations,\n\t\t\t...postFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get Person URN which has to be used with other LinkedIn API Requests\n\t\t\t// https://docs.microsoft.com/en-us/linkedin/consumer/integrations/self-serve/sign-in-with-linkedin\n\t\t\tasync getPersonUrn(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst authentication = this.getNodeParameter('authentication', 0);\n\t\t\t\tlet endpoint = '/v2/me';\n\t\t\t\tif (authentication === 'standard') {\n\t\t\t\t\tconst { legacy } = await this.getCredentials('linkedInOAuth2Api');\n\t\t\t\t\tif (!legacy) {\n\t\t\t\t\t\tendpoint = '/v2/userinfo';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst person = await linkedInApiRequest.call(this, 'GET', endpoint, {});\n\t\t\t\tconst firstName = person.localizedFirstName ?? person.given_name;\n\t\t\t\tconst lastName = person.localizedLastName ?? person.family_name;\n\t\t\t\tconst name = `${firstName} ${lastName}`;\n\t\t\t\tconst returnData: INodePropertyOptions[] = [\n\t\t\t\t\t{\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tvalue: person.id ?? person.sub,\n\t\t\t\t\t},\n\t\t\t\t];\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tlet responseData;\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\tlet body: any = {};\n\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'post') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tlet text = this.getNodeParameter('text', i) as string;\n\t\t\t\t\t\tconst shareMediaCategory = this.getNodeParameter('shareMediaCategory', i) as string;\n\t\t\t\t\t\tconst postAs = this.getNodeParameter('postAs', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\t// LinkedIn uses \"little text\" https://learn.microsoft.com/en-us/linkedin/marketing/community-management/shares/little-text-format?view=li-lms-2024-06\n\t\t\t\t\t\ttext = text.replace(/[\\(*\\)\\[\\]\\{\\}<>@|~_]/gm, (char) => '\\\\' + char);\n\n\t\t\t\t\t\tlet authorUrn = '';\n\t\t\t\t\t\tlet visibility = 'PUBLIC';\n\n\t\t\t\t\t\tif (postAs === 'person') {\n\t\t\t\t\t\t\tconst personUrn = this.getNodeParameter('person', i) as string;\n\t\t\t\t\t\t\t// Only if posting as a person can user decide if post visible by public or connections\n\t\t\t\t\t\t\tvisibility = (additionalFields.visibility as string) || 'PUBLIC';\n\t\t\t\t\t\t\tauthorUrn = `urn:li:person:${personUrn}`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst organizationUrn = this.getNodeParameter('organization', i) as string;\n\t\t\t\t\t\t\tauthorUrn = `urn:li:organization:${organizationUrn}`;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet description = '';\n\t\t\t\t\t\tlet title = '';\n\t\t\t\t\t\tlet originalUrl = '';\n\n\t\t\t\t\t\tbody = {\n\t\t\t\t\t\t\tauthor: authorUrn,\n\t\t\t\t\t\t\tlifecycleState: 'PUBLISHED',\n\t\t\t\t\t\t\tdistribution: {\n\t\t\t\t\t\t\t\tfeedDistribution: 'MAIN_FEED',\n\t\t\t\t\t\t\t\tthirdPartyDistributionChannels: [],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tvisibility,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (shareMediaCategory === 'IMAGE') {\n\t\t\t\t\t\t\tif (additionalFields.title) {\n\t\t\t\t\t\t\t\ttitle = additionalFields.title as string;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Send a REQUEST to prepare a register of a media image file\n\t\t\t\t\t\t\tconst registerRequest = {\n\t\t\t\t\t\t\t\tinitializeUploadRequest: {\n\t\t\t\t\t\t\t\t\towner: authorUrn,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tconst registerObject = await linkedInApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t\t'/images?action=initializeUpload',\n\t\t\t\t\t\t\t\tregisterRequest,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tconst binaryPropertyName = this.getNodeParameter('binaryPropertyName', i);\n\t\t\t\t\t\t\tconst imageMetadata = this.helpers.assertBinaryData(i, binaryPropertyName);\n\n\t\t\t\t\t\t\tconst buffer = await this.helpers.getBinaryDataBuffer(i, binaryPropertyName);\n\t\t\t\t\t\t\tconst { uploadUrl, image } = registerObject.value;\n\n\t\t\t\t\t\t\tconst headers = {};\n\t\t\t\t\t\t\tObject.assign(headers, { 'Content-Type': imageMetadata.mimeType });\n\n\t\t\t\t\t\t\tawait linkedInApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t\tuploadUrl as string,\n\t\t\t\t\t\t\t\tbuffer,\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\theaders,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tconst imageBody = {\n\t\t\t\t\t\t\t\tcontent: {\n\t\t\t\t\t\t\t\t\tmedia: {\n\t\t\t\t\t\t\t\t\t\ttitle,\n\t\t\t\t\t\t\t\t\t\tid: image,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcommentary: text,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tObject.assign(body, imageBody);\n\t\t\t\t\t\t} else if (shareMediaCategory === 'ARTICLE') {\n\t\t\t\t\t\t\tif (additionalFields.description) {\n\t\t\t\t\t\t\t\tdescription = additionalFields.description as string;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.title) {\n\t\t\t\t\t\t\t\ttitle = additionalFields.title as string;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (additionalFields.originalUrl) {\n\t\t\t\t\t\t\t\toriginalUrl = additionalFields.originalUrl as string;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst articleBody = {\n\t\t\t\t\t\t\t\tcontent: {\n\t\t\t\t\t\t\t\t\tarticle: {\n\t\t\t\t\t\t\t\t\t\ttitle,\n\t\t\t\t\t\t\t\t\t\tdescription,\n\t\t\t\t\t\t\t\t\t\tsource: originalUrl,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcommentary: text,\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tif (additionalFields.thumbnailBinaryPropertyName) {\n\t\t\t\t\t\t\t\tconst registerRequest = {\n\t\t\t\t\t\t\t\t\tinitializeUploadRequest: {\n\t\t\t\t\t\t\t\t\t\towner: authorUrn,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\tconst registerObject = await linkedInApiRequest.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t\t\t'/images?action=initializeUpload',\n\t\t\t\t\t\t\t\t\tregisterRequest,\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tconst binaryPropertyName = additionalFields.thumbnailBinaryPropertyName as string;\n\t\t\t\t\t\t\t\tconst imageMetadata = this.helpers.assertBinaryData(i, binaryPropertyName);\n\n\t\t\t\t\t\t\t\tconst buffer = await this.helpers.getBinaryDataBuffer(i, binaryPropertyName);\n\t\t\t\t\t\t\t\tconst { uploadUrl, image } = registerObject.value;\n\n\t\t\t\t\t\t\t\tconst headers = {};\n\t\t\t\t\t\t\t\tObject.assign(headers, { 'Content-Type': imageMetadata.mimeType });\n\n\t\t\t\t\t\t\t\tawait linkedInApiRequest.call(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t\t\tuploadUrl as string,\n\t\t\t\t\t\t\t\t\tbuffer,\n\t\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\t\theaders,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tObject.assign(articleBody.content.article, { thumbnail: image });\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tObject.assign(body, articleBody);\n\t\t\t\t\t\t\tif (description === '') {\n\t\t\t\t\t\t\t\tdelete body.description;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (title === '') {\n\t\t\t\t\t\t\t\tdelete body.title;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tObject.assign(body, {\n\t\t\t\t\t\t\t\tcommentary: text,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst endpoint = '/posts';\n\t\t\t\t\t\tresponseData = await linkedInApiRequest.call(this, 'POST', endpoint, body);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t);\n\t\t\t\treturnData.push(...executionData);\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":[]}