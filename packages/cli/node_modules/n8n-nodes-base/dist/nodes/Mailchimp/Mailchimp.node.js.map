{"version":3,"sources":["../../../nodes/Mailchimp/Mailchimp.node.ts"],"sourcesContent":["import moment from 'moment-timezone';\nimport type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes } from 'n8n-workflow';\n\nimport {\n\tcampaignFieldsMetadata,\n\tmailchimpApiRequest,\n\tmailchimpApiRequestAllItems,\n\tvalidateJSON,\n} from './GenericFunctions';\n\nconst Statuses = {\n\tsubscribe: 'subscribe',\n\tunsubscribed: 'unsubscribe',\n\tcleaned: 'cleaned',\n\tpending: 'pending',\n\ttransactional: 'transactional',\n} as const;\n\ntype Status = (typeof Statuses)[keyof typeof Statuses];\n\ninterface ILocation {\n\tlatitude?: number;\n\tlongitude?: number;\n}\n\ninterface ICreateMemberBody {\n\tlistId: string;\n\temail_address: string;\n\temail_type?: string;\n\tstatus?: Status;\n\tlanguage?: string;\n\tvip?: boolean;\n\tlocation?: ILocation;\n\tip_signup?: string;\n\ttimestamp_signup?: string;\n\tip_opt?: string;\n\ttimestamp_opt?: string;\n\ttags?: string[];\n\tmerge_fields?: IDataObject;\n\tinterests?: IDataObject;\n}\n\nexport class Mailchimp implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Mailchimp',\n\t\tname: 'mailchimp',\n\t\ticon: { light: 'file:mailchimp.svg', dark: 'file:mailchimp.dark.svg' },\n\t\tgroup: ['output'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume Mailchimp API',\n\t\tdefaults: {\n\t\t\tname: 'Mailchimp',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'mailchimpApi',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['apiKey'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'mailchimpOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['oAuth2'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Authentication',\n\t\t\t\tname: 'authentication',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'API Key',\n\t\t\t\t\t\tvalue: 'apiKey',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'OAuth2',\n\t\t\t\t\t\tvalue: 'oAuth2',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'apiKey',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Campaign',\n\t\t\t\t\t\tvalue: 'campaign',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'List Group',\n\t\t\t\t\t\tvalue: 'listGroup',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Member',\n\t\t\t\t\t\tvalue: 'member',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Member Tag',\n\t\t\t\t\t\tvalue: 'memberTag',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'member',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['member'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Create',\n\t\t\t\t\t\tvalue: 'create',\n\t\t\t\t\t\tdescription: 'Create a new member on list',\n\t\t\t\t\t\taction: 'Create a member',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Delete',\n\t\t\t\t\t\tvalue: 'delete',\n\t\t\t\t\t\tdescription: 'Delete a member on list',\n\t\t\t\t\t\taction: 'Delete a member',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get',\n\t\t\t\t\t\tvalue: 'get',\n\t\t\t\t\t\tdescription: 'Get a member on list',\n\t\t\t\t\t\taction: 'Get a member',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get Many',\n\t\t\t\t\t\tvalue: 'getAll',\n\t\t\t\t\t\tdescription: 'Get many members on a list',\n\t\t\t\t\t\taction: 'Get many members',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Update',\n\t\t\t\t\t\tvalue: 'update',\n\t\t\t\t\t\tdescription: 'Update a new member on list',\n\t\t\t\t\t\taction: 'Update a member',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'create',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['memberTag'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Create',\n\t\t\t\t\t\tvalue: 'create',\n\t\t\t\t\t\tdescription: 'Add tags from a list member',\n\t\t\t\t\t\taction: 'Create a member tag',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Delete',\n\t\t\t\t\t\tvalue: 'delete',\n\t\t\t\t\t\tdescription: 'Remove tags from a list member',\n\t\t\t\t\t\taction: 'Delete a member tag',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'create',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['listGroup'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get Many',\n\t\t\t\t\t\tvalue: 'getAll',\n\t\t\t\t\t\tdescription: 'Get many groups',\n\t\t\t\t\t\taction: 'Get many list groups',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'getAll',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['campaign'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Delete',\n\t\t\t\t\t\tvalue: 'delete',\n\t\t\t\t\t\tdescription: 'Delete a campaign',\n\t\t\t\t\t\taction: 'Delete a campaign',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get',\n\t\t\t\t\t\tvalue: 'get',\n\t\t\t\t\t\tdescription: 'Get a campaign',\n\t\t\t\t\t\taction: 'Get a campaign',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get Many',\n\t\t\t\t\t\tvalue: 'getAll',\n\t\t\t\t\t\tdescription: 'Get many campaigns',\n\t\t\t\t\t\taction: 'Get many campaigns',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Replicate',\n\t\t\t\t\t\tvalue: 'replicate',\n\t\t\t\t\t\tdescription: 'Replicate a campaign',\n\t\t\t\t\t\taction: 'Replicate a campaign',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Resend',\n\t\t\t\t\t\tvalue: 'resend',\n\t\t\t\t\t\tdescription: 'Creates a Resend to Non-Openers version of this campaign',\n\t\t\t\t\t\taction: 'Resend a campaign',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Send',\n\t\t\t\t\t\tvalue: 'send',\n\t\t\t\t\t\tdescription: 'Send a campaign',\n\t\t\t\t\t\taction: 'Send a campaign',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'getAll',\n\t\t\t},\n\t\t\t/* -------------------------------------------------------------------------- */\n\t\t\t/*                                 member:create                              */\n\t\t\t/* -------------------------------------------------------------------------- */\n\t\t\t{\n\t\t\t\tdisplayName: 'List Name or ID',\n\t\t\t\tname: 'list',\n\t\t\t\ttype: 'options',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getLists',\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['member'],\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\toptions: [],\n\t\t\t\trequired: true,\n\t\t\t\tdescription:\n\t\t\t\t\t'List of lists. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Email',\n\t\t\t\tname: 'email',\n\t\t\t\ttype: 'string',\n\t\t\t\tplaceholder: 'name@email.com',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['member'],\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\tdescription: 'Email address for a subscriber',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Status',\n\t\t\t\tname: 'status',\n\t\t\t\ttype: 'options',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['member'],\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Cleaned',\n\t\t\t\t\t\tvalue: 'cleaned',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Pending',\n\t\t\t\t\t\tvalue: 'pending',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Subscribed',\n\t\t\t\t\t\tvalue: 'subscribed',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Transactional',\n\t\t\t\t\t\tvalue: 'transactional',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Unsubscribed',\n\t\t\t\t\t\tvalue: 'unsubscribed',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: '',\n\t\t\t\tdescription: \"Subscriber's current status\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'JSON Parameters',\n\t\t\t\tname: 'jsonParameters',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['member'],\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Options',\n\t\t\t\tname: 'options',\n\t\t\t\ttype: 'collection',\n\t\t\t\tplaceholder: 'Add option',\n\t\t\t\tdefault: {},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['member'],\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Email Type',\n\t\t\t\t\t\tname: 'emailType',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'HTML',\n\t\t\t\t\t\t\t\tvalue: 'html',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Text',\n\t\t\t\t\t\t\t\tvalue: 'text',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Type of email this member asked to get',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Language',\n\t\t\t\t\t\tname: 'language',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: \"If set/detected, the subscriber's language\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Opt-in IP',\n\t\t\t\t\t\tname: 'ipOptIn',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'The IP address the subscriber used to confirm their opt-in status',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Signup IP',\n\t\t\t\t\t\tname: 'ipSignup',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'IP address the subscriber signed up from',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Signup Timestamp',\n\t\t\t\t\t\tname: 'timestampSignup',\n\t\t\t\t\t\ttype: 'dateTime',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'The date and time the subscriber signed up for the list in ISO 8601 format',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Tags',\n\t\t\t\t\t\tname: 'tags',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'The tags that are associated with a member separeted by ,',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Vip',\n\t\t\t\t\t\tname: 'vip',\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-description-boolean-without-whether\n\t\t\t\t\t\tdescription: 'Vip status for subscribers',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Opt-in Timestamp',\n\t\t\t\t\t\tname: 'timestampOpt',\n\t\t\t\t\t\ttype: 'dateTime',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'The date and time the subscribe confirmed their opt-in status in ISO 8601 format',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Location',\n\t\t\t\tname: 'locationFieldsUi',\n\t\t\t\ttype: 'fixedCollection',\n\t\t\t\tplaceholder: 'Add Location',\n\t\t\t\tdefault: {},\n\t\t\t\tdescription: 'Subscriber location information.n',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['member'],\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t\tjsonParameters: [false],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'locationFieldsValues',\n\t\t\t\t\t\tdisplayName: 'Location',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Latitude',\n\t\t\t\t\t\t\t\tname: 'latitude',\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\tdescription: 'The location latitude',\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Longitude',\n\t\t\t\t\t\t\t\tname: 'longitude',\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\tdescription: 'The location longitude',\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Merge Fields',\n\t\t\t\tname: 'mergeFieldsUi',\n\t\t\t\tplaceholder: 'Add Merge Fields',\n\t\t\t\ttype: 'fixedCollection',\n\t\t\t\tdefault: {},\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tmultipleValues: true,\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['member'],\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t\tjsonParameters: [false],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'An individual merge var and value for a member',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'mergeFieldsValues',\n\t\t\t\t\t\tdisplayName: 'Field',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tmultipleValueButtonText: 'Add Field',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Field Name or ID',\n\t\t\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\t\t\tloadOptionsMethod: 'getMergeFields',\n\t\t\t\t\t\t\t\t\tloadOptionsDependsOn: ['list'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t'Merge Field name. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Field Value',\n\t\t\t\t\t\t\t\tname: 'value',\n\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\tdescription: 'Merge field value',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Merge Fields',\n\t\t\t\tname: 'mergeFieldsJson',\n\t\t\t\ttype: 'json',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\talwaysOpenEditWindow: true,\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['member'],\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t\tjsonParameters: [true],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Location',\n\t\t\t\tname: 'locationJson',\n\t\t\t\ttype: 'json',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\talwaysOpenEditWindow: true,\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['member'],\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t\tjsonParameters: [true],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Interest Groups',\n\t\t\t\tname: 'groupsUi',\n\t\t\t\tplaceholder: 'Add Interest Group',\n\t\t\t\ttype: 'fixedCollection',\n\t\t\t\tdefault: {},\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tmultipleValues: true,\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['member'],\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t\tjsonParameters: [false],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'groupsValues',\n\t\t\t\t\t\tdisplayName: 'Group',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tmultipleValueButtonText: 'Add Interest Group',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Category Name or ID',\n\t\t\t\t\t\t\t\tname: 'categoryId',\n\t\t\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t'Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>',\n\t\t\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\t\t\tloadOptionsMethod: 'getGroupCategories',\n\t\t\t\t\t\t\t\t\tloadOptionsDependsOn: ['list'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Category Field ID',\n\t\t\t\t\t\t\t\tname: 'categoryFieldId',\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Value',\n\t\t\t\t\t\t\t\tname: 'value',\n\t\t\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Interest Groups',\n\t\t\t\tname: 'groupJson',\n\t\t\t\ttype: 'json',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\talwaysOpenEditWindow: true,\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['member'],\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t\tjsonParameters: [true],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t/* -------------------------------------------------------------------------- */\n\t\t\t/*                                 member:delete                              */\n\t\t\t/* -------------------------------------------------------------------------- */\n\t\t\t{\n\t\t\t\tdisplayName: 'List Name or ID',\n\t\t\t\tname: 'list',\n\t\t\t\ttype: 'options',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getLists',\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['member'],\n\t\t\t\t\t\toperation: ['delete'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\toptions: [],\n\t\t\t\trequired: true,\n\t\t\t\tdescription:\n\t\t\t\t\t'List of lists. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Email',\n\t\t\t\tname: 'email',\n\t\t\t\ttype: 'string',\n\t\t\t\tplaceholder: 'name@email.com',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['member'],\n\t\t\t\t\t\toperation: ['delete'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdescription: \"Member's email\",\n\t\t\t},\n\t\t\t/* -------------------------------------------------------------------------- */\n\t\t\t/*                                 member:get                                 */\n\t\t\t/* -------------------------------------------------------------------------- */\n\t\t\t{\n\t\t\t\tdisplayName: 'List Name or ID',\n\t\t\t\tname: 'list',\n\t\t\t\ttype: 'options',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getLists',\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['member'],\n\t\t\t\t\t\toperation: ['get'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\toptions: [],\n\t\t\t\trequired: true,\n\t\t\t\tdescription:\n\t\t\t\t\t'List of lists. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Email',\n\t\t\t\tname: 'email',\n\t\t\t\ttype: 'string',\n\t\t\t\tplaceholder: 'name@email.com',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['member'],\n\t\t\t\t\t\toperation: ['get'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdescription: \"Member's email\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Options',\n\t\t\t\tname: 'options',\n\t\t\t\ttype: 'collection',\n\t\t\t\tplaceholder: 'Add option',\n\t\t\t\tdefault: {},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['member'],\n\t\t\t\t\t\toperation: ['get'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Fields',\n\t\t\t\t\t\tname: 'fields',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'A comma-separated list of fields to return',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Exclude Fields',\n\t\t\t\t\t\tname: 'excludeFields',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'A comma-separated list of fields to exclude',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t/* -------------------------------------------------------------------------- */\n\t\t\t/*                                 member:getAll                              */\n\t\t\t/* -------------------------------------------------------------------------- */\n\t\t\t{\n\t\t\t\tdisplayName: 'List Name or ID',\n\t\t\t\tname: 'list',\n\t\t\t\ttype: 'options',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getLists',\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['member'],\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\toptions: [],\n\t\t\t\trequired: true,\n\t\t\t\tdescription:\n\t\t\t\t\t'List of lists. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Return All',\n\t\t\t\tname: 'returnAll',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['member'],\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: 'Whether to return all results or only up to a given limit',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Limit',\n\t\t\t\tname: 'limit',\n\t\t\t\ttype: 'number',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['member'],\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t\treturnAll: [false],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tminValue: 1,\n\t\t\t\t\tmaxValue: 1000,\n\t\t\t\t},\n\t\t\t\tdefault: 500,\n\t\t\t\tdescription: 'Max number of results to return',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Options',\n\t\t\t\tname: 'options',\n\t\t\t\ttype: 'collection',\n\t\t\t\tplaceholder: 'Add option',\n\t\t\t\tdefault: {},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['member'],\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Before Last Changed',\n\t\t\t\t\t\tname: 'beforeLastChanged',\n\t\t\t\t\t\ttype: 'dateTime',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Restrict results to subscribers whose information changed before the set timeframe',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Before Timestamp Opt',\n\t\t\t\t\t\tname: 'beforeTimestampOpt',\n\t\t\t\t\t\ttype: 'dateTime',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Restrict results to subscribers who opted-in before the set timeframe',\n\t\t\t\t\t},\n\t\t\t\t\t// {\n\t\t\t\t\t// \tdisplayName: 'Fields',\n\t\t\t\t\t// \tname: 'fields',\n\t\t\t\t\t// \ttype: 'string',\n\t\t\t\t\t// \tdefault: '',\n\t\t\t\t\t// \tdescription: 'A comma-separated list of fields to return.',\n\t\t\t\t\t// },\n\t\t\t\t\t// {\n\t\t\t\t\t// \tdisplayName: 'Exclude Fields',\n\t\t\t\t\t// \tname: 'excludeFields',\n\t\t\t\t\t// \ttype: 'string',\n\t\t\t\t\t// \tdefault: '',\n\t\t\t\t\t// \tdescription: 'A comma-separated list of fields to exclude.',\n\t\t\t\t\t// },\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Email Type',\n\t\t\t\t\t\tname: 'emailType',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'HTML',\n\t\t\t\t\t\t\t\tvalue: 'html',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Text',\n\t\t\t\t\t\t\t\tvalue: 'text',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Type of email this member asked to get',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Status',\n\t\t\t\t\t\tname: 'status',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Cleaned',\n\t\t\t\t\t\t\t\tvalue: 'cleaned',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Pending',\n\t\t\t\t\t\t\t\tvalue: 'pending',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Subscribed',\n\t\t\t\t\t\t\t\tvalue: 'subscribed',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Transactional',\n\t\t\t\t\t\t\t\tvalue: 'transactional',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Unsubscribed',\n\t\t\t\t\t\t\t\tvalue: 'unsubscribed',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: \"Subscriber's current status\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Since Last Changed',\n\t\t\t\t\t\tname: 'sinceLastChanged',\n\t\t\t\t\t\ttype: 'dateTime',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Restrict results to subscribers whose information changed after the set timeframe',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t/* -------------------------------------------------------------------------- */\n\t\t\t/*                                 member:update                              */\n\t\t\t/* -------------------------------------------------------------------------- */\n\t\t\t{\n\t\t\t\tdisplayName: 'List Name or ID',\n\t\t\t\tname: 'list',\n\t\t\t\ttype: 'options',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getLists',\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['member'],\n\t\t\t\t\t\toperation: ['update'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\toptions: [],\n\t\t\t\trequired: true,\n\t\t\t\tdescription:\n\t\t\t\t\t'List of lists. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Email',\n\t\t\t\tname: 'email',\n\t\t\t\ttype: 'string',\n\t\t\t\tplaceholder: 'name@email.com',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['member'],\n\t\t\t\t\t\toperation: ['update'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\tdescription: 'Email address of the subscriber',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'JSON Parameters',\n\t\t\t\tname: 'jsonParameters',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['member'],\n\t\t\t\t\t\toperation: ['update'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Update Fields',\n\t\t\t\tname: 'updateFields',\n\t\t\t\ttype: 'collection',\n\t\t\t\tplaceholder: 'Add Field',\n\t\t\t\tdefault: {},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['member'],\n\t\t\t\t\t\toperation: ['update'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Email Type',\n\t\t\t\t\t\tname: 'emailType',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'HTML',\n\t\t\t\t\t\t\t\tvalue: 'html',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Text',\n\t\t\t\t\t\t\t\tvalue: 'text',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Type of email this member asked to get',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Interest Groups',\n\t\t\t\t\t\tname: 'groupsUi',\n\t\t\t\t\t\tplaceholder: 'Add Interest Group',\n\t\t\t\t\t\ttype: 'fixedCollection',\n\t\t\t\t\t\tdefault: {},\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tmultipleValues: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\t\t'/resource': ['member'],\n\t\t\t\t\t\t\t\t'/operation': ['update'],\n\t\t\t\t\t\t\t\t'/jsonParameters': [false],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'groupsValues',\n\t\t\t\t\t\t\t\tdisplayName: 'Group',\n\t\t\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\t\t\tmultipleValueButtonText: 'Add Interest Group',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tdisplayName: 'Category Name or ID',\n\t\t\t\t\t\t\t\t\t\tname: 'categoryId',\n\t\t\t\t\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t\t\t'Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>',\n\t\t\t\t\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\t\t\t\t\tloadOptionsMethod: 'getGroupCategories',\n\t\t\t\t\t\t\t\t\t\t\tloadOptionsDependsOn: ['list'],\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tdisplayName: 'Category Field ID',\n\t\t\t\t\t\t\t\t\t\tname: 'categoryFieldId',\n\t\t\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tdisplayName: 'Value',\n\t\t\t\t\t\t\t\t\t\tname: 'value',\n\t\t\t\t\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Language',\n\t\t\t\t\t\tname: 'language',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: \"If set/detected, the subscriber's language\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Merge Fields',\n\t\t\t\t\t\tname: 'mergeFieldsUi',\n\t\t\t\t\t\tplaceholder: 'Add Merge Fields',\n\t\t\t\t\t\ttype: 'fixedCollection',\n\t\t\t\t\t\tdefault: {},\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tmultipleValues: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\t\t'/resource': ['member'],\n\t\t\t\t\t\t\t\t'/operation': ['update'],\n\t\t\t\t\t\t\t\t'/jsonParameters': [false],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdescription: 'An individual merge var and value for a member',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'mergeFieldsValues',\n\t\t\t\t\t\t\t\tdisplayName: 'Field',\n\t\t\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\t\t\tmultipleValueButtonText: 'Add Field',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tdisplayName: 'Field Name or ID',\n\t\t\t\t\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\t\t\t\t\tloadOptionsMethod: 'getMergeFields',\n\t\t\t\t\t\t\t\t\t\t\tloadOptionsDependsOn: ['list'],\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t\t\t'Merge Field name. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tdisplayName: 'Field Value',\n\t\t\t\t\t\t\t\t\t\tname: 'value',\n\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\t\t\tdescription: 'Merge field value',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Opt-in IP',\n\t\t\t\t\t\tname: 'ipOptIn',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'The IP address the subscriber used to confirm their opt-in status',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Signup IP',\n\t\t\t\t\t\tname: 'ipSignup',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'IP address the subscriber signed up from',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Signup Timestamp',\n\t\t\t\t\t\tname: 'timestampSignup',\n\t\t\t\t\t\ttype: 'dateTime',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'The date and time the subscriber signed up for the list in ISO 8601 format',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Skip Merge Validation',\n\t\t\t\t\t\tname: 'skipMergeValidation',\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Whether member data will be accepted without merge field values, even if the merge field is usually required',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Status',\n\t\t\t\t\t\tname: 'status',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Cleaned',\n\t\t\t\t\t\t\t\tvalue: 'cleaned',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Pending',\n\t\t\t\t\t\t\t\tvalue: 'pending',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Subscribed',\n\t\t\t\t\t\t\t\tvalue: 'subscribed',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Transactional',\n\t\t\t\t\t\t\t\tvalue: 'transactional',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Unsubscribed',\n\t\t\t\t\t\t\t\tvalue: 'unsubscribed',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: \"Subscriber's current status\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Vip',\n\t\t\t\t\t\tname: 'vip',\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\t// eslint-disable-next-line n8n-nodes-base/node-param-description-boolean-without-whether\n\t\t\t\t\t\tdescription: 'Vip status for subscribers',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Location',\n\t\t\t\t\t\tname: 'locationFieldsUi',\n\t\t\t\t\t\ttype: 'fixedCollection',\n\t\t\t\t\t\tplaceholder: 'Add Location',\n\t\t\t\t\t\tdefault: {},\n\t\t\t\t\t\tdescription: 'Subscriber location information.n',\n\t\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\t\t'/resource': ['member'],\n\t\t\t\t\t\t\t\t'/operation': ['update'],\n\t\t\t\t\t\t\t\t'/jsonParameters': [false],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'locationFieldsValues',\n\t\t\t\t\t\t\t\tdisplayName: 'Location',\n\t\t\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tdisplayName: 'Latitude',\n\t\t\t\t\t\t\t\t\t\tname: 'latitude',\n\t\t\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\tdescription: 'The location latitude',\n\t\t\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tdisplayName: 'Longitude',\n\t\t\t\t\t\t\t\t\t\tname: 'longitude',\n\t\t\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\tdescription: 'The location longitude',\n\t\t\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Opt-in Timestamp',\n\t\t\t\t\t\tname: 'timestampOpt',\n\t\t\t\t\t\ttype: 'dateTime',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'The date and time the subscribe confirmed their opt-in status in ISO 8601 format',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Merge Fields',\n\t\t\t\tname: 'mergeFieldsJson',\n\t\t\t\ttype: 'json',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\talwaysOpenEditWindow: true,\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['member'],\n\t\t\t\t\t\toperation: ['update'],\n\t\t\t\t\t\tjsonParameters: [true],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Location',\n\t\t\t\tname: 'locationJson',\n\t\t\t\ttype: 'json',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\talwaysOpenEditWindow: true,\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['member'],\n\t\t\t\t\t\toperation: ['update'],\n\t\t\t\t\t\tjsonParameters: [true],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Interest Groups',\n\t\t\t\tname: 'groupJson',\n\t\t\t\ttype: 'json',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\talwaysOpenEditWindow: true,\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['member'],\n\t\t\t\t\t\toperation: ['update'],\n\t\t\t\t\t\tjsonParameters: [true],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t/* -------------------------------------------------------------------------- */\n\t\t\t/*                                 memberTag:create                           */\n\t\t\t/* -------------------------------------------------------------------------- */\n\t\t\t{\n\t\t\t\tdisplayName: 'List Name or ID',\n\t\t\t\tname: 'list',\n\t\t\t\ttype: 'options',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getLists',\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['memberTag'],\n\t\t\t\t\t\toperation: ['create', 'delete'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\toptions: [],\n\t\t\t\trequired: true,\n\t\t\t\tdescription:\n\t\t\t\t\t'List of lists. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Email',\n\t\t\t\tname: 'email',\n\t\t\t\ttype: 'string',\n\t\t\t\tplaceholder: 'name@email.com',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['memberTag'],\n\t\t\t\t\t\toperation: ['create', 'delete'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\tdescription: 'Email address of the subscriber',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Tags',\n\t\t\t\tname: 'tags',\n\t\t\t\ttype: 'string',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tmultipleValues: true,\n\t\t\t\t\tmultipleValueButtonText: 'Add Tag',\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['memberTag'],\n\t\t\t\t\t\toperation: ['create', 'delete'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: [],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Options',\n\t\t\t\tname: 'options',\n\t\t\t\ttype: 'collection',\n\t\t\t\tplaceholder: 'Add option',\n\t\t\t\tdefault: {},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['memberTag'],\n\t\t\t\t\t\toperation: ['create', 'delete'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Is Syncing',\n\t\t\t\t\t\tname: 'isSyncing',\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\tdescription: 'Whether automations based on the tags in the request will not fire',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t/* -------------------------------------------------------------------------- */\n\t\t\t/*                                 member:getAll                              */\n\t\t\t/* -------------------------------------------------------------------------- */\n\t\t\t{\n\t\t\t\tdisplayName: 'List Name or ID',\n\t\t\t\tname: 'list',\n\t\t\t\ttype: 'options',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getLists',\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['listGroup'],\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\toptions: [],\n\t\t\t\trequired: true,\n\t\t\t\tdescription:\n\t\t\t\t\t'List of lists. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Group Category Name or ID',\n\t\t\t\tname: 'groupCategory',\n\t\t\t\ttype: 'options',\n\t\t\t\tdescription:\n\t\t\t\t\t'Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getGroupCategories',\n\t\t\t\t\tloadOptionsDependsOn: ['list'],\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['listGroup'],\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\toptions: [],\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Return All',\n\t\t\t\tname: 'returnAll',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['listGroup'],\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: 'Whether to return all results or only up to a given limit',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Limit',\n\t\t\t\tname: 'limit',\n\t\t\t\ttype: 'number',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['listGroup'],\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t\treturnAll: [false],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tminValue: 1,\n\t\t\t\t\tmaxValue: 1000,\n\t\t\t\t},\n\t\t\t\tdefault: 500,\n\t\t\t\tdescription: 'Max number of results to return',\n\t\t\t},\n\t\t\t/* -------------------------------------------------------------------------- */\n\t\t\t/*                                 campaign:getAll                            */\n\t\t\t/* -------------------------------------------------------------------------- */\n\t\t\t{\n\t\t\t\tdisplayName: 'Return All',\n\t\t\t\tname: 'returnAll',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['campaign'],\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: 'Whether to return all results or only up to a given limit',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Limit',\n\t\t\t\tname: 'limit',\n\t\t\t\ttype: 'number',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['campaign'],\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t\treturnAll: [false],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tminValue: 1,\n\t\t\t\t\tmaxValue: 1000,\n\t\t\t\t},\n\t\t\t\tdefault: 10,\n\t\t\t\tdescription: 'Max number of results to return',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Options',\n\t\t\t\tname: 'options',\n\t\t\t\ttype: 'collection',\n\t\t\t\tplaceholder: 'Add option',\n\t\t\t\tdefault: {},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['campaign'],\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Before Create Time',\n\t\t\t\t\t\tname: 'beforeCreateTime',\n\t\t\t\t\t\ttype: 'dateTime',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Restrict the response to campaigns created before the set time',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Before Send Time',\n\t\t\t\t\t\tname: 'beforeSendTime',\n\t\t\t\t\t\ttype: 'dateTime',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Restrict the response to campaigns sent before the set time',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Exclude Field Names or IDs',\n\t\t\t\t\t\tname: 'excludeFields',\n\t\t\t\t\t\ttype: 'multiOptions',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tloadOptionsMethod: 'getCampaignsFields',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefault: [],\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'A comma-separated list of fields to exclude. Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Field Names or IDs',\n\t\t\t\t\t\tname: 'fields',\n\t\t\t\t\t\ttype: 'multiOptions',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tloadOptionsMethod: 'getCampaignsFields',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefault: [\n\t\t\t\t\t\t\t'campaigns.id',\n\t\t\t\t\t\t\t'campaigns.status',\n\t\t\t\t\t\t\t'campaigns.tracking',\n\t\t\t\t\t\t\t'campaigns.settings.from_name',\n\t\t\t\t\t\t\t'campaigns.settings.reply_to',\n\t\t\t\t\t\t\t'campaigns.settings.title',\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'A comma-separated list of fields to return. Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'List Name or ID',\n\t\t\t\t\t\tname: 'listId',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tloadOptionsMethod: 'getLists',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'List of lists. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Since Create Time',\n\t\t\t\t\t\tname: 'sinceCreateTime',\n\t\t\t\t\t\ttype: 'dateTime',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Restrict the response to campaigns created after the set time',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Since Send Time',\n\t\t\t\t\t\tname: 'sinceSendTime',\n\t\t\t\t\t\ttype: 'dateTime',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Restrict the response to campaigns sent after the set time',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Sort Direction',\n\t\t\t\t\t\tname: 'sortDirection',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'ASC',\n\t\t\t\t\t\t\t\tvalue: 'ASC',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'DESC',\n\t\t\t\t\t\t\t\tvalue: 'DESC',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Determines the order direction for sorted results',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Sort Field',\n\t\t\t\t\t\tname: 'sortField',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Create Time',\n\t\t\t\t\t\t\t\tvalue: 'create_time',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Send Time',\n\t\t\t\t\t\t\t\tvalue: 'send_time',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Returns files sorted by the specified field',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Status',\n\t\t\t\t\t\tname: 'status',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Save',\n\t\t\t\t\t\t\t\tvalue: 'save',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Sending',\n\t\t\t\t\t\t\t\tvalue: 'sending',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Sent',\n\t\t\t\t\t\t\t\tvalue: 'sent',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Schedule',\n\t\t\t\t\t\t\t\tvalue: 'schedule',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'The status of the campaign',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t/* -------------------------------------------------------------------------- */\n\t\t\t/*                                 campaign:send                              */\n\t\t\t/* -------------------------------------------------------------------------- */\n\t\t\t{\n\t\t\t\tdisplayName: 'Campaign ID',\n\t\t\t\tname: 'campaignId',\n\t\t\t\ttype: 'string',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['campaign'],\n\t\t\t\t\t\toperation: ['send', 'get', 'delete', 'replicate', 'resend'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\trequired: true,\n\t\t\t\tdefault: '',\n\t\t\t\tdescription: 'List of Campaigns',\n\t\t\t\toptions: [],\n\t\t\t},\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get all the available lists to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getLists(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst lists = await mailchimpApiRequestAllItems.call(this, '/lists', 'GET', 'lists');\n\t\t\t\tfor (const list of lists) {\n\t\t\t\t\tconst listName = list.name;\n\t\t\t\t\tconst listId = list.id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: listName,\n\t\t\t\t\t\tvalue: listId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\n\t\t\t// Get all the available merge fields to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getMergeFields(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst listId = this.getCurrentNodeParameter('list');\n\t\t\t\tconst { merge_fields } = await mailchimpApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t`/lists/${listId}/merge-fields`,\n\t\t\t\t\t'GET',\n\t\t\t\t);\n\t\t\t\tfor (const mergeField of merge_fields) {\n\t\t\t\t\tconst mergeFieldName = mergeField.name;\n\t\t\t\t\tconst mergeFieldId = mergeField.tag;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: mergeFieldName,\n\t\t\t\t\t\tvalue: mergeFieldId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\n\t\t\t// Get all the interest fields to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getGroupCategories(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst listId = this.getCurrentNodeParameter('list');\n\t\t\t\tconst { categories } = await mailchimpApiRequest.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t`/lists/${listId}/interest-categories`,\n\t\t\t\t\t'GET',\n\t\t\t\t);\n\t\t\t\tfor (const category of categories) {\n\t\t\t\t\tconst categoryName = category.title;\n\t\t\t\t\tconst categoryId = category.id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: categoryName,\n\t\t\t\t\t\tvalue: categoryId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\n\t\t\t// Get all the available campaigns to display them to users so that they can select them easily\n\t\t\tasync getCampaigns(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst campaigns = await mailchimpApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'/campaigns',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'campaigns',\n\t\t\t\t);\n\t\t\t\tfor (const campaign of campaigns) {\n\t\t\t\t\tconst campaignName = campaign.settings.title;\n\t\t\t\t\tconst campaignId = campaign.id;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: campaignName,\n\t\t\t\t\t\tvalue: campaignId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\n\t\t\t// Get all the available fields to display them to users so that they can select them easily\n\t\t\tasync getCampaignsFields(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tfor (const campaignFields of campaignFieldsMetadata) {\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: campaignFields,\n\t\t\t\t\t\tvalue: campaignFields,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst length = items.length;\n\t\tlet responseData;\n\t\tconst qs: IDataObject = {};\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'listGroup') {\n\t\t\t\t\t//https://mailchimp.com/developer/reference/lists/interest-categories/#get_/lists/-list_id-/interest-categories/-interest_category_id-\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst listId = this.getNodeParameter('list', i) as string;\n\t\t\t\t\t\tconst categoryId = this.getNodeParameter('groupCategory', i) as string;\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await mailchimpApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t`/lists/${listId}/interest-categories/${categoryId}/interests`,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'interests',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.count = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await mailchimpApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t`/lists/${listId}/interest-categories/${categoryId}/interests`,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.interests;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'member') {\n\t\t\t\t\t//https://mailchimp.com/developer/reference/lists/list-members/#post_/lists/-list_id-/members\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst listId = this.getNodeParameter('list', i) as string;\n\t\t\t\t\t\tconst email = this.getNodeParameter('email', i) as string;\n\t\t\t\t\t\tconst status = this.getNodeParameter('status', i) as Status;\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tconst jsonActive = this.getNodeParameter('jsonParameters', i);\n\n\t\t\t\t\t\tconst body: ICreateMemberBody = {\n\t\t\t\t\t\t\tlistId,\n\t\t\t\t\t\t\temail_address: email,\n\t\t\t\t\t\t\tstatus,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (options.emailType) {\n\t\t\t\t\t\t\tbody.email_type = options.emailType as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.language) {\n\t\t\t\t\t\t\tbody.language = options.language as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.vip) {\n\t\t\t\t\t\t\tbody.vip = options.vip as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.ipSignup) {\n\t\t\t\t\t\t\tbody.ip_signup = options.ipSignup as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.ipOptIn) {\n\t\t\t\t\t\t\tbody.ip_opt = options.ipOptIn as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.timestampOpt) {\n\t\t\t\t\t\t\tbody.timestamp_opt = moment(options.timestampOpt as string).format(\n\t\t\t\t\t\t\t\t'YYYY-MM-DD HH:MM:SS',\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.timestampSignup) {\n\t\t\t\t\t\t\tbody.timestamp_signup = moment(options.timestampSignup as string).format(\n\t\t\t\t\t\t\t\t'YYYY-MM-DD HH:MM:SS',\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.tags) {\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tbody.tags = options.tags.split(',') as string[];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!jsonActive) {\n\t\t\t\t\t\t\tconst locationValues = (this.getNodeParameter('locationFieldsUi', i) as IDataObject)\n\t\t\t\t\t\t\t\t.locationFieldsValues as IDataObject;\n\t\t\t\t\t\t\tif (locationValues) {\n\t\t\t\t\t\t\t\tconst location: ILocation = {};\n\t\t\t\t\t\t\t\tfor (const key of Object.keys(locationValues)) {\n\t\t\t\t\t\t\t\t\tif (key === 'latitude') {\n\t\t\t\t\t\t\t\t\t\tlocation.latitude = parseFloat(locationValues[key] as string);\n\t\t\t\t\t\t\t\t\t} else if (key === 'longitude') {\n\t\t\t\t\t\t\t\t\t\tlocation.longitude = parseFloat(locationValues[key] as string);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbody.location = location;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst mergeFieldsValues = (this.getNodeParameter('mergeFieldsUi', i) as IDataObject)\n\t\t\t\t\t\t\t\t.mergeFieldsValues as IDataObject[];\n\t\t\t\t\t\t\tif (mergeFieldsValues) {\n\t\t\t\t\t\t\t\tconst mergeFields = {};\n\t\t\t\t\t\t\t\tfor (let index = 0; index < mergeFieldsValues.length; index++) {\n\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\tmergeFields[mergeFieldsValues[index].name] = mergeFieldsValues[index].value;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbody.merge_fields = mergeFields;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst groupsValues = (this.getNodeParameter('groupsUi', i) as IDataObject)\n\t\t\t\t\t\t\t\t.groupsValues as IDataObject[];\n\t\t\t\t\t\t\tif (groupsValues) {\n\t\t\t\t\t\t\t\tconst groups = {};\n\t\t\t\t\t\t\t\tfor (let index = 0; index < groupsValues.length; index++) {\n\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\tgroups[groupsValues[index].categoryFieldId] = groupsValues[index].value;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbody.interests = groups;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst locationJson = validateJSON(this.getNodeParameter('locationJson', i) as string);\n\t\t\t\t\t\t\tconst mergeFieldsJson = validateJSON(\n\t\t\t\t\t\t\t\tthis.getNodeParameter('mergeFieldsJson', i) as string,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst groupJson = validateJSON(this.getNodeParameter('groupJson', i) as string);\n\t\t\t\t\t\t\tif (locationJson) {\n\t\t\t\t\t\t\t\tbody.location = locationJson;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (mergeFieldsJson) {\n\t\t\t\t\t\t\t\tbody.merge_fields = mergeFieldsJson;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (groupJson) {\n\t\t\t\t\t\t\t\tbody.interests = groupJson;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await mailchimpApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t`/lists/${listId}/members`,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://mailchimp.com/developer/reference/lists/list-members/\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst listId = this.getNodeParameter('list', i) as string;\n\t\t\t\t\t\tconst email = this.getNodeParameter('email', i) as string;\n\n\t\t\t\t\t\tresponseData = await mailchimpApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t`/lists/${listId}/members/${email}/actions/delete-permanent`,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t\t//https://mailchimp.com/developer/reference/lists/list-members/#get_/lists/-list_id-/members/-subscriber_hash-\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst listId = this.getNodeParameter('list', i) as string;\n\t\t\t\t\t\tconst email = this.getNodeParameter('email', i) as string;\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\n\t\t\t\t\t\tif (options.fields) {\n\t\t\t\t\t\t\tqs.fields = options.fields as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (options.excludeFields) {\n\t\t\t\t\t\t\tqs.exclude_fields = options.excludeFields as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await mailchimpApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t`/lists/${listId}/members/${email}`,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://mailchimp.com/developer/reference/lists/list-members/#get_/lists/-list_id-/members\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst listId = this.getNodeParameter('list', i) as string;\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\n\t\t\t\t\t\tif (options.beforeLastChanged) {\n\t\t\t\t\t\t\tqs.before_last_changed = options.beforeLastChanged as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.beforeTimestampOpt) {\n\t\t\t\t\t\t\tqs.before_timestamp_opt = options.beforeTimestampOpt as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// TODO\n\t\t\t\t\t\t//figure why for some reason when either fields or exclude_fields is set the endpoint returns nothing\n\t\t\t\t\t\t// interestingly it works perfect when retriving just one member\n\n\t\t\t\t\t\t// if (options.fields) {\n\t\t\t\t\t\t// \tqs.fields = options.fields as string;\n\t\t\t\t\t\t// }\n\t\t\t\t\t\t// if (options.excludeFields) {\n\t\t\t\t\t\t// \tqs.exclude_fields = options.excludeFields as string;\n\t\t\t\t\t\t// }\n\t\t\t\t\t\tif (options.emailType) {\n\t\t\t\t\t\t\tqs.email_type = options.emailType as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.status) {\n\t\t\t\t\t\t\tqs.status = options.status as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.sinceLastChanged) {\n\t\t\t\t\t\t\tqs.since_last_changed = options.sinceLastChanged as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await mailchimpApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t`/lists/${listId}/members`,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'members',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.count = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await mailchimpApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t`/lists/${listId}/members`,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresponseData = responseData.members;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://mailchimp.com/developer/reference/lists/list-members/#put_/lists/-list_id-/members/-subscriber_hash-\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst listId = this.getNodeParameter('list', i) as string;\n\t\t\t\t\t\tconst email = this.getNodeParameter('email', i) as string;\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\t\t\t\t\t\tconst jsonActive = this.getNodeParameter('jsonParameters', i);\n\t\t\t\t\t\tconst body: ICreateMemberBody = {\n\t\t\t\t\t\t\tlistId,\n\t\t\t\t\t\t\temail_address: email,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (updateFields.skipMergeValidation) {\n\t\t\t\t\t\t\tqs.skip_merge_validation = updateFields.skipMergeValidation as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.status) {\n\t\t\t\t\t\t\tbody.status = updateFields.status as Status;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.emailType) {\n\t\t\t\t\t\t\tbody.email_type = updateFields.emailType as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.language) {\n\t\t\t\t\t\t\tbody.language = updateFields.language as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.vip) {\n\t\t\t\t\t\t\tbody.vip = updateFields.vip as boolean;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.ipSignup) {\n\t\t\t\t\t\t\tbody.ip_signup = updateFields.ipSignup as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.ipOptIn) {\n\t\t\t\t\t\t\tbody.ip_opt = updateFields.ipOptIn as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.timestampOpt) {\n\t\t\t\t\t\t\tbody.timestamp_opt = moment(updateFields.timestampOpt as string).format(\n\t\t\t\t\t\t\t\t'YYYY-MM-DD HH:MM:SS',\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (updateFields.timestampSignup) {\n\t\t\t\t\t\t\tbody.timestamp_signup = moment(updateFields.timestampSignup as string).format(\n\t\t\t\t\t\t\t\t'YYYY-MM-DD HH:MM:SS',\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!jsonActive) {\n\t\t\t\t\t\t\tif (updateFields.locationFieldsUi) {\n\t\t\t\t\t\t\t\tconst locationValues = (updateFields.locationFieldsUi as IDataObject)\n\t\t\t\t\t\t\t\t\t.locationFieldsValues as IDataObject;\n\t\t\t\t\t\t\t\tif (locationValues) {\n\t\t\t\t\t\t\t\t\tconst location: ILocation = {};\n\t\t\t\t\t\t\t\t\tfor (const key of Object.keys(locationValues)) {\n\t\t\t\t\t\t\t\t\t\tif (key === 'latitude') {\n\t\t\t\t\t\t\t\t\t\t\tlocation.latitude = parseFloat(locationValues[key] as string);\n\t\t\t\t\t\t\t\t\t\t} else if (key === 'longitude') {\n\t\t\t\t\t\t\t\t\t\t\tlocation.longitude = parseFloat(locationValues[key] as string);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbody.location = location;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (updateFields.mergeFieldsUi) {\n\t\t\t\t\t\t\t\tconst mergeFieldsValues = (updateFields.mergeFieldsUi as IDataObject)\n\t\t\t\t\t\t\t\t\t.mergeFieldsValues as IDataObject[];\n\t\t\t\t\t\t\t\tif (mergeFieldsValues) {\n\t\t\t\t\t\t\t\t\tconst mergeFields = {};\n\t\t\t\t\t\t\t\t\tfor (let index = 0; index < mergeFieldsValues.length; index++) {\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\t\tmergeFields[mergeFieldsValues[index].name] = mergeFieldsValues[index].value;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbody.merge_fields = mergeFields;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (updateFields.groupsUi) {\n\t\t\t\t\t\t\t\tconst groupsValues = (updateFields.groupsUi as IDataObject)\n\t\t\t\t\t\t\t\t\t.groupsValues as IDataObject[];\n\t\t\t\t\t\t\t\tif (groupsValues) {\n\t\t\t\t\t\t\t\t\tconst groups = {};\n\t\t\t\t\t\t\t\t\tfor (let index = 0; index < groupsValues.length; index++) {\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\t\tgroups[groupsValues[index].categoryFieldId] = groupsValues[index].value;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbody.interests = groups;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst locationJson = validateJSON(this.getNodeParameter('locationJson', i) as string);\n\t\t\t\t\t\t\tconst mergeFieldsJson = validateJSON(\n\t\t\t\t\t\t\t\tthis.getNodeParameter('mergeFieldsJson', i) as string,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst groupJson = validateJSON(this.getNodeParameter('groupJson', i) as string);\n\n\t\t\t\t\t\t\tif (locationJson) {\n\t\t\t\t\t\t\t\tbody.location = locationJson;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (mergeFieldsJson) {\n\t\t\t\t\t\t\t\tbody.merge_fields = mergeFieldsJson;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (groupJson) {\n\t\t\t\t\t\t\t\tbody.interests = groupJson;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await mailchimpApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t`/lists/${listId}/members/${email}`,\n\t\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'memberTag') {\n\t\t\t\t\t//https://mailchimp.com/developer/reference/lists/list-members/list-member-tags/#post_/lists/-list_id-/members/-subscriber_hash-/tags\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst listId = this.getNodeParameter('list', i) as string;\n\t\t\t\t\t\tconst email = this.getNodeParameter('email', i) as string;\n\t\t\t\t\t\tconst tags = this.getNodeParameter('tags', i) as string[];\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\ttags: [],\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (options.isSyncing) {\n\t\t\t\t\t\t\tbody.is_syncing = options.isSyncing as boolean;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (const tag of tags) {\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tbody.tags.push({\n\t\t\t\t\t\t\t\tname: tag,\n\t\t\t\t\t\t\t\tstatus: 'active',\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await mailchimpApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t`/lists/${listId}/members/${email}/tags`,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t\t//https://mailchimp.com/developer/reference/lists/list-members/list-member-tags/#post_/lists/-list_id-/members/-subscriber_hash-/tags\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst listId = this.getNodeParameter('list', i) as string;\n\t\t\t\t\t\tconst email = this.getNodeParameter('email', i) as string;\n\t\t\t\t\t\tconst tags = this.getNodeParameter('tags', i) as string[];\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\ttags: [],\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (options.isSyncing) {\n\t\t\t\t\t\t\tbody.is_syncing = options.isSyncing as boolean;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (const tag of tags) {\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tbody.tags.push({\n\t\t\t\t\t\t\t\tname: tag,\n\t\t\t\t\t\t\t\tstatus: 'inactive',\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresponseData = await mailchimpApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t`/lists/${listId}/members/${email}/tags`,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (resource === 'campaign') {\n\t\t\t\t\t//https://mailchimp.com/developer/api/marketing/campaigns/list-campaigns/\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tif (options.status) {\n\t\t\t\t\t\t\tqs.status = options.status as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.beforeCreateTime) {\n\t\t\t\t\t\t\tqs.before_create_time = options.beforeCreateTime as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.beforeSendTime) {\n\t\t\t\t\t\t\tqs.before_send_time = options.beforeSendTime as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.excludeFields) {\n\t\t\t\t\t\t\tqs.exclude_fields = (options.exclude_fields as string[]).join(',');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.fields) {\n\t\t\t\t\t\t\tqs.fields = (options.fields as string[]).join(',');\n\t\t\t\t\t\t\tif ((options.fields as string[]).includes('*')) {\n\t\t\t\t\t\t\t\tqs.fields = campaignFieldsMetadata.join(',');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.fields = [\n\t\t\t\t\t\t\t\t'campaigns.id',\n\t\t\t\t\t\t\t\t'campaigns.status',\n\t\t\t\t\t\t\t\t'campaigns.tracking',\n\t\t\t\t\t\t\t\t'campaigns.settings.from_name',\n\t\t\t\t\t\t\t\t'campaigns.settings.title',\n\t\t\t\t\t\t\t\t'campaigns.settings.reply_to',\n\t\t\t\t\t\t\t].join(',');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (options.listId) {\n\t\t\t\t\t\t\tqs.list_id = options.listId as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.sinceCreateTime) {\n\t\t\t\t\t\t\tqs.since_create_time = options.sinceCreateTime as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.sinceSendTime) {\n\t\t\t\t\t\t\tqs.since_send_time = options.sinceSendTime as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.sortDirection) {\n\t\t\t\t\t\t\tqs.sort_dir = options.sortDirection as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.sortField) {\n\t\t\t\t\t\t\tqs.sort_field = options.sortField as string;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await mailchimpApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'/campaigns',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'campaigns',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.count = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await mailchimpApiRequest.call(this, '/campaigns', 'GET', {}, qs);\n\t\t\t\t\t\t\tresponseData = responseData.campaigns;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//https://mailchimp.com/developer/api/marketing/campaigns/send-campaign/\n\t\t\t\t\tif (operation === 'send') {\n\t\t\t\t\t\tconst campaignId = this.getNodeParameter('campaignId', i) as string;\n\t\t\t\t\t\tresponseData = await mailchimpApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t`/campaigns/${campaignId}/actions/send`,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t\t//https://mailchimp.com/developer/api/marketing/campaigns/get-campaign-info/\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst campaignId = this.getNodeParameter('campaignId', i) as string;\n\t\t\t\t\t\tresponseData = await mailchimpApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t`/campaigns/${campaignId}`,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://mailchimp.com/developer/api/marketing/campaigns/delete-campaign/\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst campaignId = this.getNodeParameter('campaignId', i) as string;\n\t\t\t\t\t\tresponseData = await mailchimpApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t`/campaigns/${campaignId}`,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\t\t\t\t\t//https://mailchimp.com/developer/api/marketing/campaigns/replicate-campaign/\n\t\t\t\t\tif (operation === 'replicate') {\n\t\t\t\t\t\tconst campaignId = this.getNodeParameter('campaignId', i) as string;\n\t\t\t\t\t\tresponseData = await mailchimpApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t`/campaigns/${campaignId}/actions/replicate`,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//https://mailchimp.com/developer/api/marketing/campaigns/resend-campaign/\n\t\t\t\t\tif (operation === 'resend') {\n\t\t\t\t\t\tconst campaignId = this.getNodeParameter('campaignId', i) as string;\n\t\t\t\t\t\tresponseData = await mailchimpApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t`/campaigns/${campaignId}/actions/create-resend`,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject),\n\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t);\n\t\t\t\treturnData.push(...executionData);\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\treturnData.push({ json: { error: error.message } });\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":["moment"]}