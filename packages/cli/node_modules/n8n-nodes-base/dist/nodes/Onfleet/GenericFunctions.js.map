{"version":3,"sources":["../../../nodes/Onfleet/GenericFunctions.ts"],"sourcesContent":["import moment from 'moment-timezone';\nimport type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHookFunctions,\n\tIHttpRequestMethods,\n\tILoadOptionsFunctions,\n\tINodePropertyOptions,\n\tIRequestOptions,\n\tIWebhookFunctions,\n\tJsonObject,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\nexport async function onfleetApiRequest(\n\tthis: IWebhookFunctions | IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tresource: string,\n\n\tbody: any = {},\n\n\tqs?: any,\n\turi?: string,\n): Promise<any> {\n\tconst credentials = await this.getCredentials('onfleetApi');\n\n\tconst options: IRequestOptions = {\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\t'User-Agent': 'n8n-onfleet',\n\t\t},\n\t\tauth: {\n\t\t\tuser: credentials.apiKey as string,\n\t\t\tpass: '',\n\t\t},\n\t\tmethod,\n\t\tbody,\n\t\tqs,\n\t\turi: uri || `https://onfleet.com/api/v2/${resource}`,\n\t\tjson: true,\n\t};\n\ttry {\n\t\treturn await this.helpers.request(options);\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\nexport async function onfleetApiRequestAllItems(\n\tthis: IWebhookFunctions | IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tpropertyName: string,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\n\tbody: any = {},\n\tquery: IDataObject = {},\n): Promise<any> {\n\tconst returnData: IDataObject[] = [];\n\n\tlet responseData;\n\n\tdo {\n\t\tresponseData = await onfleetApiRequest.call(this, method, endpoint, body, query);\n\t\tquery.lastId = responseData.lastId;\n\t\treturnData.push.apply(returnData, responseData[propertyName] as IDataObject[]);\n\t} while (responseData.lastId !== undefined);\n\n\treturn returnData;\n}\nexport const resourceLoaders = {\n\tasync getTeams(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\ttry {\n\t\t\tconst teams = (await onfleetApiRequest.call(this, 'GET', 'teams')) as IDataObject[];\n\t\t\treturn teams.map(({ name = '', id: value = '' }) => ({\n\t\t\t\tname,\n\t\t\t\tvalue,\n\t\t\t})) as INodePropertyOptions[];\n\t\t} catch (error) {\n\t\t\treturn [];\n\t\t}\n\t},\n\n\tasync getWorkers(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\ttry {\n\t\t\tconst workers = (await onfleetApiRequest.call(this, 'GET', 'workers')) as IDataObject[];\n\t\t\treturn workers.map(({ name = '', id: value = '' }) => ({\n\t\t\t\tname,\n\t\t\t\tvalue,\n\t\t\t})) as INodePropertyOptions[];\n\t\t} catch (error) {\n\t\t\treturn [];\n\t\t}\n\t},\n\n\tasync getAdmins(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\ttry {\n\t\t\tconst admins = (await onfleetApiRequest.call(this, 'GET', 'admins')) as IDataObject[];\n\t\t\treturn admins.map(({ name = '', id: value = '' }) => ({\n\t\t\t\tname,\n\t\t\t\tvalue,\n\t\t\t})) as INodePropertyOptions[];\n\t\t} catch (error) {\n\t\t\treturn [];\n\t\t}\n\t},\n\n\tasync getHubs(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\ttry {\n\t\t\tconst hubs = (await onfleetApiRequest.call(this, 'GET', 'hubs')) as IDataObject[];\n\t\t\treturn hubs.map(({ name = '', id: value = '' }) => ({\n\t\t\t\tname,\n\t\t\t\tvalue,\n\t\t\t})) as INodePropertyOptions[];\n\t\t} catch (error) {\n\t\t\treturn [];\n\t\t}\n\t},\n\n\tasync getTimezones(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\tconst returnData = [] as INodePropertyOptions[];\n\t\tfor (const timezone of moment.tz.names()) {\n\t\t\treturnData.push({\n\t\t\t\tname: timezone,\n\t\t\t\tvalue: timezone,\n\t\t\t});\n\t\t}\n\t\treturn returnData;\n\t},\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAmB;AAYnB,0BAA6B;AAE7B,eAAsB,kBAErB,QACA,UAEA,OAAY,CAAC,GAEb,IACA,KACe;AACf,QAAM,cAAc,MAAM,KAAK,eAAe,YAAY;AAE1D,QAAM,UAA2B;AAAA,IAChC,SAAS;AAAA,MACR,gBAAgB;AAAA,MAChB,cAAc;AAAA,IACf;AAAA,IACA,MAAM;AAAA,MACL,MAAM,YAAY;AAAA,MAClB,MAAM;AAAA,IACP;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,KAAK,OAAO,8BAA8B,QAAQ;AAAA,IAClD,MAAM;AAAA,EACP;AACA,MAAI;AACH,WAAO,MAAM,KAAK,QAAQ,QAAQ,OAAO;AAAA,EAC1C,SAAS,OAAO;AACf,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,KAAmB;AAAA,EAC3D;AACD;AAEA,eAAsB,0BAErB,cACA,QACA,UAEA,OAAY,CAAC,GACb,QAAqB,CAAC,GACP;AACf,QAAM,aAA4B,CAAC;AAEnC,MAAI;AAEJ,KAAG;AACF,mBAAe,MAAM,kBAAkB,KAAK,MAAM,QAAQ,UAAU,MAAM,KAAK;AAC/E,UAAM,SAAS,aAAa;AAC5B,eAAW,KAAK,MAAM,YAAY,aAAa,YAAY,CAAkB;AAAA,EAC9E,SAAS,aAAa,WAAW;AAEjC,SAAO;AACR;AACO,MAAM,kBAAkB;AAAA,EAC9B,MAAM,WAAuE;AAC5E,QAAI;AACH,YAAM,QAAS,MAAM,kBAAkB,KAAK,MAAM,OAAO,OAAO;AAChE,aAAO,MAAM,IAAI,CAAC,EAAE,OAAO,IAAI,IAAI,QAAQ,GAAG,OAAO;AAAA,QACpD;AAAA,QACA;AAAA,MACD,EAAE;AAAA,IACH,SAAS,OAAO;AACf,aAAO,CAAC;AAAA,IACT;AAAA,EACD;AAAA,EAEA,MAAM,aAAyE;AAC9E,QAAI;AACH,YAAM,UAAW,MAAM,kBAAkB,KAAK,MAAM,OAAO,SAAS;AACpE,aAAO,QAAQ,IAAI,CAAC,EAAE,OAAO,IAAI,IAAI,QAAQ,GAAG,OAAO;AAAA,QACtD;AAAA,QACA;AAAA,MACD,EAAE;AAAA,IACH,SAAS,OAAO;AACf,aAAO,CAAC;AAAA,IACT;AAAA,EACD;AAAA,EAEA,MAAM,YAAwE;AAC7E,QAAI;AACH,YAAM,SAAU,MAAM,kBAAkB,KAAK,MAAM,OAAO,QAAQ;AAClE,aAAO,OAAO,IAAI,CAAC,EAAE,OAAO,IAAI,IAAI,QAAQ,GAAG,OAAO;AAAA,QACrD;AAAA,QACA;AAAA,MACD,EAAE;AAAA,IACH,SAAS,OAAO;AACf,aAAO,CAAC;AAAA,IACT;AAAA,EACD;AAAA,EAEA,MAAM,UAAsE;AAC3E,QAAI;AACH,YAAM,OAAQ,MAAM,kBAAkB,KAAK,MAAM,OAAO,MAAM;AAC9D,aAAO,KAAK,IAAI,CAAC,EAAE,OAAO,IAAI,IAAI,QAAQ,GAAG,OAAO;AAAA,QACnD;AAAA,QACA;AAAA,MACD,EAAE;AAAA,IACH,SAAS,OAAO;AACf,aAAO,CAAC;AAAA,IACT;AAAA,EACD;AAAA,EAEA,MAAM,eAA2E;AAChF,UAAM,aAAa,CAAC;AACpB,eAAW,YAAY,uBAAAA,QAAO,GAAG,MAAM,GAAG;AACzC,iBAAW,KAAK;AAAA,QACf,MAAM;AAAA,QACN,OAAO;AAAA,MACR,CAAC;AAAA,IACF;AACA,WAAO;AAAA,EACR;AACD;","names":["moment"]}