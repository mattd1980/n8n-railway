{"version":3,"sources":["../../../nodes/Onfleet/Onfleet.node.ts"],"sourcesContent":["import {\n\ttype IExecuteFunctions,\n\ttype ICredentialsDecrypted,\n\ttype ICredentialTestFunctions,\n\ttype IDataObject,\n\ttype INodeCredentialTestResult,\n\ttype INodeExecutionData,\n\ttype INodeType,\n\ttype INodeTypeDescription,\n\ttype IRequestOptions,\n\tNodeConnectionTypes,\n} from 'n8n-workflow';\n\nimport { adminFields, adminOperations } from './descriptions/AdministratorDescription';\nimport { containerFields, containerOperations } from './descriptions/ContainerDescription';\nimport { destinationFields, destinationOperations } from './descriptions/DestinationDescription';\nimport { hubFields, hubOperations } from './descriptions/HubDescription';\nimport { organizationFields, organizationOperations } from './descriptions/OrganizationDescription';\nimport { recipientFields, recipientOperations } from './descriptions/RecipientDescription';\nimport { taskFields, taskOperations } from './descriptions/TaskDescription';\nimport { teamFields, teamOperations } from './descriptions/TeamDescription';\nimport { workerFields, workerOperations } from './descriptions/WorkerDescription';\nimport { resourceLoaders } from './GenericFunctions';\nimport { Onfleet as OnfleetMethods } from './Onfleet';\nexport class Onfleet implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Onfleet',\n\t\tname: 'onfleet',\n\t\ticon: 'file:Onfleet.svg',\n\t\tgroup: ['input'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume Onfleet API',\n\t\tdefaults: {\n\t\t\tname: 'Onfleet',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'onfleetApi',\n\t\t\t\trequired: true,\n\t\t\t\ttestedBy: 'onfleetApiTest',\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t// List of option resources\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Admin',\n\t\t\t\t\t\tvalue: 'admin',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Container',\n\t\t\t\t\t\tvalue: 'container',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Destination',\n\t\t\t\t\t\tvalue: 'destination',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Hub',\n\t\t\t\t\t\tvalue: 'hub',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Organization',\n\t\t\t\t\t\tvalue: 'organization',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Recipient',\n\t\t\t\t\t\tvalue: 'recipient',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Task',\n\t\t\t\t\t\tvalue: 'task',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Team',\n\t\t\t\t\t\tvalue: 'team',\n\t\t\t\t\t},\n\t\t\t\t\t// {\n\t\t\t\t\t// \tname: 'Webhook',\n\t\t\t\t\t// \tvalue: 'webhook',\n\t\t\t\t\t// },\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Worker',\n\t\t\t\t\t\tvalue: 'worker',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'task',\n\t\t\t\tdescription: 'The resource to perform operations on',\n\t\t\t},\n\t\t\t// Operations & fields\n\t\t\t...adminOperations,\n\t\t\t...adminFields,\n\t\t\t...containerOperations,\n\t\t\t...containerFields,\n\t\t\t...destinationOperations,\n\t\t\t...destinationFields,\n\t\t\t...hubOperations,\n\t\t\t...hubFields,\n\t\t\t...organizationOperations,\n\t\t\t...organizationFields,\n\t\t\t...recipientOperations,\n\t\t\t...recipientFields,\n\t\t\t...taskOperations,\n\t\t\t...taskFields,\n\t\t\t...teamOperations,\n\t\t\t...teamFields,\n\t\t\t// ...webhookOperations,\n\t\t\t// ...webhookFields,\n\t\t\t...workerOperations,\n\t\t\t...workerFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tcredentialTest: {\n\t\t\tasync onfleetApiTest(\n\t\t\t\tthis: ICredentialTestFunctions,\n\t\t\t\tcredential: ICredentialsDecrypted,\n\t\t\t): Promise<INodeCredentialTestResult> {\n\t\t\t\tconst credentials = credential.data as IDataObject;\n\n\t\t\t\tconst options: IRequestOptions = {\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\t'User-Agent': 'n8n-onfleet',\n\t\t\t\t\t},\n\t\t\t\t\tauth: {\n\t\t\t\t\t\tuser: credentials.apiKey as string,\n\t\t\t\t\t\tpass: '',\n\t\t\t\t\t},\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\turi: 'https://onfleet.com/api/v2/auth/test',\n\t\t\t\t\tjson: true,\n\t\t\t\t};\n\n\t\t\t\ttry {\n\t\t\t\t\tawait this.helpers.request(options);\n\t\t\t\t\treturn {\n\t\t\t\t\t\tstatus: 'OK',\n\t\t\t\t\t\tmessage: 'Authentication successful',\n\t\t\t\t\t};\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tstatus: 'Error',\n\t\t\t\t\t\tmessage: `Auth settings are not valid: ${error}`,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\tloadOptions: resourceLoaders,\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\t\tconst items = this.getInputData();\n\n\t\t// eslint-disable-next-line @typescript-eslint/ban-types\n\t\tconst operations: { [key: string]: Function } = {\n\t\t\ttask: OnfleetMethods.executeTaskOperations,\n\t\t\tdestination: OnfleetMethods.executeDestinationOperations,\n\t\t\torganization: OnfleetMethods.executeOrganizationOperations,\n\t\t\tadmin: OnfleetMethods.executeAdministratorOperations,\n\t\t\trecipient: OnfleetMethods.executeRecipientOperations,\n\t\t\thub: OnfleetMethods.executeHubOperations,\n\t\t\tworker: OnfleetMethods.executeWorkerOperations,\n\t\t\twebhook: OnfleetMethods.executeWebhookOperations,\n\t\t\tcontainer: OnfleetMethods.executeContainerOperations,\n\t\t\tteam: OnfleetMethods.executeTeamOperations,\n\t\t};\n\n\t\tconst responseData = await operations[resource].call(this, `${resource}s`, operation, items);\n\n\t\t// Map data to n8n data\n\t\treturn [this.helpers.returnJsonArray(responseData as IDataObject)];\n\t}\n}\n"],"mappings":"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","names":["OnfleetMethods"]}