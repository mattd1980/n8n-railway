{"version":3,"sources":["../../../nodes/Misp/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tJsonObject,\n\tIHttpRequestMethods,\n\tIRequestOptions,\n} from 'n8n-workflow';\nimport { NodeApiError, NodeOperationError, jsonParse } from 'n8n-workflow';\nimport { URL } from 'url';\n\nimport type { MispCredentials } from './types';\n\nexport async function mispApiRequest(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\tbody: IDataObject = {},\n\tqs: IDataObject = {},\n) {\n\tconst { baseUrl, allowUnauthorizedCerts } = await this.getCredentials<MispCredentials>('mispApi');\n\n\tconst options: IRequestOptions = {\n\t\tmethod,\n\t\tbody,\n\t\tqs,\n\t\turi: `${baseUrl}${endpoint}`,\n\t\tjson: true,\n\t\trejectUnauthorized: !allowUnauthorizedCerts,\n\t};\n\n\tif (!Object.keys(body).length) {\n\t\tdelete options.body;\n\t}\n\n\tif (!Object.keys(qs).length) {\n\t\tdelete options.qs;\n\t}\n\n\ttry {\n\t\treturn await this.helpers.requestWithAuthentication.call(this, 'mispApi', options);\n\t} catch (error) {\n\t\t// MISP API wrongly returns 403 for malformed requests\n\t\tif (error.statusCode === 403) {\n\t\t\terror.statusCode = 400;\n\t\t}\n\n\t\tconst errors = error?.error?.errors;\n\n\t\tif (errors) {\n\t\t\tconst key = Object.keys(errors as IDataObject)[0];\n\n\t\t\tif (key !== undefined) {\n\t\t\t\tlet message = errors[key].join();\n\n\t\t\t\tif (message.includes(' nter')) {\n\t\t\t\t\tmessage = message.replace(' nter', ' enter');\n\t\t\t\t}\n\n\t\t\t\terror.error.message = `${error.error.message}: ${message}`;\n\t\t\t}\n\t\t}\n\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n\nexport async function mispApiRequestAllItems(this: IExecuteFunctions, endpoint: string) {\n\tconst responseData = await mispApiRequest.call(this, 'GET', endpoint);\n\tconst returnAll = this.getNodeParameter('returnAll', 0);\n\n\tif (!returnAll) {\n\t\tconst limit = this.getNodeParameter('limit', 0);\n\t\treturn responseData.slice(0, limit);\n\t}\n\n\treturn responseData;\n}\n\nexport async function mispApiRestSearch(\n\tthis: IExecuteFunctions,\n\tresource: 'attributes' | 'events' | 'objects',\n\titemIndex: number,\n) {\n\tlet body: IDataObject = {};\n\tconst useJson = this.getNodeParameter('useJson', itemIndex) as boolean;\n\n\tif (useJson) {\n\t\tconst json = this.getNodeParameter('jsonOutput', itemIndex);\n\t\tif (typeof json === 'string') {\n\t\t\tbody = jsonParse(json);\n\t\t} else {\n\t\t\tbody = json as IDataObject;\n\t\t}\n\t} else {\n\t\tconst value = this.getNodeParameter('value', itemIndex) as string;\n\t\tconst additionalFields = this.getNodeParameter('additionalFields', itemIndex);\n\n\t\tbody.value = value;\n\n\t\tif (Object.keys(additionalFields).length) {\n\t\t\tif (additionalFields.tags) {\n\t\t\t\tadditionalFields.tags = (additionalFields.tags as string)\n\t\t\t\t\t.split(',')\n\t\t\t\t\t.map((tag) => tag.trim());\n\t\t\t}\n\t\t\tObject.assign(body, additionalFields);\n\t\t}\n\t}\n\n\tconst endpoint = `/${resource}/restSearch`;\n\tconst { response } = await mispApiRequest.call(this, 'POST', endpoint, body);\n\n\tif (response) {\n\t\tif (resource === 'attributes') {\n\t\t\treturn response.Attribute;\n\t\t}\n\n\t\tif (resource === 'events') {\n\t\t\treturn (response as IDataObject[]).map((event) => event.Event);\n\t\t}\n\n\t\tif (resource === 'objects') {\n\t\t\treturn (response as IDataObject[]).map((obj) => obj.Object);\n\t\t}\n\t} else {\n\t\treturn [];\n\t}\n}\n\nexport function throwOnEmptyUpdate(\n\tthis: IExecuteFunctions,\n\tresource: string,\n\tupdateFields: IDataObject,\n) {\n\tif (!Object.keys(updateFields).length) {\n\t\tthrow new NodeOperationError(\n\t\t\tthis.getNode(),\n\t\t\t`Please enter at least one field to update for the ${resource}.`,\n\t\t);\n\t}\n}\n\nconst SHARING_GROUP_OPTION_ID = 4;\n\nexport function throwOnMissingSharingGroup(this: IExecuteFunctions, fields: IDataObject) {\n\tif (fields.distribution === SHARING_GROUP_OPTION_ID && !fields.sharing_group_id) {\n\t\tthrow new NodeOperationError(this.getNode(), 'Please specify a sharing group');\n\t}\n}\n\nconst isValidUrl = (str: string) => {\n\ttry {\n\t\tnew URL(str);\n\t\treturn true;\n\t} catch (error) {\n\t\treturn false;\n\t}\n};\n\nexport function throwOnInvalidUrl(this: IExecuteFunctions, str: string) {\n\tif (!isValidUrl(str)) {\n\t\tthrow new NodeOperationError(\n\t\t\tthis.getNode(),\n\t\t\t'Please specify a valid URL, protocol included. Example: https://site.com',\n\t\t);\n\t}\n}\n"],"mappings":"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","names":[]}