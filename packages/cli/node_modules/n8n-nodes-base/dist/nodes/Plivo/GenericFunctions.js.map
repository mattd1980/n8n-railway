{"version":3,"sources":["../../../nodes/Plivo/GenericFunctions.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIHookFunctions,\n\tIDataObject,\n\tJsonObject,\n\tIHttpRequestMethods,\n\tIRequestOptions,\n} from 'n8n-workflow';\nimport { NodeApiError } from 'n8n-workflow';\n\n/**\n * Make an API request to Plivo.\n *\n */\nexport async function plivoApiRequest(\n\tthis: IHookFunctions | IExecuteFunctions,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\tbody: IDataObject = {},\n\tqs: IDataObject = {},\n) {\n\tconst credentials = await this.getCredentials<{\n\t\tauthId: string;\n\t\tauthToken: string;\n\t}>('plivoApi');\n\n\tconst options: IRequestOptions = {\n\t\theaders: {\n\t\t\t'user-agent': 'plivo-n8n',\n\t\t},\n\t\tmethod,\n\t\tform: body,\n\t\tqs,\n\t\turi: `https://api.plivo.com/v1/Account/${credentials.authId}${endpoint}/`,\n\t\tauth: {\n\t\t\tuser: credentials.authId,\n\t\t\tpass: credentials.authToken,\n\t\t},\n\t\tjson: true,\n\t};\n\n\ttry {\n\t\treturn await this.helpers.request(options);\n\t} catch (error) {\n\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,0BAA6B;AAM7B,eAAsB,gBAErB,QACA,UACA,OAAoB,CAAC,GACrB,KAAkB,CAAC,GAClB;AACD,QAAM,cAAc,MAAM,KAAK,eAG5B,UAAU;AAEb,QAAM,UAA2B;AAAA,IAChC,SAAS;AAAA,MACR,cAAc;AAAA,IACf;AAAA,IACA;AAAA,IACA,MAAM;AAAA,IACN;AAAA,IACA,KAAK,oCAAoC,YAAY,MAAM,GAAG,QAAQ;AAAA,IACtE,MAAM;AAAA,MACL,MAAM,YAAY;AAAA,MAClB,MAAM,YAAY;AAAA,IACnB;AAAA,IACA,MAAM;AAAA,EACP;AAEA,MAAI;AACH,WAAO,MAAM,KAAK,QAAQ,QAAQ,OAAO;AAAA,EAC1C,SAAS,OAAO;AACf,UAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,KAAmB;AAAA,EAC3D;AACD;","names":[]}