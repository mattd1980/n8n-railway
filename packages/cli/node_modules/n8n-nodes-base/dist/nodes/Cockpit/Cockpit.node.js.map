{"version":3,"sources":["../../../nodes/Cockpit/Cockpit.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes } from 'n8n-workflow';\n\nimport { collectionFields, collectionOperations } from './CollectionDescription';\nimport {\n\tcreateCollectionEntry,\n\tgetAllCollectionEntries,\n\tgetAllCollectionNames,\n} from './CollectionFunctions';\nimport { formFields, formOperations } from './FormDescription';\nimport { submitForm } from './FormFunctions';\nimport { createDataFromParameters } from './GenericFunctions';\nimport { singletonFields, singletonOperations } from './SingletonDescription';\nimport { getAllSingletonNames, getSingleton } from './SingletonFunctions';\n\nexport class Cockpit implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Cockpit',\n\t\tname: 'cockpit',\n\t\ticon: { light: 'file:cockpit.svg', dark: 'file:cockpit.dark.svg' },\n\t\tgroup: ['output'],\n\t\tversion: 1,\n\t\tsubtitle: '={{ $parameter[\"operation\"] + \": \" + $parameter[\"resource\"] }}',\n\t\tdescription: 'Consume Cockpit API',\n\t\tdefaults: {\n\t\t\tname: 'Cockpit',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'cockpitApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\tdefault: 'collection',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Collection',\n\t\t\t\t\t\tvalue: 'collection',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Form',\n\t\t\t\t\t\tvalue: 'form',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Singleton',\n\t\t\t\t\t\tvalue: 'singleton',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\n\t\t\t...collectionOperations,\n\t\t\t...collectionFields,\n\t\t\t...formOperations,\n\t\t\t...formFields,\n\t\t\t...singletonOperations,\n\t\t\t...singletonFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\tasync getCollections(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst collections = await getAllCollectionNames.call(this);\n\n\t\t\t\treturn collections.map((itemName) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: itemName,\n\t\t\t\t\t\tvalue: itemName,\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tasync getSingletons(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst singletons = await getAllSingletonNames.call(this);\n\n\t\t\t\treturn singletons.map((itemName) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: itemName,\n\t\t\t\t\t\tvalue: itemName,\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: IDataObject[] = [];\n\t\tconst length = items.length;\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\tlet responseData;\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'collection') {\n\t\t\t\t\tconst collectionName = this.getNodeParameter('collection', i) as string;\n\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst data = createDataFromParameters.call(this, i);\n\n\t\t\t\t\t\tresponseData = await createCollectionEntry.call(this, collectionName, data);\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\toptions.limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await getAllCollectionEntries.call(this, collectionName, options);\n\t\t\t\t\t} else if (operation === 'update') {\n\t\t\t\t\t\tconst id = this.getNodeParameter('id', i) as string;\n\t\t\t\t\t\tconst data = createDataFromParameters.call(this, i);\n\n\t\t\t\t\t\tresponseData = await createCollectionEntry.call(this, collectionName, data, id);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'form') {\n\t\t\t\t\tconst formName = this.getNodeParameter('form', i) as string;\n\n\t\t\t\t\tif (operation === 'submit') {\n\t\t\t\t\t\tconst form = createDataFromParameters.call(this, i);\n\n\t\t\t\t\t\tresponseData = await submitForm.call(this, formName, form);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'singleton') {\n\t\t\t\t\tconst singletonName = this.getNodeParameter('singleton', i) as string;\n\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tresponseData = await getSingleton.call(this, singletonName);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (Array.isArray(responseData)) {\n\t\t\t\t\treturnData.push.apply(returnData, responseData as IDataObject[]);\n\t\t\t\t} else {\n\t\t\t\t\treturnData.push(responseData as IDataObject);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\treturnData.push({ error: error.message });\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn [this.helpers.returnJsonArray(returnData)];\n\t}\n}\n"],"mappings":"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","names":[]}