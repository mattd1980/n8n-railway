{"version":3,"sources":["../../../nodes/Formstack/FormstackTrigger.node.ts"],"sourcesContent":["import type {\n\tIHookFunctions,\n\tIWebhookFunctions,\n\tIDataObject,\n\tINodeType,\n\tINodeTypeDescription,\n\tIWebhookResponseData,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes } from 'n8n-workflow';\n\nimport type { IFormstackWebhookResponseBody } from './GenericFunctions';\nimport { apiRequest, getForms } from './GenericFunctions';\n\nexport class FormstackTrigger implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Formstack Trigger',\n\t\tname: 'formstackTrigger',\n\t\ticon: 'file:formstack.svg',\n\t\tgroup: ['trigger'],\n\t\tversion: 1,\n\t\tsubtitle: '=Form ID: {{$parameter[\"formId\"]}}',\n\t\tdescription: 'Starts the workflow on a Formstack form submission.',\n\t\tdefaults: {\n\t\t\tname: 'Formstack Trigger',\n\t\t},\n\t\tinputs: [],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'formstackApi',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['accessToken'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'formstackOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['oAuth2'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\twebhooks: [\n\t\t\t{\n\t\t\t\tname: 'default',\n\t\t\t\thttpMethod: 'POST',\n\t\t\t\tresponseMode: 'onReceived',\n\t\t\t\tpath: 'webhook',\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Authentication',\n\t\t\t\tname: 'authentication',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Access Token',\n\t\t\t\t\t\tvalue: 'accessToken',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'OAuth2',\n\t\t\t\t\t\tvalue: 'oAuth2',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'accessToken',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Form Name or ID',\n\t\t\t\tname: 'formId',\n\t\t\t\ttype: 'options',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tloadOptionsMethod: 'getForms',\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdescription:\n\t\t\t\t\t'The Formstack form to monitor for new submissions. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Simplify',\n\t\t\t\tname: 'simple',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription:\n\t\t\t\t\t'Whether to return a simplified version of the response instead of the raw data',\n\t\t\t},\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\tgetForms,\n\t\t},\n\t};\n\n\twebhookMethods = {\n\t\tdefault: {\n\t\t\tasync checkExists(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookUrl = this.getNodeWebhookUrl('default');\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\n\t\t\t\tconst formId = this.getNodeParameter('formId') as string;\n\n\t\t\t\tconst endpoint = `form/${formId}/webhook.json`;\n\n\t\t\t\tconst { webhooks } = await apiRequest.call(this, 'GET', endpoint);\n\n\t\t\t\tfor (const webhook of webhooks) {\n\t\t\t\t\tif (webhook.url === webhookUrl) {\n\t\t\t\t\t\twebhookData.webhookId = webhook.id;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tasync create(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookUrl = this.getNodeWebhookUrl('default');\n\n\t\t\t\tconst formId = this.getNodeParameter('formId') as string;\n\n\t\t\t\tconst endpoint = `form/${formId}/webhook.json`;\n\n\t\t\t\t// TODO: Add handshake key support\n\t\t\t\tconst body = {\n\t\t\t\t\turl: webhookUrl,\n\t\t\t\t\tstandardize_field_values: true,\n\t\t\t\t\tinclude_field_type: true,\n\t\t\t\t\tcontent_type: 'json',\n\t\t\t\t};\n\n\t\t\t\tconst response = await apiRequest.call(this, 'POST', endpoint, body);\n\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\t\t\t\twebhookData.webhookId = response.id;\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tasync delete(this: IHookFunctions): Promise<boolean> {\n\t\t\t\tconst webhookData = this.getWorkflowStaticData('node');\n\n\t\t\t\tif (webhookData.webhookId !== undefined) {\n\t\t\t\t\tconst endpoint = `webhook/${webhookData.webhookId}.json`;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst body = {};\n\t\t\t\t\t\tawait apiRequest.call(this, 'DELETE', endpoint, body);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t// Remove from the static workflow data so that it is clear\n\t\t\t\t\t// that no webhooks are registered anymore\n\t\t\t\t\tdelete webhookData.webhookId;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync webhook(this: IWebhookFunctions): Promise<IWebhookResponseData> {\n\t\tconst bodyData = this.getBodyData() as unknown as IFormstackWebhookResponseBody;\n\t\tconst simple = this.getNodeParameter('simple') as string;\n\n\t\tconst response = bodyData as unknown as IDataObject;\n\n\t\tif (simple) {\n\t\t\tfor (const key of Object.keys(response)) {\n\t\t\t\tif ((response[key] as IDataObject).hasOwnProperty('value')) {\n\t\t\t\t\tresponse[key] = (response[key] as IDataObject).value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tworkflowData: [this.helpers.returnJsonArray([response as unknown as IDataObject])],\n\t\t};\n\t}\n}\n"],"mappings":"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","names":[]}