{"version":3,"sources":["../../../../nodes/Lemlist/v2/LemlistV2.node.ts"],"sourcesContent":["import isEmpty from 'lodash/isEmpty';\nimport omit from 'lodash/omit';\nimport {\n\ttype IExecuteFunctions,\n\ttype IDataObject,\n\ttype ILoadOptionsFunctions,\n\ttype INodeExecutionData,\n\ttype INodeType,\n\ttype INodeTypeDescription,\n\ttype INodeTypeBaseDescription,\n\tNodeConnectionTypes,\n} from 'n8n-workflow';\n\nimport {\n\tactivityFields,\n\tactivityOperations,\n\tcampaignFields,\n\tcampaignOperations,\n\tenrichmentFields,\n\tenrichmentOperations,\n\tleadFields,\n\tleadOperations,\n\tteamFields,\n\tteamOperations,\n\tunsubscribeFields,\n\tunsubscribeOperations,\n} from './descriptions';\nimport { lemlistApiRequest, lemlistApiRequestAllItems } from '../GenericFunctions';\nconst versionDescription: INodeTypeDescription = {\n\tdisplayName: 'Lemlist',\n\tname: 'lemlist',\n\ticon: 'file:lemlist.svg',\n\tgroup: ['transform'],\n\tversion: 2,\n\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\tdescription: 'Consume the Lemlist API',\n\tdefaults: {\n\t\tname: 'Lemlist',\n\t},\n\tusableAsTool: true,\n\tinputs: [NodeConnectionTypes.Main],\n\toutputs: [NodeConnectionTypes.Main],\n\tcredentials: [\n\t\t{\n\t\t\tname: 'lemlistApi',\n\t\t\trequired: true,\n\t\t},\n\t],\n\tproperties: [\n\t\t{\n\t\t\tdisplayName: 'Resource',\n\t\t\tname: 'resource',\n\t\t\ttype: 'options',\n\t\t\tnoDataExpression: true,\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\tname: 'Activity',\n\t\t\t\t\tvalue: 'activity',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Campaign',\n\t\t\t\t\tvalue: 'campaign',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Enrichment',\n\t\t\t\t\tvalue: 'enrich',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Lead',\n\t\t\t\t\tvalue: 'lead',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Team',\n\t\t\t\t\tvalue: 'team',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Unsubscribe',\n\t\t\t\t\tvalue: 'unsubscribe',\n\t\t\t\t},\n\t\t\t],\n\t\t\tdefault: 'activity',\n\t\t},\n\t\t...activityOperations,\n\t\t...activityFields,\n\t\t...campaignOperations,\n\t\t...campaignFields,\n\t\t...enrichmentOperations,\n\t\t...enrichmentFields,\n\t\t...leadOperations,\n\t\t...leadFields,\n\t\t...teamOperations,\n\t\t...teamFields,\n\t\t...unsubscribeOperations,\n\t\t...unsubscribeFields,\n\t],\n};\nexport class LemlistV2 implements INodeType {\n\tdescription: INodeTypeDescription;\n\n\tconstructor(baseDescription: INodeTypeBaseDescription) {\n\t\tthis.description = {\n\t\t\t...baseDescription,\n\t\t\t...versionDescription,\n\t\t};\n\t}\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\tasync getCampaigns(this: ILoadOptionsFunctions) {\n\t\t\t\tconst campaigns = await lemlistApiRequest.call(this, 'GET', '/campaigns');\n\t\t\t\treturn campaigns.map(({ _id, name }: { _id: string; name: string }) => ({\n\t\t\t\t\tname,\n\t\t\t\t\tvalue: _id,\n\t\t\t\t}));\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions) {\n\t\tconst items = this.getInputData();\n\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\n\t\tlet responseData;\n\t\tconst returnData: INodeExecutionData[] = [];\n\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'activity') {\n\t\t\t\t\t// *********************************************************************\n\t\t\t\t\t//                             activity\n\t\t\t\t\t// *********************************************************************\n\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//        activity: getAll\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\t// https://developer.lemlist.com/#activities\n\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\n\t\t\t\t\t\tconst qs = {} as IDataObject;\n\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\n\t\t\t\t\t\tif (!isEmpty(filters)) {\n\t\t\t\t\t\t\tObject.assign(qs, filters);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await lemlistApiRequestAllItems.call(this, 'GET', '/activities', qs);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await lemlistApiRequest.call(this, 'GET', '/activities', {}, qs);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'campaign') {\n\t\t\t\t\t// *********************************************************************\n\t\t\t\t\t//                             campaign\n\t\t\t\t\t// *********************************************************************\n\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//        campaign: getAll\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\t// https://developer.lemlist.com/#32ab1bf9-9b2f-40ed-9bbd-0b8370fed3d9\n\t\t\t\t\t\tconst qs = {} as IDataObject;\n\t\t\t\t\t\tconst filters = this.getNodeParameter('filters', i);\n\n\t\t\t\t\t\tif (!isEmpty(filters)) {\n\t\t\t\t\t\t\tObject.assign(qs, filters);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await lemlistApiRequestAllItems.call(this, 'GET', '/campaigns', {});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.limit = this.getNodeParameter('limit', i);\n\t\t\t\t\t\t\tresponseData = await lemlistApiRequest.call(this, 'GET', '/campaigns', {}, qs);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (operation === 'getStats') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//        campaign: getStats\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\t// https://developer.lemlist.com/#0b5cc72c-c1c8-47d0-a086-32b1b63522e3\n\t\t\t\t\t\tconst qs = {} as IDataObject;\n\n\t\t\t\t\t\tconst campaignId = this.getNodeParameter('campaignId', i);\n\n\t\t\t\t\t\tqs.startDate = this.getNodeParameter('startDate', i);\n\t\t\t\t\t\tqs.endDate = this.getNodeParameter('endDate', i);\n\t\t\t\t\t\tqs.timezone = this.getNodeParameter('timezone', i);\n\t\t\t\t\t\tresponseData = await lemlistApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/campaigns/${campaignId}/stats`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'lead') {\n\t\t\t\t\t// *********************************************************************\n\t\t\t\t\t//                             lead\n\t\t\t\t\t// *********************************************************************\n\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//          lead: create\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\t// https://developer.lemlist.com/#add-a-lead-in-a-campaign\n\n\t\t\t\t\t\tconst qs = {} as IDataObject;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tif (additionalFields.deduplicate !== undefined) {\n\t\t\t\t\t\t\tqs.deduplicate = additionalFields.deduplicate;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst body = {} as IDataObject;\n\n\t\t\t\t\t\tconst remainingAdditionalFields = omit(additionalFields, 'deduplicate');\n\n\t\t\t\t\t\tif (!isEmpty(remainingAdditionalFields)) {\n\t\t\t\t\t\t\tObject.assign(body, remainingAdditionalFields);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst campaignId = this.getNodeParameter('campaignId', i);\n\t\t\t\t\t\tconst email = this.getNodeParameter('email', i);\n\t\t\t\t\t\tconst endpoint = `/campaigns/${campaignId}/leads/${email}`;\n\n\t\t\t\t\t\tresponseData = await lemlistApiRequest.call(this, 'POST', endpoint, body, qs);\n\t\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         lead: delete\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\t// https://developer.lemlist.com/#delete-a-lead-from-a-campaign\n\n\t\t\t\t\t\tconst campaignId = this.getNodeParameter('campaignId', i);\n\t\t\t\t\t\tconst email = this.getNodeParameter('email', i);\n\t\t\t\t\t\tconst endpoint = `/campaigns/${campaignId}/leads/${email}`;\n\t\t\t\t\t\tresponseData = await lemlistApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\tendpoint,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t{ action: 'remove' },\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         lead: get\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\t// https://developer.lemlist.com/#get-a-specific-lead-by-email\n\n\t\t\t\t\t\tconst email = this.getNodeParameter('email', i);\n\t\t\t\t\t\tresponseData = await lemlistApiRequest.call(this, 'GET', `/leads/${email}`);\n\t\t\t\t\t} else if (operation === 'unsubscribe') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         lead: unsubscribe\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\t// https://developer.lemlist.com/#unsubscribe-a-lead-from-a-campaign\n\n\t\t\t\t\t\tconst campaignId = this.getNodeParameter('campaignId', i);\n\t\t\t\t\t\tconst email = this.getNodeParameter('email', i);\n\t\t\t\t\t\tconst endpoint = `/campaigns/${campaignId}/leads/${email}`;\n\t\t\t\t\t\tresponseData = await lemlistApiRequest.call(this, 'DELETE', endpoint);\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'team') {\n\t\t\t\t\t// *********************************************************************\n\t\t\t\t\t//                             team\n\t\t\t\t\t// *********************************************************************\n\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         team: get\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\t// https://developer.lemlist.com/#team\n\n\t\t\t\t\t\tresponseData = await lemlistApiRequest.call(this, 'GET', '/team');\n\t\t\t\t\t} else if (operation === 'getCredits') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         team: getCredits\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\t// https://developer.lemlist.com/#c9af1cf3-8d3d-469e-a548-268b579d2cb3\n\n\t\t\t\t\t\tresponseData = await lemlistApiRequest.call(this, 'GET', '/team/credits');\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'unsubscribe') {\n\t\t\t\t\t// *********************************************************************\n\t\t\t\t\t//                             unsubscribe\n\t\t\t\t\t// *********************************************************************\n\n\t\t\t\t\tif (operation === 'add') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//        unsubscribe: Add\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\t// https://developer.lemlist.com/#add-an-email-address-in-the-unsubscribes\n\n\t\t\t\t\t\tconst email = this.getNodeParameter('email', i);\n\t\t\t\t\t\tresponseData = await lemlistApiRequest.call(this, 'POST', `/unsubscribes/${email}`);\n\t\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//        unsubscribe: delete\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\t// https://developer.lemlist.com/#delete-an-email-address-from-the-unsubscribes\n\n\t\t\t\t\t\tconst email = this.getNodeParameter('email', i);\n\t\t\t\t\t\tresponseData = await lemlistApiRequest.call(this, 'DELETE', `/unsubscribes/${email}`);\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//        unsubscribe: getAll\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\t// https://developer.lemlist.com/#list-all-unsubscribes\n\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await lemlistApiRequestAllItems.call(this, 'GET', '/unsubscribes', {});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst qs = {\n\t\t\t\t\t\t\t\tlimit: this.getNodeParameter('limit', i),\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tresponseData = await lemlistApiRequest.call(this, 'GET', '/unsubscribes', {}, qs);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'enrich') {\n\t\t\t\t\t// *********************************************************************\n\t\t\t\t\t//                             enrichment\n\t\t\t\t\t// *********************************************************************\n\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//        enrichment: get\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\t// https://developer.lemlist.com/#71b74cc3-8098-4389-b3c2-67a027df9407\n\n\t\t\t\t\t\tconst enrichId = this.getNodeParameter('enrichId', i);\n\n\t\t\t\t\t\tresponseData = await lemlistApiRequest.call(this, 'GET', `/enrich/${enrichId}`);\n\t\t\t\t\t} else if (operation === 'enrichLead') {\n\t\t\t\t\t\t// https://developer.lemlist.com/#fe2a52fc-fa73-46d0-8b7d-395d9653bfd5\n\t\t\t\t\t\tconst findEmail = this.getNodeParameter('findEmail', i);\n\t\t\t\t\t\tconst verifyEmail = this.getNodeParameter('verifyEmail', i);\n\t\t\t\t\t\tconst linkedinEnrichment = this.getNodeParameter('linkedinEnrichment', i);\n\t\t\t\t\t\tconst findPhone = this.getNodeParameter('findPhone', i);\n\t\t\t\t\t\tconst qs = {} as IDataObject;\n\n\t\t\t\t\t\tqs.findEmail = findEmail;\n\t\t\t\t\t\tqs.verifyEmail = verifyEmail;\n\t\t\t\t\t\tqs.linkedinEnrichment = linkedinEnrichment;\n\t\t\t\t\t\tqs.findPhone = findPhone;\n\n\t\t\t\t\t\tconst body = {} as IDataObject;\n\n\t\t\t\t\t\tconst leadId = this.getNodeParameter('leadId', i);\n\t\t\t\t\t\tconst endpoint = `/leads/${leadId}/enrich/`;\n\n\t\t\t\t\t\tresponseData = await lemlistApiRequest.call(this, 'POST', endpoint, body, qs);\n\t\t\t\t\t} else if (operation === 'enrichPerson') {\n\t\t\t\t\t\t// https://developer.lemlist.com/#4ba3d505-0bfa-4f36-8549-f3cb343786bf\n\t\t\t\t\t\tconst findEmail = this.getNodeParameter('findEmail', i);\n\t\t\t\t\t\tconst verifyEmail = this.getNodeParameter('verifyEmail', i);\n\t\t\t\t\t\tconst linkedinEnrichment = this.getNodeParameter('linkedinEnrichment', i);\n\t\t\t\t\t\tconst findPhone = this.getNodeParameter('findPhone', i);\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tconst qs = {} as IDataObject;\n\t\t\t\t\t\tif (!isEmpty(additionalFields)) {\n\t\t\t\t\t\t\tObject.assign(qs, additionalFields);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqs.findEmail = findEmail;\n\t\t\t\t\t\tqs.verifyEmail = verifyEmail;\n\t\t\t\t\t\tqs.linkedinEnrichment = linkedinEnrichment;\n\t\t\t\t\t\tqs.findPhone = findPhone;\n\n\t\t\t\t\t\tconst body = {} as IDataObject;\n\n\t\t\t\t\t\tconst endpoint = '/enrich/';\n\n\t\t\t\t\t\tresponseData = await lemlistApiRequest.call(this, 'POST', endpoint, body, qs);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\n\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject),\n\t\t\t\t{ itemData: { item: i } },\n\t\t\t);\n\n\t\t\treturnData.push(...executionData);\n\t\t}\n\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":["isEmpty","omit"]}