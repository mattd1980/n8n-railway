{"version":3,"sources":["../../../nodes/Lemlist/GenericFunctions.ts"],"sourcesContent":["import { capitalCase } from 'change-case';\nimport type {\n\tIExecuteFunctions,\n\tIHookFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tIHttpRequestMethods,\n\tIRequestOptions,\n} from 'n8n-workflow';\n\n/**\n * Make an authenticated API request to Lemlist.\n */\nexport async function lemlistApiRequest(\n\tthis: IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\tbody: IDataObject = {},\n\tqs: IDataObject = {},\n\toption: IDataObject = {},\n) {\n\tconst options: IRequestOptions = {\n\t\theaders: {},\n\t\tmethod,\n\t\turi: `https://api.lemlist.com/api${endpoint}`,\n\t\tqs,\n\t\tbody,\n\t\tjson: true,\n\t};\n\n\tif (!Object.keys(body).length) {\n\t\tdelete options.body;\n\t}\n\n\tif (!Object.keys(qs).length) {\n\t\tdelete options.qs;\n\t}\n\n\tif (Object.keys(option)) {\n\t\tObject.assign(options, option);\n\t}\n\n\treturn await this.helpers.requestWithAuthentication.call(this, 'lemlistApi', options);\n}\n\n/**\n * Make an authenticated API request to Lemlist and return all results.\n */\nexport async function lemlistApiRequestAllItems(\n\tthis: IExecuteFunctions | ILoadOptionsFunctions | IHookFunctions,\n\tmethod: IHttpRequestMethods,\n\tendpoint: string,\n\tqs: IDataObject = {},\n) {\n\tconst returnData: IDataObject[] = [];\n\n\tlet responseData;\n\n\tqs.limit = 100;\n\tqs.offset = 0;\n\t//when using v2, the pagination is different\n\tif (qs.version && qs.version === 'v2') {\n\t\tqs.page = 1;\n\t\tdo {\n\t\t\tresponseData = await lemlistApiRequest.call(this, method, endpoint, {}, qs);\n\t\t\treturnData.push(...(responseData as IDataObject[]));\n\t\t\tqs.page++;\n\t\t} while (responseData.totalPage && qs.page < responseData.totalPage);\n\t\treturn returnData;\n\t} else {\n\t\tdo {\n\t\t\tresponseData = await lemlistApiRequest.call(this, method, endpoint, {}, qs);\n\t\t\treturnData.push(...(responseData as IDataObject[]));\n\t\t\tqs.offset += qs.limit;\n\t\t} while (responseData.length !== 0);\n\t\treturn returnData;\n\t}\n}\n\nexport function getEvents() {\n\tconst events = [\n\t\t'*',\n\t\t'contacted',\n\t\t'hooked',\n\t\t'attracted',\n\t\t'warmed',\n\t\t'interested',\n\t\t'skipped',\n\t\t'notInterested',\n\t\t'emailsSent',\n\t\t'emailsOpened',\n\t\t'emailsClicked',\n\t\t'emailsReplied',\n\t\t'emailsBounced',\n\t\t'emailsSendFailed',\n\t\t'emailsFailed',\n\t\t'emailsUnsubscribed',\n\t\t'emailsInterested',\n\t\t'emailsNotInterested',\n\t\t'opportunitiesDone',\n\t\t'aircallCreated',\n\t\t'aircallEnded',\n\t\t'aircallDone',\n\t\t'aircallInterested',\n\t\t'aircallNotInterested',\n\t\t'apiDone',\n\t\t'apiInterested',\n\t\t'apiNotInterested',\n\t\t'apiFailed',\n\t\t'linkedinVisitDone',\n\t\t'linkedinVisitFailed',\n\t\t'linkedinInviteDone',\n\t\t'linkedinInviteFailed',\n\t\t'linkedinInviteAccepted',\n\t\t'linkedinReplied',\n\t\t'linkedinSent',\n\t\t'linkedinVoiceNoteDone',\n\t\t'linkedinVoiceNoteFailed',\n\t\t'linkedinInterested',\n\t\t'linkedinNotInterested',\n\t\t'linkedinSendFailed',\n\t\t'manualInterested',\n\t\t'manualNotInterested',\n\t\t'paused',\n\t\t'resumed',\n\t\t'customDomainErrors',\n\t\t'connectionIssue',\n\t\t'sendLimitReached',\n\t\t'lemwarmPaused',\n\t];\n\n\treturn events.map((event: string) => ({\n\t\tname: event === '*' ? '*' : capitalCase(event).replace('Linkedin', 'LinkedIn'),\n\t\tvalue: event,\n\t}));\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAA4B;AAa5B,eAAsB,kBAErB,QACA,UACA,OAAoB,CAAC,GACrB,KAAkB,CAAC,GACnB,SAAsB,CAAC,GACtB;AACD,QAAM,UAA2B;AAAA,IAChC,SAAS,CAAC;AAAA,IACV;AAAA,IACA,KAAK,8BAA8B,QAAQ;AAAA,IAC3C;AAAA,IACA;AAAA,IACA,MAAM;AAAA,EACP;AAEA,MAAI,CAAC,OAAO,KAAK,IAAI,EAAE,QAAQ;AAC9B,WAAO,QAAQ;AAAA,EAChB;AAEA,MAAI,CAAC,OAAO,KAAK,EAAE,EAAE,QAAQ;AAC5B,WAAO,QAAQ;AAAA,EAChB;AAEA,MAAI,OAAO,KAAK,MAAM,GAAG;AACxB,WAAO,OAAO,SAAS,MAAM;AAAA,EAC9B;AAEA,SAAO,MAAM,KAAK,QAAQ,0BAA0B,KAAK,MAAM,cAAc,OAAO;AACrF;AAKA,eAAsB,0BAErB,QACA,UACA,KAAkB,CAAC,GAClB;AACD,QAAM,aAA4B,CAAC;AAEnC,MAAI;AAEJ,KAAG,QAAQ;AACX,KAAG,SAAS;AAEZ,MAAI,GAAG,WAAW,GAAG,YAAY,MAAM;AACtC,OAAG,OAAO;AACV,OAAG;AACF,qBAAe,MAAM,kBAAkB,KAAK,MAAM,QAAQ,UAAU,CAAC,GAAG,EAAE;AAC1E,iBAAW,KAAK,GAAI,YAA8B;AAClD,SAAG;AAAA,IACJ,SAAS,aAAa,aAAa,GAAG,OAAO,aAAa;AAC1D,WAAO;AAAA,EACR,OAAO;AACN,OAAG;AACF,qBAAe,MAAM,kBAAkB,KAAK,MAAM,QAAQ,UAAU,CAAC,GAAG,EAAE;AAC1E,iBAAW,KAAK,GAAI,YAA8B;AAClD,SAAG,UAAU,GAAG;AAAA,IACjB,SAAS,aAAa,WAAW;AACjC,WAAO;AAAA,EACR;AACD;AAEO,SAAS,YAAY;AAC3B,QAAM,SAAS;AAAA,IACdmB;AAAA,IACrC,MAAM,UAAU,MAAM,UAAM,gCAAY,KAAK,EAAE,QAAQ,YAAY,UAAU;AAAA,IAC7E,OAAO;AAAA,EACR,EAAE;AACH;","names":[]}