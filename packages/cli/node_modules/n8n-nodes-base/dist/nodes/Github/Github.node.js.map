{"version":3,"sources":["../../../nodes/Github/Github.node.ts"],"sourcesContent":["import { snakeCase } from 'change-case';\nimport type {\n\tIDataObject,\n\tIExecuteFunctions,\n\tIHttpRequestMethods,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n\tIWebhookFunctions,\n\tIWebhookResponseData,\n\tJsonObject,\n} from 'n8n-workflow';\nimport {\n\tNodeApiError,\n\tNodeConnectionTypes,\n\tNodeOperationError,\n\tWAIT_INDEFINITELY,\n} from 'n8n-workflow';\n\nimport {\n\tgetFileSha,\n\tgithubApiRequest,\n\tgithubApiRequestAllItems,\n\tisBase64,\n\tvalidateJSON,\n} from './GenericFunctions';\nimport { getRefs, getRepositories, getUsers, getWorkflows } from './SearchFunctions';\nimport { defaultWebhookDescription } from '../Webhook/description';\n\nexport class Github implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'GitHub',\n\t\tname: 'github',\n\t\ticon: {\n\t\t\tlight: 'file:github.svg',\n\t\t\tdark: 'file:github.dark.svg',\n\t\t},\n\t\tgroup: ['input'],\n\t\tversion: [1, 1.1],\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume GitHub API',\n\t\tdefaults: {\n\t\t\tname: 'GitHub',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\twebhooks: [\n\t\t\t{\n\t\t\t\t...defaultWebhookDescription,\n\t\t\t\tpath: '',\n\t\t\t\trestartWebhook: true,\n\t\t\t\thttpMethod: 'POST',\n\t\t\t\tresponseMode: 'onReceived',\n\t\t\t},\n\t\t],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'githubApi',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['accessToken'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'githubOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tauthentication: ['oAuth2'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Authentication',\n\t\t\t\tname: 'authentication',\n\t\t\t\ttype: 'options',\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Access Token',\n\t\t\t\t\t\tvalue: 'accessToken',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'OAuth2',\n\t\t\t\t\t\tvalue: 'oAuth2',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'accessToken',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'File',\n\t\t\t\t\t\tvalue: 'file',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Issue',\n\t\t\t\t\t\tvalue: 'issue',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Organization',\n\t\t\t\t\t\tvalue: 'organization',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Release',\n\t\t\t\t\t\tvalue: 'release',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Repository',\n\t\t\t\t\t\tvalue: 'repository',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Review',\n\t\t\t\t\t\tvalue: 'review',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'User',\n\t\t\t\t\t\tvalue: 'user',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Workflow',\n\t\t\t\t\t\tvalue: 'workflow',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'issue',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         operations\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['organization'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get Repositories',\n\t\t\t\t\t\tvalue: 'getRepositories',\n\t\t\t\t\t\tdescription: 'Returns all repositories of an organization',\n\t\t\t\t\t\taction: 'Get repositories for an organization',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'getRepositories',\n\t\t\t},\n\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['issue'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Create',\n\t\t\t\t\t\tvalue: 'create',\n\t\t\t\t\t\tdescription: 'Create a new issue',\n\t\t\t\t\t\taction: 'Create an issue',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Create Comment',\n\t\t\t\t\t\tvalue: 'createComment',\n\t\t\t\t\t\tdescription: 'Create a new comment on an issue',\n\t\t\t\t\t\taction: 'Create a comment on an issue',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Edit',\n\t\t\t\t\t\tvalue: 'edit',\n\t\t\t\t\t\tdescription: 'Edit an issue',\n\t\t\t\t\t\taction: 'Edit an issue',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get',\n\t\t\t\t\t\tvalue: 'get',\n\t\t\t\t\t\tdescription: 'Get the data of a single issue',\n\t\t\t\t\t\taction: 'Get an issue',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Lock',\n\t\t\t\t\t\tvalue: 'lock',\n\t\t\t\t\t\tdescription: 'Lock an issue',\n\t\t\t\t\t\taction: 'Lock an issue',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'create',\n\t\t\t},\n\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['file'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Create',\n\t\t\t\t\t\tvalue: 'create',\n\t\t\t\t\t\tdescription: 'Create a new file in repository',\n\t\t\t\t\t\taction: 'Create a file',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Delete',\n\t\t\t\t\t\tvalue: 'delete',\n\t\t\t\t\t\tdescription: 'Delete a file in repository',\n\t\t\t\t\t\taction: 'Delete a file',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Edit',\n\t\t\t\t\t\tvalue: 'edit',\n\t\t\t\t\t\tdescription: 'Edit a file in repository',\n\t\t\t\t\t\taction: 'Edit a file',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get',\n\t\t\t\t\t\tvalue: 'get',\n\t\t\t\t\t\tdescription: 'Get the data of a single file',\n\t\t\t\t\t\taction: 'Get a file',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'List',\n\t\t\t\t\t\tvalue: 'list',\n\t\t\t\t\t\tdescription: 'List contents of a folder',\n\t\t\t\t\t\taction: 'List files',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'create',\n\t\t\t},\n\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['repository'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get',\n\t\t\t\t\t\tvalue: 'get',\n\t\t\t\t\t\tdescription: 'Get the data of a single repository',\n\t\t\t\t\t\taction: 'Get a repository',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get Issues',\n\t\t\t\t\t\tvalue: 'getIssues',\n\t\t\t\t\t\tdescription: 'Returns issues of a repository',\n\t\t\t\t\t\taction: 'Get issues of a repository',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get License',\n\t\t\t\t\t\tvalue: 'getLicense',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\"Returns the contents of the repository's license file, if one is detected\",\n\t\t\t\t\t\taction: 'Get the license of a repository',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get Profile',\n\t\t\t\t\t\tvalue: 'getProfile',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Get the community profile of a repository with metrics, health score, description, license, etc',\n\t\t\t\t\t\taction: 'Get the profile of a repository',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get Pull Requests',\n\t\t\t\t\t\tvalue: 'getPullRequests',\n\t\t\t\t\t\tdescription: 'Returns pull requests of a repository',\n\t\t\t\t\t\taction: 'Get pull requests of a repository',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'List Popular Paths',\n\t\t\t\t\t\tvalue: 'listPopularPaths',\n\t\t\t\t\t\tdescription: 'Get the top 10 popular content paths over the last 14 days',\n\t\t\t\t\t\taction: 'List popular paths in a repository',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'List Referrers',\n\t\t\t\t\t\tvalue: 'listReferrers',\n\t\t\t\t\t\tdescription: 'Get the top 10 referrering domains over the last 14 days',\n\t\t\t\t\t\taction: 'List the top referrers of a repository',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'getIssues',\n\t\t\t},\n\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['user'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get Repositories',\n\t\t\t\t\t\tvalue: 'getRepositories',\n\t\t\t\t\t\tdescription: 'Returns the repositories of a user',\n\t\t\t\t\t\taction: \"Get a user's repositories\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Invite',\n\t\t\t\t\t\tvalue: 'invite',\n\t\t\t\t\t\tdescription: 'Invites a user to an organization',\n\t\t\t\t\t\taction: 'Invite a user',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'getRepositories',\n\t\t\t},\n\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['release'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Create',\n\t\t\t\t\t\tvalue: 'create',\n\t\t\t\t\t\tdescription: 'Creates a new release',\n\t\t\t\t\t\taction: 'Create a release',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Delete',\n\t\t\t\t\t\tvalue: 'delete',\n\t\t\t\t\t\tdescription: 'Delete a release',\n\t\t\t\t\t\taction: 'Delete a release',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get',\n\t\t\t\t\t\tvalue: 'get',\n\t\t\t\t\t\tdescription: 'Get a release',\n\t\t\t\t\t\taction: 'Get a release',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get Many',\n\t\t\t\t\t\tvalue: 'getAll',\n\t\t\t\t\t\tdescription: 'Get many repository releases',\n\t\t\t\t\t\taction: 'Get many releases',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Update',\n\t\t\t\t\t\tvalue: 'update',\n\t\t\t\t\t\tdescription: 'Update a release',\n\t\t\t\t\t\taction: 'Update a release',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'create',\n\t\t\t},\n\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['review'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Create',\n\t\t\t\t\t\tvalue: 'create',\n\t\t\t\t\t\tdescription: 'Creates a new review',\n\t\t\t\t\t\taction: 'Create a review',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get',\n\t\t\t\t\t\tvalue: 'get',\n\t\t\t\t\t\tdescription: 'Get a review for a pull request',\n\t\t\t\t\t\taction: 'Get a review',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get Many',\n\t\t\t\t\t\tvalue: 'getAll',\n\t\t\t\t\t\tdescription: 'Get many reviews for a pull request',\n\t\t\t\t\t\taction: 'Get many reviews',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Update',\n\t\t\t\t\t\tvalue: 'update',\n\t\t\t\t\t\tdescription: 'Update a review',\n\t\t\t\t\t\taction: 'Update a review',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'create',\n\t\t\t},\n\n\t\t\t{\n\t\t\t\tdisplayName: 'Operation',\n\t\t\t\tname: 'operation',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['workflow'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Disable',\n\t\t\t\t\t\tvalue: 'disable',\n\t\t\t\t\t\tdescription: 'Disable a workflow',\n\t\t\t\t\t\taction: 'Disable a workflow',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Dispatch',\n\t\t\t\t\t\tvalue: 'dispatch',\n\t\t\t\t\t\tdescription: 'Dispatch a workflow event',\n\t\t\t\t\t\taction: 'Dispatch a workflow event',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Dispatch and Wait for Completion',\n\t\t\t\t\t\tvalue: 'dispatchAndWait',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Dispatch a workflow event and wait for a webhook to be called before proceeding',\n\t\t\t\t\t\taction: 'Dispatch a workflow event and wait for completion',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Enable',\n\t\t\t\t\t\tvalue: 'enable',\n\t\t\t\t\t\tdescription: 'Enable a workflow',\n\t\t\t\t\t\taction: 'Enable a workflow',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get',\n\t\t\t\t\t\tvalue: 'get',\n\t\t\t\t\t\tdescription: 'Get a workflow',\n\t\t\t\t\t\taction: 'Get a workflow',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Get Usage',\n\t\t\t\t\t\tvalue: 'getUsage',\n\t\t\t\t\t\tdescription: 'Get the usage of a workflow',\n\t\t\t\t\t\taction: 'Get the usage of a workflow',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'List',\n\t\t\t\t\t\tvalue: 'list',\n\t\t\t\t\t\tdescription: 'List workflows',\n\t\t\t\t\t\taction: 'List workflows',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'dispatch',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName:\n\t\t\t\t\t'Your execution will pause until a webhook is called. This URL will be generated at runtime and passed to your Github workflow as a resumeUrl input.',\n\t\t\t\tname: 'webhookNotice',\n\t\t\t\ttype: 'notice',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['workflow'],\n\t\t\t\t\t\toperation: ['dispatchAndWait'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         shared\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Repository Owner',\n\t\t\t\tname: 'owner',\n\t\t\t\ttype: 'resourceLocator',\n\t\t\t\tdefault: { mode: 'list', value: '' },\n\t\t\t\trequired: true,\n\t\t\t\tmodes: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Repository Owner',\n\t\t\t\t\t\tname: 'list',\n\t\t\t\t\t\ttype: 'list',\n\t\t\t\t\t\tplaceholder: 'Select an owner...',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tsearchListMethod: 'getUsers',\n\t\t\t\t\t\t\tsearchable: true,\n\t\t\t\t\t\t\tsearchFilterRequired: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Link',\n\t\t\t\t\t\tname: 'url',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tplaceholder: 'e.g. https://github.com/n8n-io',\n\t\t\t\t\t\textractValue: {\n\t\t\t\t\t\t\ttype: 'regex',\n\t\t\t\t\t\t\tregex: 'https:\\\\/\\\\/github.com\\\\/([-_0-9a-zA-Z]+)',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tvalidation: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'regex',\n\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\tregex: 'https:\\\\/\\\\/github.com\\\\/([-_0-9a-zA-Z]+)(?:.*)',\n\t\t\t\t\t\t\t\t\terrorMessage: 'Not a valid Github URL',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'By Name',\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tplaceholder: 'e.g. n8n-io',\n\t\t\t\t\t\tvalidation: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'regex',\n\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\tregex: '[-_a-zA-Z0-9]+',\n\t\t\t\t\t\t\t\t\terrorMessage: 'Not a valid Github Owner Name',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\turl: '=https://github.com/{{$value}}',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\thide: {\n\t\t\t\t\t\toperation: ['invite'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Repository Name',\n\t\t\t\tname: 'repository',\n\t\t\t\ttype: 'resourceLocator',\n\t\t\t\tdefault: {\n\t\t\t\t\tmode: 'list',\n\t\t\t\t\tvalue: '',\n\t\t\t\t},\n\t\t\t\trequired: true,\n\t\t\t\tmodes: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Repository Name',\n\t\t\t\t\t\tname: 'list',\n\t\t\t\t\t\ttype: 'list',\n\t\t\t\t\t\tplaceholder: 'Select an Repository...',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tsearchListMethod: 'getRepositories',\n\t\t\t\t\t\t\tsearchable: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Link',\n\t\t\t\t\t\tname: 'url',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tplaceholder: 'e.g. https://github.com/n8n-io/n8n',\n\t\t\t\t\t\textractValue: {\n\t\t\t\t\t\t\ttype: 'regex',\n\t\t\t\t\t\t\tregex: 'https:\\\\/\\\\/github.com\\\\/(?:[-_0-9a-zA-Z]+)\\\\/([-_.0-9a-zA-Z]+)',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tvalidation: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'regex',\n\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\tregex: 'https:\\\\/\\\\/github.com\\\\/(?:[-_0-9a-zA-Z]+)\\\\/([-_.0-9a-zA-Z]+)(?:.*)',\n\t\t\t\t\t\t\t\t\terrorMessage: 'Not a valid Github Repository URL',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'By Name',\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tplaceholder: 'e.g. n8n',\n\t\t\t\t\t\tvalidation: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'regex',\n\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\tregex: '[-_.0-9a-zA-Z]+',\n\t\t\t\t\t\t\t\t\terrorMessage: 'Not a valid Github Repository Name',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\turl: '=https://github.com/{{$parameter[\"owner\"]}}/{{$value}}',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\thide: {\n\t\t\t\t\t\tresource: ['user', 'organization'],\n\t\t\t\t\t\toperation: ['getRepositories'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         workflow\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Workflow',\n\t\t\t\tname: 'workflowId',\n\t\t\t\ttype: 'resourceLocator',\n\t\t\t\tdefault: {\n\t\t\t\t\tmode: 'list',\n\t\t\t\t\tvalue: '',\n\t\t\t\t},\n\t\t\t\trequired: true,\n\t\t\t\tmodes: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Workflow',\n\t\t\t\t\t\tname: 'list',\n\t\t\t\t\t\ttype: 'list',\n\t\t\t\t\t\tplaceholder: 'Select a workflow...',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tsearchListMethod: 'getWorkflows',\n\t\t\t\t\t\t\tsearchable: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'By File Name',\n\t\t\t\t\t\tname: 'filename',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tplaceholder: 'e.g. main.yaml or main.yml',\n\t\t\t\t\t\tvalidation: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'regex',\n\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\tregex: '[a-zA-Z0-9_-]+.(yaml|yml)',\n\t\t\t\t\t\t\t\t\terrorMessage: 'Not a valid Github Workflow File Name',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'By ID',\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tplaceholder: 'e.g. 12345678',\n\t\t\t\t\t\tvalidation: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'regex',\n\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\tregex: '\\\\d+',\n\t\t\t\t\t\t\t\t\terrorMessage: 'Not a valid Github Workflow ID',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['workflow'],\n\t\t\t\t\t\toperation: ['disable', 'dispatch', 'dispatchAndWait', 'get', 'getUsage', 'enable'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The workflow to dispatch',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Ref',\n\t\t\t\tname: 'ref',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: 'main',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['workflow'],\n\t\t\t\t\t\toperation: ['dispatch', 'dispatchAndWait'],\n\t\t\t\t\t\t'@version': [{ _cnd: { lte: 1 } }],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The git reference for the workflow dispatch (branch or tag name)',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Ref',\n\t\t\t\tname: 'ref',\n\t\t\t\ttype: 'resourceLocator',\n\t\t\t\tdefault: {\n\t\t\t\t\tmode: 'list',\n\t\t\t\t\tvalue: '',\n\t\t\t\t},\n\t\t\t\trequired: true,\n\t\t\t\tmodes: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'From List',\n\t\t\t\t\t\tname: 'list',\n\t\t\t\t\t\ttype: 'list',\n\t\t\t\t\t\tplaceholder: 'Select a branch, tag, or commit...',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tsearchListMethod: 'getRefs',\n\t\t\t\t\t\t\tsearchable: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'By Name',\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tplaceholder: 'e.g. main',\n\t\t\t\t\t\tvalidation: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'regex',\n\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\tregex: '^[a-zA-Z0-9/._-]+$',\n\t\t\t\t\t\t\t\t\terrorMessage: 'Not a valid branch, tag',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['workflow'],\n\t\t\t\t\t\toperation: ['dispatch', 'dispatchAndWait'],\n\t\t\t\t\t\t'@version': [{ _cnd: { gte: 1.1 } }],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The git reference for the workflow dispatch (branch, tag, or commit SHA)',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Inputs',\n\t\t\t\tname: 'inputs',\n\t\t\t\ttype: 'json',\n\t\t\t\tdefault: '{}',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['workflow'],\n\t\t\t\t\t\toperation: ['dispatch', 'dispatchAndWait'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'JSON object with input parameters for the workflow',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         file\n\t\t\t// ----------------------------------\n\n\t\t\t// ----------------------------------\n\t\t\t//         file:create/delete/edit/get\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'File Path',\n\t\t\t\tname: 'filePath',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['file'],\n\t\t\t\t\t},\n\t\t\t\t\thide: {\n\t\t\t\t\t\toperation: ['list'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplaceholder: 'docs/README.md',\n\t\t\t\tdescription: 'The file path of the file. Has to contain the full path.',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         file:list\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Path',\n\t\t\t\tname: 'filePath',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['file'],\n\t\t\t\t\t\toperation: ['list'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplaceholder: 'docs/',\n\t\t\t\tdescription: 'The path of the folder to list',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         file:create/edit\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Binary File',\n\t\t\t\tname: 'binaryData',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: false,\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['create', 'edit'],\n\t\t\t\t\t\tresource: ['file'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'Whether the data to upload should be taken from binary field',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'File Content',\n\t\t\t\tname: 'fileContent',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tbinaryData: [false],\n\t\t\t\t\t\toperation: ['create', 'edit'],\n\t\t\t\t\t\tresource: ['file'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplaceholder: '',\n\t\t\t\tdescription: 'The text content of the file',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Input Binary Field',\n\t\t\t\tname: 'binaryPropertyName',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: 'data',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tbinaryData: [true],\n\t\t\t\t\t\toperation: ['create', 'edit'],\n\t\t\t\t\t\tresource: ['file'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplaceholder: '',\n\t\t\t\thint: 'The name of the input binary field containing the file to be written',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Commit Message',\n\t\t\t\tname: 'commitMessage',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['create', 'delete', 'edit'],\n\t\t\t\t\t\tresource: ['file'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Additional Parameters',\n\t\t\t\tname: 'additionalParameters',\n\t\t\t\tplaceholder: 'Add Parameter',\n\t\t\t\tdescription: 'Additional fields to add',\n\t\t\t\ttype: 'fixedCollection',\n\t\t\t\tdefault: {},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['create', 'delete', 'edit'],\n\t\t\t\t\t\tresource: ['file'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'author',\n\t\t\t\t\t\tdisplayName: 'Author',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Name',\n\t\t\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\tdescription: 'The name of the author of the commit',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Email',\n\t\t\t\t\t\t\t\tname: 'email',\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tplaceholder: 'name@email.com',\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\tdescription: 'The email of the author of the commit',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'branch',\n\t\t\t\t\t\tdisplayName: 'Branch',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Branch',\n\t\t\t\t\t\t\t\tname: 'branch',\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t'The branch to commit to. If not set the repository’s default branch (usually master) is used.',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'committer',\n\t\t\t\t\t\tdisplayName: 'Committer',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Name',\n\t\t\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\tdescription: 'The name of the committer of the commit',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Email',\n\t\t\t\t\t\t\t\tname: 'email',\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tplaceholder: 'name@email.com',\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\tdescription: 'The email of the committer of the commit',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         file:get\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'As Binary Property',\n\t\t\t\tname: 'asBinaryProperty',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['get'],\n\t\t\t\t\t\tresource: ['file'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription:\n\t\t\t\t\t'Whether to set the data of the file as binary property instead of returning the raw API response',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Put Output File in Field',\n\t\t\t\tname: 'binaryPropertyName',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: 'data',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tasBinaryProperty: [true],\n\t\t\t\t\t\toperation: ['get'],\n\t\t\t\t\t\tresource: ['file'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplaceholder: '',\n\t\t\t\thint: 'The name of the output binary field to put the file in',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Additional Parameters',\n\t\t\t\tname: 'additionalParameters',\n\t\t\t\tplaceholder: 'Add Parameter',\n\t\t\t\tdescription: 'Additional fields to add',\n\t\t\t\ttype: 'collection',\n\t\t\t\tdefault: {},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['get'],\n\t\t\t\t\t\tresource: ['file'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Reference',\n\t\t\t\t\t\tname: 'reference',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tplaceholder: 'master',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'The name of the commit/branch/tag. Default: the repository’s default branch (usually master).',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         issue\n\t\t\t// ----------------------------------\n\n\t\t\t// ----------------------------------\n\t\t\t//         issue:create\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Title',\n\t\t\t\tname: 'title',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t\tresource: ['issue'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The title of the issue',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Body',\n\t\t\t\tname: 'body',\n\t\t\t\ttype: 'string',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\trows: 5,\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t\tresource: ['issue'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The body of the issue',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Labels',\n\t\t\t\tname: 'labels',\n\t\t\t\ttype: 'collection',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tmultipleValues: true,\n\t\t\t\t\tmultipleValueButtonText: 'Add Label',\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t\tresource: ['issue'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: { label: '' },\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Label',\n\t\t\t\t\t\tname: 'label',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Label to add to issue',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Assignees',\n\t\t\t\tname: 'assignees',\n\t\t\t\ttype: 'collection',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tmultipleValues: true,\n\t\t\t\t\tmultipleValueButtonText: 'Add Assignee',\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t\tresource: ['issue'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: { assignee: '' },\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Assignee',\n\t\t\t\t\t\tname: 'assignee',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'User to assign issue too',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         issue:createComment\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Issue Number',\n\t\t\t\tname: 'issueNumber',\n\t\t\t\ttype: 'number',\n\t\t\t\tdefault: 0,\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['createComment'],\n\t\t\t\t\t\tresource: ['issue'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The number of the issue on which to create the comment on',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Body',\n\t\t\t\tname: 'body',\n\t\t\t\ttype: 'string',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\trows: 5,\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['createComment'],\n\t\t\t\t\t\tresource: ['issue'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\tdescription: 'The body of the comment',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         issue:edit\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Issue Number',\n\t\t\t\tname: 'issueNumber',\n\t\t\t\ttype: 'number',\n\t\t\t\tdefault: 0,\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['edit'],\n\t\t\t\t\t\tresource: ['issue'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The number of the issue edit',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Edit Fields',\n\t\t\t\tname: 'editFields',\n\t\t\t\ttype: 'collection',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tmultipleValueButtonText: 'Add Field',\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['edit'],\n\t\t\t\t\t\tresource: ['issue'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: {},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Assignees',\n\t\t\t\t\t\tname: 'assignees',\n\t\t\t\t\t\ttype: 'collection',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tmultipleValues: true,\n\t\t\t\t\t\t\tmultipleValueButtonText: 'Add Assignee',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefault: { assignee: '' },\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Assignees',\n\t\t\t\t\t\t\t\tname: 'assignee',\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\tdescription: 'User to assign issue to',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Body',\n\t\t\t\t\t\tname: 'body',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\trows: 5,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'The body of the issue',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Labels',\n\t\t\t\t\t\tname: 'labels',\n\t\t\t\t\t\ttype: 'collection',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\tmultipleValues: true,\n\t\t\t\t\t\t\tmultipleValueButtonText: 'Add Label',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefault: { label: '' },\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Label',\n\t\t\t\t\t\t\t\tname: 'label',\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\t\t\tdescription: 'Label to add to issue',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'State',\n\t\t\t\t\t\tname: 'state',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Closed',\n\t\t\t\t\t\t\t\tvalue: 'closed',\n\t\t\t\t\t\t\t\tdescription: 'Set the state to \"closed\"',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Open',\n\t\t\t\t\t\t\t\tvalue: 'open',\n\t\t\t\t\t\t\t\tdescription: 'Set the state to \"open\"',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: 'open',\n\t\t\t\t\t\tdescription: 'The state to set',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'State Reason',\n\t\t\t\t\t\tname: 'state_reason',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Completed',\n\t\t\t\t\t\t\t\tvalue: 'completed',\n\t\t\t\t\t\t\t\tdescription: 'Issue is completed',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Not Planned',\n\t\t\t\t\t\t\t\tvalue: 'not_planned',\n\t\t\t\t\t\t\t\tdescription: 'Issue is not planned',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Reopened',\n\t\t\t\t\t\t\t\tvalue: 'reopened',\n\t\t\t\t\t\t\t\tdescription: 'Issue is reopened',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: 'completed',\n\t\t\t\t\t\tdescription: 'The reason for the state change',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Title',\n\t\t\t\t\t\tname: 'title',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'The title of the issue',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         issue:get\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Issue Number',\n\t\t\t\tname: 'issueNumber',\n\t\t\t\ttype: 'number',\n\t\t\t\tdefault: 0,\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['get'],\n\t\t\t\t\t\tresource: ['issue'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The issue number to get data for',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         issue:lock\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Issue Number',\n\t\t\t\tname: 'issueNumber',\n\t\t\t\ttype: 'number',\n\t\t\t\tdefault: 0,\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['lock'],\n\t\t\t\t\t\tresource: ['issue'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The issue number to lock',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Lock Reason',\n\t\t\t\tname: 'lockReason',\n\t\t\t\ttype: 'options',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['lock'],\n\t\t\t\t\t\tresource: ['issue'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Off-Topic',\n\t\t\t\t\t\tvalue: 'off-topic',\n\t\t\t\t\t\tdescription: 'The issue is Off-Topic',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Too Heated',\n\t\t\t\t\t\tvalue: 'too heated',\n\t\t\t\t\t\tdescription: 'The discussion is too heated',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Resolved',\n\t\t\t\t\t\tvalue: 'resolved',\n\t\t\t\t\t\tdescription: 'The issue got resolved',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Spam',\n\t\t\t\t\t\tvalue: 'spam',\n\t\t\t\t\t\tdescription: 'The issue is spam',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'resolved',\n\t\t\t\tdescription: 'The reason for locking the issue',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         release\n\t\t\t// ----------------------------------\n\n\t\t\t// ----------------------------------\n\t\t\t//         release:create\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Tag',\n\t\t\t\tname: 'releaseTag',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t\tresource: ['release'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The tag of the release',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Additional Fields',\n\t\t\t\tname: 'additionalFields',\n\t\t\t\ttype: 'collection',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tmultipleValueButtonText: 'Add Field',\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t\tresource: ['release'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: {},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Name',\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'The name of the issue',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Body',\n\t\t\t\t\t\tname: 'body',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\trows: 5,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'The body of the release',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Draft',\n\t\t\t\t\t\tname: 'draft',\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Whether to create a draft (unpublished) release, \"false\" to create a published one',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Prerelease',\n\t\t\t\t\t\tname: 'prerelease',\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\tdescription: 'Whether to point out that the release is non-production ready',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Target Commitish',\n\t\t\t\t\t\tname: 'target_commitish',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\"Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch(usually master).\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         release:get/delete/update\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Release ID',\n\t\t\t\tname: 'release_id',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['release'],\n\t\t\t\t\t\toperation: ['get', 'delete', 'update'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         release:update\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Additional Fields',\n\t\t\t\tname: 'additionalFields',\n\t\t\t\ttype: 'collection',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tmultipleValueButtonText: 'Add Field',\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['update'],\n\t\t\t\t\t\tresource: ['release'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: {},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Body',\n\t\t\t\t\t\tname: 'body',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\t\trows: 5,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'The body of the release',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Draft',\n\t\t\t\t\t\tname: 'draft',\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Whether to create a draft (unpublished) release, \"false\" to create a published one',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Name',\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'The name of the release',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Prerelease',\n\t\t\t\t\t\tname: 'prerelease',\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\tdescription: 'Whether to point out that the release is non-production ready',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Tag Name',\n\t\t\t\t\t\tname: 'tag_name',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'The name of the tag',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Target Commitish',\n\t\t\t\t\t\tname: 'target_commitish',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\"Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch(usually master).\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         release:getAll\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Return All',\n\t\t\t\tname: 'returnAll',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['release'],\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: 'Whether to return all results or only up to a given limit',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Limit',\n\t\t\t\tname: 'limit',\n\t\t\t\ttype: 'number',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['release'],\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t\treturnAll: [false],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tminValue: 1,\n\t\t\t\t\tmaxValue: 100,\n\t\t\t\t},\n\t\t\t\tdefault: 50,\n\t\t\t\tdescription: 'Max number of results to return',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         repository\n\t\t\t// ----------------------------------\n\n\t\t\t// ----------------------------------\n\t\t\t//         repository:getIssues\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Return All',\n\t\t\t\tname: 'returnAll',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['repository'],\n\t\t\t\t\t\toperation: ['getIssues'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: 'Whether to return all results or only up to a given limit',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Limit',\n\t\t\t\tname: 'limit',\n\t\t\t\ttype: 'number',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['repository'],\n\t\t\t\t\t\toperation: ['getIssues'],\n\t\t\t\t\t\treturnAll: [false],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tminValue: 1,\n\t\t\t\t\tmaxValue: 100,\n\t\t\t\t},\n\t\t\t\tdefault: 50,\n\t\t\t\tdescription: 'Max number of results to return',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Filters',\n\t\t\t\tname: 'getRepositoryIssuesFilters',\n\t\t\t\ttype: 'collection',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tmultipleValueButtonText: 'Add Filter',\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['getIssues'],\n\t\t\t\t\t\tresource: ['repository'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: {},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Assignee',\n\t\t\t\t\t\tname: 'assignee',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Return only issues which are assigned to a specific user',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Creator',\n\t\t\t\t\t\tname: 'creator',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Return only issues which were created by a specific user',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Mentioned',\n\t\t\t\t\t\tname: 'mentioned',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Return only issues in which a specific user was mentioned',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Labels',\n\t\t\t\t\t\tname: 'labels',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t'Return only issues with the given labels. Multiple labels can be separated by comma.',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Updated Since',\n\t\t\t\t\t\tname: 'since',\n\t\t\t\t\t\ttype: 'dateTime',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'Return only issues updated at or after this time',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'State',\n\t\t\t\t\t\tname: 'state',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'All',\n\t\t\t\t\t\t\t\tvalue: 'all',\n\t\t\t\t\t\t\t\tdescription: 'Returns issues with any state',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Closed',\n\t\t\t\t\t\t\t\tvalue: 'closed',\n\t\t\t\t\t\t\t\tdescription: 'Return issues with \"closed\" state',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Open',\n\t\t\t\t\t\t\t\tvalue: 'open',\n\t\t\t\t\t\t\t\tdescription: 'Return issues with \"open\" state',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: 'open',\n\t\t\t\t\t\tdescription: 'The state to set',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Sort',\n\t\t\t\t\t\tname: 'sort',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Created',\n\t\t\t\t\t\t\t\tvalue: 'created',\n\t\t\t\t\t\t\t\tdescription: 'Sort by created date',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Updated',\n\t\t\t\t\t\t\t\tvalue: 'updated',\n\t\t\t\t\t\t\t\tdescription: 'Sort by updated date',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Comments',\n\t\t\t\t\t\t\t\tvalue: 'comments',\n\t\t\t\t\t\t\t\tdescription: 'Sort by comments',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: 'created',\n\t\t\t\t\t\tdescription: 'The order the issues should be returned in',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Direction',\n\t\t\t\t\t\tname: 'direction',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Ascending',\n\t\t\t\t\t\t\t\tvalue: 'asc',\n\t\t\t\t\t\t\t\tdescription: 'Sort in ascending order',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Descending',\n\t\t\t\t\t\t\t\tvalue: 'desc',\n\t\t\t\t\t\t\t\tdescription: 'Sort in descending order',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: 'desc',\n\t\t\t\t\t\tdescription: 'The sort order',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         repository:getPullRequests\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Return All',\n\t\t\t\tname: 'returnAll',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['repository'],\n\t\t\t\t\t\toperation: ['getPullRequests'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: 'Whether to return all results or only up to a given limit',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Limit',\n\t\t\t\tname: 'limit',\n\t\t\t\ttype: 'number',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['repository'],\n\t\t\t\t\t\toperation: ['getPullRequests'],\n\t\t\t\t\t\treturnAll: [false],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tminValue: 1,\n\t\t\t\t\tmaxValue: 100,\n\t\t\t\t},\n\t\t\t\tdefault: 50,\n\t\t\t\tdescription: 'Max number of results to return',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Filters',\n\t\t\t\tname: 'getRepositoryPullRequestsFilters',\n\t\t\t\ttype: 'collection',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tmultipleValueButtonText: 'Add Filter',\n\t\t\t\t},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['getPullRequests'],\n\t\t\t\t\t\tresource: ['repository'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: {},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'State',\n\t\t\t\t\t\tname: 'state',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'All',\n\t\t\t\t\t\t\t\tvalue: 'all',\n\t\t\t\t\t\t\t\tdescription: 'Returns pull requests with any state',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Closed',\n\t\t\t\t\t\t\t\tvalue: 'closed',\n\t\t\t\t\t\t\t\tdescription: 'Return pull requests with \"closed\" state',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Open',\n\t\t\t\t\t\t\t\tvalue: 'open',\n\t\t\t\t\t\t\t\tdescription: 'Return pull requests with \"open\" state',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: 'open',\n\t\t\t\t\t\tdescription: 'The state to set',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Sort',\n\t\t\t\t\t\tname: 'sort',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Created',\n\t\t\t\t\t\t\t\tvalue: 'created',\n\t\t\t\t\t\t\t\tdescription: 'Sort by created date',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Updated',\n\t\t\t\t\t\t\t\tvalue: 'updated',\n\t\t\t\t\t\t\t\tdescription: 'Sort by updated date',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Popularity',\n\t\t\t\t\t\t\t\tvalue: 'popularity',\n\t\t\t\t\t\t\t\tdescription: 'Sort by number of comments',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Long-Running',\n\t\t\t\t\t\t\t\tvalue: 'long-running',\n\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t'Sort by date created and will limit the results to pull requests that have been open for more than a month and have had activity within the past month',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: 'created',\n\t\t\t\t\t\tdescription: 'The order the pull requests should be returned in',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Direction',\n\t\t\t\t\t\tname: 'direction',\n\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Ascending',\n\t\t\t\t\t\t\t\tvalue: 'asc',\n\t\t\t\t\t\t\t\tdescription: 'Sort in ascending order',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'Descending',\n\t\t\t\t\t\t\t\tvalue: 'desc',\n\t\t\t\t\t\t\t\tdescription: 'Sort in descending order',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdefault: 'desc',\n\t\t\t\t\t\tdescription: 'The sort order',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         rerview\n\t\t\t// ----------------------------------\n\n\t\t\t// ----------------------------------\n\t\t\t//         review:getAll\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'PR Number',\n\t\t\t\tname: 'pullRequestNumber',\n\t\t\t\ttype: 'number',\n\t\t\t\tdefault: 0,\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['get', 'update'],\n\t\t\t\t\t\tresource: ['review'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The number of the pull request',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Review ID',\n\t\t\t\tname: 'reviewId',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['get', 'update'],\n\t\t\t\t\t\tresource: ['review'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'ID of the review',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         review:getAll\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'PR Number',\n\t\t\t\tname: 'pullRequestNumber',\n\t\t\t\ttype: 'number',\n\t\t\t\tdefault: 0,\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t\tresource: ['review'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The number of the pull request',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Return All',\n\t\t\t\tname: 'returnAll',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['review'],\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: 'Whether to return all results or only up to a given limit',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Limit',\n\t\t\t\tname: 'limit',\n\t\t\t\ttype: 'number',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['review'],\n\t\t\t\t\t\toperation: ['getAll'],\n\t\t\t\t\t\treturnAll: [false],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tminValue: 1,\n\t\t\t\t\tmaxValue: 100,\n\t\t\t\t},\n\t\t\t\tdefault: 50,\n\t\t\t\tdescription: 'Max number of results to return',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         review:create\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'PR Number',\n\t\t\t\tname: 'pullRequestNumber',\n\t\t\t\ttype: 'number',\n\t\t\t\tdefault: 0,\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t\tresource: ['review'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The number of the pull request to review',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Event',\n\t\t\t\tname: 'event',\n\t\t\t\ttype: 'options',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t\tresource: ['review'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Approve',\n\t\t\t\t\t\tvalue: 'approve',\n\t\t\t\t\t\tdescription: 'Approve the pull request',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Request Change',\n\t\t\t\t\t\tvalue: 'requestChanges',\n\t\t\t\t\t\tdescription: 'Request code changes',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Comment',\n\t\t\t\t\t\tvalue: 'comment',\n\t\t\t\t\t\tdescription: 'Add a comment without approval or change requests',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Pending',\n\t\t\t\t\t\tvalue: 'pending',\n\t\t\t\t\t\tdescription: 'You will need to submit the pull request review when you are ready',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'approve',\n\t\t\t\tdescription: 'The review action you want to perform',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Body',\n\t\t\t\tname: 'body',\n\t\t\t\ttype: 'string',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t\tresource: ['review'],\n\t\t\t\t\t\tevent: ['requestChanges', 'comment'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\tdescription: 'The body of the review (required for events Request Changes or Comment)',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Additional Fields',\n\t\t\t\tname: 'additionalFields',\n\t\t\t\tplaceholder: 'Add Field',\n\t\t\t\ttype: 'collection',\n\t\t\t\tdefault: {},\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['create'],\n\t\t\t\t\t\tresource: ['review'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Commit ID',\n\t\t\t\t\t\tname: 'commitId',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t\tdescription: 'The SHA of the commit that needs a review, if different from the latest',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         review:update\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Body',\n\t\t\t\tname: 'body',\n\t\t\t\ttype: 'string',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['update'],\n\t\t\t\t\t\tresource: ['review'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\tdescription: 'The body of the review',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//       user:getRepositories\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Return All',\n\t\t\t\tname: 'returnAll',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['user'],\n\t\t\t\t\t\toperation: ['getRepositories'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: 'Whether to return all results or only up to a given limit',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Limit',\n\t\t\t\tname: 'limit',\n\t\t\t\ttype: 'number',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['user'],\n\t\t\t\t\t\toperation: ['getRepositories'],\n\t\t\t\t\t\treturnAll: [false],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tminValue: 1,\n\t\t\t\t\tmaxValue: 100,\n\t\t\t\t},\n\t\t\t\tdefault: 50,\n\t\t\t\tdescription: 'Max number of results to return',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//         user:invite\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Organization',\n\t\t\t\tname: 'organization',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['invite'],\n\t\t\t\t\t\tresource: ['user'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The GitHub organization that the user is being invited to',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Email',\n\t\t\t\tname: 'email',\n\t\t\t\ttype: 'string',\n\t\t\t\tplaceholder: 'name@email.com',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\toperation: ['invite'],\n\t\t\t\t\t\tresource: ['user'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdescription: 'The email address of the invited user',\n\t\t\t},\n\n\t\t\t// ----------------------------------\n\t\t\t//    organization:getRepositories\n\t\t\t// ----------------------------------\n\t\t\t{\n\t\t\t\tdisplayName: 'Return All',\n\t\t\t\tname: 'returnAll',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['organization'],\n\t\t\t\t\t\toperation: ['getRepositories'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: 'Whether to return all results or only up to a given limit',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Limit',\n\t\t\t\tname: 'limit',\n\t\t\t\ttype: 'number',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\tresource: ['organization'],\n\t\t\t\t\t\toperation: ['getRepositories'],\n\t\t\t\t\t\treturnAll: [false],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tminValue: 1,\n\t\t\t\t\tmaxValue: 100,\n\t\t\t\t},\n\t\t\t\tdefault: 50,\n\t\t\t\tdescription: 'Max number of results to return',\n\t\t\t},\n\t\t],\n\t};\n\n\tmethods = {\n\t\tlistSearch: {\n\t\t\tgetRefs,\n\t\t\tgetRepositories,\n\t\t\tgetUsers,\n\t\t\tgetWorkflows,\n\t\t},\n\t};\n\n\tasync webhook(this: IWebhookFunctions): Promise<IWebhookResponseData> {\n\t\tconst requestObject = this.getRequestObject();\n\n\t\treturn {\n\t\t\tworkflowData: [this.helpers.returnJsonArray(requestObject.body)],\n\t\t};\n\t}\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\n\t\tlet returnAll = false;\n\n\t\tlet responseData;\n\n\t\t// Operations which overwrite the returned data\n\t\tconst overwriteDataOperations = [\n\t\t\t'file:create',\n\t\t\t'file:delete',\n\t\t\t'file:edit',\n\t\t\t'file:get',\n\t\t\t'issue:create',\n\t\t\t'issue:createComment',\n\t\t\t'issue:edit',\n\t\t\t'issue:get',\n\t\t\t'release:create',\n\t\t\t'release:delete',\n\t\t\t'release:get',\n\t\t\t'release:update',\n\t\t\t'repository:get',\n\t\t\t'repository:getLicense',\n\t\t\t'repository:getProfile',\n\t\t\t'review:create',\n\t\t\t'review:get',\n\t\t\t'review:update',\n\t\t\t'user:invite',\n\t\t\t'workflow:disable',\n\t\t\t'workflow:dispatch',\n\t\t\t'workflow:enable',\n\t\t\t'workflow:get',\n\t\t\t'workflow:getUsage',\n\t\t\t'workflow:list',\n\t\t];\n\t\t// Operations which overwrite the returned data and return arrays\n\t\t// and has so to be merged with the data of other items\n\t\tconst overwriteDataOperationsArray = [\n\t\t\t'file:list',\n\t\t\t'repository:getIssues',\n\t\t\t'repository:getPullRequests',\n\t\t\t'repository:listPopularPaths',\n\t\t\t'repository:listReferrers',\n\t\t\t'user:getRepositories',\n\t\t\t'release:getAll',\n\t\t\t'review:getAll',\n\t\t\t'organization:getRepositories',\n\t\t];\n\n\t\t// For Post\n\t\tlet body: IDataObject;\n\t\t// For Query string\n\t\tlet qs: IDataObject;\n\n\t\tlet requestMethod: IHttpRequestMethods;\n\t\tlet endpoint: string;\n\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst fullOperation = `${resource}:${operation}`;\n\n\t\tif (resource === 'workflow' && operation === 'dispatchAndWait') {\n\t\t\tconst owner = this.getNodeParameter('owner', 0, '', { extractValue: true }) as string;\n\t\t\tconst repository = this.getNodeParameter('repository', 0, '', {\n\t\t\t\textractValue: true,\n\t\t\t}) as string;\n\t\t\tconst workflowId = this.getNodeParameter('workflowId', 0, '', {\n\t\t\t\textractValue: true,\n\t\t\t}) as string;\n\t\t\tconst ref = this.getNodeParameter('ref', 0, '', { extractValue: true }) as string;\n\n\t\t\tconst inputs = validateJSON(this.getNodeParameter('inputs', 0) as string) as IDataObject;\n\t\t\tif (!inputs) {\n\t\t\t\tthrow new NodeOperationError(this.getNode(), 'Inputs: Invalid JSON');\n\t\t\t}\n\n\t\t\tendpoint = `/repos/${owner}/${repository}/actions/workflows/${workflowId}/dispatches`;\n\n\t\t\tbody = {\n\t\t\t\tref,\n\t\t\t\tinputs,\n\t\t\t};\n\n\t\t\t// Generate a webhook URL for the GitHub workflow to call when done\n\t\t\tconst resumeUrl = this.getWorkflowDataProxy(0).$execution.resumeUrl;\n\n\t\t\tbody.inputs = {\n\t\t\t\t...inputs,\n\t\t\t\tresumeUrl,\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tresponseData = await githubApiRequest.call(this, 'POST', endpoint, body);\n\t\t\t} catch (error) {\n\t\t\t\tif (error.httpCode === '404' || error.statusCode === 404) {\n\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t'The workflow to dispatch could not be found. Adjust the \"workflow\" parameter setting to dispatch the workflow correctly.',\n\t\t\t\t\t\t{ itemIndex: 0 },\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t\t\t}\n\n\t\t\tawait this.putExecutionToWait(WAIT_INDEFINITELY);\n\t\t\treturn [this.getInputData()];\n\t\t}\n\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\ttry {\n\t\t\t\t// Reset all values\n\t\t\t\trequestMethod = 'GET';\n\t\t\t\tendpoint = '';\n\t\t\t\tbody = {};\n\t\t\t\tqs = {};\n\n\t\t\t\tlet owner = '';\n\t\t\t\tif (fullOperation !== 'user:invite') {\n\t\t\t\t\t// Request the parameters which almost all operations need\n\t\t\t\t\towner = this.getNodeParameter('owner', i, '', { extractValue: true }) as string;\n\t\t\t\t}\n\n\t\t\t\tlet repository = '';\n\t\t\t\tif (\n\t\t\t\t\tfullOperation !== 'user:getRepositories' &&\n\t\t\t\t\tfullOperation !== 'user:invite' &&\n\t\t\t\t\tfullOperation !== 'organization:getRepositories'\n\t\t\t\t) {\n\t\t\t\t\trepository = this.getNodeParameter('repository', i, '', { extractValue: true }) as string;\n\t\t\t\t}\n\n\t\t\t\tif (resource === 'file') {\n\t\t\t\t\tif (['create', 'edit'].includes(operation)) {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         create/edit\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'PUT';\n\n\t\t\t\t\t\tconst filePath = this.getNodeParameter('filePath', i);\n\n\t\t\t\t\t\tconst additionalParameters = this.getNodeParameter(\n\t\t\t\t\t\t\t'additionalParameters',\n\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t) as IDataObject;\n\t\t\t\t\t\tif (additionalParameters.author) {\n\t\t\t\t\t\t\tbody.author = additionalParameters.author;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalParameters.committer) {\n\t\t\t\t\t\t\tbody.committer = additionalParameters.committer;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tadditionalParameters.branch &&\n\t\t\t\t\t\t\t(additionalParameters.branch as IDataObject).branch\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tbody.branch = (additionalParameters.branch as IDataObject).branch;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (operation === 'edit') {\n\t\t\t\t\t\t\t// If the file should be updated the request has to contain the SHA\n\t\t\t\t\t\t\t// of the file which gets replaced.\n\t\t\t\t\t\t\tbody.sha = await getFileSha.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\towner,\n\t\t\t\t\t\t\t\trepository,\n\t\t\t\t\t\t\t\tfilePath,\n\t\t\t\t\t\t\t\tbody.branch as string | undefined,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbody.message = this.getNodeParameter('commitMessage', i) as string;\n\n\t\t\t\t\t\tif (this.getNodeParameter('binaryData', i)) {\n\t\t\t\t\t\t\t// Currently internally n8n uses base64 and also Github expects it base64 encoded.\n\t\t\t\t\t\t\t// If that ever changes the data has to get converted here.\n\t\t\t\t\t\t\tconst binaryPropertyName = this.getNodeParameter('binaryPropertyName', i);\n\t\t\t\t\t\t\tconst binaryData = this.helpers.assertBinaryData(i, binaryPropertyName);\n\t\t\t\t\t\t\t// TODO: Does this work with filesystem mode\n\t\t\t\t\t\t\tbody.content = binaryData.data;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst fileContent = this.getNodeParameter('fileContent', i) as string;\n\t\t\t\t\t\t\tif (isBase64(fileContent)) {\n\t\t\t\t\t\t\t\tbody.content = fileContent;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbody.content = Buffer.from(fileContent).toString('base64');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tendpoint = `/repos/${owner}/${repository}/contents/${encodeURIComponent(filePath)}`;\n\t\t\t\t\t} else if (operation === 'delete') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         delete\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'DELETE';\n\n\t\t\t\t\t\tconst additionalParameters = this.getNodeParameter(\n\t\t\t\t\t\t\t'additionalParameters',\n\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t) as IDataObject;\n\t\t\t\t\t\tif (additionalParameters.author) {\n\t\t\t\t\t\t\tbody.author = additionalParameters.author;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (additionalParameters.committer) {\n\t\t\t\t\t\t\tbody.committer = additionalParameters.committer;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tadditionalParameters.branch &&\n\t\t\t\t\t\t\t(additionalParameters.branch as IDataObject).branch\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tbody.branch = (additionalParameters.branch as IDataObject).branch;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst filePath = this.getNodeParameter('filePath', i);\n\t\t\t\t\t\tbody.message = this.getNodeParameter('commitMessage', i) as string;\n\n\t\t\t\t\t\tbody.sha = await getFileSha.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\towner,\n\t\t\t\t\t\t\trepository,\n\t\t\t\t\t\t\tfilePath,\n\t\t\t\t\t\t\tbody.branch as string | undefined,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tendpoint = `/repos/${owner}/${repository}/contents/${encodeURIComponent(filePath)}`;\n\t\t\t\t\t} else if (operation === 'get') {\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tconst filePath = this.getNodeParameter('filePath', i);\n\t\t\t\t\t\tconst additionalParameters = this.getNodeParameter(\n\t\t\t\t\t\t\t'additionalParameters',\n\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t) as IDataObject;\n\n\t\t\t\t\t\tif (additionalParameters.reference) {\n\t\t\t\t\t\t\tqs.ref = additionalParameters.reference;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tendpoint = `/repos/${owner}/${repository}/contents/${encodeURIComponent(filePath)}`;\n\t\t\t\t\t} else if (operation === 'list') {\n\t\t\t\t\t\trequestMethod = 'GET';\n\t\t\t\t\t\tconst filePath = this.getNodeParameter('filePath', i);\n\t\t\t\t\t\tendpoint = `/repos/${owner}/${repository}/contents/${encodeURIComponent(filePath)}`;\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'issue') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         create\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'POST';\n\n\t\t\t\t\t\tbody.title = this.getNodeParameter('title', i) as string;\n\t\t\t\t\t\tbody.body = this.getNodeParameter('body', i) as string;\n\t\t\t\t\t\tconst labels = this.getNodeParameter('labels', i) as IDataObject[];\n\n\t\t\t\t\t\tconst assignees = this.getNodeParameter('assignees', i) as IDataObject[];\n\n\t\t\t\t\t\tbody.labels = labels.map((data) => data.label);\n\t\t\t\t\t\tbody.assignees = assignees.map((data) => data.assignee);\n\n\t\t\t\t\t\tendpoint = `/repos/${owner}/${repository}/issues`;\n\t\t\t\t\t} else if (operation === 'createComment') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         createComment\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\trequestMethod = 'POST';\n\n\t\t\t\t\t\tconst issueNumber = this.getNodeParameter('issueNumber', i) as string;\n\n\t\t\t\t\t\tbody.body = this.getNodeParameter('body', i) as string;\n\n\t\t\t\t\t\tendpoint = `/repos/${owner}/${repository}/issues/${issueNumber}/comments`;\n\t\t\t\t\t} else if (operation === 'edit') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         edit\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'PATCH';\n\n\t\t\t\t\t\tconst issueNumber = this.getNodeParameter('issueNumber', i) as string;\n\n\t\t\t\t\t\tbody = this.getNodeParameter('editFields', i, {}) as IDataObject;\n\n\t\t\t\t\t\tif (body.labels !== undefined) {\n\t\t\t\t\t\t\tbody.labels = (body.labels as IDataObject[]).map((data) => data.label);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (body.assignees !== undefined) {\n\t\t\t\t\t\t\tbody.assignees = (body.assignees as IDataObject[]).map((data) => data.assignee);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tendpoint = `/repos/${owner}/${repository}/issues/${issueNumber}`;\n\t\t\t\t\t} else if (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         get\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tconst issueNumber = this.getNodeParameter('issueNumber', i) as string;\n\n\t\t\t\t\t\tendpoint = `/repos/${owner}/${repository}/issues/${issueNumber}`;\n\t\t\t\t\t} else if (operation === 'lock') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         lock\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'PUT';\n\n\t\t\t\t\t\tconst issueNumber = this.getNodeParameter('issueNumber', i) as string;\n\n\t\t\t\t\t\tqs.lock_reason = this.getNodeParameter('lockReason', i) as string;\n\n\t\t\t\t\t\tendpoint = `/repos/${owner}/${repository}/issues/${issueNumber}/lock`;\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'release') {\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         create\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'POST';\n\n\t\t\t\t\t\tbody = this.getNodeParameter('additionalFields', i, {});\n\n\t\t\t\t\t\tbody.tag_name = this.getNodeParameter('releaseTag', i) as string;\n\n\t\t\t\t\t\tendpoint = `/repos/${owner}/${repository}/releases`;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         delete\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'DELETE';\n\n\t\t\t\t\t\tconst releaseId = this.getNodeParameter('release_id', i) as string;\n\n\t\t\t\t\t\tendpoint = `/repos/${owner}/${repository}/releases/${releaseId}`;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         get\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tconst releaseId = this.getNodeParameter('release_id', i) as string;\n\n\t\t\t\t\t\tendpoint = `/repos/${owner}/${repository}/releases/${releaseId}`;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         getAll\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tendpoint = `/repos/${owner}/${repository}/releases`;\n\n\t\t\t\t\t\treturnAll = this.getNodeParameter('returnAll', 0);\n\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tqs.per_page = this.getNodeParameter('limit', 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         update\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'PATCH';\n\n\t\t\t\t\t\tconst releaseId = this.getNodeParameter('release_id', i) as string;\n\n\t\t\t\t\t\tbody = this.getNodeParameter('additionalFields', i, {});\n\n\t\t\t\t\t\tendpoint = `/repos/${owner}/${repository}/releases/${releaseId}`;\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'repository') {\n\t\t\t\t\tif (operation === 'listPopularPaths') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         listPopularPaths\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tendpoint = `/repos/${owner}/${repository}/traffic/popular/paths`;\n\t\t\t\t\t} else if (operation === 'listReferrers') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         listReferrers\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tendpoint = `/repos/${owner}/${repository}/traffic/popular/referrers`;\n\t\t\t\t\t} else if (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         get\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tendpoint = `/repos/${owner}/${repository}`;\n\t\t\t\t\t} else if (operation === 'getLicense') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         getLicense\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tendpoint = `/repos/${owner}/${repository}/license`;\n\t\t\t\t\t} else if (operation === 'getIssues') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         getIssues\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tqs = this.getNodeParameter('getRepositoryIssuesFilters', i) as IDataObject;\n\n\t\t\t\t\t\tendpoint = `/repos/${owner}/${repository}/issues`;\n\n\t\t\t\t\t\treturnAll = this.getNodeParameter('returnAll', 0);\n\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tqs.per_page = this.getNodeParameter('limit', 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (operation === 'getPullRequests') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         getPullRequests\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tqs = this.getNodeParameter('getRepositoryPullRequestsFilters', i) as IDataObject;\n\n\t\t\t\t\t\tendpoint = `/repos/${owner}/${repository}/pulls`;\n\n\t\t\t\t\t\treturnAll = this.getNodeParameter('returnAll', 0);\n\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tqs.per_page = this.getNodeParameter('limit', 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'review') {\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         get\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tconst reviewId = this.getNodeParameter('reviewId', i) as string;\n\n\t\t\t\t\t\tconst pullRequestNumber = this.getNodeParameter('pullRequestNumber', i) as string;\n\n\t\t\t\t\t\tendpoint = `/repos/${owner}/${repository}/pulls/${pullRequestNumber}/reviews/${reviewId}`;\n\t\t\t\t\t} else if (operation === 'getAll') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         getAll\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\treturnAll = this.getNodeParameter('returnAll', 0);\n\n\t\t\t\t\t\tconst pullRequestNumber = this.getNodeParameter('pullRequestNumber', i) as string;\n\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tqs.per_page = this.getNodeParameter('limit', 0);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tendpoint = `/repos/${owner}/${repository}/pulls/${pullRequestNumber}/reviews`;\n\t\t\t\t\t} else if (operation === 'create') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         create\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\trequestMethod = 'POST';\n\n\t\t\t\t\t\tconst pullRequestNumber = this.getNodeParameter('pullRequestNumber', i) as string;\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\t\t\t\t\t\tObject.assign(body, additionalFields);\n\n\t\t\t\t\t\tbody.event = snakeCase(this.getNodeParameter('event', i) as string).toUpperCase();\n\t\t\t\t\t\tif (body.event === 'REQUEST_CHANGES' || body.event === 'COMMENT') {\n\t\t\t\t\t\t\tbody.body = this.getNodeParameter('body', i) as string;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tendpoint = `/repos/${owner}/${repository}/pulls/${pullRequestNumber}/reviews`;\n\t\t\t\t\t} else if (operation === 'update') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         update\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\trequestMethod = 'PUT';\n\n\t\t\t\t\t\tconst pullRequestNumber = this.getNodeParameter('pullRequestNumber', i) as string;\n\t\t\t\t\t\tconst reviewId = this.getNodeParameter('reviewId', i) as string;\n\n\t\t\t\t\t\tbody.body = this.getNodeParameter('body', i) as string;\n\n\t\t\t\t\t\tendpoint = `/repos/${owner}/${repository}/pulls/${pullRequestNumber}/reviews/${reviewId}`;\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'user') {\n\t\t\t\t\tif (operation === 'getRepositories') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         getRepositories\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tendpoint = `/users/${owner}/repos`;\n\n\t\t\t\t\t\treturnAll = this.getNodeParameter('returnAll', 0);\n\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tqs.per_page = this.getNodeParameter('limit', 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (operation === 'invite') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//            invite\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'POST';\n\t\t\t\t\t\tconst org = this.getNodeParameter('organization', i) as string;\n\t\t\t\t\t\tendpoint = `/orgs/${org}/invitations`;\n\t\t\t\t\t\tbody.email = this.getNodeParameter('email', i) as string;\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'organization') {\n\t\t\t\t\tif (operation === 'getRepositories') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         getRepositories\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tendpoint = `/orgs/${owner}/repos`;\n\t\t\t\t\t\treturnAll = this.getNodeParameter('returnAll', 0);\n\n\t\t\t\t\t\tif (!returnAll) {\n\t\t\t\t\t\t\tqs.per_page = this.getNodeParameter('limit', 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (resource === 'workflow') {\n\t\t\t\t\tif (operation === 'disable') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         disable\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'PUT';\n\n\t\t\t\t\t\tconst workflowId = this.getNodeParameter('workflowId', i, '', {\n\t\t\t\t\t\t\textractValue: true,\n\t\t\t\t\t\t}) as string;\n\n\t\t\t\t\t\tendpoint = `/repos/${owner}/${repository}/actions/workflows/${workflowId}/disable`;\n\t\t\t\t\t}\n\t\t\t\t\tif (operation === 'dispatch') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         dispatch\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'POST';\n\n\t\t\t\t\t\tconst workflowId = this.getNodeParameter('workflowId', i, '', {\n\t\t\t\t\t\t\textractValue: true,\n\t\t\t\t\t\t}) as string;\n\n\t\t\t\t\t\tendpoint = `/repos/${owner}/${repository}/actions/workflows/${workflowId}/dispatches`;\n\n\t\t\t\t\t\tconst ref = this.getNodeParameter('ref', i, '', { extractValue: true }) as string;\n\t\t\t\t\t\tbody.ref = ref;\n\n\t\t\t\t\t\tconst inputs = validateJSON(\n\t\t\t\t\t\t\tthis.getNodeParameter('inputs', i) as string,\n\t\t\t\t\t\t) as IDataObject;\n\t\t\t\t\t\tif (inputs === undefined) {\n\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'Inputs: Invalid JSON', {\n\t\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbody.inputs = inputs;\n\t\t\t\t\t} else if (operation === 'enable') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         enable\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'PUT';\n\n\t\t\t\t\t\tconst workflowId = this.getNodeParameter('workflowId', i, '', {\n\t\t\t\t\t\t\textractValue: true,\n\t\t\t\t\t\t}) as string;\n\n\t\t\t\t\t\tendpoint = `/repos/${owner}/${repository}/actions/workflows/${workflowId}/enable`;\n\t\t\t\t\t} else if (operation === 'get') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         get\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tconst workflowId = this.getNodeParameter('workflowId', i, '', {\n\t\t\t\t\t\t\textractValue: true,\n\t\t\t\t\t\t}) as string;\n\n\t\t\t\t\t\tendpoint = `/repos/${owner}/${repository}/actions/workflows/${workflowId}`;\n\t\t\t\t\t} else if (operation === 'getUsage') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         getUsage\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tconst workflowId = this.getNodeParameter('workflowId', i, '', {\n\t\t\t\t\t\t\textractValue: true,\n\t\t\t\t\t\t}) as string;\n\n\t\t\t\t\t\tendpoint = `/repos/${owner}/${repository}/actions/workflows/${workflowId}/timing`;\n\t\t\t\t\t} else if (operation === 'list') {\n\t\t\t\t\t\t// ----------------------------------\n\t\t\t\t\t\t//         list\n\t\t\t\t\t\t// ----------------------------------\n\n\t\t\t\t\t\trequestMethod = 'GET';\n\n\t\t\t\t\t\tendpoint = `/repos/${owner}/${repository}/actions/workflows`;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new NodeOperationError(this.getNode(), `The resource \"${resource}\" is not known!`, {\n\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tconst asBinaryProperty = this.getNodeParameter('asBinaryProperty', i, false) as boolean;\n\t\t\t\tif (returnAll) {\n\t\t\t\t\tresponseData = await githubApiRequestAllItems.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\trequestMethod,\n\t\t\t\t\t\tendpoint,\n\t\t\t\t\t\tbody,\n\t\t\t\t\t\tqs,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tresponseData = await githubApiRequest.call(this, requestMethod, endpoint, body, qs);\n\t\t\t\t}\n\n\t\t\t\tif (fullOperation === 'file:get') {\n\t\t\t\t\tif (asBinaryProperty) {\n\t\t\t\t\t\tif (Array.isArray(responseData) && responseData.length > 1) {\n\t\t\t\t\t\t\tthrow new NodeOperationError(this.getNode(), 'File Path is a folder, not a file.', {\n\t\t\t\t\t\t\t\titemIndex: i,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Add the returned data to the item as binary property\n\t\t\t\t\t\tconst binaryPropertyName = this.getNodeParameter('binaryPropertyName', i);\n\n\t\t\t\t\t\tconst newItem: INodeExecutionData = {\n\t\t\t\t\t\t\tjson: items[i].json,\n\t\t\t\t\t\t\tbinary: {},\n\t\t\t\t\t\t\tpairedItem: items[i].pairedItem,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (items[i].binary !== undefined) {\n\t\t\t\t\t\t\t// Create a shallow copy of the binary data so that the old\n\t\t\t\t\t\t\t// data references which do not get changed still stay behind\n\t\t\t\t\t\t\t// but the incoming data does not get changed.\n\t\t\t\t\t\t\tObject.assign(newItem.binary as object, items[i].binary!);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst { content, path } = responseData;\n\t\t\t\t\t\tnewItem.binary![binaryPropertyName] = await this.helpers.prepareBinaryData(\n\t\t\t\t\t\t\tBuffer.from(content as string, 'base64'),\n\t\t\t\t\t\t\tpath as string,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturnData.push(newItem);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (fullOperation === 'release:delete') {\n\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\toverwriteDataOperations.includes(fullOperation) ||\n\t\t\t\t\toverwriteDataOperationsArray.includes(fullOperation)\n\t\t\t\t) {\n\t\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionData);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tif (\n\t\t\t\t\t\toverwriteDataOperations.includes(fullOperation) ||\n\t\t\t\t\t\toverwriteDataOperationsArray.includes(fullOperation)\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tjson: {\n\t\t\t\t\t\t\t\t\t\terror: error.message,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\t} else {\n\t\t\t\t\t\titems[i].json = { error: error.message };\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\toverwriteDataOperations.includes(fullOperation) ||\n\t\t\toverwriteDataOperationsArray.includes(fullOperation)\n\t\t) {\n\t\t\t// Return data gets replaced\n\t\t\treturn [returnData];\n\t\t} else {\n\t\t\t// For all other ones simply return the unchanged items\n\t\t\treturn [items];\n\t\t}\n\t}\n}\n"],"mappings":"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","names":[]}