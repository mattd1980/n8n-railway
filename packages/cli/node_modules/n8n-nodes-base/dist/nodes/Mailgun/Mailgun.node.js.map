{"version":3,"sources":["../../../nodes/Mailgun/Mailgun.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tINodeExecutionData,\n\tINodeType,\n\tINodeTypeDescription,\n\tJsonObject,\n\tIRequestOptions,\n} from 'n8n-workflow';\nimport { NodeApiError, NodeConnectionTypes } from 'n8n-workflow';\n\nexport class Mailgun implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Mailgun',\n\t\tname: 'mailgun',\n\t\ticon: 'file:mailgun.svg',\n\t\tgroup: ['output'],\n\t\tversion: 1,\n\t\tdescription: 'Sends an email via Mailgun',\n\t\tdefaults: {\n\t\t\tname: 'Mailgun',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'mailgunApi',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'From Email',\n\t\t\t\tname: 'fromEmail',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tplaceholder: 'Admin <admin@example.com>',\n\t\t\t\tdescription: 'Email address of the sender optional with name',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'To Email',\n\t\t\t\tname: 'toEmail',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\trequired: true,\n\t\t\t\tplaceholder: 'info@example.com',\n\t\t\t\tdescription: 'Email address of the recipient. Multiple ones can be separated by comma.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Cc Email',\n\t\t\t\tname: 'ccEmail',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tplaceholder: '',\n\t\t\t\tdescription: 'Cc Email address of the recipient. Multiple ones can be separated by comma.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Bcc Email',\n\t\t\t\tname: 'bccEmail',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tplaceholder: '',\n\t\t\t\tdescription: 'Bcc Email address of the recipient. Multiple ones can be separated by comma.',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Subject',\n\t\t\t\tname: 'subject',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tplaceholder: 'My subject line',\n\t\t\t\tdescription: 'Subject line of the email',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Text',\n\t\t\t\tname: 'text',\n\t\t\t\ttype: 'string',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\trows: 5,\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\tdescription: 'Plain text message of email',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'HTML',\n\t\t\t\tname: 'html',\n\t\t\t\ttype: 'string',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\trows: 5,\n\t\t\t\t\teditor: 'htmlEditor',\n\t\t\t\t},\n\t\t\t\tdefault: '',\n\t\t\t\tdescription: 'HTML text message of email',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Attachments',\n\t\t\t\tname: 'attachments',\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t\tdescription:\n\t\t\t\t\t'Name of the binary properties which contain data which should be added to email as attachment. Multiple ones can be comma-separated.',\n\t\t\t},\n\t\t],\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst length = items.length;\n\t\tlet item: INodeExecutionData;\n\n\t\tfor (let itemIndex = 0; itemIndex < length; itemIndex++) {\n\t\t\ttry {\n\t\t\t\titem = items[itemIndex];\n\n\t\t\t\tconst fromEmail = this.getNodeParameter('fromEmail', itemIndex) as string;\n\t\t\t\tconst toEmail = this.getNodeParameter('toEmail', itemIndex) as string;\n\t\t\t\tconst ccEmail = this.getNodeParameter('ccEmail', itemIndex) as string;\n\t\t\t\tconst bccEmail = this.getNodeParameter('bccEmail', itemIndex) as string;\n\t\t\t\tconst subject = this.getNodeParameter('subject', itemIndex) as string;\n\t\t\t\tconst text = this.getNodeParameter('text', itemIndex) as string;\n\t\t\t\tconst html = this.getNodeParameter('html', itemIndex) as string;\n\t\t\t\tconst attachmentPropertyString = this.getNodeParameter('attachments', itemIndex) as string;\n\n\t\t\t\tconst credentials = await this.getCredentials('mailgunApi');\n\n\t\t\t\tconst formData: IDataObject = {\n\t\t\t\t\tfrom: fromEmail,\n\t\t\t\t\tto: toEmail,\n\t\t\t\t\tsubject,\n\t\t\t\t\ttext,\n\t\t\t\t\thtml,\n\t\t\t\t};\n\n\t\t\t\tif (ccEmail.length !== 0) {\n\t\t\t\t\tformData.cc = ccEmail;\n\t\t\t\t}\n\t\t\t\tif (bccEmail.length !== 0) {\n\t\t\t\t\tformData.bcc = bccEmail;\n\t\t\t\t}\n\n\t\t\t\tif (attachmentPropertyString && item.binary) {\n\t\t\t\t\tconst attachments = [];\n\t\t\t\t\tconst attachmentProperties: string[] = attachmentPropertyString\n\t\t\t\t\t\t.split(',')\n\t\t\t\t\t\t.map((propertyName) => {\n\t\t\t\t\t\t\treturn propertyName.trim();\n\t\t\t\t\t\t});\n\n\t\t\t\t\tfor (const propertyName of attachmentProperties) {\n\t\t\t\t\t\tconst binaryData = this.helpers.assertBinaryData(itemIndex, propertyName);\n\t\t\t\t\t\tconst binaryDataBuffer = await this.helpers.getBinaryDataBuffer(\n\t\t\t\t\t\t\titemIndex,\n\t\t\t\t\t\t\tpropertyName,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tattachments.push({\n\t\t\t\t\t\t\tvalue: binaryDataBuffer,\n\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\tfilename: binaryData.fileName || 'unknown',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (attachments.length) {\n\t\t\t\t\t\tformData.attachment = attachments;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst options = {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\tformData,\n\t\t\t\t\turi: `https://${credentials.apiDomain}/v3/${credentials.emailDomain}/messages`,\n\t\t\t\t\tjson: true,\n\t\t\t\t} satisfies IRequestOptions;\n\n\t\t\t\tlet responseData;\n\n\t\t\t\ttry {\n\t\t\t\t\tresponseData = await this.helpers.requestWithAuthentication.call(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t'mailgunApi',\n\t\t\t\t\t\toptions,\n\t\t\t\t\t);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthrow new NodeApiError(this.getNode(), error as JsonObject);\n\t\t\t\t}\n\n\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t{ itemData: { item: itemIndex } },\n\t\t\t\t);\n\n\t\t\t\treturnData.push(...executionData);\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t{ itemData: { item: itemIndex } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,0BAAkD;AAE3C,MAAM,QAA6B;AAAA,EAAnC;AACN,uBAAoC;AAAA,MACnC,aAAa;AAAA,MACb,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO,CAAC,QAAQ;AAAA,MAChB,SAAS;AAAA,MACT,aAAa;AAAA,MACb,UAAU;AAAA,QACT,MAAM;AAAA,MACP;AAAA,MACA,cAAc;AAAA,MACd,QAAQ,CAAC,wCAAoB,IAAI;AAAA,MACjC,SAAS,CAAC,wCAAoB,IAAI;AAAA,MAClC,aAAa;AAAA,QACZ;AAAA,UACC,MAAM;AAAA,UACN,UAAU;AAAA,QACX;AAAA,MACD;AAAA,MACA,YAAY;AAAA,QACX;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,SAAS;AAAA,UACT,UAAU;AAAA,UACV,aAAa;AAAA,UACb,aAAa;AAAA,QACd;AAAA,QACA;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,SAAS;AAAA,UACT,UAAU;AAAA,UACV,aAAa;AAAA,UACb,aAAa;AAAA,QACd;AAAA,QACA;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,SAAS;AAAA,UACT,aAAa;AAAA,UACb,aAAa;AAAA,QACd;AAAA,QACA;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,SAAS;AAAA,UACT,aAAa;AAAA,UACb,aAAa;AAAA,QACd;AAAA,QACA;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,SAAS;AAAA,UACT,aAAa;AAAA,UACb,aAAa;AAAA,QACd;AAAA,QACA;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,aAAa;AAAA,YACZ,MAAM;AAAA,UACP;AAAA,UACA,SAAS;AAAA,UACT,aAAa;AAAA,QACd;AAAA,QACA;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,aAAa;AAAA,YACZ,MAAM;AAAA,YACN,QAAQ;AAAA,UACT;AAAA,UACA,SAAS;AAAA,UACT,aAAa;AAAA,QACd;AAAA,QACA;AAAA,UACC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,UACN,SAAS;AAAA,UACT,aACC;AAAA,QACF;AAAA,MACD;AAAA,IACD;AAAA;AAAA,EAEA,MAAM,UAAkE;AACvE,UAAM,QAAQ,KAAK,aAAa;AAEhC,UAAM,aAAmC,CAAC;AAC1C,UAAM,SAAS,MAAM;AACrB,QAAI;AAEJ,aAAS,YAAY,GAAG,YAAY,QAAQ,aAAa;AACxD,UAAI;AACH,eAAO,MAAM,SAAS;AAEtB,cAAM,YAAY,KAAK,iBAAiB,aAAa,SAAS;AAC9D,cAAM,UAAU,KAAK,iBAAiB,WAAW,SAAS;AAC1D,cAAM,UAAU,KAAK,iBAAiB,WAAW,SAAS;AAC1D,cAAM,WAAW,KAAK,iBAAiB,YAAY,SAAS;AAC5D,cAAM,UAAU,KAAK,iBAAiB,WAAW,SAAS;AAC1D,cAAM,OAAO,KAAK,iBAAiB,QAAQ,SAAS;AACpD,cAAM,OAAO,KAAK,iBAAiB,QAAQ,SAAS;AACpD,cAAM,2BAA2B,KAAK,iBAAiB,eAAe,SAAS;AAE/E,cAAM,cAAc,MAAM,KAAK,eAAe,YAAY;AAE1D,cAAM,WAAwB;AAAA,UAC7B,MAAM;AAAA,UACN,IAAI;AAAA,UACJ;AAAA,UACA;AAAA,UACA;AAAA,QACD;AAEA,YAAI,QAAQ,WAAW,GAAG;AACzB,mBAAS,KAAK;AAAA,QACf;AACA,YAAI,SAAS,WAAW,GAAG;AAC1B,mBAAS,MAAM;AAAA,QAChB;AAEA,YAAI,4BAA4B,KAAK,QAAQ;AAC5C,gBAAM,cAAc,CAAC;AACrB,gBAAM,uBAAiC,yBACrC,MAAM,GAAG,EACT,IAAI,CAAC,iBAAiB;AACtB,mBAAO,aAAa,KAAK;AAAA,UAC1B,CAAC;AAEF,qBAAW,gBAAgB,sBAAsB;AAChD,kBAAM,aAAa,KAAK,QAAQ,iBAAiB,WAAW,YAAY;AACxE,kBAAM,mBAAmB,MAAM,KAAK,QAAQ;AAAA,cAC3C;AAAA,cACA;AAAA,YACD;AACA,wBAAY,KAAK;AAAA,cAChB,OAAO;AAAA,cACP,SAAS;AAAA,gBACR,UAAU,WAAW,YAAY;AAAA,cAClC;AAAA,YACD,CAAC;AAAA,UACF;AAEA,cAAI,YAAY,QAAQ;AACvB,qBAAS,aAAa;AAAA,UACvB;AAAA,QACD;AAEA,cAAM,UAAU;AAAA,UACf,QAAQ;AAAA,UACR;AAAA,UACA,KAAK,WAAW,YAAY,SAAS,OAAO,YAAY,WAAW;AAAA,UACnE,MAAM;AAAA,QACP;AAEA,YAAI;AAEJ,YAAI;AACH,yBAAe,MAAM,KAAK,QAAQ,0BAA0B;AAAA,YAC3D;AAAA,YACA;AAAA,YACA;AAAA,UACD;AAAA,QACD,SAAS,OAAO;AACf,gBAAM,IAAI,iCAAa,KAAK,QAAQ,GAAG,KAAmB;AAAA,QAC3D;AAEA,cAAM,gBAAgB,KAAK,QAAQ;AAAA,UAClC,KAAK,QAAQ,gBAAgB,YAA6B;AAAA,UAC1D,EAAE,UAAU,EAAE,MAAM,UAAU,EAAE;AAAA,QACjC;AAEA,mBAAW,KAAK,GAAG,aAAa;AAAA,MACjC,SAAS,OAAO;AACf,YAAI,KAAK,eAAe,GAAG;AAC1B,gBAAM,qBAAqB,KAAK,QAAQ;AAAA,YACvC,KAAK,QAAQ,gBAAgB,EAAE,OAAO,MAAM,QAAQ,CAAC;AAAA,YACrD,EAAE,UAAU,EAAE,MAAM,UAAU,EAAE;AAAA,UACjC;AACA,qBAAW,KAAK,GAAG,kBAAkB;AACrC;AAAA,QACD;AACA,cAAM;AAAA,MACP;AAAA,IACD;AACA,WAAO,CAAC,UAAU;AAAA,EACnB;AACD;","names":[]}